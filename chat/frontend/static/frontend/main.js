/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "../node_modules/axios/lib/adapters/adapters.js":
/*!******************************************************!*\
  !*** ../node_modules/axios/lib/adapters/adapters.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"../node_modules/axios/lib/utils.js\");\n/* harmony import */ var _http_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http.js */ \"../node_modules/axios/lib/helpers/null.js\");\n/* harmony import */ var _xhr_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./xhr.js */ \"../node_modules/axios/lib/adapters/xhr.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fetch.js */ \"../node_modules/axios/lib/adapters/fetch.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/AxiosError.js */ \"../node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n\n\nconst knownAdapters = {\n  http: _http_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  xhr: _xhr_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  fetch: _fetch_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isFunction(adapter) || adapter === null || adapter === false;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  getAdapter: (adapters) => {\n    adapters = _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n});\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/adapters/adapters.js?");

/***/ }),

/***/ "../node_modules/axios/lib/adapters/fetch.js":
/*!***************************************************!*\
  !*** ../node_modules/axios/lib/adapters/fetch.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"../node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"../node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/AxiosError.js */ \"../node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _helpers_composeSignals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/composeSignals.js */ \"../node_modules/axios/lib/helpers/composeSignals.js\");\n/* harmony import */ var _helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/trackStream.js */ \"../node_modules/axios/lib/helpers/trackStream.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"../node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/progressEventReducer.js */ \"../node_modules/axios/lib/helpers/progressEventReducer.js\");\n/* harmony import */ var _helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/resolveConfig.js */ \"../node_modules/axios/lib/helpers/resolveConfig.js\");\n/* harmony import */ var _core_settle_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/settle.js */ \"../node_modules/axios/lib/core/settle.js\");\n\n\n\n\n\n\n\n\n\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](`Response type '${type}' is not supported`, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isBlob(body)) {\n    return body.size;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isSpecCompliantForm(body)) {\n    const _request = new Request(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isArrayBufferView(body) || _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = (0,_helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = (0,_helpers_composeSignals_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventDecorator)(\n          requestContentLength,\n          (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventReducer)((0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.asyncDecorator)(onUploadProgress))\n        );\n\n        data = (0,_helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_6__.trackStream)(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request, fetchOptions);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventDecorator)(\n        responseContentLength,\n        (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventReducer)((0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.asyncDecorator)(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        (0,_helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_6__.trackStream)(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      (0,_core_settle_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(resolve, reject, {\n        data: responseData,\n        headers: _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /Load failed|fetch/i.test(err.message)) {\n      throw Object.assign(\n        new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('Network Error', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].from(err, err && err.code, config, request);\n  }\n}));\n\n\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/adapters/fetch.js?");

/***/ }),

/***/ "../node_modules/axios/lib/adapters/xhr.js":
/*!*************************************************!*\
  !*** ../node_modules/axios/lib/adapters/xhr.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../utils.js */ \"../node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_settle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../core/settle.js */ \"../node_modules/axios/lib/core/settle.js\");\n/* harmony import */ var _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../defaults/transitional.js */ \"../node_modules/axios/lib/defaults/transitional.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/AxiosError.js */ \"../node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"../node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/parseProtocol.js */ \"../node_modules/axios/lib/helpers/parseProtocol.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../platform/index.js */ \"../node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"../node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/progressEventReducer.js */ \"../node_modules/axios/lib/helpers/progressEventReducer.js\");\n/* harmony import */ var _helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/resolveConfig.js */ \"../node_modules/axios/lib/helpers/resolveConfig.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = (0,_helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(config);\n    let requestData = _config.data;\n    const requestHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      (0,_core_settle_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('Request aborted', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('Network Error', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ETIMEDOUT : _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      _utils_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__.progressEventReducer)(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__.progressEventReducer)(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"](null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = (0,_helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(_config.url);\n\n    if (protocol && _platform_index_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].protocols.indexOf(protocol) === -1) {\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('Unsupported protocol ' + protocol + ':', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n});\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/adapters/xhr.js?");

/***/ }),

/***/ "../node_modules/axios/lib/axios.js":
/*!******************************************!*\
  !*** ../node_modules/axios/lib/axios.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"../node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/bind.js */ \"../node_modules/axios/lib/helpers/bind.js\");\n/* harmony import */ var _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/Axios.js */ \"../node_modules/axios/lib/core/Axios.js\");\n/* harmony import */ var _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/mergeConfig.js */ \"../node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults/index.js */ \"../node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers/formDataToJSON.js */ \"../node_modules/axios/lib/helpers/formDataToJSON.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cancel/CanceledError.js */ \"../node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cancel/CancelToken.js */ \"../node_modules/axios/lib/cancel/CancelToken.js\");\n/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cancel/isCancel.js */ \"../node_modules/axios/lib/cancel/isCancel.js\");\n/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./env/data.js */ \"../node_modules/axios/lib/env/data.js\");\n/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./helpers/toFormData.js */ \"../node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core/AxiosError.js */ \"../node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _helpers_spread_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./helpers/spread.js */ \"../node_modules/axios/lib/helpers/spread.js\");\n/* harmony import */ var _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/isAxiosError.js */ \"../node_modules/axios/lib/helpers/isAxiosError.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./core/AxiosHeaders.js */ \"../node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./adapters/adapters.js */ \"../node_modules/axios/lib/adapters/adapters.js\");\n/* harmony import */ var _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./helpers/HttpStatusCode.js */ \"../node_modules/axios/lib/helpers/HttpStatusCode.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](defaultConfig);\n  const instance = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.request, context);\n\n  // Copy axios.prototype to instance\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(instance, _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance((0,_core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(_defaults_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n\n// Expose Cancel & CancelToken\naxios.CanceledError = _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\naxios.CancelToken = _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\naxios.isCancel = _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\naxios.VERSION = _env_data_js__WEBPACK_IMPORTED_MODULE_8__.VERSION;\naxios.toFormData = _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"];\n\n// Expose AxiosError class\naxios.AxiosError = _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"];\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = _helpers_spread_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"];\n\n// Expose isAxiosError\naxios.isAxiosError = _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"];\n\n// Expose mergeConfig\naxios.mergeConfig = _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n\naxios.AxiosHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"];\n\naxios.formToJSON = thing => (0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].getAdapter;\n\naxios.HttpStatusCode = _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"];\n\naxios.default = axios;\n\n// this module should only have a default export\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (axios);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/axios.js?");

/***/ }),

/***/ "../node_modules/axios/lib/cancel/CancelToken.js":
/*!*******************************************************!*\
  !*** ../node_modules/axios/lib/cancel/CancelToken.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CanceledError.js */ \"../node_modules/axios/lib/cancel/CanceledError.js\");\n\n\n\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CancelToken);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/cancel/CancelToken.js?");

/***/ }),

/***/ "../node_modules/axios/lib/cancel/CanceledError.js":
/*!*********************************************************!*\
  !*** ../node_modules/axios/lib/cancel/CanceledError.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/AxiosError.js */ \"../node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"../node_modules/axios/lib/utils.js\");\n\n\n\n\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].call(this, message == null ? 'canceled' : message, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inherits(CanceledError, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {\n  __CANCEL__: true\n});\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanceledError);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/cancel/CanceledError.js?");

/***/ }),

/***/ "../node_modules/axios/lib/cancel/isCancel.js":
/*!****************************************************!*\
  !*** ../node_modules/axios/lib/cancel/isCancel.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isCancel)\n/* harmony export */ });\n\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/cancel/isCancel.js?");

/***/ }),

/***/ "../node_modules/axios/lib/core/Axios.js":
/*!***********************************************!*\
  !*** ../node_modules/axios/lib/core/Axios.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../utils.js */ \"../node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/buildURL.js */ \"../node_modules/axios/lib/helpers/buildURL.js\");\n/* harmony import */ var _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InterceptorManager.js */ \"../node_modules/axios/lib/core/InterceptorManager.js\");\n/* harmony import */ var _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dispatchRequest.js */ \"../node_modules/axios/lib/core/dispatchRequest.js\");\n/* harmony import */ var _mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mergeConfig.js */ \"../node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _buildFullPath_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./buildFullPath.js */ \"../node_modules/axios/lib/core/buildFullPath.js\");\n/* harmony import */ var _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/validator.js */ \"../node_modules/axios/lib/helpers/validator.js\");\n/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AxiosHeaders.js */ \"../node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst validators = _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig || {};\n    this.interceptors = {\n      request: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](),\n      response: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [_dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.defaults, config);\n    const fullPath = (0,_buildFullPath_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return (0,_helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Axios);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/core/Axios.js?");

/***/ }),

/***/ "../node_modules/axios/lib/core/AxiosError.js":
/*!****************************************************!*\
  !*** ../node_modules/axios/lib/core/AxiosError.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"../node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AxiosError);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/core/AxiosError.js?");

/***/ }),

/***/ "../node_modules/axios/lib/core/AxiosHeaders.js":
/*!******************************************************!*\
  !*** ../node_modules/axios/lib/core/AxiosHeaders.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"../node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/parseHeaders.js */ \"../node_modules/axios/lib/helpers/parseHeaders.js\");\n\n\n\n\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(value)) return;\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders((0,_helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(header), valueOrRewrite);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(header) && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isIterable(header)) {\n      let obj = {}, dest, key;\n      for (const entry of header) {\n        if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(entry)) {\n          throw TypeError('Object iterator must return a key-value pair');\n        }\n\n        obj[key = entry[0]] = (dest = obj[key]) ?\n          (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]]) : entry[1];\n      }\n\n      setHeaders(obj, valueOrRewrite)\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this, (value, header) => {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  getSetCookie() {\n    return this.get(\"set-cookie\") || [];\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].freezeMethods(AxiosHeaders);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AxiosHeaders);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/core/AxiosHeaders.js?");

/***/ }),

/***/ "../node_modules/axios/lib/core/InterceptorManager.js":
/*!************************************************************!*\
  !*** ../node_modules/axios/lib/core/InterceptorManager.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"../node_modules/axios/lib/utils.js\");\n\n\n\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InterceptorManager);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/core/InterceptorManager.js?");

/***/ }),

/***/ "../node_modules/axios/lib/core/buildFullPath.js":
/*!*******************************************************!*\
  !*** ../node_modules/axios/lib/core/buildFullPath.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ buildFullPath)\n/* harmony export */ });\n/* harmony import */ var _helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/isAbsoluteURL.js */ \"../node_modules/axios/lib/helpers/isAbsoluteURL.js\");\n/* harmony import */ var _helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/combineURLs.js */ \"../node_modules/axios/lib/helpers/combineURLs.js\");\n\n\n\n\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !(0,_helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return (0,_helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/core/buildFullPath.js?");

/***/ }),

/***/ "../node_modules/axios/lib/core/dispatchRequest.js":
/*!*********************************************************!*\
  !*** ../node_modules/axios/lib/core/dispatchRequest.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ dispatchRequest)\n/* harmony export */ });\n/* harmony import */ var _transformData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transformData.js */ \"../node_modules/axios/lib/core/transformData.js\");\n/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cancel/isCancel.js */ \"../node_modules/axios/lib/cancel/isCancel.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../defaults/index.js */ \"../node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"../node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"../node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../adapters/adapters.js */ \"../node_modules/axios/lib/adapters/adapters.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(config.headers);\n\n  // Transform request data\n  config.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getAdapter(config.adapter || _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!(0,_cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/core/dispatchRequest.js?");

/***/ }),

/***/ "../node_modules/axios/lib/core/mergeConfig.js":
/*!*****************************************************!*\
  !*** ../node_modules/axios/lib/core/mergeConfig.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ mergeConfig)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"../node_modules/axios/lib/utils.js\");\n/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosHeaders.js */ \"../node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\nconst headersToObject = (thing) => thing instanceof _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(target) && _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(source)) {\n      return _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].merge.call({caseless}, target, source);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(source)) {\n      return _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].merge({}, source);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/core/mergeConfig.js?");

/***/ }),

/***/ "../node_modules/axios/lib/core/settle.js":
/*!************************************************!*\
  !*** ../node_modules/axios/lib/core/settle.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ settle)\n/* harmony export */ });\n/* harmony import */ var _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosError.js */ \"../node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\n      'Request failed with status code ' + response.status,\n      [_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_BAD_REQUEST, _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/core/settle.js?");

/***/ }),

/***/ "../node_modules/axios/lib/core/transformData.js":
/*!*******************************************************!*\
  !*** ../node_modules/axios/lib/core/transformData.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ transformData)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../utils.js */ \"../node_modules/axios/lib/utils.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../defaults/index.js */ \"../node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"../node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || _defaults_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n  const context = response || config;\n  const headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(context.headers);\n  let data = context.data;\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/core/transformData.js?");

/***/ }),

/***/ "../node_modules/axios/lib/defaults/index.js":
/*!***************************************************!*\
  !*** ../node_modules/axios/lib/defaults/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"../node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/AxiosError.js */ \"../node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _transitional_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transitional.js */ \"../node_modules/axios/lib/defaults/transitional.js\");\n/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/toFormData.js */ \"../node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/toURLEncodedForm.js */ \"../node_modules/axios/lib/helpers/toURLEncodedForm.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../platform/index.js */ \"../node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/formDataToJSON.js */ \"../node_modules/axios/lib/helpers/formDataToJSON.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: _transitional_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(data);\n\n    if (isObjectPayload && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify((0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(data)) : data;\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBuffer(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBuffer(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isStream(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFile(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBlob(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return (0,_helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return (0,_helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isResponse(data) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].from(e, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: _platform_index_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].classes.FormData,\n    Blob: _platform_index_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defaults);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/defaults/index.js?");

/***/ }),

/***/ "../node_modules/axios/lib/defaults/transitional.js":
/*!**********************************************************!*\
  !*** ../node_modules/axios/lib/defaults/transitional.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n});\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/defaults/transitional.js?");

/***/ }),

/***/ "../node_modules/axios/lib/env/data.js":
/*!*********************************************!*\
  !*** ../node_modules/axios/lib/env/data.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERSION: () => (/* binding */ VERSION)\n/* harmony export */ });\nconst VERSION = \"1.10.0\";\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/env/data.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/AxiosURLSearchParams.js":
/*!*****************************************************************!*\
  !*** ../node_modules/axios/lib/helpers/AxiosURLSearchParams.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ \"../node_modules/axios/lib/helpers/toFormData.js\");\n\n\n\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AxiosURLSearchParams);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/AxiosURLSearchParams.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/HttpStatusCode.js":
/*!***********************************************************!*\
  !*** ../node_modules/axios/lib/helpers/HttpStatusCode.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HttpStatusCode);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/HttpStatusCode.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/bind.js":
/*!*************************************************!*\
  !*** ../node_modules/axios/lib/helpers/bind.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bind)\n/* harmony export */ });\n\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/bind.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/buildURL.js":
/*!*****************************************************!*\
  !*** ../node_modules/axios/lib/helpers/buildURL.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ buildURL)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"../node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/AxiosURLSearchParams.js */ \"../node_modules/axios/lib/helpers/AxiosURLSearchParams.js\");\n\n\n\n\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isURLSearchParams(params) ?\n      params.toString() :\n      new _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/buildURL.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/combineURLs.js":
/*!********************************************************!*\
  !*** ../node_modules/axios/lib/helpers/combineURLs.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ combineURLs)\n/* harmony export */ });\n\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/combineURLs.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/composeSignals.js":
/*!***********************************************************!*\
  !*** ../node_modules/axios/lib/helpers/composeSignals.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"../node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/AxiosError.js */ \"../node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"../node_modules/axios/lib/utils.js\");\n\n\n\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? err : new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](`timeout ${timeout} of ms exceeded`, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].asap(unsubscribe);\n\n    return signal;\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (composeSignals);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/composeSignals.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/cookies.js":
/*!****************************************************!*\
  !*** ../node_modules/axios/lib/helpers/cookies.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../utils.js */ \"../node_modules/axios/lib/utils.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"../node_modules/axios/lib/platform/index.js\");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(path) && cookie.push('path=' + path);\n\n      _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  });\n\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/cookies.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/formDataToJSON.js":
/*!***********************************************************!*\
  !*** ../node_modules/axios/lib/helpers/formDataToJSON.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"../node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormData(formData) && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(formData.entries)) {\n    const obj = {};\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (formDataToJSON);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/formDataToJSON.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!**********************************************************!*\
  !*** ../node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isAbsoluteURL)\n/* harmony export */ });\n\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/isAbsoluteURL.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/isAxiosError.js":
/*!*********************************************************!*\
  !*** ../node_modules/axios/lib/helpers/isAxiosError.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isAxiosError)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"../node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(payload) && (payload.isAxiosError === true);\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/isAxiosError.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!************************************************************!*\
  !*** ../node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"../node_modules/axios/lib/platform/index.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, _platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].origin),\n  _platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].navigator && /(msie|trident)/i.test(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].navigator.userAgent)\n) : () => true);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/isURLSameOrigin.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/null.js":
/*!*************************************************!*\
  !*** ../node_modules/axios/lib/helpers/null.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// eslint-disable-next-line strict\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (null);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/null.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/parseHeaders.js":
/*!*********************************************************!*\
  !*** ../node_modules/axios/lib/helpers/parseHeaders.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"../node_modules/axios/lib/utils.js\");\n\n\n\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n});\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/parseHeaders.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/parseProtocol.js":
/*!**********************************************************!*\
  !*** ../node_modules/axios/lib/helpers/parseProtocol.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ parseProtocol)\n/* harmony export */ });\n\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/parseProtocol.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/progressEventReducer.js":
/*!*****************************************************************!*\
  !*** ../node_modules/axios/lib/helpers/progressEventReducer.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asyncDecorator: () => (/* binding */ asyncDecorator),\n/* harmony export */   progressEventDecorator: () => (/* binding */ progressEventDecorator),\n/* harmony export */   progressEventReducer: () => (/* binding */ progressEventReducer)\n/* harmony export */ });\n/* harmony import */ var _speedometer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./speedometer.js */ \"../node_modules/axios/lib/helpers/speedometer.js\");\n/* harmony import */ var _throttle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./throttle.js */ \"../node_modules/axios/lib/helpers/throttle.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"../node_modules/axios/lib/utils.js\");\n\n\n\n\nconst progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = (0,_speedometer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(50, 250);\n\n  return (0,_throttle_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nconst progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nconst asyncDecorator = (fn) => (...args) => _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].asap(() => fn(...args));\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/progressEventReducer.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/resolveConfig.js":
/*!**********************************************************!*\
  !*** ../node_modules/axios/lib/helpers/resolveConfig.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../platform/index.js */ \"../node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ \"../node_modules/axios/lib/utils.js\");\n/* harmony import */ var _isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./isURLSameOrigin.js */ \"../node_modules/axios/lib/helpers/isURLSameOrigin.js\");\n/* harmony import */ var _cookies_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cookies.js */ \"../node_modules/axios/lib/helpers/cookies.js\");\n/* harmony import */ var _core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/buildFullPath.js */ \"../node_modules/axios/lib/core/buildFullPath.js\");\n/* harmony import */ var _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/mergeConfig.js */ \"../node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"../node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _buildURL_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./buildURL.js */ \"../node_modules/axios/lib/helpers/buildURL.js\");\n\n\n\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((config) => {\n  const newConfig = (0,_core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(headers);\n\n  newConfig.url = (0,_buildURL_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((0,_core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isFormData(data)) {\n    if (_platform_index_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].hasStandardBrowserEnv || _platform_index_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (_platform_index_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].hasStandardBrowserEnv) {\n    withXSRFToken && _utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && (0,_isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && _cookies_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n});\n\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/resolveConfig.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/speedometer.js":
/*!********************************************************!*\
  !*** ../node_modules/axios/lib/helpers/speedometer.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (speedometer);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/speedometer.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/spread.js":
/*!***************************************************!*\
  !*** ../node_modules/axios/lib/helpers/spread.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ spread)\n/* harmony export */ });\n\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/spread.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/throttle.js":
/*!*****************************************************!*\
  !*** ../node_modules/axios/lib/helpers/throttle.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (throttle);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/throttle.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/toFormData.js":
/*!*******************************************************!*\
  !*** ../node_modules/axios/lib/helpers/toFormData.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"../node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/AxiosError.js */ \"../node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/node/classes/FormData.js */ \"../node_modules/axios/lib/helpers/null.js\");\n\n\n\n\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\n\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isPlainObject(thing) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (_platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isSpecCompliantForm(formData);\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBoolean(value)) {\n      return value.toString();\n    }\n\n    if (!useBlob && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBlob(value)) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBuffer(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) && isFlatArray(value)) ||\n        ((_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFileList(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '[]')) && (arr = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(value, function each(el, key) {\n      const result = !(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(el) || el === null) && visitor.call(\n        formData, el, _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (toFormData);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/toFormData.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/toURLEncodedForm.js":
/*!*************************************************************!*\
  !*** ../node_modules/axios/lib/helpers/toURLEncodedForm.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toURLEncodedForm)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"../node_modules/axios/lib/utils.js\");\n/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ \"../node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/index.js */ \"../node_modules/axios/lib/platform/index.js\");\n\n\n\n\n\n\nfunction toURLEncodedForm(data, options) {\n  return (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(data, new _platform_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (_platform_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isNode && _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/toURLEncodedForm.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/trackStream.js":
/*!********************************************************!*\
  !*** ../node_modules/axios/lib/helpers/trackStream.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readBytes: () => (/* binding */ readBytes),\n/* harmony export */   streamChunk: () => (/* binding */ streamChunk),\n/* harmony export */   trackStream: () => (/* binding */ trackStream)\n/* harmony export */ });\n\nconst streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nconst readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nconst trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/trackStream.js?");

/***/ }),

/***/ "../node_modules/axios/lib/helpers/validator.js":
/*!******************************************************!*\
  !*** ../node_modules/axios/lib/helpers/validator.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../env/data.js */ \"../node_modules/axios/lib/env/data.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosError.js */ \"../node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + _env_data_js__WEBPACK_IMPORTED_MODULE_0__.VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('options must be an object', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('option ' + opt + ' must be ' + result, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('Unknown option ' + opt, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION);\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  assertOptions,\n  validators\n});\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/helpers/validator.js?");

/***/ }),

/***/ "../node_modules/axios/lib/platform/browser/classes/Blob.js":
/*!******************************************************************!*\
  !*** ../node_modules/axios/lib/platform/browser/classes/Blob.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeof Blob !== 'undefined' ? Blob : null);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/platform/browser/classes/Blob.js?");

/***/ }),

/***/ "../node_modules/axios/lib/platform/browser/classes/FormData.js":
/*!**********************************************************************!*\
  !*** ../node_modules/axios/lib/platform/browser/classes/FormData.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeof FormData !== 'undefined' ? FormData : null);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/platform/browser/classes/FormData.js?");

/***/ }),

/***/ "../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../helpers/AxiosURLSearchParams.js */ \"../node_modules/axios/lib/helpers/AxiosURLSearchParams.js\");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeof URLSearchParams !== 'undefined' ? URLSearchParams : _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js?");

/***/ }),

/***/ "../node_modules/axios/lib/platform/browser/index.js":
/*!***********************************************************!*\
  !*** ../node_modules/axios/lib/platform/browser/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classes/URLSearchParams.js */ \"../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js\");\n/* harmony import */ var _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes/FormData.js */ \"../node_modules/axios/lib/platform/browser/classes/FormData.js\");\n/* harmony import */ var _classes_Blob_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./classes/Blob.js */ \"../node_modules/axios/lib/platform/browser/classes/Blob.js\");\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  isBrowser: true,\n  classes: {\n    URLSearchParams: _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    FormData: _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Blob: _classes_Blob_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n});\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/platform/browser/index.js?");

/***/ }),

/***/ "../node_modules/axios/lib/platform/common/utils.js":
/*!**********************************************************!*\
  !*** ../node_modules/axios/lib/platform/common/utils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasBrowserEnv: () => (/* binding */ hasBrowserEnv),\n/* harmony export */   hasStandardBrowserEnv: () => (/* binding */ hasStandardBrowserEnv),\n/* harmony export */   hasStandardBrowserWebWorkerEnv: () => (/* binding */ hasStandardBrowserWebWorkerEnv),\n/* harmony export */   navigator: () => (/* binding */ _navigator),\n/* harmony export */   origin: () => (/* binding */ origin)\n/* harmony export */ });\nconst hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\n\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/platform/common/utils.js?");

/***/ }),

/***/ "../node_modules/axios/lib/platform/index.js":
/*!***************************************************!*\
  !*** ../node_modules/axios/lib/platform/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node/index.js */ \"../node_modules/axios/lib/platform/browser/index.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/utils.js */ \"../node_modules/axios/lib/platform/common/utils.js\");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  ..._common_utils_js__WEBPACK_IMPORTED_MODULE_0__,\n  ..._node_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n});\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/platform/index.js?");

/***/ }),

/***/ "../node_modules/axios/lib/utils.js":
/*!******************************************!*\
  !*** ../node_modules/axios/lib/utils.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/bind.js */ \"../node_modules/axios/lib/helpers/bind.js\");\n\n\n\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\nconst {iterator, toStringTag} = Symbol;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(toStringTag in val) && !(iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[iterator];\n\n  const _iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = _iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[toStringTag] === 'FormData' && thing[iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n\nconst isIterable = (thing) => thing != null && isFunction(thing[iterator]);\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap,\n  isIterable\n});\n\n\n//# sourceURL=webpack://frontend/../node_modules/axios/lib/utils.js?");

/***/ }),

/***/ "./node_modules/cookie/dist/index.js":
/*!*******************************************!*\
  !*** ./node_modules/cookie/dist/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.parse = parse;\r\nexports.serialize = serialize;\r\n/**\r\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\r\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\r\n * which has been replaced by the token definition in RFC 7230 appendix B.\r\n *\r\n * cookie-name       = token\r\n * token             = 1*tchar\r\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\r\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\r\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\r\n *\r\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\r\n * Allow same range as cookie value, except `=`, which delimits end of name.\r\n */\r\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\r\n/**\r\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\r\n *\r\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\r\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\r\n *                     ; US-ASCII characters excluding CTLs,\r\n *                     ; whitespace DQUOTE, comma, semicolon,\r\n *                     ; and backslash\r\n *\r\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\r\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\r\n */\r\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\r\n/**\r\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\r\n *\r\n * domain-value      = <subdomain>\r\n *                     ; defined in [RFC1034], Section 3.5, as\r\n *                     ; enhanced by [RFC1123], Section 2.1\r\n * <subdomain>       = <label> | <subdomain> \".\" <label>\r\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\r\n *                     Labels must be 63 characters or less.\r\n *                     'let-dig' not 'letter' in the first char, per RFC1123\r\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\r\n * <let-dig-hyp>     = <let-dig> | \"-\"\r\n * <let-dig>         = <letter> | <digit>\r\n * <letter>          = any one of the 52 alphabetic characters A through Z in\r\n *                     upper case and a through z in lower case\r\n * <digit>           = any one of the ten digits 0 through 9\r\n *\r\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\r\n *\r\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\r\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\r\n * cause the user agent to ignore the attribute.)\r\n */\r\nconst domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\r\n/**\r\n * RegExp to match path-value in RFC 6265 sec 4.1.1\r\n *\r\n * path-value        = <any CHAR except CTLs or \";\">\r\n * CHAR              = %x01-7F\r\n *                     ; defined in RFC 5234 appendix B.1\r\n */\r\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\r\nconst __toString = Object.prototype.toString;\r\nconst NullObject = /* @__PURE__ */ (() => {\r\n    const C = function () { };\r\n    C.prototype = Object.create(null);\r\n    return C;\r\n})();\r\n/**\r\n * Parse a cookie header.\r\n *\r\n * Parse the given cookie header string into an object\r\n * The object has the various cookies as keys(names) => values\r\n */\r\nfunction parse(str, options) {\r\n    const obj = new NullObject();\r\n    const len = str.length;\r\n    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\r\n    if (len < 2)\r\n        return obj;\r\n    const dec = options?.decode || decode;\r\n    let index = 0;\r\n    do {\r\n        const eqIdx = str.indexOf(\"=\", index);\r\n        if (eqIdx === -1)\r\n            break; // No more cookie pairs.\r\n        const colonIdx = str.indexOf(\";\", index);\r\n        const endIdx = colonIdx === -1 ? len : colonIdx;\r\n        if (eqIdx > endIdx) {\r\n            // backtrack on prior semicolon\r\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\r\n            continue;\r\n        }\r\n        const keyStartIdx = startIndex(str, index, eqIdx);\r\n        const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\r\n        const key = str.slice(keyStartIdx, keyEndIdx);\r\n        // only assign once\r\n        if (obj[key] === undefined) {\r\n            let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\r\n            let valEndIdx = endIndex(str, endIdx, valStartIdx);\r\n            const value = dec(str.slice(valStartIdx, valEndIdx));\r\n            obj[key] = value;\r\n        }\r\n        index = endIdx + 1;\r\n    } while (index < len);\r\n    return obj;\r\n}\r\nfunction startIndex(str, index, max) {\r\n    do {\r\n        const code = str.charCodeAt(index);\r\n        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\r\n            return index;\r\n    } while (++index < max);\r\n    return max;\r\n}\r\nfunction endIndex(str, index, min) {\r\n    while (index > min) {\r\n        const code = str.charCodeAt(--index);\r\n        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\r\n            return index + 1;\r\n    }\r\n    return min;\r\n}\r\n/**\r\n * Serialize data into a cookie header.\r\n *\r\n * Serialize a name value pair into a cookie string suitable for\r\n * http headers. An optional options object specifies cookie parameters.\r\n *\r\n * serialize('foo', 'bar', { httpOnly: true })\r\n *   => \"foo=bar; httpOnly\"\r\n */\r\nfunction serialize(name, val, options) {\r\n    const enc = options?.encode || encodeURIComponent;\r\n    if (!cookieNameRegExp.test(name)) {\r\n        throw new TypeError(`argument name is invalid: ${name}`);\r\n    }\r\n    const value = enc(val);\r\n    if (!cookieValueRegExp.test(value)) {\r\n        throw new TypeError(`argument val is invalid: ${val}`);\r\n    }\r\n    let str = name + \"=\" + value;\r\n    if (!options)\r\n        return str;\r\n    if (options.maxAge !== undefined) {\r\n        if (!Number.isInteger(options.maxAge)) {\r\n            throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\r\n        }\r\n        str += \"; Max-Age=\" + options.maxAge;\r\n    }\r\n    if (options.domain) {\r\n        if (!domainValueRegExp.test(options.domain)) {\r\n            throw new TypeError(`option domain is invalid: ${options.domain}`);\r\n        }\r\n        str += \"; Domain=\" + options.domain;\r\n    }\r\n    if (options.path) {\r\n        if (!pathValueRegExp.test(options.path)) {\r\n            throw new TypeError(`option path is invalid: ${options.path}`);\r\n        }\r\n        str += \"; Path=\" + options.path;\r\n    }\r\n    if (options.expires) {\r\n        if (!isDate(options.expires) ||\r\n            !Number.isFinite(options.expires.valueOf())) {\r\n            throw new TypeError(`option expires is invalid: ${options.expires}`);\r\n        }\r\n        str += \"; Expires=\" + options.expires.toUTCString();\r\n    }\r\n    if (options.httpOnly) {\r\n        str += \"; HttpOnly\";\r\n    }\r\n    if (options.secure) {\r\n        str += \"; Secure\";\r\n    }\r\n    if (options.partitioned) {\r\n        str += \"; Partitioned\";\r\n    }\r\n    if (options.priority) {\r\n        const priority = typeof options.priority === \"string\"\r\n            ? options.priority.toLowerCase()\r\n            : undefined;\r\n        switch (priority) {\r\n            case \"low\":\r\n                str += \"; Priority=Low\";\r\n                break;\r\n            case \"medium\":\r\n                str += \"; Priority=Medium\";\r\n                break;\r\n            case \"high\":\r\n                str += \"; Priority=High\";\r\n                break;\r\n            default:\r\n                throw new TypeError(`option priority is invalid: ${options.priority}`);\r\n        }\r\n    }\r\n    if (options.sameSite) {\r\n        const sameSite = typeof options.sameSite === \"string\"\r\n            ? options.sameSite.toLowerCase()\r\n            : options.sameSite;\r\n        switch (sameSite) {\r\n            case true:\r\n            case \"strict\":\r\n                str += \"; SameSite=Strict\";\r\n                break;\r\n            case \"lax\":\r\n                str += \"; SameSite=Lax\";\r\n                break;\r\n            case \"none\":\r\n                str += \"; SameSite=None\";\r\n                break;\r\n            default:\r\n                throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\r\n        }\r\n    }\r\n    return str;\r\n}\r\n/**\r\n * URL-decode string value. Optimized to skip native call when no %.\r\n */\r\nfunction decode(str) {\r\n    if (str.indexOf(\"%\") === -1)\r\n        return str;\r\n    try {\r\n        return decodeURIComponent(str);\r\n    }\r\n    catch (e) {\r\n        return str;\r\n    }\r\n}\r\n/**\r\n * Determine if value is a Date.\r\n */\r\nfunction isDate(val) {\r\n    return __toString.call(val) === \"[object Date]\";\r\n}\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://frontend/./node_modules/cookie/dist/index.js?");

/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom-client.development.js":
/*!********************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom-client.development.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\r\n * @license React\r\n * react-dom-client.development.js\r\n *\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/*\r\n Modernizr 3.0.0pre (Custom Build) | MIT\r\n*/\r\n\r\n true &&\r\n  (function () {\r\n    function findHook(fiber, id) {\r\n      for (fiber = fiber.memoizedState; null !== fiber && 0 < id; )\r\n        (fiber = fiber.next), id--;\r\n      return fiber;\r\n    }\r\n    function copyWithSetImpl(obj, path, index, value) {\r\n      if (index >= path.length) return value;\r\n      var key = path[index],\r\n        updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);\r\n      updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\r\n      return updated;\r\n    }\r\n    function copyWithRename(obj, oldPath, newPath) {\r\n      if (oldPath.length !== newPath.length)\r\n        console.warn(\"copyWithRename() expects paths of the same length\");\r\n      else {\r\n        for (var i = 0; i < newPath.length - 1; i++)\r\n          if (oldPath[i] !== newPath[i]) {\r\n            console.warn(\r\n              \"copyWithRename() expects paths to be the same except for the deepest key\"\r\n            );\r\n            return;\r\n          }\r\n        return copyWithRenameImpl(obj, oldPath, newPath, 0);\r\n      }\r\n    }\r\n    function copyWithRenameImpl(obj, oldPath, newPath, index) {\r\n      var oldKey = oldPath[index],\r\n        updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);\r\n      index + 1 === oldPath.length\r\n        ? ((updated[newPath[index]] = updated[oldKey]),\r\n          isArrayImpl(updated)\r\n            ? updated.splice(oldKey, 1)\r\n            : delete updated[oldKey])\r\n        : (updated[oldKey] = copyWithRenameImpl(\r\n            obj[oldKey],\r\n            oldPath,\r\n            newPath,\r\n            index + 1\r\n          ));\r\n      return updated;\r\n    }\r\n    function copyWithDeleteImpl(obj, path, index) {\r\n      var key = path[index],\r\n        updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);\r\n      if (index + 1 === path.length)\r\n        return (\r\n          isArrayImpl(updated) ? updated.splice(key, 1) : delete updated[key],\r\n          updated\r\n        );\r\n      updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\r\n      return updated;\r\n    }\r\n    function shouldSuspendImpl() {\r\n      return !1;\r\n    }\r\n    function shouldErrorImpl() {\r\n      return null;\r\n    }\r\n    function warnForMissingKey() {}\r\n    function warnInvalidHookAccess() {\r\n      console.error(\r\n        \"Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://react.dev/link/rules-of-hooks\"\r\n      );\r\n    }\r\n    function warnInvalidContextAccess() {\r\n      console.error(\r\n        \"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().\"\r\n      );\r\n    }\r\n    function noop$2() {}\r\n    function setToSortedString(set) {\r\n      var array = [];\r\n      set.forEach(function (value) {\r\n        array.push(value);\r\n      });\r\n      return array.sort().join(\", \");\r\n    }\r\n    function createFiber(tag, pendingProps, key, mode) {\r\n      return new FiberNode(tag, pendingProps, key, mode);\r\n    }\r\n    function scheduleRoot(root, element) {\r\n      root.context === emptyContextObject &&\r\n        (updateContainerImpl(root.current, 2, element, root, null, null),\r\n        flushSyncWork$1());\r\n    }\r\n    function scheduleRefresh(root, update) {\r\n      if (null !== resolveFamily) {\r\n        var staleFamilies = update.staleFamilies;\r\n        update = update.updatedFamilies;\r\n        flushPendingEffects();\r\n        scheduleFibersWithFamiliesRecursively(\r\n          root.current,\r\n          update,\r\n          staleFamilies\r\n        );\r\n        flushSyncWork$1();\r\n      }\r\n    }\r\n    function setRefreshHandler(handler) {\r\n      resolveFamily = handler;\r\n    }\r\n    function isValidContainer(node) {\r\n      return !(\r\n        !node ||\r\n        (1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType)\r\n      );\r\n    }\r\n    function getNearestMountedFiber(fiber) {\r\n      var node = fiber,\r\n        nearestMounted = fiber;\r\n      if (fiber.alternate) for (; node.return; ) node = node.return;\r\n      else {\r\n        fiber = node;\r\n        do\r\n          (node = fiber),\r\n            0 !== (node.flags & 4098) && (nearestMounted = node.return),\r\n            (fiber = node.return);\r\n        while (fiber);\r\n      }\r\n      return 3 === node.tag ? nearestMounted : null;\r\n    }\r\n    function getSuspenseInstanceFromFiber(fiber) {\r\n      if (13 === fiber.tag) {\r\n        var suspenseState = fiber.memoizedState;\r\n        null === suspenseState &&\r\n          ((fiber = fiber.alternate),\r\n          null !== fiber && (suspenseState = fiber.memoizedState));\r\n        if (null !== suspenseState) return suspenseState.dehydrated;\r\n      }\r\n      return null;\r\n    }\r\n    function assertIsMounted(fiber) {\r\n      if (getNearestMountedFiber(fiber) !== fiber)\r\n        throw Error(\"Unable to find node on an unmounted component.\");\r\n    }\r\n    function findCurrentFiberUsingSlowPath(fiber) {\r\n      var alternate = fiber.alternate;\r\n      if (!alternate) {\r\n        alternate = getNearestMountedFiber(fiber);\r\n        if (null === alternate)\r\n          throw Error(\"Unable to find node on an unmounted component.\");\r\n        return alternate !== fiber ? null : fiber;\r\n      }\r\n      for (var a = fiber, b = alternate; ; ) {\r\n        var parentA = a.return;\r\n        if (null === parentA) break;\r\n        var parentB = parentA.alternate;\r\n        if (null === parentB) {\r\n          b = parentA.return;\r\n          if (null !== b) {\r\n            a = b;\r\n            continue;\r\n          }\r\n          break;\r\n        }\r\n        if (parentA.child === parentB.child) {\r\n          for (parentB = parentA.child; parentB; ) {\r\n            if (parentB === a) return assertIsMounted(parentA), fiber;\r\n            if (parentB === b) return assertIsMounted(parentA), alternate;\r\n            parentB = parentB.sibling;\r\n          }\r\n          throw Error(\"Unable to find node on an unmounted component.\");\r\n        }\r\n        if (a.return !== b.return) (a = parentA), (b = parentB);\r\n        else {\r\n          for (var didFindChild = !1, _child = parentA.child; _child; ) {\r\n            if (_child === a) {\r\n              didFindChild = !0;\r\n              a = parentA;\r\n              b = parentB;\r\n              break;\r\n            }\r\n            if (_child === b) {\r\n              didFindChild = !0;\r\n              b = parentA;\r\n              a = parentB;\r\n              break;\r\n            }\r\n            _child = _child.sibling;\r\n          }\r\n          if (!didFindChild) {\r\n            for (_child = parentB.child; _child; ) {\r\n              if (_child === a) {\r\n                didFindChild = !0;\r\n                a = parentB;\r\n                b = parentA;\r\n                break;\r\n              }\r\n              if (_child === b) {\r\n                didFindChild = !0;\r\n                b = parentB;\r\n                a = parentA;\r\n                break;\r\n              }\r\n              _child = _child.sibling;\r\n            }\r\n            if (!didFindChild)\r\n              throw Error(\r\n                \"Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.\"\r\n              );\r\n          }\r\n        }\r\n        if (a.alternate !== b)\r\n          throw Error(\r\n            \"Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.\"\r\n          );\r\n      }\r\n      if (3 !== a.tag)\r\n        throw Error(\"Unable to find node on an unmounted component.\");\r\n      return a.stateNode.current === a ? fiber : alternate;\r\n    }\r\n    function findCurrentHostFiberImpl(node) {\r\n      var tag = node.tag;\r\n      if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;\r\n      for (node = node.child; null !== node; ) {\r\n        tag = findCurrentHostFiberImpl(node);\r\n        if (null !== tag) return tag;\r\n        node = node.sibling;\r\n      }\r\n      return null;\r\n    }\r\n    function getIteratorFn(maybeIterable) {\r\n      if (null === maybeIterable || \"object\" !== typeof maybeIterable)\r\n        return null;\r\n      maybeIterable =\r\n        (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n        maybeIterable[\"@@iterator\"];\r\n      return \"function\" === typeof maybeIterable ? maybeIterable : null;\r\n    }\r\n    function getComponentNameFromType(type) {\r\n      if (null == type) return null;\r\n      if (\"function\" === typeof type)\r\n        return type.$$typeof === REACT_CLIENT_REFERENCE\r\n          ? null\r\n          : type.displayName || type.name || null;\r\n      if (\"string\" === typeof type) return type;\r\n      switch (type) {\r\n        case REACT_FRAGMENT_TYPE:\r\n          return \"Fragment\";\r\n        case REACT_PROFILER_TYPE:\r\n          return \"Profiler\";\r\n        case REACT_STRICT_MODE_TYPE:\r\n          return \"StrictMode\";\r\n        case REACT_SUSPENSE_TYPE:\r\n          return \"Suspense\";\r\n        case REACT_SUSPENSE_LIST_TYPE:\r\n          return \"SuspenseList\";\r\n        case REACT_ACTIVITY_TYPE:\r\n          return \"Activity\";\r\n      }\r\n      if (\"object\" === typeof type)\r\n        switch (\r\n          (\"number\" === typeof type.tag &&\r\n            console.error(\r\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\r\n            ),\r\n          type.$$typeof)\r\n        ) {\r\n          case REACT_PORTAL_TYPE:\r\n            return \"Portal\";\r\n          case REACT_CONTEXT_TYPE:\r\n            return (type.displayName || \"Context\") + \".Provider\";\r\n          case REACT_CONSUMER_TYPE:\r\n            return (type._context.displayName || \"Context\") + \".Consumer\";\r\n          case REACT_FORWARD_REF_TYPE:\r\n            var innerType = type.render;\r\n            type = type.displayName;\r\n            type ||\r\n              ((type = innerType.displayName || innerType.name || \"\"),\r\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\r\n            return type;\r\n          case REACT_MEMO_TYPE:\r\n            return (\r\n              (innerType = type.displayName || null),\r\n              null !== innerType\r\n                ? innerType\r\n                : getComponentNameFromType(type.type) || \"Memo\"\r\n            );\r\n          case REACT_LAZY_TYPE:\r\n            innerType = type._payload;\r\n            type = type._init;\r\n            try {\r\n              return getComponentNameFromType(type(innerType));\r\n            } catch (x) {}\r\n        }\r\n      return null;\r\n    }\r\n    function getComponentNameFromOwner(owner) {\r\n      return \"number\" === typeof owner.tag\r\n        ? getComponentNameFromFiber(owner)\r\n        : \"string\" === typeof owner.name\r\n          ? owner.name\r\n          : null;\r\n    }\r\n    function getComponentNameFromFiber(fiber) {\r\n      var type = fiber.type;\r\n      switch (fiber.tag) {\r\n        case 31:\r\n          return \"Activity\";\r\n        case 24:\r\n          return \"Cache\";\r\n        case 9:\r\n          return (type._context.displayName || \"Context\") + \".Consumer\";\r\n        case 10:\r\n          return (type.displayName || \"Context\") + \".Provider\";\r\n        case 18:\r\n          return \"DehydratedFragment\";\r\n        case 11:\r\n          return (\r\n            (fiber = type.render),\r\n            (fiber = fiber.displayName || fiber.name || \"\"),\r\n            type.displayName ||\r\n              (\"\" !== fiber ? \"ForwardRef(\" + fiber + \")\" : \"ForwardRef\")\r\n          );\r\n        case 7:\r\n          return \"Fragment\";\r\n        case 26:\r\n        case 27:\r\n        case 5:\r\n          return type;\r\n        case 4:\r\n          return \"Portal\";\r\n        case 3:\r\n          return \"Root\";\r\n        case 6:\r\n          return \"Text\";\r\n        case 16:\r\n          return getComponentNameFromType(type);\r\n        case 8:\r\n          return type === REACT_STRICT_MODE_TYPE ? \"StrictMode\" : \"Mode\";\r\n        case 22:\r\n          return \"Offscreen\";\r\n        case 12:\r\n          return \"Profiler\";\r\n        case 21:\r\n          return \"Scope\";\r\n        case 13:\r\n          return \"Suspense\";\r\n        case 19:\r\n          return \"SuspenseList\";\r\n        case 25:\r\n          return \"TracingMarker\";\r\n        case 1:\r\n        case 0:\r\n        case 14:\r\n        case 15:\r\n          if (\"function\" === typeof type)\r\n            return type.displayName || type.name || null;\r\n          if (\"string\" === typeof type) return type;\r\n          break;\r\n        case 29:\r\n          type = fiber._debugInfo;\r\n          if (null != type)\r\n            for (var i = type.length - 1; 0 <= i; i--)\r\n              if (\"string\" === typeof type[i].name) return type[i].name;\r\n          if (null !== fiber.return)\r\n            return getComponentNameFromFiber(fiber.return);\r\n      }\r\n      return null;\r\n    }\r\n    function createCursor(defaultValue) {\r\n      return { current: defaultValue };\r\n    }\r\n    function pop(cursor, fiber) {\r\n      0 > index$jscomp$0\r\n        ? console.error(\"Unexpected pop.\")\r\n        : (fiber !== fiberStack[index$jscomp$0] &&\r\n            console.error(\"Unexpected Fiber popped.\"),\r\n          (cursor.current = valueStack[index$jscomp$0]),\r\n          (valueStack[index$jscomp$0] = null),\r\n          (fiberStack[index$jscomp$0] = null),\r\n          index$jscomp$0--);\r\n    }\r\n    function push(cursor, value, fiber) {\r\n      index$jscomp$0++;\r\n      valueStack[index$jscomp$0] = cursor.current;\r\n      fiberStack[index$jscomp$0] = fiber;\r\n      cursor.current = value;\r\n    }\r\n    function requiredContext(c) {\r\n      null === c &&\r\n        console.error(\r\n          \"Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.\"\r\n        );\r\n      return c;\r\n    }\r\n    function pushHostContainer(fiber, nextRootInstance) {\r\n      push(rootInstanceStackCursor, nextRootInstance, fiber);\r\n      push(contextFiberStackCursor, fiber, fiber);\r\n      push(contextStackCursor, null, fiber);\r\n      var nextRootContext = nextRootInstance.nodeType;\r\n      switch (nextRootContext) {\r\n        case 9:\r\n        case 11:\r\n          nextRootContext = 9 === nextRootContext ? \"#document\" : \"#fragment\";\r\n          nextRootInstance = (nextRootInstance =\r\n            nextRootInstance.documentElement)\r\n            ? (nextRootInstance = nextRootInstance.namespaceURI)\r\n              ? getOwnHostContext(nextRootInstance)\r\n              : HostContextNamespaceNone\r\n            : HostContextNamespaceNone;\r\n          break;\r\n        default:\r\n          if (\r\n            ((nextRootContext = nextRootInstance.tagName),\r\n            (nextRootInstance = nextRootInstance.namespaceURI))\r\n          )\r\n            (nextRootInstance = getOwnHostContext(nextRootInstance)),\r\n              (nextRootInstance = getChildHostContextProd(\r\n                nextRootInstance,\r\n                nextRootContext\r\n              ));\r\n          else\r\n            switch (nextRootContext) {\r\n              case \"svg\":\r\n                nextRootInstance = HostContextNamespaceSvg;\r\n                break;\r\n              case \"math\":\r\n                nextRootInstance = HostContextNamespaceMath;\r\n                break;\r\n              default:\r\n                nextRootInstance = HostContextNamespaceNone;\r\n            }\r\n      }\r\n      nextRootContext = nextRootContext.toLowerCase();\r\n      nextRootContext = updatedAncestorInfoDev(null, nextRootContext);\r\n      nextRootContext = {\r\n        context: nextRootInstance,\r\n        ancestorInfo: nextRootContext\r\n      };\r\n      pop(contextStackCursor, fiber);\r\n      push(contextStackCursor, nextRootContext, fiber);\r\n    }\r\n    function popHostContainer(fiber) {\r\n      pop(contextStackCursor, fiber);\r\n      pop(contextFiberStackCursor, fiber);\r\n      pop(rootInstanceStackCursor, fiber);\r\n    }\r\n    function getHostContext() {\r\n      return requiredContext(contextStackCursor.current);\r\n    }\r\n    function pushHostContext(fiber) {\r\n      null !== fiber.memoizedState &&\r\n        push(hostTransitionProviderCursor, fiber, fiber);\r\n      var context = requiredContext(contextStackCursor.current);\r\n      var type = fiber.type;\r\n      var nextContext = getChildHostContextProd(context.context, type);\r\n      type = updatedAncestorInfoDev(context.ancestorInfo, type);\r\n      nextContext = { context: nextContext, ancestorInfo: type };\r\n      context !== nextContext &&\r\n        (push(contextFiberStackCursor, fiber, fiber),\r\n        push(contextStackCursor, nextContext, fiber));\r\n    }\r\n    function popHostContext(fiber) {\r\n      contextFiberStackCursor.current === fiber &&\r\n        (pop(contextStackCursor, fiber), pop(contextFiberStackCursor, fiber));\r\n      hostTransitionProviderCursor.current === fiber &&\r\n        (pop(hostTransitionProviderCursor, fiber),\r\n        (HostTransitionContext._currentValue = NotPendingTransition));\r\n    }\r\n    function typeName(value) {\r\n      return (\r\n        (\"function\" === typeof Symbol &&\r\n          Symbol.toStringTag &&\r\n          value[Symbol.toStringTag]) ||\r\n        value.constructor.name ||\r\n        \"Object\"\r\n      );\r\n    }\r\n    function willCoercionThrow(value) {\r\n      try {\r\n        return testStringCoercion(value), !1;\r\n      } catch (e) {\r\n        return !0;\r\n      }\r\n    }\r\n    function testStringCoercion(value) {\r\n      return \"\" + value;\r\n    }\r\n    function checkAttributeStringCoercion(value, attributeName) {\r\n      if (willCoercionThrow(value))\r\n        return (\r\n          console.error(\r\n            \"The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before using it here.\",\r\n            attributeName,\r\n            typeName(value)\r\n          ),\r\n          testStringCoercion(value)\r\n        );\r\n    }\r\n    function checkCSSPropertyStringCoercion(value, propName) {\r\n      if (willCoercionThrow(value))\r\n        return (\r\n          console.error(\r\n            \"The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before using it here.\",\r\n            propName,\r\n            typeName(value)\r\n          ),\r\n          testStringCoercion(value)\r\n        );\r\n    }\r\n    function checkFormFieldValueStringCoercion(value) {\r\n      if (willCoercionThrow(value))\r\n        return (\r\n          console.error(\r\n            \"Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before using it here.\",\r\n            typeName(value)\r\n          ),\r\n          testStringCoercion(value)\r\n        );\r\n    }\r\n    function injectInternals(internals) {\r\n      if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\r\n      var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\r\n      if (hook.isDisabled) return !0;\r\n      if (!hook.supportsFiber)\r\n        return (\r\n          console.error(\r\n            \"The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://react.dev/link/react-devtools\"\r\n          ),\r\n          !0\r\n        );\r\n      try {\r\n        (rendererID = hook.inject(internals)), (injectedHook = hook);\r\n      } catch (err) {\r\n        console.error(\"React instrumentation encountered an error: %s.\", err);\r\n      }\r\n      return hook.checkDCE ? !0 : !1;\r\n    }\r\n    function setIsStrictModeForDevtools(newIsStrictMode) {\r\n      \"function\" === typeof log$1 &&\r\n        unstable_setDisableYieldValue(newIsStrictMode);\r\n      if (injectedHook && \"function\" === typeof injectedHook.setStrictMode)\r\n        try {\r\n          injectedHook.setStrictMode(rendererID, newIsStrictMode);\r\n        } catch (err) {\r\n          hasLoggedError ||\r\n            ((hasLoggedError = !0),\r\n            console.error(\r\n              \"React instrumentation encountered an error: %s\",\r\n              err\r\n            ));\r\n        }\r\n    }\r\n    function injectProfilingHooks(profilingHooks) {\r\n      injectedProfilingHooks = profilingHooks;\r\n    }\r\n    function markCommitStopped() {\r\n      null !== injectedProfilingHooks &&\r\n        \"function\" === typeof injectedProfilingHooks.markCommitStopped &&\r\n        injectedProfilingHooks.markCommitStopped();\r\n    }\r\n    function markComponentRenderStarted(fiber) {\r\n      null !== injectedProfilingHooks &&\r\n        \"function\" ===\r\n          typeof injectedProfilingHooks.markComponentRenderStarted &&\r\n        injectedProfilingHooks.markComponentRenderStarted(fiber);\r\n    }\r\n    function markComponentRenderStopped() {\r\n      null !== injectedProfilingHooks &&\r\n        \"function\" ===\r\n          typeof injectedProfilingHooks.markComponentRenderStopped &&\r\n        injectedProfilingHooks.markComponentRenderStopped();\r\n    }\r\n    function markRenderStarted(lanes) {\r\n      null !== injectedProfilingHooks &&\r\n        \"function\" === typeof injectedProfilingHooks.markRenderStarted &&\r\n        injectedProfilingHooks.markRenderStarted(lanes);\r\n    }\r\n    function markRenderStopped() {\r\n      null !== injectedProfilingHooks &&\r\n        \"function\" === typeof injectedProfilingHooks.markRenderStopped &&\r\n        injectedProfilingHooks.markRenderStopped();\r\n    }\r\n    function markStateUpdateScheduled(fiber, lane) {\r\n      null !== injectedProfilingHooks &&\r\n        \"function\" === typeof injectedProfilingHooks.markStateUpdateScheduled &&\r\n        injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);\r\n    }\r\n    function clz32Fallback(x) {\r\n      x >>>= 0;\r\n      return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;\r\n    }\r\n    function getLabelForLane(lane) {\r\n      if (lane & 1) return \"SyncHydrationLane\";\r\n      if (lane & 2) return \"Sync\";\r\n      if (lane & 4) return \"InputContinuousHydration\";\r\n      if (lane & 8) return \"InputContinuous\";\r\n      if (lane & 16) return \"DefaultHydration\";\r\n      if (lane & 32) return \"Default\";\r\n      if (lane & 128) return \"TransitionHydration\";\r\n      if (lane & 4194048) return \"Transition\";\r\n      if (lane & 62914560) return \"Retry\";\r\n      if (lane & 67108864) return \"SelectiveHydration\";\r\n      if (lane & 134217728) return \"IdleHydration\";\r\n      if (lane & 268435456) return \"Idle\";\r\n      if (lane & 536870912) return \"Offscreen\";\r\n      if (lane & 1073741824) return \"Deferred\";\r\n    }\r\n    function getHighestPriorityLanes(lanes) {\r\n      var pendingSyncLanes = lanes & 42;\r\n      if (0 !== pendingSyncLanes) return pendingSyncLanes;\r\n      switch (lanes & -lanes) {\r\n        case 1:\r\n          return 1;\r\n        case 2:\r\n          return 2;\r\n        case 4:\r\n          return 4;\r\n        case 8:\r\n          return 8;\r\n        case 16:\r\n          return 16;\r\n        case 32:\r\n          return 32;\r\n        case 64:\r\n          return 64;\r\n        case 128:\r\n          return 128;\r\n        case 256:\r\n        case 512:\r\n        case 1024:\r\n        case 2048:\r\n        case 4096:\r\n        case 8192:\r\n        case 16384:\r\n        case 32768:\r\n        case 65536:\r\n        case 131072:\r\n        case 262144:\r\n        case 524288:\r\n        case 1048576:\r\n        case 2097152:\r\n          return lanes & 4194048;\r\n        case 4194304:\r\n        case 8388608:\r\n        case 16777216:\r\n        case 33554432:\r\n          return lanes & 62914560;\r\n        case 67108864:\r\n          return 67108864;\r\n        case 134217728:\r\n          return 134217728;\r\n        case 268435456:\r\n          return 268435456;\r\n        case 536870912:\r\n          return 536870912;\r\n        case 1073741824:\r\n          return 0;\r\n        default:\r\n          return (\r\n            console.error(\r\n              \"Should have found matching lanes. This is a bug in React.\"\r\n            ),\r\n            lanes\r\n          );\r\n      }\r\n    }\r\n    function getNextLanes(root, wipLanes, rootHasPendingCommit) {\r\n      var pendingLanes = root.pendingLanes;\r\n      if (0 === pendingLanes) return 0;\r\n      var nextLanes = 0,\r\n        suspendedLanes = root.suspendedLanes,\r\n        pingedLanes = root.pingedLanes;\r\n      root = root.warmLanes;\r\n      var nonIdlePendingLanes = pendingLanes & 134217727;\r\n      0 !== nonIdlePendingLanes\r\n        ? ((pendingLanes = nonIdlePendingLanes & ~suspendedLanes),\r\n          0 !== pendingLanes\r\n            ? (nextLanes = getHighestPriorityLanes(pendingLanes))\r\n            : ((pingedLanes &= nonIdlePendingLanes),\r\n              0 !== pingedLanes\r\n                ? (nextLanes = getHighestPriorityLanes(pingedLanes))\r\n                : rootHasPendingCommit ||\r\n                  ((rootHasPendingCommit = nonIdlePendingLanes & ~root),\r\n                  0 !== rootHasPendingCommit &&\r\n                    (nextLanes =\r\n                      getHighestPriorityLanes(rootHasPendingCommit)))))\r\n        : ((nonIdlePendingLanes = pendingLanes & ~suspendedLanes),\r\n          0 !== nonIdlePendingLanes\r\n            ? (nextLanes = getHighestPriorityLanes(nonIdlePendingLanes))\r\n            : 0 !== pingedLanes\r\n              ? (nextLanes = getHighestPriorityLanes(pingedLanes))\r\n              : rootHasPendingCommit ||\r\n                ((rootHasPendingCommit = pendingLanes & ~root),\r\n                0 !== rootHasPendingCommit &&\r\n                  (nextLanes = getHighestPriorityLanes(rootHasPendingCommit))));\r\n      return 0 === nextLanes\r\n        ? 0\r\n        : 0 !== wipLanes &&\r\n            wipLanes !== nextLanes &&\r\n            0 === (wipLanes & suspendedLanes) &&\r\n            ((suspendedLanes = nextLanes & -nextLanes),\r\n            (rootHasPendingCommit = wipLanes & -wipLanes),\r\n            suspendedLanes >= rootHasPendingCommit ||\r\n              (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)))\r\n          ? wipLanes\r\n          : nextLanes;\r\n    }\r\n    function checkIfRootIsPrerendering(root, renderLanes) {\r\n      return (\r\n        0 ===\r\n        (root.pendingLanes &\r\n          ~(root.suspendedLanes & ~root.pingedLanes) &\r\n          renderLanes)\r\n      );\r\n    }\r\n    function computeExpirationTime(lane, currentTime) {\r\n      switch (lane) {\r\n        case 1:\r\n        case 2:\r\n        case 4:\r\n        case 8:\r\n        case 64:\r\n          return currentTime + 250;\r\n        case 16:\r\n        case 32:\r\n        case 128:\r\n        case 256:\r\n        case 512:\r\n        case 1024:\r\n        case 2048:\r\n        case 4096:\r\n        case 8192:\r\n        case 16384:\r\n        case 32768:\r\n        case 65536:\r\n        case 131072:\r\n        case 262144:\r\n        case 524288:\r\n        case 1048576:\r\n        case 2097152:\r\n          return currentTime + 5e3;\r\n        case 4194304:\r\n        case 8388608:\r\n        case 16777216:\r\n        case 33554432:\r\n          return -1;\r\n        case 67108864:\r\n        case 134217728:\r\n        case 268435456:\r\n        case 536870912:\r\n        case 1073741824:\r\n          return -1;\r\n        default:\r\n          return (\r\n            console.error(\r\n              \"Should have found matching lanes. This is a bug in React.\"\r\n            ),\r\n            -1\r\n          );\r\n      }\r\n    }\r\n    function claimNextTransitionLane() {\r\n      var lane = nextTransitionLane;\r\n      nextTransitionLane <<= 1;\r\n      0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);\r\n      return lane;\r\n    }\r\n    function claimNextRetryLane() {\r\n      var lane = nextRetryLane;\r\n      nextRetryLane <<= 1;\r\n      0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);\r\n      return lane;\r\n    }\r\n    function createLaneMap(initial) {\r\n      for (var laneMap = [], i = 0; 31 > i; i++) laneMap.push(initial);\r\n      return laneMap;\r\n    }\r\n    function markRootUpdated$1(root, updateLane) {\r\n      root.pendingLanes |= updateLane;\r\n      268435456 !== updateLane &&\r\n        ((root.suspendedLanes = 0),\r\n        (root.pingedLanes = 0),\r\n        (root.warmLanes = 0));\r\n    }\r\n    function markRootFinished(\r\n      root,\r\n      finishedLanes,\r\n      remainingLanes,\r\n      spawnedLane,\r\n      updatedLanes,\r\n      suspendedRetryLanes\r\n    ) {\r\n      var previouslyPendingLanes = root.pendingLanes;\r\n      root.pendingLanes = remainingLanes;\r\n      root.suspendedLanes = 0;\r\n      root.pingedLanes = 0;\r\n      root.warmLanes = 0;\r\n      root.expiredLanes &= remainingLanes;\r\n      root.entangledLanes &= remainingLanes;\r\n      root.errorRecoveryDisabledLanes &= remainingLanes;\r\n      root.shellSuspendCounter = 0;\r\n      var entanglements = root.entanglements,\r\n        expirationTimes = root.expirationTimes,\r\n        hiddenUpdates = root.hiddenUpdates;\r\n      for (\r\n        remainingLanes = previouslyPendingLanes & ~remainingLanes;\r\n        0 < remainingLanes;\r\n\r\n      ) {\r\n        var index = 31 - clz32(remainingLanes),\r\n          lane = 1 << index;\r\n        entanglements[index] = 0;\r\n        expirationTimes[index] = -1;\r\n        var hiddenUpdatesForLane = hiddenUpdates[index];\r\n        if (null !== hiddenUpdatesForLane)\r\n          for (\r\n            hiddenUpdates[index] = null, index = 0;\r\n            index < hiddenUpdatesForLane.length;\r\n            index++\r\n          ) {\r\n            var update = hiddenUpdatesForLane[index];\r\n            null !== update && (update.lane &= -536870913);\r\n          }\r\n        remainingLanes &= ~lane;\r\n      }\r\n      0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);\r\n      0 !== suspendedRetryLanes &&\r\n        0 === updatedLanes &&\r\n        0 !== root.tag &&\r\n        (root.suspendedLanes |=\r\n          suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));\r\n    }\r\n    function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {\r\n      root.pendingLanes |= spawnedLane;\r\n      root.suspendedLanes &= ~spawnedLane;\r\n      var spawnedLaneIndex = 31 - clz32(spawnedLane);\r\n      root.entangledLanes |= spawnedLane;\r\n      root.entanglements[spawnedLaneIndex] =\r\n        root.entanglements[spawnedLaneIndex] |\r\n        1073741824 |\r\n        (entangledLanes & 4194090);\r\n    }\r\n    function markRootEntangled(root, entangledLanes) {\r\n      var rootEntangledLanes = (root.entangledLanes |= entangledLanes);\r\n      for (root = root.entanglements; rootEntangledLanes; ) {\r\n        var index = 31 - clz32(rootEntangledLanes),\r\n          lane = 1 << index;\r\n        (lane & entangledLanes) | (root[index] & entangledLanes) &&\r\n          (root[index] |= entangledLanes);\r\n        rootEntangledLanes &= ~lane;\r\n      }\r\n    }\r\n    function getBumpedLaneForHydrationByLane(lane) {\r\n      switch (lane) {\r\n        case 2:\r\n          lane = 1;\r\n          break;\r\n        case 8:\r\n          lane = 4;\r\n          break;\r\n        case 32:\r\n          lane = 16;\r\n          break;\r\n        case 256:\r\n        case 512:\r\n        case 1024:\r\n        case 2048:\r\n        case 4096:\r\n        case 8192:\r\n        case 16384:\r\n        case 32768:\r\n        case 65536:\r\n        case 131072:\r\n        case 262144:\r\n        case 524288:\r\n        case 1048576:\r\n        case 2097152:\r\n        case 4194304:\r\n        case 8388608:\r\n        case 16777216:\r\n        case 33554432:\r\n          lane = 128;\r\n          break;\r\n        case 268435456:\r\n          lane = 134217728;\r\n          break;\r\n        default:\r\n          lane = 0;\r\n      }\r\n      return lane;\r\n    }\r\n    function addFiberToLanesMap(root, fiber, lanes) {\r\n      if (isDevToolsPresent)\r\n        for (root = root.pendingUpdatersLaneMap; 0 < lanes; ) {\r\n          var index = 31 - clz32(lanes),\r\n            lane = 1 << index;\r\n          root[index].add(fiber);\r\n          lanes &= ~lane;\r\n        }\r\n    }\r\n    function movePendingFibersToMemoized(root, lanes) {\r\n      if (isDevToolsPresent)\r\n        for (\r\n          var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap,\r\n            memoizedUpdaters = root.memoizedUpdaters;\r\n          0 < lanes;\r\n\r\n        ) {\r\n          var index = 31 - clz32(lanes);\r\n          root = 1 << index;\r\n          index = pendingUpdatersLaneMap[index];\r\n          0 < index.size &&\r\n            (index.forEach(function (fiber) {\r\n              var alternate = fiber.alternate;\r\n              (null !== alternate && memoizedUpdaters.has(alternate)) ||\r\n                memoizedUpdaters.add(fiber);\r\n            }),\r\n            index.clear());\r\n          lanes &= ~root;\r\n        }\r\n    }\r\n    function lanesToEventPriority(lanes) {\r\n      lanes &= -lanes;\r\n      return 0 !== DiscreteEventPriority && DiscreteEventPriority < lanes\r\n        ? 0 !== ContinuousEventPriority && ContinuousEventPriority < lanes\r\n          ? 0 !== (lanes & 134217727)\r\n            ? DefaultEventPriority\r\n            : IdleEventPriority\r\n          : ContinuousEventPriority\r\n        : DiscreteEventPriority;\r\n    }\r\n    function resolveUpdatePriority() {\r\n      var updatePriority = ReactDOMSharedInternals.p;\r\n      if (0 !== updatePriority) return updatePriority;\r\n      updatePriority = window.event;\r\n      return void 0 === updatePriority\r\n        ? DefaultEventPriority\r\n        : getEventPriority(updatePriority.type);\r\n    }\r\n    function runWithPriority(priority, fn) {\r\n      var previousPriority = ReactDOMSharedInternals.p;\r\n      try {\r\n        return (ReactDOMSharedInternals.p = priority), fn();\r\n      } finally {\r\n        ReactDOMSharedInternals.p = previousPriority;\r\n      }\r\n    }\r\n    function detachDeletedInstance(node) {\r\n      delete node[internalInstanceKey];\r\n      delete node[internalPropsKey];\r\n      delete node[internalEventHandlersKey];\r\n      delete node[internalEventHandlerListenersKey];\r\n      delete node[internalEventHandlesSetKey];\r\n    }\r\n    function getClosestInstanceFromNode(targetNode) {\r\n      var targetInst = targetNode[internalInstanceKey];\r\n      if (targetInst) return targetInst;\r\n      for (var parentNode = targetNode.parentNode; parentNode; ) {\r\n        if (\r\n          (targetInst =\r\n            parentNode[internalContainerInstanceKey] ||\r\n            parentNode[internalInstanceKey])\r\n        ) {\r\n          parentNode = targetInst.alternate;\r\n          if (\r\n            null !== targetInst.child ||\r\n            (null !== parentNode && null !== parentNode.child)\r\n          )\r\n            for (\r\n              targetNode = getParentSuspenseInstance(targetNode);\r\n              null !== targetNode;\r\n\r\n            ) {\r\n              if ((parentNode = targetNode[internalInstanceKey]))\r\n                return parentNode;\r\n              targetNode = getParentSuspenseInstance(targetNode);\r\n            }\r\n          return targetInst;\r\n        }\r\n        targetNode = parentNode;\r\n        parentNode = targetNode.parentNode;\r\n      }\r\n      return null;\r\n    }\r\n    function getInstanceFromNode(node) {\r\n      if (\r\n        (node = node[internalInstanceKey] || node[internalContainerInstanceKey])\r\n      ) {\r\n        var tag = node.tag;\r\n        if (\r\n          5 === tag ||\r\n          6 === tag ||\r\n          13 === tag ||\r\n          26 === tag ||\r\n          27 === tag ||\r\n          3 === tag\r\n        )\r\n          return node;\r\n      }\r\n      return null;\r\n    }\r\n    function getNodeFromInstance(inst) {\r\n      var tag = inst.tag;\r\n      if (5 === tag || 26 === tag || 27 === tag || 6 === tag)\r\n        return inst.stateNode;\r\n      throw Error(\"getNodeFromInstance: Invalid argument.\");\r\n    }\r\n    function getResourcesFromRoot(root) {\r\n      var resources = root[internalRootNodeResourcesKey];\r\n      resources ||\r\n        (resources = root[internalRootNodeResourcesKey] =\r\n          { hoistableStyles: new Map(), hoistableScripts: new Map() });\r\n      return resources;\r\n    }\r\n    function markNodeAsHoistable(node) {\r\n      node[internalHoistableMarker] = !0;\r\n    }\r\n    function registerTwoPhaseEvent(registrationName, dependencies) {\r\n      registerDirectEvent(registrationName, dependencies);\r\n      registerDirectEvent(registrationName + \"Capture\", dependencies);\r\n    }\r\n    function registerDirectEvent(registrationName, dependencies) {\r\n      registrationNameDependencies[registrationName] &&\r\n        console.error(\r\n          \"EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.\",\r\n          registrationName\r\n        );\r\n      registrationNameDependencies[registrationName] = dependencies;\r\n      var lowerCasedName = registrationName.toLowerCase();\r\n      possibleRegistrationNames[lowerCasedName] = registrationName;\r\n      \"onDoubleClick\" === registrationName &&\r\n        (possibleRegistrationNames.ondblclick = registrationName);\r\n      for (\r\n        registrationName = 0;\r\n        registrationName < dependencies.length;\r\n        registrationName++\r\n      )\r\n        allNativeEvents.add(dependencies[registrationName]);\r\n    }\r\n    function checkControlledValueProps(tagName, props) {\r\n      hasReadOnlyValue[props.type] ||\r\n        props.onChange ||\r\n        props.onInput ||\r\n        props.readOnly ||\r\n        props.disabled ||\r\n        null == props.value ||\r\n        (\"select\" === tagName\r\n          ? console.error(\r\n              \"You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set `onChange`.\"\r\n            )\r\n          : console.error(\r\n              \"You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.\"\r\n            ));\r\n      props.onChange ||\r\n        props.readOnly ||\r\n        props.disabled ||\r\n        null == props.checked ||\r\n        console.error(\r\n          \"You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.\"\r\n        );\r\n    }\r\n    function isAttributeNameSafe(attributeName) {\r\n      if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))\r\n        return !0;\r\n      if (hasOwnProperty.call(illegalAttributeNameCache, attributeName))\r\n        return !1;\r\n      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))\r\n        return (validatedAttributeNameCache[attributeName] = !0);\r\n      illegalAttributeNameCache[attributeName] = !0;\r\n      console.error(\"Invalid attribute name: `%s`\", attributeName);\r\n      return !1;\r\n    }\r\n    function getValueForAttributeOnCustomComponent(node, name, expected) {\r\n      if (isAttributeNameSafe(name)) {\r\n        if (!node.hasAttribute(name)) {\r\n          switch (typeof expected) {\r\n            case \"symbol\":\r\n            case \"object\":\r\n              return expected;\r\n            case \"function\":\r\n              return expected;\r\n            case \"boolean\":\r\n              if (!1 === expected) return expected;\r\n          }\r\n          return void 0 === expected ? void 0 : null;\r\n        }\r\n        node = node.getAttribute(name);\r\n        if (\"\" === node && !0 === expected) return !0;\r\n        checkAttributeStringCoercion(expected, name);\r\n        return node === \"\" + expected ? expected : node;\r\n      }\r\n    }\r\n    function setValueForAttribute(node, name, value) {\r\n      if (isAttributeNameSafe(name))\r\n        if (null === value) node.removeAttribute(name);\r\n        else {\r\n          switch (typeof value) {\r\n            case \"undefined\":\r\n            case \"function\":\r\n            case \"symbol\":\r\n              node.removeAttribute(name);\r\n              return;\r\n            case \"boolean\":\r\n              var prefix = name.toLowerCase().slice(0, 5);\r\n              if (\"data-\" !== prefix && \"aria-\" !== prefix) {\r\n                node.removeAttribute(name);\r\n                return;\r\n              }\r\n          }\r\n          checkAttributeStringCoercion(value, name);\r\n          node.setAttribute(name, \"\" + value);\r\n        }\r\n    }\r\n    function setValueForKnownAttribute(node, name, value) {\r\n      if (null === value) node.removeAttribute(name);\r\n      else {\r\n        switch (typeof value) {\r\n          case \"undefined\":\r\n          case \"function\":\r\n          case \"symbol\":\r\n          case \"boolean\":\r\n            node.removeAttribute(name);\r\n            return;\r\n        }\r\n        checkAttributeStringCoercion(value, name);\r\n        node.setAttribute(name, \"\" + value);\r\n      }\r\n    }\r\n    function setValueForNamespacedAttribute(node, namespace, name, value) {\r\n      if (null === value) node.removeAttribute(name);\r\n      else {\r\n        switch (typeof value) {\r\n          case \"undefined\":\r\n          case \"function\":\r\n          case \"symbol\":\r\n          case \"boolean\":\r\n            node.removeAttribute(name);\r\n            return;\r\n        }\r\n        checkAttributeStringCoercion(value, name);\r\n        node.setAttributeNS(namespace, name, \"\" + value);\r\n      }\r\n    }\r\n    function disabledLog() {}\r\n    function disableLogs() {\r\n      if (0 === disabledDepth) {\r\n        prevLog = console.log;\r\n        prevInfo = console.info;\r\n        prevWarn = console.warn;\r\n        prevError = console.error;\r\n        prevGroup = console.group;\r\n        prevGroupCollapsed = console.groupCollapsed;\r\n        prevGroupEnd = console.groupEnd;\r\n        var props = {\r\n          configurable: !0,\r\n          enumerable: !0,\r\n          value: disabledLog,\r\n          writable: !0\r\n        };\r\n        Object.defineProperties(console, {\r\n          info: props,\r\n          log: props,\r\n          warn: props,\r\n          error: props,\r\n          group: props,\r\n          groupCollapsed: props,\r\n          groupEnd: props\r\n        });\r\n      }\r\n      disabledDepth++;\r\n    }\r\n    function reenableLogs() {\r\n      disabledDepth--;\r\n      if (0 === disabledDepth) {\r\n        var props = { configurable: !0, enumerable: !0, writable: !0 };\r\n        Object.defineProperties(console, {\r\n          log: assign({}, props, { value: prevLog }),\r\n          info: assign({}, props, { value: prevInfo }),\r\n          warn: assign({}, props, { value: prevWarn }),\r\n          error: assign({}, props, { value: prevError }),\r\n          group: assign({}, props, { value: prevGroup }),\r\n          groupCollapsed: assign({}, props, { value: prevGroupCollapsed }),\r\n          groupEnd: assign({}, props, { value: prevGroupEnd })\r\n        });\r\n      }\r\n      0 > disabledDepth &&\r\n        console.error(\r\n          \"disabledDepth fell below zero. This is a bug in React. Please file an issue.\"\r\n        );\r\n    }\r\n    function describeBuiltInComponentFrame(name) {\r\n      if (void 0 === prefix)\r\n        try {\r\n          throw Error();\r\n        } catch (x) {\r\n          var match = x.stack.trim().match(/\\n( *(at )?)/);\r\n          prefix = (match && match[1]) || \"\";\r\n          suffix =\r\n            -1 < x.stack.indexOf(\"\\n    at\")\r\n              ? \" (<anonymous>)\"\r\n              : -1 < x.stack.indexOf(\"@\")\r\n                ? \"@unknown:0:0\"\r\n                : \"\";\r\n        }\r\n      return \"\\n\" + prefix + name + suffix;\r\n    }\r\n    function describeNativeComponentFrame(fn, construct) {\r\n      if (!fn || reentry) return \"\";\r\n      var frame = componentFrameCache.get(fn);\r\n      if (void 0 !== frame) return frame;\r\n      reentry = !0;\r\n      frame = Error.prepareStackTrace;\r\n      Error.prepareStackTrace = void 0;\r\n      var previousDispatcher = null;\r\n      previousDispatcher = ReactSharedInternals.H;\r\n      ReactSharedInternals.H = null;\r\n      disableLogs();\r\n      try {\r\n        var RunInRootFrame = {\r\n          DetermineComponentFrameRoot: function () {\r\n            try {\r\n              if (construct) {\r\n                var Fake = function () {\r\n                  throw Error();\r\n                };\r\n                Object.defineProperty(Fake.prototype, \"props\", {\r\n                  set: function () {\r\n                    throw Error();\r\n                  }\r\n                });\r\n                if (\"object\" === typeof Reflect && Reflect.construct) {\r\n                  try {\r\n                    Reflect.construct(Fake, []);\r\n                  } catch (x) {\r\n                    var control = x;\r\n                  }\r\n                  Reflect.construct(fn, [], Fake);\r\n                } else {\r\n                  try {\r\n                    Fake.call();\r\n                  } catch (x$0) {\r\n                    control = x$0;\r\n                  }\r\n                  fn.call(Fake.prototype);\r\n                }\r\n              } else {\r\n                try {\r\n                  throw Error();\r\n                } catch (x$1) {\r\n                  control = x$1;\r\n                }\r\n                (Fake = fn()) &&\r\n                  \"function\" === typeof Fake.catch &&\r\n                  Fake.catch(function () {});\r\n              }\r\n            } catch (sample) {\r\n              if (sample && control && \"string\" === typeof sample.stack)\r\n                return [sample.stack, control.stack];\r\n            }\r\n            return [null, null];\r\n          }\r\n        };\r\n        RunInRootFrame.DetermineComponentFrameRoot.displayName =\r\n          \"DetermineComponentFrameRoot\";\r\n        var namePropDescriptor = Object.getOwnPropertyDescriptor(\r\n          RunInRootFrame.DetermineComponentFrameRoot,\r\n          \"name\"\r\n        );\r\n        namePropDescriptor &&\r\n          namePropDescriptor.configurable &&\r\n          Object.defineProperty(\r\n            RunInRootFrame.DetermineComponentFrameRoot,\r\n            \"name\",\r\n            { value: \"DetermineComponentFrameRoot\" }\r\n          );\r\n        var _RunInRootFrame$Deter =\r\n            RunInRootFrame.DetermineComponentFrameRoot(),\r\n          sampleStack = _RunInRootFrame$Deter[0],\r\n          controlStack = _RunInRootFrame$Deter[1];\r\n        if (sampleStack && controlStack) {\r\n          var sampleLines = sampleStack.split(\"\\n\"),\r\n            controlLines = controlStack.split(\"\\n\");\r\n          for (\r\n            _RunInRootFrame$Deter = namePropDescriptor = 0;\r\n            namePropDescriptor < sampleLines.length &&\r\n            !sampleLines[namePropDescriptor].includes(\r\n              \"DetermineComponentFrameRoot\"\r\n            );\r\n\r\n          )\r\n            namePropDescriptor++;\r\n          for (\r\n            ;\r\n            _RunInRootFrame$Deter < controlLines.length &&\r\n            !controlLines[_RunInRootFrame$Deter].includes(\r\n              \"DetermineComponentFrameRoot\"\r\n            );\r\n\r\n          )\r\n            _RunInRootFrame$Deter++;\r\n          if (\r\n            namePropDescriptor === sampleLines.length ||\r\n            _RunInRootFrame$Deter === controlLines.length\r\n          )\r\n            for (\r\n              namePropDescriptor = sampleLines.length - 1,\r\n                _RunInRootFrame$Deter = controlLines.length - 1;\r\n              1 <= namePropDescriptor &&\r\n              0 <= _RunInRootFrame$Deter &&\r\n              sampleLines[namePropDescriptor] !==\r\n                controlLines[_RunInRootFrame$Deter];\r\n\r\n            )\r\n              _RunInRootFrame$Deter--;\r\n          for (\r\n            ;\r\n            1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter;\r\n            namePropDescriptor--, _RunInRootFrame$Deter--\r\n          )\r\n            if (\r\n              sampleLines[namePropDescriptor] !==\r\n              controlLines[_RunInRootFrame$Deter]\r\n            ) {\r\n              if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {\r\n                do\r\n                  if (\r\n                    (namePropDescriptor--,\r\n                    _RunInRootFrame$Deter--,\r\n                    0 > _RunInRootFrame$Deter ||\r\n                      sampleLines[namePropDescriptor] !==\r\n                        controlLines[_RunInRootFrame$Deter])\r\n                  ) {\r\n                    var _frame =\r\n                      \"\\n\" +\r\n                      sampleLines[namePropDescriptor].replace(\r\n                        \" at new \",\r\n                        \" at \"\r\n                      );\r\n                    fn.displayName &&\r\n                      _frame.includes(\"<anonymous>\") &&\r\n                      (_frame = _frame.replace(\"<anonymous>\", fn.displayName));\r\n                    \"function\" === typeof fn &&\r\n                      componentFrameCache.set(fn, _frame);\r\n                    return _frame;\r\n                  }\r\n                while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter);\r\n              }\r\n              break;\r\n            }\r\n        }\r\n      } finally {\r\n        (reentry = !1),\r\n          (ReactSharedInternals.H = previousDispatcher),\r\n          reenableLogs(),\r\n          (Error.prepareStackTrace = frame);\r\n      }\r\n      sampleLines = (sampleLines = fn ? fn.displayName || fn.name : \"\")\r\n        ? describeBuiltInComponentFrame(sampleLines)\r\n        : \"\";\r\n      \"function\" === typeof fn && componentFrameCache.set(fn, sampleLines);\r\n      return sampleLines;\r\n    }\r\n    function formatOwnerStack(error) {\r\n      var prevPrepareStackTrace = Error.prepareStackTrace;\r\n      Error.prepareStackTrace = void 0;\r\n      error = error.stack;\r\n      Error.prepareStackTrace = prevPrepareStackTrace;\r\n      error.startsWith(\"Error: react-stack-top-frame\\n\") &&\r\n        (error = error.slice(29));\r\n      prevPrepareStackTrace = error.indexOf(\"\\n\");\r\n      -1 !== prevPrepareStackTrace &&\r\n        (error = error.slice(prevPrepareStackTrace + 1));\r\n      prevPrepareStackTrace = error.indexOf(\"react-stack-bottom-frame\");\r\n      -1 !== prevPrepareStackTrace &&\r\n        (prevPrepareStackTrace = error.lastIndexOf(\r\n          \"\\n\",\r\n          prevPrepareStackTrace\r\n        ));\r\n      if (-1 !== prevPrepareStackTrace)\r\n        error = error.slice(0, prevPrepareStackTrace);\r\n      else return \"\";\r\n      return error;\r\n    }\r\n    function describeFiber(fiber) {\r\n      switch (fiber.tag) {\r\n        case 26:\r\n        case 27:\r\n        case 5:\r\n          return describeBuiltInComponentFrame(fiber.type);\r\n        case 16:\r\n          return describeBuiltInComponentFrame(\"Lazy\");\r\n        case 13:\r\n          return describeBuiltInComponentFrame(\"Suspense\");\r\n        case 19:\r\n          return describeBuiltInComponentFrame(\"SuspenseList\");\r\n        case 0:\r\n        case 15:\r\n          return describeNativeComponentFrame(fiber.type, !1);\r\n        case 11:\r\n          return describeNativeComponentFrame(fiber.type.render, !1);\r\n        case 1:\r\n          return describeNativeComponentFrame(fiber.type, !0);\r\n        case 31:\r\n          return describeBuiltInComponentFrame(\"Activity\");\r\n        default:\r\n          return \"\";\r\n      }\r\n    }\r\n    function getStackByFiberInDevAndProd(workInProgress) {\r\n      try {\r\n        var info = \"\";\r\n        do {\r\n          info += describeFiber(workInProgress);\r\n          var debugInfo = workInProgress._debugInfo;\r\n          if (debugInfo)\r\n            for (var i = debugInfo.length - 1; 0 <= i; i--) {\r\n              var entry = debugInfo[i];\r\n              if (\"string\" === typeof entry.name) {\r\n                var JSCompiler_temp_const = info,\r\n                  env = entry.env;\r\n                var JSCompiler_inline_result = describeBuiltInComponentFrame(\r\n                  entry.name + (env ? \" [\" + env + \"]\" : \"\")\r\n                );\r\n                info = JSCompiler_temp_const + JSCompiler_inline_result;\r\n              }\r\n            }\r\n          workInProgress = workInProgress.return;\r\n        } while (workInProgress);\r\n        return info;\r\n      } catch (x) {\r\n        return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\r\n      }\r\n    }\r\n    function describeFunctionComponentFrameWithoutLineNumber(fn) {\r\n      return (fn = fn ? fn.displayName || fn.name : \"\")\r\n        ? describeBuiltInComponentFrame(fn)\r\n        : \"\";\r\n    }\r\n    function getCurrentFiberOwnerNameInDevOrNull() {\r\n      if (null === current) return null;\r\n      var owner = current._debugOwner;\r\n      return null != owner ? getComponentNameFromOwner(owner) : null;\r\n    }\r\n    function getCurrentFiberStackInDev() {\r\n      if (null === current) return \"\";\r\n      var workInProgress = current;\r\n      try {\r\n        var info = \"\";\r\n        6 === workInProgress.tag && (workInProgress = workInProgress.return);\r\n        switch (workInProgress.tag) {\r\n          case 26:\r\n          case 27:\r\n          case 5:\r\n            info += describeBuiltInComponentFrame(workInProgress.type);\r\n            break;\r\n          case 13:\r\n            info += describeBuiltInComponentFrame(\"Suspense\");\r\n            break;\r\n          case 19:\r\n            info += describeBuiltInComponentFrame(\"SuspenseList\");\r\n            break;\r\n          case 31:\r\n            info += describeBuiltInComponentFrame(\"Activity\");\r\n            break;\r\n          case 30:\r\n          case 0:\r\n          case 15:\r\n          case 1:\r\n            workInProgress._debugOwner ||\r\n              \"\" !== info ||\r\n              (info += describeFunctionComponentFrameWithoutLineNumber(\r\n                workInProgress.type\r\n              ));\r\n            break;\r\n          case 11:\r\n            workInProgress._debugOwner ||\r\n              \"\" !== info ||\r\n              (info += describeFunctionComponentFrameWithoutLineNumber(\r\n                workInProgress.type.render\r\n              ));\r\n        }\r\n        for (; workInProgress; )\r\n          if (\"number\" === typeof workInProgress.tag) {\r\n            var fiber = workInProgress;\r\n            workInProgress = fiber._debugOwner;\r\n            var debugStack = fiber._debugStack;\r\n            workInProgress &&\r\n              debugStack &&\r\n              (\"string\" !== typeof debugStack &&\r\n                (fiber._debugStack = debugStack = formatOwnerStack(debugStack)),\r\n              \"\" !== debugStack && (info += \"\\n\" + debugStack));\r\n          } else if (null != workInProgress.debugStack) {\r\n            var ownerStack = workInProgress.debugStack;\r\n            (workInProgress = workInProgress.owner) &&\r\n              ownerStack &&\r\n              (info += \"\\n\" + formatOwnerStack(ownerStack));\r\n          } else break;\r\n        var JSCompiler_inline_result = info;\r\n      } catch (x) {\r\n        JSCompiler_inline_result =\r\n          \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\r\n      }\r\n      return JSCompiler_inline_result;\r\n    }\r\n    function runWithFiberInDEV(fiber, callback, arg0, arg1, arg2, arg3, arg4) {\r\n      var previousFiber = current;\r\n      setCurrentFiber(fiber);\r\n      try {\r\n        return null !== fiber && fiber._debugTask\r\n          ? fiber._debugTask.run(\r\n              callback.bind(null, arg0, arg1, arg2, arg3, arg4)\r\n            )\r\n          : callback(arg0, arg1, arg2, arg3, arg4);\r\n      } finally {\r\n        setCurrentFiber(previousFiber);\r\n      }\r\n      // removed by dead control flow\n{}\r\n    }\r\n    function setCurrentFiber(fiber) {\r\n      ReactSharedInternals.getCurrentStack =\r\n        null === fiber ? null : getCurrentFiberStackInDev;\r\n      isRendering = !1;\r\n      current = fiber;\r\n    }\r\n    function getToStringValue(value) {\r\n      switch (typeof value) {\r\n        case \"bigint\":\r\n        case \"boolean\":\r\n        case \"number\":\r\n        case \"string\":\r\n        case \"undefined\":\r\n          return value;\r\n        case \"object\":\r\n          return checkFormFieldValueStringCoercion(value), value;\r\n        default:\r\n          return \"\";\r\n      }\r\n    }\r\n    function isCheckable(elem) {\r\n      var type = elem.type;\r\n      return (\r\n        (elem = elem.nodeName) &&\r\n        \"input\" === elem.toLowerCase() &&\r\n        (\"checkbox\" === type || \"radio\" === type)\r\n      );\r\n    }\r\n    function trackValueOnNode(node) {\r\n      var valueField = isCheckable(node) ? \"checked\" : \"value\",\r\n        descriptor = Object.getOwnPropertyDescriptor(\r\n          node.constructor.prototype,\r\n          valueField\r\n        );\r\n      checkFormFieldValueStringCoercion(node[valueField]);\r\n      var currentValue = \"\" + node[valueField];\r\n      if (\r\n        !node.hasOwnProperty(valueField) &&\r\n        \"undefined\" !== typeof descriptor &&\r\n        \"function\" === typeof descriptor.get &&\r\n        \"function\" === typeof descriptor.set\r\n      ) {\r\n        var get = descriptor.get,\r\n          set = descriptor.set;\r\n        Object.defineProperty(node, valueField, {\r\n          configurable: !0,\r\n          get: function () {\r\n            return get.call(this);\r\n          },\r\n          set: function (value) {\r\n            checkFormFieldValueStringCoercion(value);\r\n            currentValue = \"\" + value;\r\n            set.call(this, value);\r\n          }\r\n        });\r\n        Object.defineProperty(node, valueField, {\r\n          enumerable: descriptor.enumerable\r\n        });\r\n        return {\r\n          getValue: function () {\r\n            return currentValue;\r\n          },\r\n          setValue: function (value) {\r\n            checkFormFieldValueStringCoercion(value);\r\n            currentValue = \"\" + value;\r\n          },\r\n          stopTracking: function () {\r\n            node._valueTracker = null;\r\n            delete node[valueField];\r\n          }\r\n        };\r\n      }\r\n    }\r\n    function track(node) {\r\n      node._valueTracker || (node._valueTracker = trackValueOnNode(node));\r\n    }\r\n    function updateValueIfChanged(node) {\r\n      if (!node) return !1;\r\n      var tracker = node._valueTracker;\r\n      if (!tracker) return !0;\r\n      var lastValue = tracker.getValue();\r\n      var value = \"\";\r\n      node &&\r\n        (value = isCheckable(node)\r\n          ? node.checked\r\n            ? \"true\"\r\n            : \"false\"\r\n          : node.value);\r\n      node = value;\r\n      return node !== lastValue ? (tracker.setValue(node), !0) : !1;\r\n    }\r\n    function getActiveElement(doc) {\r\n      doc = doc || (\"undefined\" !== typeof document ? document : void 0);\r\n      if (\"undefined\" === typeof doc) return null;\r\n      try {\r\n        return doc.activeElement || doc.body;\r\n      } catch (e) {\r\n        return doc.body;\r\n      }\r\n    }\r\n    function escapeSelectorAttributeValueInsideDoubleQuotes(value) {\r\n      return value.replace(\r\n        escapeSelectorAttributeValueInsideDoubleQuotesRegex,\r\n        function (ch) {\r\n          return \"\\\\\" + ch.charCodeAt(0).toString(16) + \" \";\r\n        }\r\n      );\r\n    }\r\n    function validateInputProps(element, props) {\r\n      void 0 === props.checked ||\r\n        void 0 === props.defaultChecked ||\r\n        didWarnCheckedDefaultChecked ||\r\n        (console.error(\r\n          \"%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components\",\r\n          getCurrentFiberOwnerNameInDevOrNull() || \"A component\",\r\n          props.type\r\n        ),\r\n        (didWarnCheckedDefaultChecked = !0));\r\n      void 0 === props.value ||\r\n        void 0 === props.defaultValue ||\r\n        didWarnValueDefaultValue$1 ||\r\n        (console.error(\r\n          \"%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components\",\r\n          getCurrentFiberOwnerNameInDevOrNull() || \"A component\",\r\n          props.type\r\n        ),\r\n        (didWarnValueDefaultValue$1 = !0));\r\n    }\r\n    function updateInput(\r\n      element,\r\n      value,\r\n      defaultValue,\r\n      lastDefaultValue,\r\n      checked,\r\n      defaultChecked,\r\n      type,\r\n      name\r\n    ) {\r\n      element.name = \"\";\r\n      null != type &&\r\n      \"function\" !== typeof type &&\r\n      \"symbol\" !== typeof type &&\r\n      \"boolean\" !== typeof type\r\n        ? (checkAttributeStringCoercion(type, \"type\"), (element.type = type))\r\n        : element.removeAttribute(\"type\");\r\n      if (null != value)\r\n        if (\"number\" === type) {\r\n          if ((0 === value && \"\" === element.value) || element.value != value)\r\n            element.value = \"\" + getToStringValue(value);\r\n        } else\r\n          element.value !== \"\" + getToStringValue(value) &&\r\n            (element.value = \"\" + getToStringValue(value));\r\n      else\r\n        (\"submit\" !== type && \"reset\" !== type) ||\r\n          element.removeAttribute(\"value\");\r\n      null != value\r\n        ? setDefaultValue(element, type, getToStringValue(value))\r\n        : null != defaultValue\r\n          ? setDefaultValue(element, type, getToStringValue(defaultValue))\r\n          : null != lastDefaultValue && element.removeAttribute(\"value\");\r\n      null == checked &&\r\n        null != defaultChecked &&\r\n        (element.defaultChecked = !!defaultChecked);\r\n      null != checked &&\r\n        (element.checked =\r\n          checked &&\r\n          \"function\" !== typeof checked &&\r\n          \"symbol\" !== typeof checked);\r\n      null != name &&\r\n      \"function\" !== typeof name &&\r\n      \"symbol\" !== typeof name &&\r\n      \"boolean\" !== typeof name\r\n        ? (checkAttributeStringCoercion(name, \"name\"),\r\n          (element.name = \"\" + getToStringValue(name)))\r\n        : element.removeAttribute(\"name\");\r\n    }\r\n    function initInput(\r\n      element,\r\n      value,\r\n      defaultValue,\r\n      checked,\r\n      defaultChecked,\r\n      type,\r\n      name,\r\n      isHydrating\r\n    ) {\r\n      null != type &&\r\n        \"function\" !== typeof type &&\r\n        \"symbol\" !== typeof type &&\r\n        \"boolean\" !== typeof type &&\r\n        (checkAttributeStringCoercion(type, \"type\"), (element.type = type));\r\n      if (null != value || null != defaultValue) {\r\n        if (\r\n          !(\r\n            (\"submit\" !== type && \"reset\" !== type) ||\r\n            (void 0 !== value && null !== value)\r\n          )\r\n        )\r\n          return;\r\n        defaultValue =\r\n          null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\r\n        value = null != value ? \"\" + getToStringValue(value) : defaultValue;\r\n        isHydrating || value === element.value || (element.value = value);\r\n        element.defaultValue = value;\r\n      }\r\n      checked = null != checked ? checked : defaultChecked;\r\n      checked =\r\n        \"function\" !== typeof checked &&\r\n        \"symbol\" !== typeof checked &&\r\n        !!checked;\r\n      element.checked = isHydrating ? element.checked : !!checked;\r\n      element.defaultChecked = !!checked;\r\n      null != name &&\r\n        \"function\" !== typeof name &&\r\n        \"symbol\" !== typeof name &&\r\n        \"boolean\" !== typeof name &&\r\n        (checkAttributeStringCoercion(name, \"name\"), (element.name = name));\r\n    }\r\n    function setDefaultValue(node, type, value) {\r\n      (\"number\" === type && getActiveElement(node.ownerDocument) === node) ||\r\n        node.defaultValue === \"\" + value ||\r\n        (node.defaultValue = \"\" + value);\r\n    }\r\n    function validateOptionProps(element, props) {\r\n      null == props.value &&\r\n        (\"object\" === typeof props.children && null !== props.children\r\n          ? React.Children.forEach(props.children, function (child) {\r\n              null == child ||\r\n                \"string\" === typeof child ||\r\n                \"number\" === typeof child ||\r\n                \"bigint\" === typeof child ||\r\n                didWarnInvalidChild ||\r\n                ((didWarnInvalidChild = !0),\r\n                console.error(\r\n                  \"Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.\"\r\n                ));\r\n            })\r\n          : null == props.dangerouslySetInnerHTML ||\r\n            didWarnInvalidInnerHTML ||\r\n            ((didWarnInvalidInnerHTML = !0),\r\n            console.error(\r\n              \"Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.\"\r\n            )));\r\n      null == props.selected ||\r\n        didWarnSelectedSetOnOption ||\r\n        (console.error(\r\n          \"Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.\"\r\n        ),\r\n        (didWarnSelectedSetOnOption = !0));\r\n    }\r\n    function getDeclarationErrorAddendum() {\r\n      var ownerName = getCurrentFiberOwnerNameInDevOrNull();\r\n      return ownerName\r\n        ? \"\\n\\nCheck the render method of `\" + ownerName + \"`.\"\r\n        : \"\";\r\n    }\r\n    function updateOptions(node, multiple, propValue, setDefaultSelected) {\r\n      node = node.options;\r\n      if (multiple) {\r\n        multiple = {};\r\n        for (var i = 0; i < propValue.length; i++)\r\n          multiple[\"$\" + propValue[i]] = !0;\r\n        for (propValue = 0; propValue < node.length; propValue++)\r\n          (i = multiple.hasOwnProperty(\"$\" + node[propValue].value)),\r\n            node[propValue].selected !== i && (node[propValue].selected = i),\r\n            i && setDefaultSelected && (node[propValue].defaultSelected = !0);\r\n      } else {\r\n        propValue = \"\" + getToStringValue(propValue);\r\n        multiple = null;\r\n        for (i = 0; i < node.length; i++) {\r\n          if (node[i].value === propValue) {\r\n            node[i].selected = !0;\r\n            setDefaultSelected && (node[i].defaultSelected = !0);\r\n            return;\r\n          }\r\n          null !== multiple || node[i].disabled || (multiple = node[i]);\r\n        }\r\n        null !== multiple && (multiple.selected = !0);\r\n      }\r\n    }\r\n    function validateSelectProps(element, props) {\r\n      for (element = 0; element < valuePropNames.length; element++) {\r\n        var propName = valuePropNames[element];\r\n        if (null != props[propName]) {\r\n          var propNameIsArray = isArrayImpl(props[propName]);\r\n          props.multiple && !propNameIsArray\r\n            ? console.error(\r\n                \"The `%s` prop supplied to <select> must be an array if `multiple` is true.%s\",\r\n                propName,\r\n                getDeclarationErrorAddendum()\r\n              )\r\n            : !props.multiple &&\r\n              propNameIsArray &&\r\n              console.error(\r\n                \"The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s\",\r\n                propName,\r\n                getDeclarationErrorAddendum()\r\n              );\r\n        }\r\n      }\r\n      void 0 === props.value ||\r\n        void 0 === props.defaultValue ||\r\n        didWarnValueDefaultValue ||\r\n        (console.error(\r\n          \"Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://react.dev/link/controlled-components\"\r\n        ),\r\n        (didWarnValueDefaultValue = !0));\r\n    }\r\n    function validateTextareaProps(element, props) {\r\n      void 0 === props.value ||\r\n        void 0 === props.defaultValue ||\r\n        didWarnValDefaultVal ||\r\n        (console.error(\r\n          \"%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://react.dev/link/controlled-components\",\r\n          getCurrentFiberOwnerNameInDevOrNull() || \"A component\"\r\n        ),\r\n        (didWarnValDefaultVal = !0));\r\n      null != props.children &&\r\n        null == props.value &&\r\n        console.error(\r\n          \"Use the `defaultValue` or `value` props instead of setting children on <textarea>.\"\r\n        );\r\n    }\r\n    function updateTextarea(element, value, defaultValue) {\r\n      if (\r\n        null != value &&\r\n        ((value = \"\" + getToStringValue(value)),\r\n        value !== element.value && (element.value = value),\r\n        null == defaultValue)\r\n      ) {\r\n        element.defaultValue !== value && (element.defaultValue = value);\r\n        return;\r\n      }\r\n      element.defaultValue =\r\n        null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\r\n    }\r\n    function initTextarea(element, value, defaultValue, children) {\r\n      if (null == value) {\r\n        if (null != children) {\r\n          if (null != defaultValue)\r\n            throw Error(\r\n              \"If you supply `defaultValue` on a <textarea>, do not pass children.\"\r\n            );\r\n          if (isArrayImpl(children)) {\r\n            if (1 < children.length)\r\n              throw Error(\"<textarea> can only have at most one child.\");\r\n            children = children[0];\r\n          }\r\n          defaultValue = children;\r\n        }\r\n        null == defaultValue && (defaultValue = \"\");\r\n        value = defaultValue;\r\n      }\r\n      defaultValue = getToStringValue(value);\r\n      element.defaultValue = defaultValue;\r\n      children = element.textContent;\r\n      children === defaultValue &&\r\n        \"\" !== children &&\r\n        null !== children &&\r\n        (element.value = children);\r\n    }\r\n    function findNotableNode(node, indent) {\r\n      return void 0 === node.serverProps &&\r\n        0 === node.serverTail.length &&\r\n        1 === node.children.length &&\r\n        3 < node.distanceFromLeaf &&\r\n        node.distanceFromLeaf > 15 - indent\r\n        ? findNotableNode(node.children[0], indent)\r\n        : node;\r\n    }\r\n    function indentation(indent) {\r\n      return \"  \" + \"  \".repeat(indent);\r\n    }\r\n    function added(indent) {\r\n      return \"+ \" + \"  \".repeat(indent);\r\n    }\r\n    function removed(indent) {\r\n      return \"- \" + \"  \".repeat(indent);\r\n    }\r\n    function describeFiberType(fiber) {\r\n      switch (fiber.tag) {\r\n        case 26:\r\n        case 27:\r\n        case 5:\r\n          return fiber.type;\r\n        case 16:\r\n          return \"Lazy\";\r\n        case 13:\r\n          return \"Suspense\";\r\n        case 19:\r\n          return \"SuspenseList\";\r\n        case 0:\r\n        case 15:\r\n          return (fiber = fiber.type), fiber.displayName || fiber.name || null;\r\n        case 11:\r\n          return (\r\n            (fiber = fiber.type.render), fiber.displayName || fiber.name || null\r\n          );\r\n        case 1:\r\n          return (fiber = fiber.type), fiber.displayName || fiber.name || null;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n    function describeTextNode(content, maxLength) {\r\n      return needsEscaping.test(content)\r\n        ? ((content = JSON.stringify(content)),\r\n          content.length > maxLength - 2\r\n            ? 8 > maxLength\r\n              ? '{\"...\"}'\r\n              : \"{\" + content.slice(0, maxLength - 7) + '...\"}'\r\n            : \"{\" + content + \"}\")\r\n        : content.length > maxLength\r\n          ? 5 > maxLength\r\n            ? '{\"...\"}'\r\n            : content.slice(0, maxLength - 3) + \"...\"\r\n          : content;\r\n    }\r\n    function describeTextDiff(clientText, serverProps, indent) {\r\n      var maxLength = 120 - 2 * indent;\r\n      if (null === serverProps)\r\n        return added(indent) + describeTextNode(clientText, maxLength) + \"\\n\";\r\n      if (\"string\" === typeof serverProps) {\r\n        for (\r\n          var firstDiff = 0;\r\n          firstDiff < serverProps.length &&\r\n          firstDiff < clientText.length &&\r\n          serverProps.charCodeAt(firstDiff) ===\r\n            clientText.charCodeAt(firstDiff);\r\n          firstDiff++\r\n        );\r\n        firstDiff > maxLength - 8 &&\r\n          10 < firstDiff &&\r\n          ((clientText = \"...\" + clientText.slice(firstDiff - 8)),\r\n          (serverProps = \"...\" + serverProps.slice(firstDiff - 8)));\r\n        return (\r\n          added(indent) +\r\n          describeTextNode(clientText, maxLength) +\r\n          \"\\n\" +\r\n          removed(indent) +\r\n          describeTextNode(serverProps, maxLength) +\r\n          \"\\n\"\r\n        );\r\n      }\r\n      return (\r\n        indentation(indent) + describeTextNode(clientText, maxLength) + \"\\n\"\r\n      );\r\n    }\r\n    function objectName(object) {\r\n      return Object.prototype.toString\r\n        .call(object)\r\n        .replace(/^\\[object (.*)\\]$/, function (m, p0) {\r\n          return p0;\r\n        });\r\n    }\r\n    function describeValue(value, maxLength) {\r\n      switch (typeof value) {\r\n        case \"string\":\r\n          return (\r\n            (value = JSON.stringify(value)),\r\n            value.length > maxLength\r\n              ? 5 > maxLength\r\n                ? '\"...\"'\r\n                : value.slice(0, maxLength - 4) + '...\"'\r\n              : value\r\n          );\r\n        case \"object\":\r\n          if (null === value) return \"null\";\r\n          if (isArrayImpl(value)) return \"[...]\";\r\n          if (value.$$typeof === REACT_ELEMENT_TYPE)\r\n            return (maxLength = getComponentNameFromType(value.type))\r\n              ? \"<\" + maxLength + \">\"\r\n              : \"<...>\";\r\n          var name = objectName(value);\r\n          if (\"Object\" === name) {\r\n            name = \"\";\r\n            maxLength -= 2;\r\n            for (var propName in value)\r\n              if (value.hasOwnProperty(propName)) {\r\n                var jsonPropName = JSON.stringify(propName);\r\n                jsonPropName !== '\"' + propName + '\"' &&\r\n                  (propName = jsonPropName);\r\n                maxLength -= propName.length - 2;\r\n                jsonPropName = describeValue(\r\n                  value[propName],\r\n                  15 > maxLength ? maxLength : 15\r\n                );\r\n                maxLength -= jsonPropName.length;\r\n                if (0 > maxLength) {\r\n                  name += \"\" === name ? \"...\" : \", ...\";\r\n                  break;\r\n                }\r\n                name +=\r\n                  (\"\" === name ? \"\" : \",\") + propName + \":\" + jsonPropName;\r\n              }\r\n            return \"{\" + name + \"}\";\r\n          }\r\n          return name;\r\n        case \"function\":\r\n          return (maxLength = value.displayName || value.name)\r\n            ? \"function \" + maxLength\r\n            : \"function\";\r\n        default:\r\n          return String(value);\r\n      }\r\n    }\r\n    function describePropValue(value, maxLength) {\r\n      return \"string\" !== typeof value || needsEscaping.test(value)\r\n        ? \"{\" + describeValue(value, maxLength - 2) + \"}\"\r\n        : value.length > maxLength - 2\r\n          ? 5 > maxLength\r\n            ? '\"...\"'\r\n            : '\"' + value.slice(0, maxLength - 5) + '...\"'\r\n          : '\"' + value + '\"';\r\n    }\r\n    function describeExpandedElement(type, props, rowPrefix) {\r\n      var remainingRowLength = 120 - rowPrefix.length - type.length,\r\n        properties = [],\r\n        propName;\r\n      for (propName in props)\r\n        if (props.hasOwnProperty(propName) && \"children\" !== propName) {\r\n          var propValue = describePropValue(\r\n            props[propName],\r\n            120 - rowPrefix.length - propName.length - 1\r\n          );\r\n          remainingRowLength -= propName.length + propValue.length + 2;\r\n          properties.push(propName + \"=\" + propValue);\r\n        }\r\n      return 0 === properties.length\r\n        ? rowPrefix + \"<\" + type + \">\\n\"\r\n        : 0 < remainingRowLength\r\n          ? rowPrefix + \"<\" + type + \" \" + properties.join(\" \") + \">\\n\"\r\n          : rowPrefix +\r\n            \"<\" +\r\n            type +\r\n            \"\\n\" +\r\n            rowPrefix +\r\n            \"  \" +\r\n            properties.join(\"\\n\" + rowPrefix + \"  \") +\r\n            \"\\n\" +\r\n            rowPrefix +\r\n            \">\\n\";\r\n    }\r\n    function describePropertiesDiff(clientObject, serverObject, indent) {\r\n      var properties = \"\",\r\n        remainingServerProperties = assign({}, serverObject),\r\n        propName;\r\n      for (propName in clientObject)\r\n        if (clientObject.hasOwnProperty(propName)) {\r\n          delete remainingServerProperties[propName];\r\n          var maxLength = 120 - 2 * indent - propName.length - 2,\r\n            clientPropValue = describeValue(clientObject[propName], maxLength);\r\n          serverObject.hasOwnProperty(propName)\r\n            ? ((maxLength = describeValue(serverObject[propName], maxLength)),\r\n              (properties +=\r\n                added(indent) + propName + \": \" + clientPropValue + \"\\n\"),\r\n              (properties +=\r\n                removed(indent) + propName + \": \" + maxLength + \"\\n\"))\r\n            : (properties +=\r\n                added(indent) + propName + \": \" + clientPropValue + \"\\n\");\r\n        }\r\n      for (var _propName in remainingServerProperties)\r\n        remainingServerProperties.hasOwnProperty(_propName) &&\r\n          ((clientObject = describeValue(\r\n            remainingServerProperties[_propName],\r\n            120 - 2 * indent - _propName.length - 2\r\n          )),\r\n          (properties +=\r\n            removed(indent) + _propName + \": \" + clientObject + \"\\n\"));\r\n      return properties;\r\n    }\r\n    function describeElementDiff(type, clientProps, serverProps, indent) {\r\n      var content = \"\",\r\n        serverPropNames = new Map();\r\n      for (propName$jscomp$0 in serverProps)\r\n        serverProps.hasOwnProperty(propName$jscomp$0) &&\r\n          serverPropNames.set(\r\n            propName$jscomp$0.toLowerCase(),\r\n            propName$jscomp$0\r\n          );\r\n      if (1 === serverPropNames.size && serverPropNames.has(\"children\"))\r\n        content += describeExpandedElement(\r\n          type,\r\n          clientProps,\r\n          indentation(indent)\r\n        );\r\n      else {\r\n        for (var _propName2 in clientProps)\r\n          if (\r\n            clientProps.hasOwnProperty(_propName2) &&\r\n            \"children\" !== _propName2\r\n          ) {\r\n            var maxLength$jscomp$0 =\r\n                120 - 2 * (indent + 1) - _propName2.length - 1,\r\n              serverPropName = serverPropNames.get(_propName2.toLowerCase());\r\n            if (void 0 !== serverPropName) {\r\n              serverPropNames.delete(_propName2.toLowerCase());\r\n              var propName$jscomp$0 = clientProps[_propName2];\r\n              serverPropName = serverProps[serverPropName];\r\n              var clientPropValue = describePropValue(\r\n                propName$jscomp$0,\r\n                maxLength$jscomp$0\r\n              );\r\n              maxLength$jscomp$0 = describePropValue(\r\n                serverPropName,\r\n                maxLength$jscomp$0\r\n              );\r\n              \"object\" === typeof propName$jscomp$0 &&\r\n              null !== propName$jscomp$0 &&\r\n              \"object\" === typeof serverPropName &&\r\n              null !== serverPropName &&\r\n              \"Object\" === objectName(propName$jscomp$0) &&\r\n              \"Object\" === objectName(serverPropName) &&\r\n              (2 < Object.keys(propName$jscomp$0).length ||\r\n                2 < Object.keys(serverPropName).length ||\r\n                -1 < clientPropValue.indexOf(\"...\") ||\r\n                -1 < maxLength$jscomp$0.indexOf(\"...\"))\r\n                ? (content +=\r\n                    indentation(indent + 1) +\r\n                    _propName2 +\r\n                    \"={{\\n\" +\r\n                    describePropertiesDiff(\r\n                      propName$jscomp$0,\r\n                      serverPropName,\r\n                      indent + 2\r\n                    ) +\r\n                    indentation(indent + 1) +\r\n                    \"}}\\n\")\r\n                : ((content +=\r\n                    added(indent + 1) +\r\n                    _propName2 +\r\n                    \"=\" +\r\n                    clientPropValue +\r\n                    \"\\n\"),\r\n                  (content +=\r\n                    removed(indent + 1) +\r\n                    _propName2 +\r\n                    \"=\" +\r\n                    maxLength$jscomp$0 +\r\n                    \"\\n\"));\r\n            } else\r\n              content +=\r\n                indentation(indent + 1) +\r\n                _propName2 +\r\n                \"=\" +\r\n                describePropValue(clientProps[_propName2], maxLength$jscomp$0) +\r\n                \"\\n\";\r\n          }\r\n        serverPropNames.forEach(function (propName) {\r\n          if (\"children\" !== propName) {\r\n            var maxLength = 120 - 2 * (indent + 1) - propName.length - 1;\r\n            content +=\r\n              removed(indent + 1) +\r\n              propName +\r\n              \"=\" +\r\n              describePropValue(serverProps[propName], maxLength) +\r\n              \"\\n\";\r\n          }\r\n        });\r\n        content =\r\n          \"\" === content\r\n            ? indentation(indent) + \"<\" + type + \">\\n\"\r\n            : indentation(indent) +\r\n              \"<\" +\r\n              type +\r\n              \"\\n\" +\r\n              content +\r\n              indentation(indent) +\r\n              \">\\n\";\r\n      }\r\n      type = serverProps.children;\r\n      clientProps = clientProps.children;\r\n      if (\r\n        \"string\" === typeof type ||\r\n        \"number\" === typeof type ||\r\n        \"bigint\" === typeof type\r\n      ) {\r\n        serverPropNames = \"\";\r\n        if (\r\n          \"string\" === typeof clientProps ||\r\n          \"number\" === typeof clientProps ||\r\n          \"bigint\" === typeof clientProps\r\n        )\r\n          serverPropNames = \"\" + clientProps;\r\n        content += describeTextDiff(serverPropNames, \"\" + type, indent + 1);\r\n      } else if (\r\n        \"string\" === typeof clientProps ||\r\n        \"number\" === typeof clientProps ||\r\n        \"bigint\" === typeof clientProps\r\n      )\r\n        content =\r\n          null == type\r\n            ? content + describeTextDiff(\"\" + clientProps, null, indent + 1)\r\n            : content + describeTextDiff(\"\" + clientProps, void 0, indent + 1);\r\n      return content;\r\n    }\r\n    function describeSiblingFiber(fiber, indent) {\r\n      var type = describeFiberType(fiber);\r\n      if (null === type) {\r\n        type = \"\";\r\n        for (fiber = fiber.child; fiber; )\r\n          (type += describeSiblingFiber(fiber, indent)),\r\n            (fiber = fiber.sibling);\r\n        return type;\r\n      }\r\n      return indentation(indent) + \"<\" + type + \">\\n\";\r\n    }\r\n    function describeNode(node, indent) {\r\n      var skipToNode = findNotableNode(node, indent);\r\n      if (\r\n        skipToNode !== node &&\r\n        (1 !== node.children.length || node.children[0] !== skipToNode)\r\n      )\r\n        return (\r\n          indentation(indent) + \"...\\n\" + describeNode(skipToNode, indent + 1)\r\n        );\r\n      skipToNode = \"\";\r\n      var debugInfo = node.fiber._debugInfo;\r\n      if (debugInfo)\r\n        for (var i = 0; i < debugInfo.length; i++) {\r\n          var serverComponentName = debugInfo[i].name;\r\n          \"string\" === typeof serverComponentName &&\r\n            ((skipToNode +=\r\n              indentation(indent) + \"<\" + serverComponentName + \">\\n\"),\r\n            indent++);\r\n        }\r\n      debugInfo = \"\";\r\n      i = node.fiber.pendingProps;\r\n      if (6 === node.fiber.tag)\r\n        (debugInfo = describeTextDiff(i, node.serverProps, indent)), indent++;\r\n      else if (\r\n        ((serverComponentName = describeFiberType(node.fiber)),\r\n        null !== serverComponentName)\r\n      )\r\n        if (void 0 === node.serverProps) {\r\n          debugInfo = indent;\r\n          var maxLength = 120 - 2 * debugInfo - serverComponentName.length - 2,\r\n            content = \"\";\r\n          for (propName in i)\r\n            if (i.hasOwnProperty(propName) && \"children\" !== propName) {\r\n              var propValue = describePropValue(i[propName], 15);\r\n              maxLength -= propName.length + propValue.length + 2;\r\n              if (0 > maxLength) {\r\n                content += \" ...\";\r\n                break;\r\n              }\r\n              content += \" \" + propName + \"=\" + propValue;\r\n            }\r\n          debugInfo =\r\n            indentation(debugInfo) +\r\n            \"<\" +\r\n            serverComponentName +\r\n            content +\r\n            \">\\n\";\r\n          indent++;\r\n        } else\r\n          null === node.serverProps\r\n            ? ((debugInfo = describeExpandedElement(\r\n                serverComponentName,\r\n                i,\r\n                added(indent)\r\n              )),\r\n              indent++)\r\n            : \"string\" === typeof node.serverProps\r\n              ? console.error(\r\n                  \"Should not have matched a non HostText fiber to a Text node. This is a bug in React.\"\r\n                )\r\n              : ((debugInfo = describeElementDiff(\r\n                  serverComponentName,\r\n                  i,\r\n                  node.serverProps,\r\n                  indent\r\n                )),\r\n                indent++);\r\n      var propName = \"\";\r\n      i = node.fiber.child;\r\n      for (\r\n        serverComponentName = 0;\r\n        i && serverComponentName < node.children.length;\r\n\r\n      )\r\n        (maxLength = node.children[serverComponentName]),\r\n          maxLength.fiber === i\r\n            ? ((propName += describeNode(maxLength, indent)),\r\n              serverComponentName++)\r\n            : (propName += describeSiblingFiber(i, indent)),\r\n          (i = i.sibling);\r\n      i &&\r\n        0 < node.children.length &&\r\n        (propName += indentation(indent) + \"...\\n\");\r\n      i = node.serverTail;\r\n      null === node.serverProps && indent--;\r\n      for (node = 0; node < i.length; node++)\r\n        (serverComponentName = i[node]),\r\n          (propName =\r\n            \"string\" === typeof serverComponentName\r\n              ? propName +\r\n                (removed(indent) +\r\n                  describeTextNode(serverComponentName, 120 - 2 * indent) +\r\n                  \"\\n\")\r\n              : propName +\r\n                describeExpandedElement(\r\n                  serverComponentName.type,\r\n                  serverComponentName.props,\r\n                  removed(indent)\r\n                ));\r\n      return skipToNode + debugInfo + propName;\r\n    }\r\n    function describeDiff(rootNode) {\r\n      try {\r\n        return \"\\n\\n\" + describeNode(rootNode, 0);\r\n      } catch (x) {\r\n        return \"\";\r\n      }\r\n    }\r\n    function describeAncestors(ancestor, child, props) {\r\n      for (var fiber = child, node = null, distanceFromLeaf = 0; fiber; )\r\n        fiber === ancestor && (distanceFromLeaf = 0),\r\n          (node = {\r\n            fiber: fiber,\r\n            children: null !== node ? [node] : [],\r\n            serverProps:\r\n              fiber === child ? props : fiber === ancestor ? null : void 0,\r\n            serverTail: [],\r\n            distanceFromLeaf: distanceFromLeaf\r\n          }),\r\n          distanceFromLeaf++,\r\n          (fiber = fiber.return);\r\n      return null !== node ? describeDiff(node).replaceAll(/^[+-]/gm, \">\") : \"\";\r\n    }\r\n    function updatedAncestorInfoDev(oldInfo, tag) {\r\n      var ancestorInfo = assign({}, oldInfo || emptyAncestorInfoDev),\r\n        info = { tag: tag };\r\n      -1 !== inScopeTags.indexOf(tag) &&\r\n        ((ancestorInfo.aTagInScope = null),\r\n        (ancestorInfo.buttonTagInScope = null),\r\n        (ancestorInfo.nobrTagInScope = null));\r\n      -1 !== buttonScopeTags.indexOf(tag) &&\r\n        (ancestorInfo.pTagInButtonScope = null);\r\n      -1 !== specialTags.indexOf(tag) &&\r\n        \"address\" !== tag &&\r\n        \"div\" !== tag &&\r\n        \"p\" !== tag &&\r\n        ((ancestorInfo.listItemTagAutoclosing = null),\r\n        (ancestorInfo.dlItemTagAutoclosing = null));\r\n      ancestorInfo.current = info;\r\n      \"form\" === tag && (ancestorInfo.formTag = info);\r\n      \"a\" === tag && (ancestorInfo.aTagInScope = info);\r\n      \"button\" === tag && (ancestorInfo.buttonTagInScope = info);\r\n      \"nobr\" === tag && (ancestorInfo.nobrTagInScope = info);\r\n      \"p\" === tag && (ancestorInfo.pTagInButtonScope = info);\r\n      \"li\" === tag && (ancestorInfo.listItemTagAutoclosing = info);\r\n      if (\"dd\" === tag || \"dt\" === tag)\r\n        ancestorInfo.dlItemTagAutoclosing = info;\r\n      \"#document\" === tag || \"html\" === tag\r\n        ? (ancestorInfo.containerTagInScope = null)\r\n        : ancestorInfo.containerTagInScope ||\r\n          (ancestorInfo.containerTagInScope = info);\r\n      null !== oldInfo ||\r\n      (\"#document\" !== tag && \"html\" !== tag && \"body\" !== tag)\r\n        ? !0 === ancestorInfo.implicitRootScope &&\r\n          (ancestorInfo.implicitRootScope = !1)\r\n        : (ancestorInfo.implicitRootScope = !0);\r\n      return ancestorInfo;\r\n    }\r\n    function isTagValidWithParent(tag, parentTag, implicitRootScope) {\r\n      switch (parentTag) {\r\n        case \"select\":\r\n          return (\r\n            \"hr\" === tag ||\r\n            \"option\" === tag ||\r\n            \"optgroup\" === tag ||\r\n            \"script\" === tag ||\r\n            \"template\" === tag ||\r\n            \"#text\" === tag\r\n          );\r\n        case \"optgroup\":\r\n          return \"option\" === tag || \"#text\" === tag;\r\n        case \"option\":\r\n          return \"#text\" === tag;\r\n        case \"tr\":\r\n          return (\r\n            \"th\" === tag ||\r\n            \"td\" === tag ||\r\n            \"style\" === tag ||\r\n            \"script\" === tag ||\r\n            \"template\" === tag\r\n          );\r\n        case \"tbody\":\r\n        case \"thead\":\r\n        case \"tfoot\":\r\n          return (\r\n            \"tr\" === tag ||\r\n            \"style\" === tag ||\r\n            \"script\" === tag ||\r\n            \"template\" === tag\r\n          );\r\n        case \"colgroup\":\r\n          return \"col\" === tag || \"template\" === tag;\r\n        case \"table\":\r\n          return (\r\n            \"caption\" === tag ||\r\n            \"colgroup\" === tag ||\r\n            \"tbody\" === tag ||\r\n            \"tfoot\" === tag ||\r\n            \"thead\" === tag ||\r\n            \"style\" === tag ||\r\n            \"script\" === tag ||\r\n            \"template\" === tag\r\n          );\r\n        case \"head\":\r\n          return (\r\n            \"base\" === tag ||\r\n            \"basefont\" === tag ||\r\n            \"bgsound\" === tag ||\r\n            \"link\" === tag ||\r\n            \"meta\" === tag ||\r\n            \"title\" === tag ||\r\n            \"noscript\" === tag ||\r\n            \"noframes\" === tag ||\r\n            \"style\" === tag ||\r\n            \"script\" === tag ||\r\n            \"template\" === tag\r\n          );\r\n        case \"html\":\r\n          if (implicitRootScope) break;\r\n          return \"head\" === tag || \"body\" === tag || \"frameset\" === tag;\r\n        case \"frameset\":\r\n          return \"frame\" === tag;\r\n        case \"#document\":\r\n          if (!implicitRootScope) return \"html\" === tag;\r\n      }\r\n      switch (tag) {\r\n        case \"h1\":\r\n        case \"h2\":\r\n        case \"h3\":\r\n        case \"h4\":\r\n        case \"h5\":\r\n        case \"h6\":\r\n          return (\r\n            \"h1\" !== parentTag &&\r\n            \"h2\" !== parentTag &&\r\n            \"h3\" !== parentTag &&\r\n            \"h4\" !== parentTag &&\r\n            \"h5\" !== parentTag &&\r\n            \"h6\" !== parentTag\r\n          );\r\n        case \"rp\":\r\n        case \"rt\":\r\n          return -1 === impliedEndTags.indexOf(parentTag);\r\n        case \"caption\":\r\n        case \"col\":\r\n        case \"colgroup\":\r\n        case \"frameset\":\r\n        case \"frame\":\r\n        case \"tbody\":\r\n        case \"td\":\r\n        case \"tfoot\":\r\n        case \"th\":\r\n        case \"thead\":\r\n        case \"tr\":\r\n          return null == parentTag;\r\n        case \"head\":\r\n          return implicitRootScope || null === parentTag;\r\n        case \"html\":\r\n          return (\r\n            (implicitRootScope && \"#document\" === parentTag) ||\r\n            null === parentTag\r\n          );\r\n        case \"body\":\r\n          return (\r\n            (implicitRootScope &&\r\n              (\"#document\" === parentTag || \"html\" === parentTag)) ||\r\n            null === parentTag\r\n          );\r\n      }\r\n      return !0;\r\n    }\r\n    function findInvalidAncestorForTag(tag, ancestorInfo) {\r\n      switch (tag) {\r\n        case \"address\":\r\n        case \"article\":\r\n        case \"aside\":\r\n        case \"blockquote\":\r\n        case \"center\":\r\n        case \"details\":\r\n        case \"dialog\":\r\n        case \"dir\":\r\n        case \"div\":\r\n        case \"dl\":\r\n        case \"fieldset\":\r\n        case \"figcaption\":\r\n        case \"figure\":\r\n        case \"footer\":\r\n        case \"header\":\r\n        case \"hgroup\":\r\n        case \"main\":\r\n        case \"menu\":\r\n        case \"nav\":\r\n        case \"ol\":\r\n        case \"p\":\r\n        case \"section\":\r\n        case \"summary\":\r\n        case \"ul\":\r\n        case \"pre\":\r\n        case \"listing\":\r\n        case \"table\":\r\n        case \"hr\":\r\n        case \"xmp\":\r\n        case \"h1\":\r\n        case \"h2\":\r\n        case \"h3\":\r\n        case \"h4\":\r\n        case \"h5\":\r\n        case \"h6\":\r\n          return ancestorInfo.pTagInButtonScope;\r\n        case \"form\":\r\n          return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\r\n        case \"li\":\r\n          return ancestorInfo.listItemTagAutoclosing;\r\n        case \"dd\":\r\n        case \"dt\":\r\n          return ancestorInfo.dlItemTagAutoclosing;\r\n        case \"button\":\r\n          return ancestorInfo.buttonTagInScope;\r\n        case \"a\":\r\n          return ancestorInfo.aTagInScope;\r\n        case \"nobr\":\r\n          return ancestorInfo.nobrTagInScope;\r\n      }\r\n      return null;\r\n    }\r\n    function findAncestor(parent, tagName) {\r\n      for (; parent; ) {\r\n        switch (parent.tag) {\r\n          case 5:\r\n          case 26:\r\n          case 27:\r\n            if (parent.type === tagName) return parent;\r\n        }\r\n        parent = parent.return;\r\n      }\r\n      return null;\r\n    }\r\n    function validateDOMNesting(childTag, ancestorInfo) {\r\n      ancestorInfo = ancestorInfo || emptyAncestorInfoDev;\r\n      var parentInfo = ancestorInfo.current;\r\n      ancestorInfo = (parentInfo = isTagValidWithParent(\r\n        childTag,\r\n        parentInfo && parentInfo.tag,\r\n        ancestorInfo.implicitRootScope\r\n      )\r\n        ? null\r\n        : parentInfo)\r\n        ? null\r\n        : findInvalidAncestorForTag(childTag, ancestorInfo);\r\n      ancestorInfo = parentInfo || ancestorInfo;\r\n      if (!ancestorInfo) return !0;\r\n      var ancestorTag = ancestorInfo.tag;\r\n      ancestorInfo = String(!!parentInfo) + \"|\" + childTag + \"|\" + ancestorTag;\r\n      if (didWarn[ancestorInfo]) return !1;\r\n      didWarn[ancestorInfo] = !0;\r\n      var ancestor = (ancestorInfo = current)\r\n          ? findAncestor(ancestorInfo.return, ancestorTag)\r\n          : null,\r\n        ancestorDescription =\r\n          null !== ancestorInfo && null !== ancestor\r\n            ? describeAncestors(ancestor, ancestorInfo, null)\r\n            : \"\",\r\n        tagDisplayName = \"<\" + childTag + \">\";\r\n      parentInfo\r\n        ? ((parentInfo = \"\"),\r\n          \"table\" === ancestorTag &&\r\n            \"tr\" === childTag &&\r\n            (parentInfo +=\r\n              \" Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.\"),\r\n          console.error(\r\n            \"In HTML, %s cannot be a child of <%s>.%s\\nThis will cause a hydration error.%s\",\r\n            tagDisplayName,\r\n            ancestorTag,\r\n            parentInfo,\r\n            ancestorDescription\r\n          ))\r\n        : console.error(\r\n            \"In HTML, %s cannot be a descendant of <%s>.\\nThis will cause a hydration error.%s\",\r\n            tagDisplayName,\r\n            ancestorTag,\r\n            ancestorDescription\r\n          );\r\n      ancestorInfo &&\r\n        ((childTag = ancestorInfo.return),\r\n        null === ancestor ||\r\n          null === childTag ||\r\n          (ancestor === childTag &&\r\n            childTag._debugOwner === ancestorInfo._debugOwner) ||\r\n          runWithFiberInDEV(ancestor, function () {\r\n            console.error(\r\n              \"<%s> cannot contain a nested %s.\\nSee this log for the ancestor stack trace.\",\r\n              ancestorTag,\r\n              tagDisplayName\r\n            );\r\n          }));\r\n      return !1;\r\n    }\r\n    function validateTextNesting(childText, parentTag, implicitRootScope) {\r\n      if (implicitRootScope || isTagValidWithParent(\"#text\", parentTag, !1))\r\n        return !0;\r\n      implicitRootScope = \"#text|\" + parentTag;\r\n      if (didWarn[implicitRootScope]) return !1;\r\n      didWarn[implicitRootScope] = !0;\r\n      var ancestor = (implicitRootScope = current)\r\n        ? findAncestor(implicitRootScope, parentTag)\r\n        : null;\r\n      implicitRootScope =\r\n        null !== implicitRootScope && null !== ancestor\r\n          ? describeAncestors(\r\n              ancestor,\r\n              implicitRootScope,\r\n              6 !== implicitRootScope.tag ? { children: null } : null\r\n            )\r\n          : \"\";\r\n      /\\S/.test(childText)\r\n        ? console.error(\r\n            \"In HTML, text nodes cannot be a child of <%s>.\\nThis will cause a hydration error.%s\",\r\n            parentTag,\r\n            implicitRootScope\r\n          )\r\n        : console.error(\r\n            \"In HTML, whitespace text nodes cannot be a child of <%s>. Make sure you don't have any extra whitespace between tags on each line of your source code.\\nThis will cause a hydration error.%s\",\r\n            parentTag,\r\n            implicitRootScope\r\n          );\r\n      return !1;\r\n    }\r\n    function setTextContent(node, text) {\r\n      if (text) {\r\n        var firstChild = node.firstChild;\r\n        if (\r\n          firstChild &&\r\n          firstChild === node.lastChild &&\r\n          3 === firstChild.nodeType\r\n        ) {\r\n          firstChild.nodeValue = text;\r\n          return;\r\n        }\r\n      }\r\n      node.textContent = text;\r\n    }\r\n    function camelize(string) {\r\n      return string.replace(hyphenPattern, function (_, character) {\r\n        return character.toUpperCase();\r\n      });\r\n    }\r\n    function setValueForStyle(style, styleName, value) {\r\n      var isCustomProperty = 0 === styleName.indexOf(\"--\");\r\n      isCustomProperty ||\r\n        (-1 < styleName.indexOf(\"-\")\r\n          ? (warnedStyleNames.hasOwnProperty(styleName) &&\r\n              warnedStyleNames[styleName]) ||\r\n            ((warnedStyleNames[styleName] = !0),\r\n            console.error(\r\n              \"Unsupported style property %s. Did you mean %s?\",\r\n              styleName,\r\n              camelize(styleName.replace(msPattern, \"ms-\"))\r\n            ))\r\n          : badVendoredStyleNamePattern.test(styleName)\r\n            ? (warnedStyleNames.hasOwnProperty(styleName) &&\r\n                warnedStyleNames[styleName]) ||\r\n              ((warnedStyleNames[styleName] = !0),\r\n              console.error(\r\n                \"Unsupported vendor-prefixed style property %s. Did you mean %s?\",\r\n                styleName,\r\n                styleName.charAt(0).toUpperCase() + styleName.slice(1)\r\n              ))\r\n            : !badStyleValueWithSemicolonPattern.test(value) ||\r\n              (warnedStyleValues.hasOwnProperty(value) &&\r\n                warnedStyleValues[value]) ||\r\n              ((warnedStyleValues[value] = !0),\r\n              console.error(\r\n                'Style property values shouldn\\'t contain a semicolon. Try \"%s: %s\" instead.',\r\n                styleName,\r\n                value.replace(badStyleValueWithSemicolonPattern, \"\")\r\n              )),\r\n        \"number\" === typeof value &&\r\n          (isNaN(value)\r\n            ? warnedForNaNValue ||\r\n              ((warnedForNaNValue = !0),\r\n              console.error(\r\n                \"`NaN` is an invalid value for the `%s` css style property.\",\r\n                styleName\r\n              ))\r\n            : isFinite(value) ||\r\n              warnedForInfinityValue ||\r\n              ((warnedForInfinityValue = !0),\r\n              console.error(\r\n                \"`Infinity` is an invalid value for the `%s` css style property.\",\r\n                styleName\r\n              ))));\r\n      null == value || \"boolean\" === typeof value || \"\" === value\r\n        ? isCustomProperty\r\n          ? style.setProperty(styleName, \"\")\r\n          : \"float\" === styleName\r\n            ? (style.cssFloat = \"\")\r\n            : (style[styleName] = \"\")\r\n        : isCustomProperty\r\n          ? style.setProperty(styleName, value)\r\n          : \"number\" !== typeof value ||\r\n              0 === value ||\r\n              unitlessNumbers.has(styleName)\r\n            ? \"float\" === styleName\r\n              ? (style.cssFloat = value)\r\n              : (checkCSSPropertyStringCoercion(value, styleName),\r\n                (style[styleName] = (\"\" + value).trim()))\r\n            : (style[styleName] = value + \"px\");\r\n    }\r\n    function setValueForStyles(node, styles, prevStyles) {\r\n      if (null != styles && \"object\" !== typeof styles)\r\n        throw Error(\r\n          \"The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.\"\r\n        );\r\n      styles && Object.freeze(styles);\r\n      node = node.style;\r\n      if (null != prevStyles) {\r\n        if (styles) {\r\n          var expandedUpdates = {};\r\n          if (prevStyles)\r\n            for (var key in prevStyles)\r\n              if (prevStyles.hasOwnProperty(key) && !styles.hasOwnProperty(key))\r\n                for (\r\n                  var longhands = shorthandToLonghand[key] || [key], i = 0;\r\n                  i < longhands.length;\r\n                  i++\r\n                )\r\n                  expandedUpdates[longhands[i]] = key;\r\n          for (var _key in styles)\r\n            if (\r\n              styles.hasOwnProperty(_key) &&\r\n              (!prevStyles || prevStyles[_key] !== styles[_key])\r\n            )\r\n              for (\r\n                key = shorthandToLonghand[_key] || [_key], longhands = 0;\r\n                longhands < key.length;\r\n                longhands++\r\n              )\r\n                expandedUpdates[key[longhands]] = _key;\r\n          _key = {};\r\n          for (var key$jscomp$0 in styles)\r\n            for (\r\n              key = shorthandToLonghand[key$jscomp$0] || [key$jscomp$0],\r\n                longhands = 0;\r\n              longhands < key.length;\r\n              longhands++\r\n            )\r\n              _key[key[longhands]] = key$jscomp$0;\r\n          key$jscomp$0 = {};\r\n          for (var _key2 in expandedUpdates)\r\n            if (\r\n              ((key = expandedUpdates[_key2]),\r\n              (longhands = _key[_key2]) &&\r\n                key !== longhands &&\r\n                ((i = key + \",\" + longhands), !key$jscomp$0[i]))\r\n            ) {\r\n              key$jscomp$0[i] = !0;\r\n              i = console;\r\n              var value = styles[key];\r\n              i.error.call(\r\n                i,\r\n                \"%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.\",\r\n                null == value || \"boolean\" === typeof value || \"\" === value\r\n                  ? \"Removing\"\r\n                  : \"Updating\",\r\n                key,\r\n                longhands\r\n              );\r\n            }\r\n        }\r\n        for (var styleName in prevStyles)\r\n          !prevStyles.hasOwnProperty(styleName) ||\r\n            (null != styles && styles.hasOwnProperty(styleName)) ||\r\n            (0 === styleName.indexOf(\"--\")\r\n              ? node.setProperty(styleName, \"\")\r\n              : \"float\" === styleName\r\n                ? (node.cssFloat = \"\")\r\n                : (node[styleName] = \"\"));\r\n        for (var _styleName in styles)\r\n          (_key2 = styles[_styleName]),\r\n            styles.hasOwnProperty(_styleName) &&\r\n              prevStyles[_styleName] !== _key2 &&\r\n              setValueForStyle(node, _styleName, _key2);\r\n      } else\r\n        for (expandedUpdates in styles)\r\n          styles.hasOwnProperty(expandedUpdates) &&\r\n            setValueForStyle(node, expandedUpdates, styles[expandedUpdates]);\r\n    }\r\n    function isCustomElement(tagName) {\r\n      if (-1 === tagName.indexOf(\"-\")) return !1;\r\n      switch (tagName) {\r\n        case \"annotation-xml\":\r\n        case \"color-profile\":\r\n        case \"font-face\":\r\n        case \"font-face-src\":\r\n        case \"font-face-uri\":\r\n        case \"font-face-format\":\r\n        case \"font-face-name\":\r\n        case \"missing-glyph\":\r\n          return !1;\r\n        default:\r\n          return !0;\r\n      }\r\n    }\r\n    function getAttributeAlias(name) {\r\n      return aliases.get(name) || name;\r\n    }\r\n    function validateProperty$1(tagName, name) {\r\n      if (\r\n        hasOwnProperty.call(warnedProperties$1, name) &&\r\n        warnedProperties$1[name]\r\n      )\r\n        return !0;\r\n      if (rARIACamel$1.test(name)) {\r\n        tagName = \"aria-\" + name.slice(4).toLowerCase();\r\n        tagName = ariaProperties.hasOwnProperty(tagName) ? tagName : null;\r\n        if (null == tagName)\r\n          return (\r\n            console.error(\r\n              \"Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.\",\r\n              name\r\n            ),\r\n            (warnedProperties$1[name] = !0)\r\n          );\r\n        if (name !== tagName)\r\n          return (\r\n            console.error(\r\n              \"Invalid ARIA attribute `%s`. Did you mean `%s`?\",\r\n              name,\r\n              tagName\r\n            ),\r\n            (warnedProperties$1[name] = !0)\r\n          );\r\n      }\r\n      if (rARIA$1.test(name)) {\r\n        tagName = name.toLowerCase();\r\n        tagName = ariaProperties.hasOwnProperty(tagName) ? tagName : null;\r\n        if (null == tagName) return (warnedProperties$1[name] = !0), !1;\r\n        name !== tagName &&\r\n          (console.error(\r\n            \"Unknown ARIA attribute `%s`. Did you mean `%s`?\",\r\n            name,\r\n            tagName\r\n          ),\r\n          (warnedProperties$1[name] = !0));\r\n      }\r\n      return !0;\r\n    }\r\n    function validateProperties$2(type, props) {\r\n      var invalidProps = [],\r\n        key;\r\n      for (key in props)\r\n        validateProperty$1(type, key) || invalidProps.push(key);\r\n      props = invalidProps\r\n        .map(function (prop) {\r\n          return \"`\" + prop + \"`\";\r\n        })\r\n        .join(\", \");\r\n      1 === invalidProps.length\r\n        ? console.error(\r\n            \"Invalid aria prop %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props\",\r\n            props,\r\n            type\r\n          )\r\n        : 1 < invalidProps.length &&\r\n          console.error(\r\n            \"Invalid aria props %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props\",\r\n            props,\r\n            type\r\n          );\r\n    }\r\n    function validateProperty(tagName, name, value, eventRegistry) {\r\n      if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name])\r\n        return !0;\r\n      var lowerCasedName = name.toLowerCase();\r\n      if (\"onfocusin\" === lowerCasedName || \"onfocusout\" === lowerCasedName)\r\n        return (\r\n          console.error(\r\n            \"React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.\"\r\n          ),\r\n          (warnedProperties[name] = !0)\r\n        );\r\n      if (\r\n        \"function\" === typeof value &&\r\n        ((\"form\" === tagName && \"action\" === name) ||\r\n          (\"input\" === tagName && \"formAction\" === name) ||\r\n          (\"button\" === tagName && \"formAction\" === name))\r\n      )\r\n        return !0;\r\n      if (null != eventRegistry) {\r\n        tagName = eventRegistry.possibleRegistrationNames;\r\n        if (eventRegistry.registrationNameDependencies.hasOwnProperty(name))\r\n          return !0;\r\n        eventRegistry = tagName.hasOwnProperty(lowerCasedName)\r\n          ? tagName[lowerCasedName]\r\n          : null;\r\n        if (null != eventRegistry)\r\n          return (\r\n            console.error(\r\n              \"Invalid event handler property `%s`. Did you mean `%s`?\",\r\n              name,\r\n              eventRegistry\r\n            ),\r\n            (warnedProperties[name] = !0)\r\n          );\r\n        if (EVENT_NAME_REGEX.test(name))\r\n          return (\r\n            console.error(\r\n              \"Unknown event handler property `%s`. It will be ignored.\",\r\n              name\r\n            ),\r\n            (warnedProperties[name] = !0)\r\n          );\r\n      } else if (EVENT_NAME_REGEX.test(name))\r\n        return (\r\n          INVALID_EVENT_NAME_REGEX.test(name) &&\r\n            console.error(\r\n              \"Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.\",\r\n              name\r\n            ),\r\n          (warnedProperties[name] = !0)\r\n        );\r\n      if (rARIA.test(name) || rARIACamel.test(name)) return !0;\r\n      if (\"innerhtml\" === lowerCasedName)\r\n        return (\r\n          console.error(\r\n            \"Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.\"\r\n          ),\r\n          (warnedProperties[name] = !0)\r\n        );\r\n      if (\"aria\" === lowerCasedName)\r\n        return (\r\n          console.error(\r\n            \"The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.\"\r\n          ),\r\n          (warnedProperties[name] = !0)\r\n        );\r\n      if (\r\n        \"is\" === lowerCasedName &&\r\n        null !== value &&\r\n        void 0 !== value &&\r\n        \"string\" !== typeof value\r\n      )\r\n        return (\r\n          console.error(\r\n            \"Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.\",\r\n            typeof value\r\n          ),\r\n          (warnedProperties[name] = !0)\r\n        );\r\n      if (\"number\" === typeof value && isNaN(value))\r\n        return (\r\n          console.error(\r\n            \"Received NaN for the `%s` attribute. If this is expected, cast the value to a string.\",\r\n            name\r\n          ),\r\n          (warnedProperties[name] = !0)\r\n        );\r\n      if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {\r\n        if (\r\n          ((lowerCasedName = possibleStandardNames[lowerCasedName]),\r\n          lowerCasedName !== name)\r\n        )\r\n          return (\r\n            console.error(\r\n              \"Invalid DOM property `%s`. Did you mean `%s`?\",\r\n              name,\r\n              lowerCasedName\r\n            ),\r\n            (warnedProperties[name] = !0)\r\n          );\r\n      } else if (name !== lowerCasedName)\r\n        return (\r\n          console.error(\r\n            \"React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.\",\r\n            name,\r\n            lowerCasedName\r\n          ),\r\n          (warnedProperties[name] = !0)\r\n        );\r\n      switch (name) {\r\n        case \"dangerouslySetInnerHTML\":\r\n        case \"children\":\r\n        case \"style\":\r\n        case \"suppressContentEditableWarning\":\r\n        case \"suppressHydrationWarning\":\r\n        case \"defaultValue\":\r\n        case \"defaultChecked\":\r\n        case \"innerHTML\":\r\n        case \"ref\":\r\n          return !0;\r\n        case \"innerText\":\r\n        case \"textContent\":\r\n          return !0;\r\n      }\r\n      switch (typeof value) {\r\n        case \"boolean\":\r\n          switch (name) {\r\n            case \"autoFocus\":\r\n            case \"checked\":\r\n            case \"multiple\":\r\n            case \"muted\":\r\n            case \"selected\":\r\n            case \"contentEditable\":\r\n            case \"spellCheck\":\r\n            case \"draggable\":\r\n            case \"value\":\r\n            case \"autoReverse\":\r\n            case \"externalResourcesRequired\":\r\n            case \"focusable\":\r\n            case \"preserveAlpha\":\r\n            case \"allowFullScreen\":\r\n            case \"async\":\r\n            case \"autoPlay\":\r\n            case \"controls\":\r\n            case \"default\":\r\n            case \"defer\":\r\n            case \"disabled\":\r\n            case \"disablePictureInPicture\":\r\n            case \"disableRemotePlayback\":\r\n            case \"formNoValidate\":\r\n            case \"hidden\":\r\n            case \"loop\":\r\n            case \"noModule\":\r\n            case \"noValidate\":\r\n            case \"open\":\r\n            case \"playsInline\":\r\n            case \"readOnly\":\r\n            case \"required\":\r\n            case \"reversed\":\r\n            case \"scoped\":\r\n            case \"seamless\":\r\n            case \"itemScope\":\r\n            case \"capture\":\r\n            case \"download\":\r\n            case \"inert\":\r\n              return !0;\r\n            default:\r\n              lowerCasedName = name.toLowerCase().slice(0, 5);\r\n              if (\"data-\" === lowerCasedName || \"aria-\" === lowerCasedName)\r\n                return !0;\r\n              value\r\n                ? console.error(\r\n                    'Received `%s` for a non-boolean attribute `%s`.\\n\\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()}.',\r\n                    value,\r\n                    name,\r\n                    name,\r\n                    value,\r\n                    name\r\n                  )\r\n                : console.error(\r\n                    'Received `%s` for a non-boolean attribute `%s`.\\n\\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()}.\\n\\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.',\r\n                    value,\r\n                    name,\r\n                    name,\r\n                    value,\r\n                    name,\r\n                    name,\r\n                    name\r\n                  );\r\n              return (warnedProperties[name] = !0);\r\n          }\r\n        case \"function\":\r\n        case \"symbol\":\r\n          return (warnedProperties[name] = !0), !1;\r\n        case \"string\":\r\n          if (\"false\" === value || \"true\" === value) {\r\n            switch (name) {\r\n              case \"checked\":\r\n              case \"selected\":\r\n              case \"multiple\":\r\n              case \"muted\":\r\n              case \"allowFullScreen\":\r\n              case \"async\":\r\n              case \"autoPlay\":\r\n              case \"controls\":\r\n              case \"default\":\r\n              case \"defer\":\r\n              case \"disabled\":\r\n              case \"disablePictureInPicture\":\r\n              case \"disableRemotePlayback\":\r\n              case \"formNoValidate\":\r\n              case \"hidden\":\r\n              case \"loop\":\r\n              case \"noModule\":\r\n              case \"noValidate\":\r\n              case \"open\":\r\n              case \"playsInline\":\r\n              case \"readOnly\":\r\n              case \"required\":\r\n              case \"reversed\":\r\n              case \"scoped\":\r\n              case \"seamless\":\r\n              case \"itemScope\":\r\n              case \"inert\":\r\n                break;\r\n              default:\r\n                return !0;\r\n            }\r\n            console.error(\r\n              \"Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?\",\r\n              value,\r\n              name,\r\n              \"false\" === value\r\n                ? \"The browser will interpret it as a truthy value.\"\r\n                : 'Although this works, it will not work as expected if you pass the string \"false\".',\r\n              name,\r\n              value\r\n            );\r\n            warnedProperties[name] = !0;\r\n          }\r\n      }\r\n      return !0;\r\n    }\r\n    function warnUnknownProperties(type, props, eventRegistry) {\r\n      var unknownProps = [],\r\n        key;\r\n      for (key in props)\r\n        validateProperty(type, key, props[key], eventRegistry) ||\r\n          unknownProps.push(key);\r\n      props = unknownProps\r\n        .map(function (prop) {\r\n          return \"`\" + prop + \"`\";\r\n        })\r\n        .join(\", \");\r\n      1 === unknownProps.length\r\n        ? console.error(\r\n            \"Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://react.dev/link/attribute-behavior \",\r\n            props,\r\n            type\r\n          )\r\n        : 1 < unknownProps.length &&\r\n          console.error(\r\n            \"Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://react.dev/link/attribute-behavior \",\r\n            props,\r\n            type\r\n          );\r\n    }\r\n    function sanitizeURL(url) {\r\n      return isJavaScriptProtocol.test(\"\" + url)\r\n        ? \"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')\"\r\n        : url;\r\n    }\r\n    function getEventTarget(nativeEvent) {\r\n      nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;\r\n      nativeEvent.correspondingUseElement &&\r\n        (nativeEvent = nativeEvent.correspondingUseElement);\r\n      return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;\r\n    }\r\n    function restoreStateOfTarget(target) {\r\n      var internalInstance = getInstanceFromNode(target);\r\n      if (internalInstance && (target = internalInstance.stateNode)) {\r\n        var props = target[internalPropsKey] || null;\r\n        a: switch (\r\n          ((target = internalInstance.stateNode), internalInstance.type)\r\n        ) {\r\n          case \"input\":\r\n            updateInput(\r\n              target,\r\n              props.value,\r\n              props.defaultValue,\r\n              props.defaultValue,\r\n              props.checked,\r\n              props.defaultChecked,\r\n              props.type,\r\n              props.name\r\n            );\r\n            internalInstance = props.name;\r\n            if (\"radio\" === props.type && null != internalInstance) {\r\n              for (props = target; props.parentNode; ) props = props.parentNode;\r\n              checkAttributeStringCoercion(internalInstance, \"name\");\r\n              props = props.querySelectorAll(\r\n                'input[name=\"' +\r\n                  escapeSelectorAttributeValueInsideDoubleQuotes(\r\n                    \"\" + internalInstance\r\n                  ) +\r\n                  '\"][type=\"radio\"]'\r\n              );\r\n              for (\r\n                internalInstance = 0;\r\n                internalInstance < props.length;\r\n                internalInstance++\r\n              ) {\r\n                var otherNode = props[internalInstance];\r\n                if (otherNode !== target && otherNode.form === target.form) {\r\n                  var otherProps = otherNode[internalPropsKey] || null;\r\n                  if (!otherProps)\r\n                    throw Error(\r\n                      \"ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.\"\r\n                    );\r\n                  updateInput(\r\n                    otherNode,\r\n                    otherProps.value,\r\n                    otherProps.defaultValue,\r\n                    otherProps.defaultValue,\r\n                    otherProps.checked,\r\n                    otherProps.defaultChecked,\r\n                    otherProps.type,\r\n                    otherProps.name\r\n                  );\r\n                }\r\n              }\r\n              for (\r\n                internalInstance = 0;\r\n                internalInstance < props.length;\r\n                internalInstance++\r\n              )\r\n                (otherNode = props[internalInstance]),\r\n                  otherNode.form === target.form &&\r\n                    updateValueIfChanged(otherNode);\r\n            }\r\n            break a;\r\n          case \"textarea\":\r\n            updateTextarea(target, props.value, props.defaultValue);\r\n            break a;\r\n          case \"select\":\r\n            (internalInstance = props.value),\r\n              null != internalInstance &&\r\n                updateOptions(target, !!props.multiple, internalInstance, !1);\r\n        }\r\n      }\r\n    }\r\n    function batchedUpdates$1(fn, a, b) {\r\n      if (isInsideEventHandler) return fn(a, b);\r\n      isInsideEventHandler = !0;\r\n      try {\r\n        var JSCompiler_inline_result = fn(a);\r\n        return JSCompiler_inline_result;\r\n      } finally {\r\n        if (\r\n          ((isInsideEventHandler = !1),\r\n          null !== restoreTarget || null !== restoreQueue)\r\n        )\r\n          if (\r\n            (flushSyncWork$1(),\r\n            restoreTarget &&\r\n              ((a = restoreTarget),\r\n              (fn = restoreQueue),\r\n              (restoreQueue = restoreTarget = null),\r\n              restoreStateOfTarget(a),\r\n              fn))\r\n          )\r\n            for (a = 0; a < fn.length; a++) restoreStateOfTarget(fn[a]);\r\n      }\r\n    }\r\n    function getListener(inst, registrationName) {\r\n      var stateNode = inst.stateNode;\r\n      if (null === stateNode) return null;\r\n      var props = stateNode[internalPropsKey] || null;\r\n      if (null === props) return null;\r\n      stateNode = props[registrationName];\r\n      a: switch (registrationName) {\r\n        case \"onClick\":\r\n        case \"onClickCapture\":\r\n        case \"onDoubleClick\":\r\n        case \"onDoubleClickCapture\":\r\n        case \"onMouseDown\":\r\n        case \"onMouseDownCapture\":\r\n        case \"onMouseMove\":\r\n        case \"onMouseMoveCapture\":\r\n        case \"onMouseUp\":\r\n        case \"onMouseUpCapture\":\r\n        case \"onMouseEnter\":\r\n          (props = !props.disabled) ||\r\n            ((inst = inst.type),\r\n            (props = !(\r\n              \"button\" === inst ||\r\n              \"input\" === inst ||\r\n              \"select\" === inst ||\r\n              \"textarea\" === inst\r\n            )));\r\n          inst = !props;\r\n          break a;\r\n        default:\r\n          inst = !1;\r\n      }\r\n      if (inst) return null;\r\n      if (stateNode && \"function\" !== typeof stateNode)\r\n        throw Error(\r\n          \"Expected `\" +\r\n            registrationName +\r\n            \"` listener to be a function, instead got a value of `\" +\r\n            typeof stateNode +\r\n            \"` type.\"\r\n        );\r\n      return stateNode;\r\n    }\r\n    function getData() {\r\n      if (fallbackText) return fallbackText;\r\n      var start,\r\n        startValue = startText,\r\n        startLength = startValue.length,\r\n        end,\r\n        endValue = \"value\" in root ? root.value : root.textContent,\r\n        endLength = endValue.length;\r\n      for (\r\n        start = 0;\r\n        start < startLength && startValue[start] === endValue[start];\r\n        start++\r\n      );\r\n      var minEnd = startLength - start;\r\n      for (\r\n        end = 1;\r\n        end <= minEnd &&\r\n        startValue[startLength - end] === endValue[endLength - end];\r\n        end++\r\n      );\r\n      return (fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0));\r\n    }\r\n    function getEventCharCode(nativeEvent) {\r\n      var keyCode = nativeEvent.keyCode;\r\n      \"charCode\" in nativeEvent\r\n        ? ((nativeEvent = nativeEvent.charCode),\r\n          0 === nativeEvent && 13 === keyCode && (nativeEvent = 13))\r\n        : (nativeEvent = keyCode);\r\n      10 === nativeEvent && (nativeEvent = 13);\r\n      return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;\r\n    }\r\n    function functionThatReturnsTrue() {\r\n      return !0;\r\n    }\r\n    function functionThatReturnsFalse() {\r\n      return !1;\r\n    }\r\n    function createSyntheticEvent(Interface) {\r\n      function SyntheticBaseEvent(\r\n        reactName,\r\n        reactEventType,\r\n        targetInst,\r\n        nativeEvent,\r\n        nativeEventTarget\r\n      ) {\r\n        this._reactName = reactName;\r\n        this._targetInst = targetInst;\r\n        this.type = reactEventType;\r\n        this.nativeEvent = nativeEvent;\r\n        this.target = nativeEventTarget;\r\n        this.currentTarget = null;\r\n        for (var propName in Interface)\r\n          Interface.hasOwnProperty(propName) &&\r\n            ((reactName = Interface[propName]),\r\n            (this[propName] = reactName\r\n              ? reactName(nativeEvent)\r\n              : nativeEvent[propName]));\r\n        this.isDefaultPrevented = (\r\n          null != nativeEvent.defaultPrevented\r\n            ? nativeEvent.defaultPrevented\r\n            : !1 === nativeEvent.returnValue\r\n        )\r\n          ? functionThatReturnsTrue\r\n          : functionThatReturnsFalse;\r\n        this.isPropagationStopped = functionThatReturnsFalse;\r\n        return this;\r\n      }\r\n      assign(SyntheticBaseEvent.prototype, {\r\n        preventDefault: function () {\r\n          this.defaultPrevented = !0;\r\n          var event = this.nativeEvent;\r\n          event &&\r\n            (event.preventDefault\r\n              ? event.preventDefault()\r\n              : \"unknown\" !== typeof event.returnValue &&\r\n                (event.returnValue = !1),\r\n            (this.isDefaultPrevented = functionThatReturnsTrue));\r\n        },\r\n        stopPropagation: function () {\r\n          var event = this.nativeEvent;\r\n          event &&\r\n            (event.stopPropagation\r\n              ? event.stopPropagation()\r\n              : \"unknown\" !== typeof event.cancelBubble &&\r\n                (event.cancelBubble = !0),\r\n            (this.isPropagationStopped = functionThatReturnsTrue));\r\n        },\r\n        persist: function () {},\r\n        isPersistent: functionThatReturnsTrue\r\n      });\r\n      return SyntheticBaseEvent;\r\n    }\r\n    function modifierStateGetter(keyArg) {\r\n      var nativeEvent = this.nativeEvent;\r\n      return nativeEvent.getModifierState\r\n        ? nativeEvent.getModifierState(keyArg)\r\n        : (keyArg = modifierKeyToProp[keyArg])\r\n          ? !!nativeEvent[keyArg]\r\n          : !1;\r\n    }\r\n    function getEventModifierState() {\r\n      return modifierStateGetter;\r\n    }\r\n    function isFallbackCompositionEnd(domEventName, nativeEvent) {\r\n      switch (domEventName) {\r\n        case \"keyup\":\r\n          return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);\r\n        case \"keydown\":\r\n          return nativeEvent.keyCode !== START_KEYCODE;\r\n        case \"keypress\":\r\n        case \"mousedown\":\r\n        case \"focusout\":\r\n          return !0;\r\n        default:\r\n          return !1;\r\n      }\r\n    }\r\n    function getDataFromCustomEvent(nativeEvent) {\r\n      nativeEvent = nativeEvent.detail;\r\n      return \"object\" === typeof nativeEvent && \"data\" in nativeEvent\r\n        ? nativeEvent.data\r\n        : null;\r\n    }\r\n    function getNativeBeforeInputChars(domEventName, nativeEvent) {\r\n      switch (domEventName) {\r\n        case \"compositionend\":\r\n          return getDataFromCustomEvent(nativeEvent);\r\n        case \"keypress\":\r\n          if (nativeEvent.which !== SPACEBAR_CODE) return null;\r\n          hasSpaceKeypress = !0;\r\n          return SPACEBAR_CHAR;\r\n        case \"textInput\":\r\n          return (\r\n            (domEventName = nativeEvent.data),\r\n            domEventName === SPACEBAR_CHAR && hasSpaceKeypress\r\n              ? null\r\n              : domEventName\r\n          );\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n    function getFallbackBeforeInputChars(domEventName, nativeEvent) {\r\n      if (isComposing)\r\n        return \"compositionend\" === domEventName ||\r\n          (!canUseCompositionEvent &&\r\n            isFallbackCompositionEnd(domEventName, nativeEvent))\r\n          ? ((domEventName = getData()),\r\n            (fallbackText = startText = root = null),\r\n            (isComposing = !1),\r\n            domEventName)\r\n          : null;\r\n      switch (domEventName) {\r\n        case \"paste\":\r\n          return null;\r\n        case \"keypress\":\r\n          if (\r\n            !(\r\n              nativeEvent.ctrlKey ||\r\n              nativeEvent.altKey ||\r\n              nativeEvent.metaKey\r\n            ) ||\r\n            (nativeEvent.ctrlKey && nativeEvent.altKey)\r\n          ) {\r\n            if (nativeEvent.char && 1 < nativeEvent.char.length)\r\n              return nativeEvent.char;\r\n            if (nativeEvent.which)\r\n              return String.fromCharCode(nativeEvent.which);\r\n          }\r\n          return null;\r\n        case \"compositionend\":\r\n          return useFallbackCompositionData && \"ko\" !== nativeEvent.locale\r\n            ? null\r\n            : nativeEvent.data;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n    function isTextInputElement(elem) {\r\n      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\r\n      return \"input\" === nodeName\r\n        ? !!supportedInputTypes[elem.type]\r\n        : \"textarea\" === nodeName\r\n          ? !0\r\n          : !1;\r\n    }\r\n    function isEventSupported(eventNameSuffix) {\r\n      if (!canUseDOM) return !1;\r\n      eventNameSuffix = \"on\" + eventNameSuffix;\r\n      var isSupported = eventNameSuffix in document;\r\n      isSupported ||\r\n        ((isSupported = document.createElement(\"div\")),\r\n        isSupported.setAttribute(eventNameSuffix, \"return;\"),\r\n        (isSupported = \"function\" === typeof isSupported[eventNameSuffix]));\r\n      return isSupported;\r\n    }\r\n    function createAndAccumulateChangeEvent(\r\n      dispatchQueue,\r\n      inst,\r\n      nativeEvent,\r\n      target\r\n    ) {\r\n      restoreTarget\r\n        ? restoreQueue\r\n          ? restoreQueue.push(target)\r\n          : (restoreQueue = [target])\r\n        : (restoreTarget = target);\r\n      inst = accumulateTwoPhaseListeners(inst, \"onChange\");\r\n      0 < inst.length &&\r\n        ((nativeEvent = new SyntheticEvent(\r\n          \"onChange\",\r\n          \"change\",\r\n          null,\r\n          nativeEvent,\r\n          target\r\n        )),\r\n        dispatchQueue.push({ event: nativeEvent, listeners: inst }));\r\n    }\r\n    function runEventInBatch(dispatchQueue) {\r\n      processDispatchQueue(dispatchQueue, 0);\r\n    }\r\n    function getInstIfValueChanged(targetInst) {\r\n      var targetNode = getNodeFromInstance(targetInst);\r\n      if (updateValueIfChanged(targetNode)) return targetInst;\r\n    }\r\n    function getTargetInstForChangeEvent(domEventName, targetInst) {\r\n      if (\"change\" === domEventName) return targetInst;\r\n    }\r\n    function stopWatchingForValueChange() {\r\n      activeElement$1 &&\r\n        (activeElement$1.detachEvent(\"onpropertychange\", handlePropertyChange),\r\n        (activeElementInst$1 = activeElement$1 = null));\r\n    }\r\n    function handlePropertyChange(nativeEvent) {\r\n      if (\r\n        \"value\" === nativeEvent.propertyName &&\r\n        getInstIfValueChanged(activeElementInst$1)\r\n      ) {\r\n        var dispatchQueue = [];\r\n        createAndAccumulateChangeEvent(\r\n          dispatchQueue,\r\n          activeElementInst$1,\r\n          nativeEvent,\r\n          getEventTarget(nativeEvent)\r\n        );\r\n        batchedUpdates$1(runEventInBatch, dispatchQueue);\r\n      }\r\n    }\r\n    function handleEventsForInputEventPolyfill(\r\n      domEventName,\r\n      target,\r\n      targetInst\r\n    ) {\r\n      \"focusin\" === domEventName\r\n        ? (stopWatchingForValueChange(),\r\n          (activeElement$1 = target),\r\n          (activeElementInst$1 = targetInst),\r\n          activeElement$1.attachEvent(\"onpropertychange\", handlePropertyChange))\r\n        : \"focusout\" === domEventName && stopWatchingForValueChange();\r\n    }\r\n    function getTargetInstForInputEventPolyfill(domEventName) {\r\n      if (\r\n        \"selectionchange\" === domEventName ||\r\n        \"keyup\" === domEventName ||\r\n        \"keydown\" === domEventName\r\n      )\r\n        return getInstIfValueChanged(activeElementInst$1);\r\n    }\r\n    function getTargetInstForClickEvent(domEventName, targetInst) {\r\n      if (\"click\" === domEventName) return getInstIfValueChanged(targetInst);\r\n    }\r\n    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {\r\n      if (\"input\" === domEventName || \"change\" === domEventName)\r\n        return getInstIfValueChanged(targetInst);\r\n    }\r\n    function is(x, y) {\r\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\r\n    }\r\n    function shallowEqual(objA, objB) {\r\n      if (objectIs(objA, objB)) return !0;\r\n      if (\r\n        \"object\" !== typeof objA ||\r\n        null === objA ||\r\n        \"object\" !== typeof objB ||\r\n        null === objB\r\n      )\r\n        return !1;\r\n      var keysA = Object.keys(objA),\r\n        keysB = Object.keys(objB);\r\n      if (keysA.length !== keysB.length) return !1;\r\n      for (keysB = 0; keysB < keysA.length; keysB++) {\r\n        var currentKey = keysA[keysB];\r\n        if (\r\n          !hasOwnProperty.call(objB, currentKey) ||\r\n          !objectIs(objA[currentKey], objB[currentKey])\r\n        )\r\n          return !1;\r\n      }\r\n      return !0;\r\n    }\r\n    function getLeafNode(node) {\r\n      for (; node && node.firstChild; ) node = node.firstChild;\r\n      return node;\r\n    }\r\n    function getNodeForCharacterOffset(root, offset) {\r\n      var node = getLeafNode(root);\r\n      root = 0;\r\n      for (var nodeEnd; node; ) {\r\n        if (3 === node.nodeType) {\r\n          nodeEnd = root + node.textContent.length;\r\n          if (root <= offset && nodeEnd >= offset)\r\n            return { node: node, offset: offset - root };\r\n          root = nodeEnd;\r\n        }\r\n        a: {\r\n          for (; node; ) {\r\n            if (node.nextSibling) {\r\n              node = node.nextSibling;\r\n              break a;\r\n            }\r\n            node = node.parentNode;\r\n          }\r\n          node = void 0;\r\n        }\r\n        node = getLeafNode(node);\r\n      }\r\n    }\r\n    function containsNode(outerNode, innerNode) {\r\n      return outerNode && innerNode\r\n        ? outerNode === innerNode\r\n          ? !0\r\n          : outerNode && 3 === outerNode.nodeType\r\n            ? !1\r\n            : innerNode && 3 === innerNode.nodeType\r\n              ? containsNode(outerNode, innerNode.parentNode)\r\n              : \"contains\" in outerNode\r\n                ? outerNode.contains(innerNode)\r\n                : outerNode.compareDocumentPosition\r\n                  ? !!(outerNode.compareDocumentPosition(innerNode) & 16)\r\n                  : !1\r\n        : !1;\r\n    }\r\n    function getActiveElementDeep(containerInfo) {\r\n      containerInfo =\r\n        null != containerInfo &&\r\n        null != containerInfo.ownerDocument &&\r\n        null != containerInfo.ownerDocument.defaultView\r\n          ? containerInfo.ownerDocument.defaultView\r\n          : window;\r\n      for (\r\n        var element = getActiveElement(containerInfo.document);\r\n        element instanceof containerInfo.HTMLIFrameElement;\r\n\r\n      ) {\r\n        try {\r\n          var JSCompiler_inline_result =\r\n            \"string\" === typeof element.contentWindow.location.href;\r\n        } catch (err) {\r\n          JSCompiler_inline_result = !1;\r\n        }\r\n        if (JSCompiler_inline_result) containerInfo = element.contentWindow;\r\n        else break;\r\n        element = getActiveElement(containerInfo.document);\r\n      }\r\n      return element;\r\n    }\r\n    function hasSelectionCapabilities(elem) {\r\n      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\r\n      return (\r\n        nodeName &&\r\n        ((\"input\" === nodeName &&\r\n          (\"text\" === elem.type ||\r\n            \"search\" === elem.type ||\r\n            \"tel\" === elem.type ||\r\n            \"url\" === elem.type ||\r\n            \"password\" === elem.type)) ||\r\n          \"textarea\" === nodeName ||\r\n          \"true\" === elem.contentEditable)\r\n      );\r\n    }\r\n    function constructSelectEvent(\r\n      dispatchQueue,\r\n      nativeEvent,\r\n      nativeEventTarget\r\n    ) {\r\n      var doc =\r\n        nativeEventTarget.window === nativeEventTarget\r\n          ? nativeEventTarget.document\r\n          : 9 === nativeEventTarget.nodeType\r\n            ? nativeEventTarget\r\n            : nativeEventTarget.ownerDocument;\r\n      mouseDown ||\r\n        null == activeElement ||\r\n        activeElement !== getActiveElement(doc) ||\r\n        ((doc = activeElement),\r\n        \"selectionStart\" in doc && hasSelectionCapabilities(doc)\r\n          ? (doc = { start: doc.selectionStart, end: doc.selectionEnd })\r\n          : ((doc = (\r\n              (doc.ownerDocument && doc.ownerDocument.defaultView) ||\r\n              window\r\n            ).getSelection()),\r\n            (doc = {\r\n              anchorNode: doc.anchorNode,\r\n              anchorOffset: doc.anchorOffset,\r\n              focusNode: doc.focusNode,\r\n              focusOffset: doc.focusOffset\r\n            })),\r\n        (lastSelection && shallowEqual(lastSelection, doc)) ||\r\n          ((lastSelection = doc),\r\n          (doc = accumulateTwoPhaseListeners(activeElementInst, \"onSelect\")),\r\n          0 < doc.length &&\r\n            ((nativeEvent = new SyntheticEvent(\r\n              \"onSelect\",\r\n              \"select\",\r\n              null,\r\n              nativeEvent,\r\n              nativeEventTarget\r\n            )),\r\n            dispatchQueue.push({ event: nativeEvent, listeners: doc }),\r\n            (nativeEvent.target = activeElement))));\r\n    }\r\n    function makePrefixMap(styleProp, eventName) {\r\n      var prefixes = {};\r\n      prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\r\n      prefixes[\"Webkit\" + styleProp] = \"webkit\" + eventName;\r\n      prefixes[\"Moz\" + styleProp] = \"moz\" + eventName;\r\n      return prefixes;\r\n    }\r\n    function getVendorPrefixedEventName(eventName) {\r\n      if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];\r\n      if (!vendorPrefixes[eventName]) return eventName;\r\n      var prefixMap = vendorPrefixes[eventName],\r\n        styleProp;\r\n      for (styleProp in prefixMap)\r\n        if (prefixMap.hasOwnProperty(styleProp) && styleProp in style)\r\n          return (prefixedEventNames[eventName] = prefixMap[styleProp]);\r\n      return eventName;\r\n    }\r\n    function registerSimpleEvent(domEventName, reactName) {\r\n      topLevelEventsToReactNames.set(domEventName, reactName);\r\n      registerTwoPhaseEvent(reactName, [domEventName]);\r\n    }\r\n    function createCapturedValueAtFiber(value, source) {\r\n      if (\"object\" === typeof value && null !== value) {\r\n        var existing = CapturedStacks.get(value);\r\n        if (void 0 !== existing) return existing;\r\n        source = {\r\n          value: value,\r\n          source: source,\r\n          stack: getStackByFiberInDevAndProd(source)\r\n        };\r\n        CapturedStacks.set(value, source);\r\n        return source;\r\n      }\r\n      return {\r\n        value: value,\r\n        source: source,\r\n        stack: getStackByFiberInDevAndProd(source)\r\n      };\r\n    }\r\n    function finishQueueingConcurrentUpdates() {\r\n      for (\r\n        var endIndex = concurrentQueuesIndex,\r\n          i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);\r\n        i < endIndex;\r\n\r\n      ) {\r\n        var fiber = concurrentQueues[i];\r\n        concurrentQueues[i++] = null;\r\n        var queue = concurrentQueues[i];\r\n        concurrentQueues[i++] = null;\r\n        var update = concurrentQueues[i];\r\n        concurrentQueues[i++] = null;\r\n        var lane = concurrentQueues[i];\r\n        concurrentQueues[i++] = null;\r\n        if (null !== queue && null !== update) {\r\n          var pending = queue.pending;\r\n          null === pending\r\n            ? (update.next = update)\r\n            : ((update.next = pending.next), (pending.next = update));\r\n          queue.pending = update;\r\n        }\r\n        0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);\r\n      }\r\n    }\r\n    function enqueueUpdate$1(fiber, queue, update, lane) {\r\n      concurrentQueues[concurrentQueuesIndex++] = fiber;\r\n      concurrentQueues[concurrentQueuesIndex++] = queue;\r\n      concurrentQueues[concurrentQueuesIndex++] = update;\r\n      concurrentQueues[concurrentQueuesIndex++] = lane;\r\n      concurrentlyUpdatedLanes |= lane;\r\n      fiber.lanes |= lane;\r\n      fiber = fiber.alternate;\r\n      null !== fiber && (fiber.lanes |= lane);\r\n    }\r\n    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\r\n      enqueueUpdate$1(fiber, queue, update, lane);\r\n      return getRootForUpdatedFiber(fiber);\r\n    }\r\n    function enqueueConcurrentRenderForLane(fiber, lane) {\r\n      enqueueUpdate$1(fiber, null, null, lane);\r\n      return getRootForUpdatedFiber(fiber);\r\n    }\r\n    function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {\r\n      sourceFiber.lanes |= lane;\r\n      var alternate = sourceFiber.alternate;\r\n      null !== alternate && (alternate.lanes |= lane);\r\n      for (var isHidden = !1, parent = sourceFiber.return; null !== parent; )\r\n        (parent.childLanes |= lane),\r\n          (alternate = parent.alternate),\r\n          null !== alternate && (alternate.childLanes |= lane),\r\n          22 === parent.tag &&\r\n            ((sourceFiber = parent.stateNode),\r\n            null === sourceFiber ||\r\n              sourceFiber._visibility & OffscreenVisible ||\r\n              (isHidden = !0)),\r\n          (sourceFiber = parent),\r\n          (parent = parent.return);\r\n      return 3 === sourceFiber.tag\r\n        ? ((parent = sourceFiber.stateNode),\r\n          isHidden &&\r\n            null !== update &&\r\n            ((isHidden = 31 - clz32(lane)),\r\n            (sourceFiber = parent.hiddenUpdates),\r\n            (alternate = sourceFiber[isHidden]),\r\n            null === alternate\r\n              ? (sourceFiber[isHidden] = [update])\r\n              : alternate.push(update),\r\n            (update.lane = lane | 536870912)),\r\n          parent)\r\n        : null;\r\n    }\r\n    function getRootForUpdatedFiber(sourceFiber) {\r\n      if (nestedUpdateCount > NESTED_UPDATE_LIMIT)\r\n        throw (\r\n          ((nestedPassiveUpdateCount = nestedUpdateCount = 0),\r\n          (rootWithPassiveNestedUpdates = rootWithNestedUpdates = null),\r\n          Error(\r\n            \"Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.\"\r\n          ))\r\n        );\r\n      nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT &&\r\n        ((nestedPassiveUpdateCount = 0),\r\n        (rootWithPassiveNestedUpdates = null),\r\n        console.error(\r\n          \"Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\"\r\n        ));\r\n      null === sourceFiber.alternate &&\r\n        0 !== (sourceFiber.flags & 4098) &&\r\n        warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\r\n      for (var node = sourceFiber, parent = node.return; null !== parent; )\r\n        null === node.alternate &&\r\n          0 !== (node.flags & 4098) &&\r\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber),\r\n          (node = parent),\r\n          (parent = node.return);\r\n      return 3 === node.tag ? node.stateNode : null;\r\n    }\r\n    function resolveFunctionForHotReloading(type) {\r\n      if (null === resolveFamily) return type;\r\n      var family = resolveFamily(type);\r\n      return void 0 === family ? type : family.current;\r\n    }\r\n    function resolveForwardRefForHotReloading(type) {\r\n      if (null === resolveFamily) return type;\r\n      var family = resolveFamily(type);\r\n      return void 0 === family\r\n        ? null !== type &&\r\n          void 0 !== type &&\r\n          \"function\" === typeof type.render &&\r\n          ((family = resolveFunctionForHotReloading(type.render)),\r\n          type.render !== family)\r\n          ? ((family = { $$typeof: REACT_FORWARD_REF_TYPE, render: family }),\r\n            void 0 !== type.displayName &&\r\n              (family.displayName = type.displayName),\r\n            family)\r\n          : type\r\n        : family.current;\r\n    }\r\n    function isCompatibleFamilyForHotReloading(fiber, element) {\r\n      if (null === resolveFamily) return !1;\r\n      var prevType = fiber.elementType;\r\n      element = element.type;\r\n      var needsCompareFamilies = !1,\r\n        $$typeofNextType =\r\n          \"object\" === typeof element && null !== element\r\n            ? element.$$typeof\r\n            : null;\r\n      switch (fiber.tag) {\r\n        case 1:\r\n          \"function\" === typeof element && (needsCompareFamilies = !0);\r\n          break;\r\n        case 0:\r\n          \"function\" === typeof element\r\n            ? (needsCompareFamilies = !0)\r\n            : $$typeofNextType === REACT_LAZY_TYPE &&\r\n              (needsCompareFamilies = !0);\r\n          break;\r\n        case 11:\r\n          $$typeofNextType === REACT_FORWARD_REF_TYPE\r\n            ? (needsCompareFamilies = !0)\r\n            : $$typeofNextType === REACT_LAZY_TYPE &&\r\n              (needsCompareFamilies = !0);\r\n          break;\r\n        case 14:\r\n        case 15:\r\n          $$typeofNextType === REACT_MEMO_TYPE\r\n            ? (needsCompareFamilies = !0)\r\n            : $$typeofNextType === REACT_LAZY_TYPE &&\r\n              (needsCompareFamilies = !0);\r\n          break;\r\n        default:\r\n          return !1;\r\n      }\r\n      return needsCompareFamilies &&\r\n        ((fiber = resolveFamily(prevType)),\r\n        void 0 !== fiber && fiber === resolveFamily(element))\r\n        ? !0\r\n        : !1;\r\n    }\r\n    function markFailedErrorBoundaryForHotReloading(fiber) {\r\n      null !== resolveFamily &&\r\n        \"function\" === typeof WeakSet &&\r\n        (null === failedBoundaries && (failedBoundaries = new WeakSet()),\r\n        failedBoundaries.add(fiber));\r\n    }\r\n    function scheduleFibersWithFamiliesRecursively(\r\n      fiber,\r\n      updatedFamilies,\r\n      staleFamilies\r\n    ) {\r\n      var alternate = fiber.alternate,\r\n        child = fiber.child,\r\n        sibling = fiber.sibling,\r\n        tag = fiber.tag,\r\n        type = fiber.type,\r\n        candidateType = null;\r\n      switch (tag) {\r\n        case 0:\r\n        case 15:\r\n        case 1:\r\n          candidateType = type;\r\n          break;\r\n        case 11:\r\n          candidateType = type.render;\r\n      }\r\n      if (null === resolveFamily)\r\n        throw Error(\"Expected resolveFamily to be set during hot reload.\");\r\n      var needsRender = !1;\r\n      type = !1;\r\n      null !== candidateType &&\r\n        ((candidateType = resolveFamily(candidateType)),\r\n        void 0 !== candidateType &&\r\n          (staleFamilies.has(candidateType)\r\n            ? (type = !0)\r\n            : updatedFamilies.has(candidateType) &&\r\n              (1 === tag ? (type = !0) : (needsRender = !0))));\r\n      null !== failedBoundaries &&\r\n        (failedBoundaries.has(fiber) ||\r\n          (null !== alternate && failedBoundaries.has(alternate))) &&\r\n        (type = !0);\r\n      type && (fiber._debugNeedsRemount = !0);\r\n      if (type || needsRender)\r\n        (alternate = enqueueConcurrentRenderForLane(fiber, 2)),\r\n          null !== alternate && scheduleUpdateOnFiber(alternate, fiber, 2);\r\n      null === child ||\r\n        type ||\r\n        scheduleFibersWithFamiliesRecursively(\r\n          child,\r\n          updatedFamilies,\r\n          staleFamilies\r\n        );\r\n      null !== sibling &&\r\n        scheduleFibersWithFamiliesRecursively(\r\n          sibling,\r\n          updatedFamilies,\r\n          staleFamilies\r\n        );\r\n    }\r\n    function FiberNode(tag, pendingProps, key, mode) {\r\n      this.tag = tag;\r\n      this.key = key;\r\n      this.sibling =\r\n        this.child =\r\n        this.return =\r\n        this.stateNode =\r\n        this.type =\r\n        this.elementType =\r\n          null;\r\n      this.index = 0;\r\n      this.refCleanup = this.ref = null;\r\n      this.pendingProps = pendingProps;\r\n      this.dependencies =\r\n        this.memoizedState =\r\n        this.updateQueue =\r\n        this.memoizedProps =\r\n          null;\r\n      this.mode = mode;\r\n      this.subtreeFlags = this.flags = 0;\r\n      this.deletions = null;\r\n      this.childLanes = this.lanes = 0;\r\n      this.alternate = null;\r\n      this.actualDuration = -0;\r\n      this.actualStartTime = -1.1;\r\n      this.treeBaseDuration = this.selfBaseDuration = -0;\r\n      this._debugTask =\r\n        this._debugStack =\r\n        this._debugOwner =\r\n        this._debugInfo =\r\n          null;\r\n      this._debugNeedsRemount = !1;\r\n      this._debugHookTypes = null;\r\n      hasBadMapPolyfill ||\r\n        \"function\" !== typeof Object.preventExtensions ||\r\n        Object.preventExtensions(this);\r\n    }\r\n    function shouldConstruct(Component) {\r\n      Component = Component.prototype;\r\n      return !(!Component || !Component.isReactComponent);\r\n    }\r\n    function createWorkInProgress(current, pendingProps) {\r\n      var workInProgress = current.alternate;\r\n      null === workInProgress\r\n        ? ((workInProgress = createFiber(\r\n            current.tag,\r\n            pendingProps,\r\n            current.key,\r\n            current.mode\r\n          )),\r\n          (workInProgress.elementType = current.elementType),\r\n          (workInProgress.type = current.type),\r\n          (workInProgress.stateNode = current.stateNode),\r\n          (workInProgress._debugOwner = current._debugOwner),\r\n          (workInProgress._debugStack = current._debugStack),\r\n          (workInProgress._debugTask = current._debugTask),\r\n          (workInProgress._debugHookTypes = current._debugHookTypes),\r\n          (workInProgress.alternate = current),\r\n          (current.alternate = workInProgress))\r\n        : ((workInProgress.pendingProps = pendingProps),\r\n          (workInProgress.type = current.type),\r\n          (workInProgress.flags = 0),\r\n          (workInProgress.subtreeFlags = 0),\r\n          (workInProgress.deletions = null),\r\n          (workInProgress.actualDuration = -0),\r\n          (workInProgress.actualStartTime = -1.1));\r\n      workInProgress.flags = current.flags & 65011712;\r\n      workInProgress.childLanes = current.childLanes;\r\n      workInProgress.lanes = current.lanes;\r\n      workInProgress.child = current.child;\r\n      workInProgress.memoizedProps = current.memoizedProps;\r\n      workInProgress.memoizedState = current.memoizedState;\r\n      workInProgress.updateQueue = current.updateQueue;\r\n      pendingProps = current.dependencies;\r\n      workInProgress.dependencies =\r\n        null === pendingProps\r\n          ? null\r\n          : {\r\n              lanes: pendingProps.lanes,\r\n              firstContext: pendingProps.firstContext,\r\n              _debugThenableState: pendingProps._debugThenableState\r\n            };\r\n      workInProgress.sibling = current.sibling;\r\n      workInProgress.index = current.index;\r\n      workInProgress.ref = current.ref;\r\n      workInProgress.refCleanup = current.refCleanup;\r\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\r\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\r\n      workInProgress._debugInfo = current._debugInfo;\r\n      workInProgress._debugNeedsRemount = current._debugNeedsRemount;\r\n      switch (workInProgress.tag) {\r\n        case 0:\r\n        case 15:\r\n          workInProgress.type = resolveFunctionForHotReloading(current.type);\r\n          break;\r\n        case 1:\r\n          workInProgress.type = resolveFunctionForHotReloading(current.type);\r\n          break;\r\n        case 11:\r\n          workInProgress.type = resolveForwardRefForHotReloading(current.type);\r\n      }\r\n      return workInProgress;\r\n    }\r\n    function resetWorkInProgress(workInProgress, renderLanes) {\r\n      workInProgress.flags &= 65011714;\r\n      var current = workInProgress.alternate;\r\n      null === current\r\n        ? ((workInProgress.childLanes = 0),\r\n          (workInProgress.lanes = renderLanes),\r\n          (workInProgress.child = null),\r\n          (workInProgress.subtreeFlags = 0),\r\n          (workInProgress.memoizedProps = null),\r\n          (workInProgress.memoizedState = null),\r\n          (workInProgress.updateQueue = null),\r\n          (workInProgress.dependencies = null),\r\n          (workInProgress.stateNode = null),\r\n          (workInProgress.selfBaseDuration = 0),\r\n          (workInProgress.treeBaseDuration = 0))\r\n        : ((workInProgress.childLanes = current.childLanes),\r\n          (workInProgress.lanes = current.lanes),\r\n          (workInProgress.child = current.child),\r\n          (workInProgress.subtreeFlags = 0),\r\n          (workInProgress.deletions = null),\r\n          (workInProgress.memoizedProps = current.memoizedProps),\r\n          (workInProgress.memoizedState = current.memoizedState),\r\n          (workInProgress.updateQueue = current.updateQueue),\r\n          (workInProgress.type = current.type),\r\n          (renderLanes = current.dependencies),\r\n          (workInProgress.dependencies =\r\n            null === renderLanes\r\n              ? null\r\n              : {\r\n                  lanes: renderLanes.lanes,\r\n                  firstContext: renderLanes.firstContext,\r\n                  _debugThenableState: renderLanes._debugThenableState\r\n                }),\r\n          (workInProgress.selfBaseDuration = current.selfBaseDuration),\r\n          (workInProgress.treeBaseDuration = current.treeBaseDuration));\r\n      return workInProgress;\r\n    }\r\n    function createFiberFromTypeAndProps(\r\n      type,\r\n      key,\r\n      pendingProps,\r\n      owner,\r\n      mode,\r\n      lanes\r\n    ) {\r\n      var fiberTag = 0,\r\n        resolvedType = type;\r\n      if (\"function\" === typeof type)\r\n        shouldConstruct(type) && (fiberTag = 1),\r\n          (resolvedType = resolveFunctionForHotReloading(resolvedType));\r\n      else if (\"string\" === typeof type)\r\n        (fiberTag = getHostContext()),\r\n          (fiberTag = isHostHoistableType(type, pendingProps, fiberTag)\r\n            ? 26\r\n            : \"html\" === type || \"head\" === type || \"body\" === type\r\n              ? 27\r\n              : 5);\r\n      else\r\n        a: switch (type) {\r\n          case REACT_ACTIVITY_TYPE:\r\n            return (\r\n              (key = createFiber(31, pendingProps, key, mode)),\r\n              (key.elementType = REACT_ACTIVITY_TYPE),\r\n              (key.lanes = lanes),\r\n              key\r\n            );\r\n          case REACT_FRAGMENT_TYPE:\r\n            return createFiberFromFragment(\r\n              pendingProps.children,\r\n              mode,\r\n              lanes,\r\n              key\r\n            );\r\n          case REACT_STRICT_MODE_TYPE:\r\n            fiberTag = 8;\r\n            mode |= StrictLegacyMode;\r\n            mode |= StrictEffectsMode;\r\n            break;\r\n          case REACT_PROFILER_TYPE:\r\n            return (\r\n              (type = pendingProps),\r\n              (owner = mode),\r\n              \"string\" !== typeof type.id &&\r\n                console.error(\r\n                  'Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.',\r\n                  typeof type.id\r\n                ),\r\n              (key = createFiber(12, type, key, owner | ProfileMode)),\r\n              (key.elementType = REACT_PROFILER_TYPE),\r\n              (key.lanes = lanes),\r\n              (key.stateNode = { effectDuration: 0, passiveEffectDuration: 0 }),\r\n              key\r\n            );\r\n          case REACT_SUSPENSE_TYPE:\r\n            return (\r\n              (key = createFiber(13, pendingProps, key, mode)),\r\n              (key.elementType = REACT_SUSPENSE_TYPE),\r\n              (key.lanes = lanes),\r\n              key\r\n            );\r\n          case REACT_SUSPENSE_LIST_TYPE:\r\n            return (\r\n              (key = createFiber(19, pendingProps, key, mode)),\r\n              (key.elementType = REACT_SUSPENSE_LIST_TYPE),\r\n              (key.lanes = lanes),\r\n              key\r\n            );\r\n          default:\r\n            if (\"object\" === typeof type && null !== type)\r\n              switch (type.$$typeof) {\r\n                case REACT_PROVIDER_TYPE:\r\n                case REACT_CONTEXT_TYPE:\r\n                  fiberTag = 10;\r\n                  break a;\r\n                case REACT_CONSUMER_TYPE:\r\n                  fiberTag = 9;\r\n                  break a;\r\n                case REACT_FORWARD_REF_TYPE:\r\n                  fiberTag = 11;\r\n                  resolvedType = resolveForwardRefForHotReloading(resolvedType);\r\n                  break a;\r\n                case REACT_MEMO_TYPE:\r\n                  fiberTag = 14;\r\n                  break a;\r\n                case REACT_LAZY_TYPE:\r\n                  fiberTag = 16;\r\n                  resolvedType = null;\r\n                  break a;\r\n              }\r\n            resolvedType = \"\";\r\n            if (\r\n              void 0 === type ||\r\n              (\"object\" === typeof type &&\r\n                null !== type &&\r\n                0 === Object.keys(type).length)\r\n            )\r\n              resolvedType +=\r\n                \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\";\r\n            null === type\r\n              ? (pendingProps = \"null\")\r\n              : isArrayImpl(type)\r\n                ? (pendingProps = \"array\")\r\n                : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE\r\n                  ? ((pendingProps =\r\n                      \"<\" +\r\n                      (getComponentNameFromType(type.type) || \"Unknown\") +\r\n                      \" />\"),\r\n                    (resolvedType =\r\n                      \" Did you accidentally export a JSX literal instead of a component?\"))\r\n                  : (pendingProps = typeof type);\r\n            (fiberTag = owner ? getComponentNameFromOwner(owner) : null) &&\r\n              (resolvedType +=\r\n                \"\\n\\nCheck the render method of `\" + fiberTag + \"`.\");\r\n            fiberTag = 29;\r\n            pendingProps = Error(\r\n              \"Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: \" +\r\n                (pendingProps + \".\" + resolvedType)\r\n            );\r\n            resolvedType = null;\r\n        }\r\n      key = createFiber(fiberTag, pendingProps, key, mode);\r\n      key.elementType = type;\r\n      key.type = resolvedType;\r\n      key.lanes = lanes;\r\n      key._debugOwner = owner;\r\n      return key;\r\n    }\r\n    function createFiberFromElement(element, mode, lanes) {\r\n      mode = createFiberFromTypeAndProps(\r\n        element.type,\r\n        element.key,\r\n        element.props,\r\n        element._owner,\r\n        mode,\r\n        lanes\r\n      );\r\n      mode._debugOwner = element._owner;\r\n      mode._debugStack = element._debugStack;\r\n      mode._debugTask = element._debugTask;\r\n      return mode;\r\n    }\r\n    function createFiberFromFragment(elements, mode, lanes, key) {\r\n      elements = createFiber(7, elements, key, mode);\r\n      elements.lanes = lanes;\r\n      return elements;\r\n    }\r\n    function createFiberFromText(content, mode, lanes) {\r\n      content = createFiber(6, content, null, mode);\r\n      content.lanes = lanes;\r\n      return content;\r\n    }\r\n    function createFiberFromPortal(portal, mode, lanes) {\r\n      mode = createFiber(\r\n        4,\r\n        null !== portal.children ? portal.children : [],\r\n        portal.key,\r\n        mode\r\n      );\r\n      mode.lanes = lanes;\r\n      mode.stateNode = {\r\n        containerInfo: portal.containerInfo,\r\n        pendingChildren: null,\r\n        implementation: portal.implementation\r\n      };\r\n      return mode;\r\n    }\r\n    function pushTreeFork(workInProgress, totalChildren) {\r\n      warnIfNotHydrating();\r\n      forkStack[forkStackIndex++] = treeForkCount;\r\n      forkStack[forkStackIndex++] = treeForkProvider;\r\n      treeForkProvider = workInProgress;\r\n      treeForkCount = totalChildren;\r\n    }\r\n    function pushTreeId(workInProgress, totalChildren, index) {\r\n      warnIfNotHydrating();\r\n      idStack[idStackIndex++] = treeContextId;\r\n      idStack[idStackIndex++] = treeContextOverflow;\r\n      idStack[idStackIndex++] = treeContextProvider;\r\n      treeContextProvider = workInProgress;\r\n      var baseIdWithLeadingBit = treeContextId;\r\n      workInProgress = treeContextOverflow;\r\n      var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;\r\n      baseIdWithLeadingBit &= ~(1 << baseLength);\r\n      index += 1;\r\n      var length = 32 - clz32(totalChildren) + baseLength;\r\n      if (30 < length) {\r\n        var numberOfOverflowBits = baseLength - (baseLength % 5);\r\n        length = (\r\n          baseIdWithLeadingBit &\r\n          ((1 << numberOfOverflowBits) - 1)\r\n        ).toString(32);\r\n        baseIdWithLeadingBit >>= numberOfOverflowBits;\r\n        baseLength -= numberOfOverflowBits;\r\n        treeContextId =\r\n          (1 << (32 - clz32(totalChildren) + baseLength)) |\r\n          (index << baseLength) |\r\n          baseIdWithLeadingBit;\r\n        treeContextOverflow = length + workInProgress;\r\n      } else\r\n        (treeContextId =\r\n          (1 << length) | (index << baseLength) | baseIdWithLeadingBit),\r\n          (treeContextOverflow = workInProgress);\r\n    }\r\n    function pushMaterializedTreeId(workInProgress) {\r\n      warnIfNotHydrating();\r\n      null !== workInProgress.return &&\r\n        (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));\r\n    }\r\n    function popTreeContext(workInProgress) {\r\n      for (; workInProgress === treeForkProvider; )\r\n        (treeForkProvider = forkStack[--forkStackIndex]),\r\n          (forkStack[forkStackIndex] = null),\r\n          (treeForkCount = forkStack[--forkStackIndex]),\r\n          (forkStack[forkStackIndex] = null);\r\n      for (; workInProgress === treeContextProvider; )\r\n        (treeContextProvider = idStack[--idStackIndex]),\r\n          (idStack[idStackIndex] = null),\r\n          (treeContextOverflow = idStack[--idStackIndex]),\r\n          (idStack[idStackIndex] = null),\r\n          (treeContextId = idStack[--idStackIndex]),\r\n          (idStack[idStackIndex] = null);\r\n    }\r\n    function warnIfNotHydrating() {\r\n      isHydrating ||\r\n        console.error(\r\n          \"Expected to be hydrating. This is a bug in React. Please file an issue.\"\r\n        );\r\n    }\r\n    function buildHydrationDiffNode(fiber, distanceFromLeaf) {\r\n      if (null === fiber.return) {\r\n        if (null === hydrationDiffRootDEV)\r\n          hydrationDiffRootDEV = {\r\n            fiber: fiber,\r\n            children: [],\r\n            serverProps: void 0,\r\n            serverTail: [],\r\n            distanceFromLeaf: distanceFromLeaf\r\n          };\r\n        else {\r\n          if (hydrationDiffRootDEV.fiber !== fiber)\r\n            throw Error(\r\n              \"Saw multiple hydration diff roots in a pass. This is a bug in React.\"\r\n            );\r\n          hydrationDiffRootDEV.distanceFromLeaf > distanceFromLeaf &&\r\n            (hydrationDiffRootDEV.distanceFromLeaf = distanceFromLeaf);\r\n        }\r\n        return hydrationDiffRootDEV;\r\n      }\r\n      var siblings = buildHydrationDiffNode(\r\n        fiber.return,\r\n        distanceFromLeaf + 1\r\n      ).children;\r\n      if (0 < siblings.length && siblings[siblings.length - 1].fiber === fiber)\r\n        return (\r\n          (siblings = siblings[siblings.length - 1]),\r\n          siblings.distanceFromLeaf > distanceFromLeaf &&\r\n            (siblings.distanceFromLeaf = distanceFromLeaf),\r\n          siblings\r\n        );\r\n      distanceFromLeaf = {\r\n        fiber: fiber,\r\n        children: [],\r\n        serverProps: void 0,\r\n        serverTail: [],\r\n        distanceFromLeaf: distanceFromLeaf\r\n      };\r\n      siblings.push(distanceFromLeaf);\r\n      return distanceFromLeaf;\r\n    }\r\n    function warnNonHydratedInstance(fiber, rejectedCandidate) {\r\n      didSuspendOrErrorDEV ||\r\n        ((fiber = buildHydrationDiffNode(fiber, 0)),\r\n        (fiber.serverProps = null),\r\n        null !== rejectedCandidate &&\r\n          ((rejectedCandidate =\r\n            describeHydratableInstanceForDevWarnings(rejectedCandidate)),\r\n          fiber.serverTail.push(rejectedCandidate)));\r\n    }\r\n    function throwOnHydrationMismatch(fiber) {\r\n      var diff = \"\",\r\n        diffRoot = hydrationDiffRootDEV;\r\n      null !== diffRoot &&\r\n        ((hydrationDiffRootDEV = null), (diff = describeDiff(diffRoot)));\r\n      queueHydrationError(\r\n        createCapturedValueAtFiber(\r\n          Error(\r\n            \"Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:\\n\\n- A server/client branch `if (typeof window !== 'undefined')`.\\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\\n- Date formatting in a user's locale which doesn't match the server.\\n- External changing data without sending a snapshot of it along with the HTML.\\n- Invalid HTML tag nesting.\\n\\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\\n\\nhttps://react.dev/link/hydration-mismatch\" +\r\n              diff\r\n          ),\r\n          fiber\r\n        )\r\n      );\r\n      throw HydrationMismatchException;\r\n    }\r\n    function prepareToHydrateHostInstance(fiber) {\r\n      var didHydrate = fiber.stateNode;\r\n      var type = fiber.type,\r\n        props = fiber.memoizedProps;\r\n      didHydrate[internalInstanceKey] = fiber;\r\n      didHydrate[internalPropsKey] = props;\r\n      validatePropertiesInDevelopment(type, props);\r\n      switch (type) {\r\n        case \"dialog\":\r\n          listenToNonDelegatedEvent(\"cancel\", didHydrate);\r\n          listenToNonDelegatedEvent(\"close\", didHydrate);\r\n          break;\r\n        case \"iframe\":\r\n        case \"object\":\r\n        case \"embed\":\r\n          listenToNonDelegatedEvent(\"load\", didHydrate);\r\n          break;\r\n        case \"video\":\r\n        case \"audio\":\r\n          for (type = 0; type < mediaEventTypes.length; type++)\r\n            listenToNonDelegatedEvent(mediaEventTypes[type], didHydrate);\r\n          break;\r\n        case \"source\":\r\n          listenToNonDelegatedEvent(\"error\", didHydrate);\r\n          break;\r\n        case \"img\":\r\n        case \"image\":\r\n        case \"link\":\r\n          listenToNonDelegatedEvent(\"error\", didHydrate);\r\n          listenToNonDelegatedEvent(\"load\", didHydrate);\r\n          break;\r\n        case \"details\":\r\n          listenToNonDelegatedEvent(\"toggle\", didHydrate);\r\n          break;\r\n        case \"input\":\r\n          checkControlledValueProps(\"input\", props);\r\n          listenToNonDelegatedEvent(\"invalid\", didHydrate);\r\n          validateInputProps(didHydrate, props);\r\n          initInput(\r\n            didHydrate,\r\n            props.value,\r\n            props.defaultValue,\r\n            props.checked,\r\n            props.defaultChecked,\r\n            props.type,\r\n            props.name,\r\n            !0\r\n          );\r\n          track(didHydrate);\r\n          break;\r\n        case \"option\":\r\n          validateOptionProps(didHydrate, props);\r\n          break;\r\n        case \"select\":\r\n          checkControlledValueProps(\"select\", props);\r\n          listenToNonDelegatedEvent(\"invalid\", didHydrate);\r\n          validateSelectProps(didHydrate, props);\r\n          break;\r\n        case \"textarea\":\r\n          checkControlledValueProps(\"textarea\", props),\r\n            listenToNonDelegatedEvent(\"invalid\", didHydrate),\r\n            validateTextareaProps(didHydrate, props),\r\n            initTextarea(\r\n              didHydrate,\r\n              props.value,\r\n              props.defaultValue,\r\n              props.children\r\n            ),\r\n            track(didHydrate);\r\n      }\r\n      type = props.children;\r\n      (\"string\" !== typeof type &&\r\n        \"number\" !== typeof type &&\r\n        \"bigint\" !== typeof type) ||\r\n      didHydrate.textContent === \"\" + type ||\r\n      !0 === props.suppressHydrationWarning ||\r\n      checkForUnmatchedText(didHydrate.textContent, type)\r\n        ? (null != props.popover &&\r\n            (listenToNonDelegatedEvent(\"beforetoggle\", didHydrate),\r\n            listenToNonDelegatedEvent(\"toggle\", didHydrate)),\r\n          null != props.onScroll &&\r\n            listenToNonDelegatedEvent(\"scroll\", didHydrate),\r\n          null != props.onScrollEnd &&\r\n            listenToNonDelegatedEvent(\"scrollend\", didHydrate),\r\n          null != props.onClick && (didHydrate.onclick = noop$1),\r\n          (didHydrate = !0))\r\n        : (didHydrate = !1);\r\n      didHydrate || throwOnHydrationMismatch(fiber);\r\n    }\r\n    function popToNextHostParent(fiber) {\r\n      for (hydrationParentFiber = fiber.return; hydrationParentFiber; )\r\n        switch (hydrationParentFiber.tag) {\r\n          case 5:\r\n          case 13:\r\n            rootOrSingletonContext = !1;\r\n            return;\r\n          case 27:\r\n          case 3:\r\n            rootOrSingletonContext = !0;\r\n            return;\r\n          default:\r\n            hydrationParentFiber = hydrationParentFiber.return;\r\n        }\r\n    }\r\n    function popHydrationState(fiber) {\r\n      if (fiber !== hydrationParentFiber) return !1;\r\n      if (!isHydrating)\r\n        return popToNextHostParent(fiber), (isHydrating = !0), !1;\r\n      var tag = fiber.tag,\r\n        JSCompiler_temp;\r\n      if ((JSCompiler_temp = 3 !== tag && 27 !== tag)) {\r\n        if ((JSCompiler_temp = 5 === tag))\r\n          (JSCompiler_temp = fiber.type),\r\n            (JSCompiler_temp =\r\n              !(\"form\" !== JSCompiler_temp && \"button\" !== JSCompiler_temp) ||\r\n              shouldSetTextContent(fiber.type, fiber.memoizedProps));\r\n        JSCompiler_temp = !JSCompiler_temp;\r\n      }\r\n      if (JSCompiler_temp && nextHydratableInstance) {\r\n        for (JSCompiler_temp = nextHydratableInstance; JSCompiler_temp; ) {\r\n          var diffNode = buildHydrationDiffNode(fiber, 0),\r\n            description =\r\n              describeHydratableInstanceForDevWarnings(JSCompiler_temp);\r\n          diffNode.serverTail.push(description);\r\n          JSCompiler_temp =\r\n            \"Suspense\" === description.type\r\n              ? getNextHydratableInstanceAfterSuspenseInstance(JSCompiler_temp)\r\n              : getNextHydratable(JSCompiler_temp.nextSibling);\r\n        }\r\n        throwOnHydrationMismatch(fiber);\r\n      }\r\n      popToNextHostParent(fiber);\r\n      if (13 === tag) {\r\n        fiber = fiber.memoizedState;\r\n        fiber = null !== fiber ? fiber.dehydrated : null;\r\n        if (!fiber)\r\n          throw Error(\r\n            \"Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.\"\r\n          );\r\n        nextHydratableInstance =\r\n          getNextHydratableInstanceAfterSuspenseInstance(fiber);\r\n      } else\r\n        27 === tag\r\n          ? ((tag = nextHydratableInstance),\r\n            isSingletonScope(fiber.type)\r\n              ? ((fiber = previousHydratableOnEnteringScopedSingleton),\r\n                (previousHydratableOnEnteringScopedSingleton = null),\r\n                (nextHydratableInstance = fiber))\r\n              : (nextHydratableInstance = tag))\r\n          : (nextHydratableInstance = hydrationParentFiber\r\n              ? getNextHydratable(fiber.stateNode.nextSibling)\r\n              : null);\r\n      return !0;\r\n    }\r\n    function resetHydrationState() {\r\n      nextHydratableInstance = hydrationParentFiber = null;\r\n      didSuspendOrErrorDEV = isHydrating = !1;\r\n    }\r\n    function upgradeHydrationErrorsToRecoverable() {\r\n      var queuedErrors = hydrationErrors;\r\n      null !== queuedErrors &&\r\n        (null === workInProgressRootRecoverableErrors\r\n          ? (workInProgressRootRecoverableErrors = queuedErrors)\r\n          : workInProgressRootRecoverableErrors.push.apply(\r\n              workInProgressRootRecoverableErrors,\r\n              queuedErrors\r\n            ),\r\n        (hydrationErrors = null));\r\n      return queuedErrors;\r\n    }\r\n    function queueHydrationError(error) {\r\n      null === hydrationErrors\r\n        ? (hydrationErrors = [error])\r\n        : hydrationErrors.push(error);\r\n    }\r\n    function emitPendingHydrationWarnings() {\r\n      var diffRoot = hydrationDiffRootDEV;\r\n      if (null !== diffRoot) {\r\n        hydrationDiffRootDEV = null;\r\n        for (var diff = describeDiff(diffRoot); 0 < diffRoot.children.length; )\r\n          diffRoot = diffRoot.children[0];\r\n        runWithFiberInDEV(diffRoot.fiber, function () {\r\n          console.error(\r\n            \"A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\\n\\n- A server/client branch `if (typeof window !== 'undefined')`.\\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\\n- Date formatting in a user's locale which doesn't match the server.\\n- External changing data without sending a snapshot of it along with the HTML.\\n- Invalid HTML tag nesting.\\n\\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\\n\\n%s%s\",\r\n            \"https://react.dev/link/hydration-mismatch\",\r\n            diff\r\n          );\r\n        });\r\n      }\r\n    }\r\n    function resetContextDependencies() {\r\n      lastContextDependency = currentlyRenderingFiber$1 = null;\r\n      isDisallowedContextReadInDEV = !1;\r\n    }\r\n    function pushProvider(providerFiber, context, nextValue) {\r\n      push(valueCursor, context._currentValue, providerFiber);\r\n      context._currentValue = nextValue;\r\n      push(rendererCursorDEV, context._currentRenderer, providerFiber);\r\n      void 0 !== context._currentRenderer &&\r\n        null !== context._currentRenderer &&\r\n        context._currentRenderer !== rendererSigil &&\r\n        console.error(\r\n          \"Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.\"\r\n        );\r\n      context._currentRenderer = rendererSigil;\r\n    }\r\n    function popProvider(context, providerFiber) {\r\n      context._currentValue = valueCursor.current;\r\n      var currentRenderer = rendererCursorDEV.current;\r\n      pop(rendererCursorDEV, providerFiber);\r\n      context._currentRenderer = currentRenderer;\r\n      pop(valueCursor, providerFiber);\r\n    }\r\n    function scheduleContextWorkOnParentPath(\r\n      parent,\r\n      renderLanes,\r\n      propagationRoot\r\n    ) {\r\n      for (; null !== parent; ) {\r\n        var alternate = parent.alternate;\r\n        (parent.childLanes & renderLanes) !== renderLanes\r\n          ? ((parent.childLanes |= renderLanes),\r\n            null !== alternate && (alternate.childLanes |= renderLanes))\r\n          : null !== alternate &&\r\n            (alternate.childLanes & renderLanes) !== renderLanes &&\r\n            (alternate.childLanes |= renderLanes);\r\n        if (parent === propagationRoot) break;\r\n        parent = parent.return;\r\n      }\r\n      parent !== propagationRoot &&\r\n        console.error(\r\n          \"Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.\"\r\n        );\r\n    }\r\n    function propagateContextChanges(\r\n      workInProgress,\r\n      contexts,\r\n      renderLanes,\r\n      forcePropagateEntireTree\r\n    ) {\r\n      var fiber = workInProgress.child;\r\n      null !== fiber && (fiber.return = workInProgress);\r\n      for (; null !== fiber; ) {\r\n        var list = fiber.dependencies;\r\n        if (null !== list) {\r\n          var nextFiber = fiber.child;\r\n          list = list.firstContext;\r\n          a: for (; null !== list; ) {\r\n            var dependency = list;\r\n            list = fiber;\r\n            for (var i = 0; i < contexts.length; i++)\r\n              if (dependency.context === contexts[i]) {\r\n                list.lanes |= renderLanes;\r\n                dependency = list.alternate;\r\n                null !== dependency && (dependency.lanes |= renderLanes);\r\n                scheduleContextWorkOnParentPath(\r\n                  list.return,\r\n                  renderLanes,\r\n                  workInProgress\r\n                );\r\n                forcePropagateEntireTree || (nextFiber = null);\r\n                break a;\r\n              }\r\n            list = dependency.next;\r\n          }\r\n        } else if (18 === fiber.tag) {\r\n          nextFiber = fiber.return;\r\n          if (null === nextFiber)\r\n            throw Error(\r\n              \"We just came from a parent so we must have had a parent. This is a bug in React.\"\r\n            );\r\n          nextFiber.lanes |= renderLanes;\r\n          list = nextFiber.alternate;\r\n          null !== list && (list.lanes |= renderLanes);\r\n          scheduleContextWorkOnParentPath(\r\n            nextFiber,\r\n            renderLanes,\r\n            workInProgress\r\n          );\r\n          nextFiber = null;\r\n        } else nextFiber = fiber.child;\r\n        if (null !== nextFiber) nextFiber.return = fiber;\r\n        else\r\n          for (nextFiber = fiber; null !== nextFiber; ) {\r\n            if (nextFiber === workInProgress) {\r\n              nextFiber = null;\r\n              break;\r\n            }\r\n            fiber = nextFiber.sibling;\r\n            if (null !== fiber) {\r\n              fiber.return = nextFiber.return;\r\n              nextFiber = fiber;\r\n              break;\r\n            }\r\n            nextFiber = nextFiber.return;\r\n          }\r\n        fiber = nextFiber;\r\n      }\r\n    }\r\n    function propagateParentContextChanges(\r\n      current,\r\n      workInProgress,\r\n      renderLanes,\r\n      forcePropagateEntireTree\r\n    ) {\r\n      current = null;\r\n      for (\r\n        var parent = workInProgress, isInsidePropagationBailout = !1;\r\n        null !== parent;\r\n\r\n      ) {\r\n        if (!isInsidePropagationBailout)\r\n          if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;\r\n          else if (0 !== (parent.flags & 262144)) break;\r\n        if (10 === parent.tag) {\r\n          var currentParent = parent.alternate;\r\n          if (null === currentParent)\r\n            throw Error(\"Should have a current fiber. This is a bug in React.\");\r\n          currentParent = currentParent.memoizedProps;\r\n          if (null !== currentParent) {\r\n            var context = parent.type;\r\n            objectIs(parent.pendingProps.value, currentParent.value) ||\r\n              (null !== current\r\n                ? current.push(context)\r\n                : (current = [context]));\r\n          }\r\n        } else if (parent === hostTransitionProviderCursor.current) {\r\n          currentParent = parent.alternate;\r\n          if (null === currentParent)\r\n            throw Error(\"Should have a current fiber. This is a bug in React.\");\r\n          currentParent.memoizedState.memoizedState !==\r\n            parent.memoizedState.memoizedState &&\r\n            (null !== current\r\n              ? current.push(HostTransitionContext)\r\n              : (current = [HostTransitionContext]));\r\n        }\r\n        parent = parent.return;\r\n      }\r\n      null !== current &&\r\n        propagateContextChanges(\r\n          workInProgress,\r\n          current,\r\n          renderLanes,\r\n          forcePropagateEntireTree\r\n        );\r\n      workInProgress.flags |= 262144;\r\n    }\r\n    function checkIfContextChanged(currentDependencies) {\r\n      for (\r\n        currentDependencies = currentDependencies.firstContext;\r\n        null !== currentDependencies;\r\n\r\n      ) {\r\n        if (\r\n          !objectIs(\r\n            currentDependencies.context._currentValue,\r\n            currentDependencies.memoizedValue\r\n          )\r\n        )\r\n          return !0;\r\n        currentDependencies = currentDependencies.next;\r\n      }\r\n      return !1;\r\n    }\r\n    function prepareToReadContext(workInProgress) {\r\n      currentlyRenderingFiber$1 = workInProgress;\r\n      lastContextDependency = null;\r\n      workInProgress = workInProgress.dependencies;\r\n      null !== workInProgress && (workInProgress.firstContext = null);\r\n    }\r\n    function readContext(context) {\r\n      isDisallowedContextReadInDEV &&\r\n        console.error(\r\n          \"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().\"\r\n        );\r\n      return readContextForConsumer(currentlyRenderingFiber$1, context);\r\n    }\r\n    function readContextDuringReconciliation(consumer, context) {\r\n      null === currentlyRenderingFiber$1 && prepareToReadContext(consumer);\r\n      return readContextForConsumer(consumer, context);\r\n    }\r\n    function readContextForConsumer(consumer, context) {\r\n      var value = context._currentValue;\r\n      context = { context: context, memoizedValue: value, next: null };\r\n      if (null === lastContextDependency) {\r\n        if (null === consumer)\r\n          throw Error(\r\n            \"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().\"\r\n          );\r\n        lastContextDependency = context;\r\n        consumer.dependencies = {\r\n          lanes: 0,\r\n          firstContext: context,\r\n          _debugThenableState: null\r\n        };\r\n        consumer.flags |= 524288;\r\n      } else lastContextDependency = lastContextDependency.next = context;\r\n      return value;\r\n    }\r\n    function createCache() {\r\n      return {\r\n        controller: new AbortControllerLocal(),\r\n        data: new Map(),\r\n        refCount: 0\r\n      };\r\n    }\r\n    function retainCache(cache) {\r\n      cache.controller.signal.aborted &&\r\n        console.warn(\r\n          \"A cache instance was retained after it was already freed. This likely indicates a bug in React.\"\r\n        );\r\n      cache.refCount++;\r\n    }\r\n    function releaseCache(cache) {\r\n      cache.refCount--;\r\n      0 > cache.refCount &&\r\n        console.warn(\r\n          \"A cache instance was released after it was already freed. This likely indicates a bug in React.\"\r\n        );\r\n      0 === cache.refCount &&\r\n        scheduleCallback$2(NormalPriority, function () {\r\n          cache.controller.abort();\r\n        });\r\n    }\r\n    function pushNestedEffectDurations() {\r\n      var prevEffectDuration = profilerEffectDuration;\r\n      profilerEffectDuration = 0;\r\n      return prevEffectDuration;\r\n    }\r\n    function popNestedEffectDurations(prevEffectDuration) {\r\n      var elapsedTime = profilerEffectDuration;\r\n      profilerEffectDuration = prevEffectDuration;\r\n      return elapsedTime;\r\n    }\r\n    function bubbleNestedEffectDurations(prevEffectDuration) {\r\n      var elapsedTime = profilerEffectDuration;\r\n      profilerEffectDuration += prevEffectDuration;\r\n      return elapsedTime;\r\n    }\r\n    function startProfilerTimer(fiber) {\r\n      profilerStartTime = now();\r\n      0 > fiber.actualStartTime && (fiber.actualStartTime = profilerStartTime);\r\n    }\r\n    function stopProfilerTimerIfRunningAndRecordDuration(fiber) {\r\n      if (0 <= profilerStartTime) {\r\n        var elapsedTime = now() - profilerStartTime;\r\n        fiber.actualDuration += elapsedTime;\r\n        fiber.selfBaseDuration = elapsedTime;\r\n        profilerStartTime = -1;\r\n      }\r\n    }\r\n    function stopProfilerTimerIfRunningAndRecordIncompleteDuration(fiber) {\r\n      if (0 <= profilerStartTime) {\r\n        var elapsedTime = now() - profilerStartTime;\r\n        fiber.actualDuration += elapsedTime;\r\n        profilerStartTime = -1;\r\n      }\r\n    }\r\n    function recordEffectDuration() {\r\n      if (0 <= profilerStartTime) {\r\n        var elapsedTime = now() - profilerStartTime;\r\n        profilerStartTime = -1;\r\n        profilerEffectDuration += elapsedTime;\r\n      }\r\n    }\r\n    function startEffectTimer() {\r\n      profilerStartTime = now();\r\n    }\r\n    function transferActualDuration(fiber) {\r\n      for (var child = fiber.child; child; )\r\n        (fiber.actualDuration += child.actualDuration), (child = child.sibling);\r\n    }\r\n    function entangleAsyncAction(transition, thenable) {\r\n      if (null === currentEntangledListeners) {\r\n        var entangledListeners = (currentEntangledListeners = []);\r\n        currentEntangledPendingCount = 0;\r\n        currentEntangledLane = requestTransitionLane();\r\n        currentEntangledActionThenable = {\r\n          status: \"pending\",\r\n          value: void 0,\r\n          then: function (resolve) {\r\n            entangledListeners.push(resolve);\r\n          }\r\n        };\r\n      }\r\n      currentEntangledPendingCount++;\r\n      thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);\r\n      return thenable;\r\n    }\r\n    function pingEngtangledActionScope() {\r\n      if (\r\n        0 === --currentEntangledPendingCount &&\r\n        null !== currentEntangledListeners\r\n      ) {\r\n        null !== currentEntangledActionThenable &&\r\n          (currentEntangledActionThenable.status = \"fulfilled\");\r\n        var listeners = currentEntangledListeners;\r\n        currentEntangledListeners = null;\r\n        currentEntangledLane = 0;\r\n        currentEntangledActionThenable = null;\r\n        for (var i = 0; i < listeners.length; i++) (0, listeners[i])();\r\n      }\r\n    }\r\n    function chainThenableValue(thenable, result) {\r\n      var listeners = [],\r\n        thenableWithOverride = {\r\n          status: \"pending\",\r\n          value: null,\r\n          reason: null,\r\n          then: function (resolve) {\r\n            listeners.push(resolve);\r\n          }\r\n        };\r\n      thenable.then(\r\n        function () {\r\n          thenableWithOverride.status = \"fulfilled\";\r\n          thenableWithOverride.value = result;\r\n          for (var i = 0; i < listeners.length; i++) (0, listeners[i])(result);\r\n        },\r\n        function (error) {\r\n          thenableWithOverride.status = \"rejected\";\r\n          thenableWithOverride.reason = error;\r\n          for (error = 0; error < listeners.length; error++)\r\n            (0, listeners[error])(void 0);\r\n        }\r\n      );\r\n      return thenableWithOverride;\r\n    }\r\n    function peekCacheFromPool() {\r\n      var cacheResumedFromPreviousRender = resumedCache.current;\r\n      return null !== cacheResumedFromPreviousRender\r\n        ? cacheResumedFromPreviousRender\r\n        : workInProgressRoot.pooledCache;\r\n    }\r\n    function pushTransition(offscreenWorkInProgress, prevCachePool) {\r\n      null === prevCachePool\r\n        ? push(resumedCache, resumedCache.current, offscreenWorkInProgress)\r\n        : push(resumedCache, prevCachePool.pool, offscreenWorkInProgress);\r\n    }\r\n    function getSuspendedCache() {\r\n      var cacheFromPool = peekCacheFromPool();\r\n      return null === cacheFromPool\r\n        ? null\r\n        : { parent: CacheContext._currentValue, pool: cacheFromPool };\r\n    }\r\n    function createThenableState() {\r\n      return { didWarnAboutUncachedPromise: !1, thenables: [] };\r\n    }\r\n    function isThenableResolved(thenable) {\r\n      thenable = thenable.status;\r\n      return \"fulfilled\" === thenable || \"rejected\" === thenable;\r\n    }\r\n    function noop$3() {}\r\n    function trackUsedThenable(thenableState, thenable, index) {\r\n      null !== ReactSharedInternals.actQueue &&\r\n        (ReactSharedInternals.didUsePromise = !0);\r\n      var trackedThenables = thenableState.thenables;\r\n      index = trackedThenables[index];\r\n      void 0 === index\r\n        ? trackedThenables.push(thenable)\r\n        : index !== thenable &&\r\n          (thenableState.didWarnAboutUncachedPromise ||\r\n            ((thenableState.didWarnAboutUncachedPromise = !0),\r\n            console.error(\r\n              \"A component was suspended by an uncached promise. Creating promises inside a Client Component or hook is not yet supported, except via a Suspense-compatible library or framework.\"\r\n            )),\r\n          thenable.then(noop$3, noop$3),\r\n          (thenable = index));\r\n      switch (thenable.status) {\r\n        case \"fulfilled\":\r\n          return thenable.value;\r\n        case \"rejected\":\r\n          throw (\r\n            ((thenableState = thenable.reason),\r\n            checkIfUseWrappedInAsyncCatch(thenableState),\r\n            thenableState)\r\n          );\r\n        default:\r\n          if (\"string\" === typeof thenable.status)\r\n            thenable.then(noop$3, noop$3);\r\n          else {\r\n            thenableState = workInProgressRoot;\r\n            if (\r\n              null !== thenableState &&\r\n              100 < thenableState.shellSuspendCounter\r\n            )\r\n              throw Error(\r\n                \"An unknown Component is an async Client Component. Only Server Components can be async at the moment. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.\"\r\n              );\r\n            thenableState = thenable;\r\n            thenableState.status = \"pending\";\r\n            thenableState.then(\r\n              function (fulfilledValue) {\r\n                if (\"pending\" === thenable.status) {\r\n                  var fulfilledThenable = thenable;\r\n                  fulfilledThenable.status = \"fulfilled\";\r\n                  fulfilledThenable.value = fulfilledValue;\r\n                }\r\n              },\r\n              function (error) {\r\n                if (\"pending\" === thenable.status) {\r\n                  var rejectedThenable = thenable;\r\n                  rejectedThenable.status = \"rejected\";\r\n                  rejectedThenable.reason = error;\r\n                }\r\n              }\r\n            );\r\n          }\r\n          switch (thenable.status) {\r\n            case \"fulfilled\":\r\n              return thenable.value;\r\n            case \"rejected\":\r\n              throw (\r\n                ((thenableState = thenable.reason),\r\n                checkIfUseWrappedInAsyncCatch(thenableState),\r\n                thenableState)\r\n              );\r\n          }\r\n          suspendedThenable = thenable;\r\n          needsToResetSuspendedThenableDEV = !0;\r\n          throw SuspenseException;\r\n      }\r\n    }\r\n    function getSuspendedThenable() {\r\n      if (null === suspendedThenable)\r\n        throw Error(\r\n          \"Expected a suspended thenable. This is a bug in React. Please file an issue.\"\r\n        );\r\n      var thenable = suspendedThenable;\r\n      suspendedThenable = null;\r\n      needsToResetSuspendedThenableDEV = !1;\r\n      return thenable;\r\n    }\r\n    function checkIfUseWrappedInAsyncCatch(rejectedReason) {\r\n      if (\r\n        rejectedReason === SuspenseException ||\r\n        rejectedReason === SuspenseActionException\r\n      )\r\n        throw Error(\r\n          \"Hooks are not supported inside an async component. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.\"\r\n        );\r\n    }\r\n    function initializeUpdateQueue(fiber) {\r\n      fiber.updateQueue = {\r\n        baseState: fiber.memoizedState,\r\n        firstBaseUpdate: null,\r\n        lastBaseUpdate: null,\r\n        shared: { pending: null, lanes: 0, hiddenCallbacks: null },\r\n        callbacks: null\r\n      };\r\n    }\r\n    function cloneUpdateQueue(current, workInProgress) {\r\n      current = current.updateQueue;\r\n      workInProgress.updateQueue === current &&\r\n        (workInProgress.updateQueue = {\r\n          baseState: current.baseState,\r\n          firstBaseUpdate: current.firstBaseUpdate,\r\n          lastBaseUpdate: current.lastBaseUpdate,\r\n          shared: current.shared,\r\n          callbacks: null\r\n        });\r\n    }\r\n    function createUpdate(lane) {\r\n      return {\r\n        lane: lane,\r\n        tag: UpdateState,\r\n        payload: null,\r\n        callback: null,\r\n        next: null\r\n      };\r\n    }\r\n    function enqueueUpdate(fiber, update, lane) {\r\n      var updateQueue = fiber.updateQueue;\r\n      if (null === updateQueue) return null;\r\n      updateQueue = updateQueue.shared;\r\n      if (\r\n        currentlyProcessingQueue === updateQueue &&\r\n        !didWarnUpdateInsideUpdate\r\n      ) {\r\n        var componentName = getComponentNameFromFiber(fiber);\r\n        console.error(\r\n          \"An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.\\n\\nPlease update the following component: %s\",\r\n          componentName\r\n        );\r\n        didWarnUpdateInsideUpdate = !0;\r\n      }\r\n      if ((executionContext & RenderContext) !== NoContext)\r\n        return (\r\n          (componentName = updateQueue.pending),\r\n          null === componentName\r\n            ? (update.next = update)\r\n            : ((update.next = componentName.next),\r\n              (componentName.next = update)),\r\n          (updateQueue.pending = update),\r\n          (update = getRootForUpdatedFiber(fiber)),\r\n          markUpdateLaneFromFiberToRoot(fiber, null, lane),\r\n          update\r\n        );\r\n      enqueueUpdate$1(fiber, updateQueue, update, lane);\r\n      return getRootForUpdatedFiber(fiber);\r\n    }\r\n    function entangleTransitions(root, fiber, lane) {\r\n      fiber = fiber.updateQueue;\r\n      if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194048))) {\r\n        var queueLanes = fiber.lanes;\r\n        queueLanes &= root.pendingLanes;\r\n        lane |= queueLanes;\r\n        fiber.lanes = lane;\r\n        markRootEntangled(root, lane);\r\n      }\r\n    }\r\n    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {\r\n      var queue = workInProgress.updateQueue,\r\n        current = workInProgress.alternate;\r\n      if (\r\n        null !== current &&\r\n        ((current = current.updateQueue), queue === current)\r\n      ) {\r\n        var newFirst = null,\r\n          newLast = null;\r\n        queue = queue.firstBaseUpdate;\r\n        if (null !== queue) {\r\n          do {\r\n            var clone = {\r\n              lane: queue.lane,\r\n              tag: queue.tag,\r\n              payload: queue.payload,\r\n              callback: null,\r\n              next: null\r\n            };\r\n            null === newLast\r\n              ? (newFirst = newLast = clone)\r\n              : (newLast = newLast.next = clone);\r\n            queue = queue.next;\r\n          } while (null !== queue);\r\n          null === newLast\r\n            ? (newFirst = newLast = capturedUpdate)\r\n            : (newLast = newLast.next = capturedUpdate);\r\n        } else newFirst = newLast = capturedUpdate;\r\n        queue = {\r\n          baseState: current.baseState,\r\n          firstBaseUpdate: newFirst,\r\n          lastBaseUpdate: newLast,\r\n          shared: current.shared,\r\n          callbacks: current.callbacks\r\n        };\r\n        workInProgress.updateQueue = queue;\r\n        return;\r\n      }\r\n      workInProgress = queue.lastBaseUpdate;\r\n      null === workInProgress\r\n        ? (queue.firstBaseUpdate = capturedUpdate)\r\n        : (workInProgress.next = capturedUpdate);\r\n      queue.lastBaseUpdate = capturedUpdate;\r\n    }\r\n    function suspendIfUpdateReadFromEntangledAsyncAction() {\r\n      if (didReadFromEntangledAsyncAction) {\r\n        var entangledActionThenable = currentEntangledActionThenable;\r\n        if (null !== entangledActionThenable) throw entangledActionThenable;\r\n      }\r\n    }\r\n    function processUpdateQueue(\r\n      workInProgress,\r\n      props,\r\n      instance$jscomp$0,\r\n      renderLanes\r\n    ) {\r\n      didReadFromEntangledAsyncAction = !1;\r\n      var queue = workInProgress.updateQueue;\r\n      hasForceUpdate = !1;\r\n      currentlyProcessingQueue = queue.shared;\r\n      var firstBaseUpdate = queue.firstBaseUpdate,\r\n        lastBaseUpdate = queue.lastBaseUpdate,\r\n        pendingQueue = queue.shared.pending;\r\n      if (null !== pendingQueue) {\r\n        queue.shared.pending = null;\r\n        var lastPendingUpdate = pendingQueue,\r\n          firstPendingUpdate = lastPendingUpdate.next;\r\n        lastPendingUpdate.next = null;\r\n        null === lastBaseUpdate\r\n          ? (firstBaseUpdate = firstPendingUpdate)\r\n          : (lastBaseUpdate.next = firstPendingUpdate);\r\n        lastBaseUpdate = lastPendingUpdate;\r\n        var current = workInProgress.alternate;\r\n        null !== current &&\r\n          ((current = current.updateQueue),\r\n          (pendingQueue = current.lastBaseUpdate),\r\n          pendingQueue !== lastBaseUpdate &&\r\n            (null === pendingQueue\r\n              ? (current.firstBaseUpdate = firstPendingUpdate)\r\n              : (pendingQueue.next = firstPendingUpdate),\r\n            (current.lastBaseUpdate = lastPendingUpdate)));\r\n      }\r\n      if (null !== firstBaseUpdate) {\r\n        var newState = queue.baseState;\r\n        lastBaseUpdate = 0;\r\n        current = firstPendingUpdate = lastPendingUpdate = null;\r\n        pendingQueue = firstBaseUpdate;\r\n        do {\r\n          var updateLane = pendingQueue.lane & -536870913,\r\n            isHiddenUpdate = updateLane !== pendingQueue.lane;\r\n          if (\r\n            isHiddenUpdate\r\n              ? (workInProgressRootRenderLanes & updateLane) === updateLane\r\n              : (renderLanes & updateLane) === updateLane\r\n          ) {\r\n            0 !== updateLane &&\r\n              updateLane === currentEntangledLane &&\r\n              (didReadFromEntangledAsyncAction = !0);\r\n            null !== current &&\r\n              (current = current.next =\r\n                {\r\n                  lane: 0,\r\n                  tag: pendingQueue.tag,\r\n                  payload: pendingQueue.payload,\r\n                  callback: null,\r\n                  next: null\r\n                });\r\n            a: {\r\n              updateLane = workInProgress;\r\n              var partialState = pendingQueue;\r\n              var nextProps = props,\r\n                instance = instance$jscomp$0;\r\n              switch (partialState.tag) {\r\n                case ReplaceState:\r\n                  partialState = partialState.payload;\r\n                  if (\"function\" === typeof partialState) {\r\n                    isDisallowedContextReadInDEV = !0;\r\n                    var nextState = partialState.call(\r\n                      instance,\r\n                      newState,\r\n                      nextProps\r\n                    );\r\n                    if (updateLane.mode & StrictLegacyMode) {\r\n                      setIsStrictModeForDevtools(!0);\r\n                      try {\r\n                        partialState.call(instance, newState, nextProps);\r\n                      } finally {\r\n                        setIsStrictModeForDevtools(!1);\r\n                      }\r\n                    }\r\n                    isDisallowedContextReadInDEV = !1;\r\n                    newState = nextState;\r\n                    break a;\r\n                  }\r\n                  newState = partialState;\r\n                  break a;\r\n                case CaptureUpdate:\r\n                  updateLane.flags = (updateLane.flags & -65537) | 128;\r\n                case UpdateState:\r\n                  nextState = partialState.payload;\r\n                  if (\"function\" === typeof nextState) {\r\n                    isDisallowedContextReadInDEV = !0;\r\n                    partialState = nextState.call(\r\n                      instance,\r\n                      newState,\r\n                      nextProps\r\n                    );\r\n                    if (updateLane.mode & StrictLegacyMode) {\r\n                      setIsStrictModeForDevtools(!0);\r\n                      try {\r\n                        nextState.call(instance, newState, nextProps);\r\n                      } finally {\r\n                        setIsStrictModeForDevtools(!1);\r\n                      }\r\n                    }\r\n                    isDisallowedContextReadInDEV = !1;\r\n                  } else partialState = nextState;\r\n                  if (null === partialState || void 0 === partialState) break a;\r\n                  newState = assign({}, newState, partialState);\r\n                  break a;\r\n                case ForceUpdate:\r\n                  hasForceUpdate = !0;\r\n              }\r\n            }\r\n            updateLane = pendingQueue.callback;\r\n            null !== updateLane &&\r\n              ((workInProgress.flags |= 64),\r\n              isHiddenUpdate && (workInProgress.flags |= 8192),\r\n              (isHiddenUpdate = queue.callbacks),\r\n              null === isHiddenUpdate\r\n                ? (queue.callbacks = [updateLane])\r\n                : isHiddenUpdate.push(updateLane));\r\n          } else\r\n            (isHiddenUpdate = {\r\n              lane: updateLane,\r\n              tag: pendingQueue.tag,\r\n              payload: pendingQueue.payload,\r\n              callback: pendingQueue.callback,\r\n              next: null\r\n            }),\r\n              null === current\r\n                ? ((firstPendingUpdate = current = isHiddenUpdate),\r\n                  (lastPendingUpdate = newState))\r\n                : (current = current.next = isHiddenUpdate),\r\n              (lastBaseUpdate |= updateLane);\r\n          pendingQueue = pendingQueue.next;\r\n          if (null === pendingQueue)\r\n            if (((pendingQueue = queue.shared.pending), null === pendingQueue))\r\n              break;\r\n            else\r\n              (isHiddenUpdate = pendingQueue),\r\n                (pendingQueue = isHiddenUpdate.next),\r\n                (isHiddenUpdate.next = null),\r\n                (queue.lastBaseUpdate = isHiddenUpdate),\r\n                (queue.shared.pending = null);\r\n        } while (1);\r\n        null === current && (lastPendingUpdate = newState);\r\n        queue.baseState = lastPendingUpdate;\r\n        queue.firstBaseUpdate = firstPendingUpdate;\r\n        queue.lastBaseUpdate = current;\r\n        null === firstBaseUpdate && (queue.shared.lanes = 0);\r\n        workInProgressRootSkippedLanes |= lastBaseUpdate;\r\n        workInProgress.lanes = lastBaseUpdate;\r\n        workInProgress.memoizedState = newState;\r\n      }\r\n      currentlyProcessingQueue = null;\r\n    }\r\n    function callCallback(callback, context) {\r\n      if (\"function\" !== typeof callback)\r\n        throw Error(\r\n          \"Invalid argument passed as callback. Expected a function. Instead received: \" +\r\n            callback\r\n        );\r\n      callback.call(context);\r\n    }\r\n    function commitHiddenCallbacks(updateQueue, context) {\r\n      var hiddenCallbacks = updateQueue.shared.hiddenCallbacks;\r\n      if (null !== hiddenCallbacks)\r\n        for (\r\n          updateQueue.shared.hiddenCallbacks = null, updateQueue = 0;\r\n          updateQueue < hiddenCallbacks.length;\r\n          updateQueue++\r\n        )\r\n          callCallback(hiddenCallbacks[updateQueue], context);\r\n    }\r\n    function commitCallbacks(updateQueue, context) {\r\n      var callbacks = updateQueue.callbacks;\r\n      if (null !== callbacks)\r\n        for (\r\n          updateQueue.callbacks = null, updateQueue = 0;\r\n          updateQueue < callbacks.length;\r\n          updateQueue++\r\n        )\r\n          callCallback(callbacks[updateQueue], context);\r\n    }\r\n    function pushHiddenContext(fiber, context) {\r\n      var prevEntangledRenderLanes = entangledRenderLanes;\r\n      push(prevEntangledRenderLanesCursor, prevEntangledRenderLanes, fiber);\r\n      push(currentTreeHiddenStackCursor, context, fiber);\r\n      entangledRenderLanes = prevEntangledRenderLanes | context.baseLanes;\r\n    }\r\n    function reuseHiddenContextOnStack(fiber) {\r\n      push(prevEntangledRenderLanesCursor, entangledRenderLanes, fiber);\r\n      push(\r\n        currentTreeHiddenStackCursor,\r\n        currentTreeHiddenStackCursor.current,\r\n        fiber\r\n      );\r\n    }\r\n    function popHiddenContext(fiber) {\r\n      entangledRenderLanes = prevEntangledRenderLanesCursor.current;\r\n      pop(currentTreeHiddenStackCursor, fiber);\r\n      pop(prevEntangledRenderLanesCursor, fiber);\r\n    }\r\n    function mountHookTypesDev() {\r\n      var hookName = currentHookNameInDev;\r\n      null === hookTypesDev\r\n        ? (hookTypesDev = [hookName])\r\n        : hookTypesDev.push(hookName);\r\n    }\r\n    function updateHookTypesDev() {\r\n      var hookName = currentHookNameInDev;\r\n      if (\r\n        null !== hookTypesDev &&\r\n        (hookTypesUpdateIndexDev++,\r\n        hookTypesDev[hookTypesUpdateIndexDev] !== hookName)\r\n      ) {\r\n        var componentName = getComponentNameFromFiber(currentlyRenderingFiber);\r\n        if (\r\n          !didWarnAboutMismatchedHooksForComponent.has(componentName) &&\r\n          (didWarnAboutMismatchedHooksForComponent.add(componentName),\r\n          null !== hookTypesDev)\r\n        ) {\r\n          for (var table = \"\", i = 0; i <= hookTypesUpdateIndexDev; i++) {\r\n            var oldHookName = hookTypesDev[i],\r\n              newHookName =\r\n                i === hookTypesUpdateIndexDev ? hookName : oldHookName;\r\n            for (\r\n              oldHookName = i + 1 + \". \" + oldHookName;\r\n              30 > oldHookName.length;\r\n\r\n            )\r\n              oldHookName += \" \";\r\n            oldHookName += newHookName + \"\\n\";\r\n            table += oldHookName;\r\n          }\r\n          console.error(\r\n            \"React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://react.dev/link/rules-of-hooks\\n\\n   Previous render            Next render\\n   ------------------------------------------------------\\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\",\r\n            componentName,\r\n            table\r\n          );\r\n        }\r\n      }\r\n    }\r\n    function checkDepsAreArrayDev(deps) {\r\n      void 0 === deps ||\r\n        null === deps ||\r\n        isArrayImpl(deps) ||\r\n        console.error(\r\n          \"%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.\",\r\n          currentHookNameInDev,\r\n          typeof deps\r\n        );\r\n    }\r\n    function warnOnUseFormStateInDev() {\r\n      var componentName = getComponentNameFromFiber(currentlyRenderingFiber);\r\n      didWarnAboutUseFormState.has(componentName) ||\r\n        (didWarnAboutUseFormState.add(componentName),\r\n        console.error(\r\n          \"ReactDOM.useFormState has been renamed to React.useActionState. Please update %s to use React.useActionState.\",\r\n          componentName\r\n        ));\r\n    }\r\n    function throwInvalidHookError() {\r\n      throw Error(\r\n        \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.\"\r\n      );\r\n    }\r\n    function areHookInputsEqual(nextDeps, prevDeps) {\r\n      if (ignorePreviousDependencies) return !1;\r\n      if (null === prevDeps)\r\n        return (\r\n          console.error(\r\n            \"%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.\",\r\n            currentHookNameInDev\r\n          ),\r\n          !1\r\n        );\r\n      nextDeps.length !== prevDeps.length &&\r\n        console.error(\r\n          \"The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\\n\\nPrevious: %s\\nIncoming: %s\",\r\n          currentHookNameInDev,\r\n          \"[\" + prevDeps.join(\", \") + \"]\",\r\n          \"[\" + nextDeps.join(\", \") + \"]\"\r\n        );\r\n      for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++)\r\n        if (!objectIs(nextDeps[i], prevDeps[i])) return !1;\r\n      return !0;\r\n    }\r\n    function renderWithHooks(\r\n      current,\r\n      workInProgress,\r\n      Component,\r\n      props,\r\n      secondArg,\r\n      nextRenderLanes\r\n    ) {\r\n      renderLanes = nextRenderLanes;\r\n      currentlyRenderingFiber = workInProgress;\r\n      hookTypesDev = null !== current ? current._debugHookTypes : null;\r\n      hookTypesUpdateIndexDev = -1;\r\n      ignorePreviousDependencies =\r\n        null !== current && current.type !== workInProgress.type;\r\n      if (\r\n        \"[object AsyncFunction]\" ===\r\n          Object.prototype.toString.call(Component) ||\r\n        \"[object AsyncGeneratorFunction]\" ===\r\n          Object.prototype.toString.call(Component)\r\n      )\r\n        (nextRenderLanes = getComponentNameFromFiber(currentlyRenderingFiber)),\r\n          didWarnAboutAsyncClientComponent.has(nextRenderLanes) ||\r\n            (didWarnAboutAsyncClientComponent.add(nextRenderLanes),\r\n            console.error(\r\n              \"%s is an async Client Component. Only Server Components can be async at the moment. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.\",\r\n              null === nextRenderLanes\r\n                ? \"An unknown Component\"\r\n                : \"<\" + nextRenderLanes + \">\"\r\n            ));\r\n      workInProgress.memoizedState = null;\r\n      workInProgress.updateQueue = null;\r\n      workInProgress.lanes = 0;\r\n      ReactSharedInternals.H =\r\n        null !== current && null !== current.memoizedState\r\n          ? HooksDispatcherOnUpdateInDEV\r\n          : null !== hookTypesDev\r\n            ? HooksDispatcherOnMountWithHookTypesInDEV\r\n            : HooksDispatcherOnMountInDEV;\r\n      shouldDoubleInvokeUserFnsInHooksDEV = nextRenderLanes =\r\n        (workInProgress.mode & StrictLegacyMode) !== NoMode;\r\n      var children = callComponentInDEV(Component, props, secondArg);\r\n      shouldDoubleInvokeUserFnsInHooksDEV = !1;\r\n      didScheduleRenderPhaseUpdateDuringThisPass &&\r\n        (children = renderWithHooksAgain(\r\n          workInProgress,\r\n          Component,\r\n          props,\r\n          secondArg\r\n        ));\r\n      if (nextRenderLanes) {\r\n        setIsStrictModeForDevtools(!0);\r\n        try {\r\n          children = renderWithHooksAgain(\r\n            workInProgress,\r\n            Component,\r\n            props,\r\n            secondArg\r\n          );\r\n        } finally {\r\n          setIsStrictModeForDevtools(!1);\r\n        }\r\n      }\r\n      finishRenderingHooks(current, workInProgress);\r\n      return children;\r\n    }\r\n    function finishRenderingHooks(current, workInProgress) {\r\n      workInProgress._debugHookTypes = hookTypesDev;\r\n      null === workInProgress.dependencies\r\n        ? null !== thenableState$1 &&\r\n          (workInProgress.dependencies = {\r\n            lanes: 0,\r\n            firstContext: null,\r\n            _debugThenableState: thenableState$1\r\n          })\r\n        : (workInProgress.dependencies._debugThenableState = thenableState$1);\r\n      ReactSharedInternals.H = ContextOnlyDispatcher;\r\n      var didRenderTooFewHooks =\r\n        null !== currentHook && null !== currentHook.next;\r\n      renderLanes = 0;\r\n      hookTypesDev =\r\n        currentHookNameInDev =\r\n        workInProgressHook =\r\n        currentHook =\r\n        currentlyRenderingFiber =\r\n          null;\r\n      hookTypesUpdateIndexDev = -1;\r\n      null !== current &&\r\n        (current.flags & 65011712) !== (workInProgress.flags & 65011712) &&\r\n        console.error(\r\n          \"Internal React error: Expected static flag was missing. Please notify the React team.\"\r\n        );\r\n      didScheduleRenderPhaseUpdate = !1;\r\n      thenableIndexCounter$1 = 0;\r\n      thenableState$1 = null;\r\n      if (didRenderTooFewHooks)\r\n        throw Error(\r\n          \"Rendered fewer hooks than expected. This may be caused by an accidental early return statement.\"\r\n        );\r\n      null === current ||\r\n        didReceiveUpdate ||\r\n        ((current = current.dependencies),\r\n        null !== current &&\r\n          checkIfContextChanged(current) &&\r\n          (didReceiveUpdate = !0));\r\n      needsToResetSuspendedThenableDEV\r\n        ? ((needsToResetSuspendedThenableDEV = !1), (current = !0))\r\n        : (current = !1);\r\n      current &&\r\n        ((workInProgress =\r\n          getComponentNameFromFiber(workInProgress) || \"Unknown\"),\r\n        didWarnAboutUseWrappedInTryCatch.has(workInProgress) ||\r\n          didWarnAboutAsyncClientComponent.has(workInProgress) ||\r\n          (didWarnAboutUseWrappedInTryCatch.add(workInProgress),\r\n          console.error(\r\n            \"`use` was called from inside a try/catch block. This is not allowed and can lead to unexpected behavior. To handle errors triggered by `use`, wrap your component in a error boundary.\"\r\n          )));\r\n    }\r\n    function renderWithHooksAgain(workInProgress, Component, props, secondArg) {\r\n      currentlyRenderingFiber = workInProgress;\r\n      var numberOfReRenders = 0;\r\n      do {\r\n        didScheduleRenderPhaseUpdateDuringThisPass && (thenableState$1 = null);\r\n        thenableIndexCounter$1 = 0;\r\n        didScheduleRenderPhaseUpdateDuringThisPass = !1;\r\n        if (numberOfReRenders >= RE_RENDER_LIMIT)\r\n          throw Error(\r\n            \"Too many re-renders. React limits the number of renders to prevent an infinite loop.\"\r\n          );\r\n        numberOfReRenders += 1;\r\n        ignorePreviousDependencies = !1;\r\n        workInProgressHook = currentHook = null;\r\n        if (null != workInProgress.updateQueue) {\r\n          var children = workInProgress.updateQueue;\r\n          children.lastEffect = null;\r\n          children.events = null;\r\n          children.stores = null;\r\n          null != children.memoCache && (children.memoCache.index = 0);\r\n        }\r\n        hookTypesUpdateIndexDev = -1;\r\n        ReactSharedInternals.H = HooksDispatcherOnRerenderInDEV;\r\n        children = callComponentInDEV(Component, props, secondArg);\r\n      } while (didScheduleRenderPhaseUpdateDuringThisPass);\r\n      return children;\r\n    }\r\n    function TransitionAwareHostComponent() {\r\n      var dispatcher = ReactSharedInternals.H,\r\n        maybeThenable = dispatcher.useState()[0];\r\n      maybeThenable =\r\n        \"function\" === typeof maybeThenable.then\r\n          ? useThenable(maybeThenable)\r\n          : maybeThenable;\r\n      dispatcher = dispatcher.useState()[0];\r\n      (null !== currentHook ? currentHook.memoizedState : null) !==\r\n        dispatcher && (currentlyRenderingFiber.flags |= 1024);\r\n      return maybeThenable;\r\n    }\r\n    function checkDidRenderIdHook() {\r\n      var didRenderIdHook = 0 !== localIdCounter;\r\n      localIdCounter = 0;\r\n      return didRenderIdHook;\r\n    }\r\n    function bailoutHooks(current, workInProgress, lanes) {\r\n      workInProgress.updateQueue = current.updateQueue;\r\n      workInProgress.flags =\r\n        (workInProgress.mode & StrictEffectsMode) !== NoMode\r\n          ? workInProgress.flags & -402655237\r\n          : workInProgress.flags & -2053;\r\n      current.lanes &= ~lanes;\r\n    }\r\n    function resetHooksOnUnwind(workInProgress) {\r\n      if (didScheduleRenderPhaseUpdate) {\r\n        for (\r\n          workInProgress = workInProgress.memoizedState;\r\n          null !== workInProgress;\r\n\r\n        ) {\r\n          var queue = workInProgress.queue;\r\n          null !== queue && (queue.pending = null);\r\n          workInProgress = workInProgress.next;\r\n        }\r\n        didScheduleRenderPhaseUpdate = !1;\r\n      }\r\n      renderLanes = 0;\r\n      hookTypesDev =\r\n        workInProgressHook =\r\n        currentHook =\r\n        currentlyRenderingFiber =\r\n          null;\r\n      hookTypesUpdateIndexDev = -1;\r\n      currentHookNameInDev = null;\r\n      didScheduleRenderPhaseUpdateDuringThisPass = !1;\r\n      thenableIndexCounter$1 = localIdCounter = 0;\r\n      thenableState$1 = null;\r\n    }\r\n    function mountWorkInProgressHook() {\r\n      var hook = {\r\n        memoizedState: null,\r\n        baseState: null,\r\n        baseQueue: null,\r\n        queue: null,\r\n        next: null\r\n      };\r\n      null === workInProgressHook\r\n        ? (currentlyRenderingFiber.memoizedState = workInProgressHook = hook)\r\n        : (workInProgressHook = workInProgressHook.next = hook);\r\n      return workInProgressHook;\r\n    }\r\n    function updateWorkInProgressHook() {\r\n      if (null === currentHook) {\r\n        var nextCurrentHook = currentlyRenderingFiber.alternate;\r\n        nextCurrentHook =\r\n          null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;\r\n      } else nextCurrentHook = currentHook.next;\r\n      var nextWorkInProgressHook =\r\n        null === workInProgressHook\r\n          ? currentlyRenderingFiber.memoizedState\r\n          : workInProgressHook.next;\r\n      if (null !== nextWorkInProgressHook)\r\n        (workInProgressHook = nextWorkInProgressHook),\r\n          (currentHook = nextCurrentHook);\r\n      else {\r\n        if (null === nextCurrentHook) {\r\n          if (null === currentlyRenderingFiber.alternate)\r\n            throw Error(\r\n              \"Update hook called on initial render. This is likely a bug in React. Please file an issue.\"\r\n            );\r\n          throw Error(\"Rendered more hooks than during the previous render.\");\r\n        }\r\n        currentHook = nextCurrentHook;\r\n        nextCurrentHook = {\r\n          memoizedState: currentHook.memoizedState,\r\n          baseState: currentHook.baseState,\r\n          baseQueue: currentHook.baseQueue,\r\n          queue: currentHook.queue,\r\n          next: null\r\n        };\r\n        null === workInProgressHook\r\n          ? (currentlyRenderingFiber.memoizedState = workInProgressHook =\r\n              nextCurrentHook)\r\n          : (workInProgressHook = workInProgressHook.next = nextCurrentHook);\r\n      }\r\n      return workInProgressHook;\r\n    }\r\n    function createFunctionComponentUpdateQueue() {\r\n      return { lastEffect: null, events: null, stores: null, memoCache: null };\r\n    }\r\n    function useThenable(thenable) {\r\n      var index = thenableIndexCounter$1;\r\n      thenableIndexCounter$1 += 1;\r\n      null === thenableState$1 && (thenableState$1 = createThenableState());\r\n      thenable = trackUsedThenable(thenableState$1, thenable, index);\r\n      index = currentlyRenderingFiber;\r\n      null ===\r\n        (null === workInProgressHook\r\n          ? index.memoizedState\r\n          : workInProgressHook.next) &&\r\n        ((index = index.alternate),\r\n        (ReactSharedInternals.H =\r\n          null !== index && null !== index.memoizedState\r\n            ? HooksDispatcherOnUpdateInDEV\r\n            : HooksDispatcherOnMountInDEV));\r\n      return thenable;\r\n    }\r\n    function use(usable) {\r\n      if (null !== usable && \"object\" === typeof usable) {\r\n        if (\"function\" === typeof usable.then) return useThenable(usable);\r\n        if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);\r\n      }\r\n      throw Error(\"An unsupported type was passed to use(): \" + String(usable));\r\n    }\r\n    function useMemoCache(size) {\r\n      var memoCache = null,\r\n        updateQueue = currentlyRenderingFiber.updateQueue;\r\n      null !== updateQueue && (memoCache = updateQueue.memoCache);\r\n      if (null == memoCache) {\r\n        var current = currentlyRenderingFiber.alternate;\r\n        null !== current &&\r\n          ((current = current.updateQueue),\r\n          null !== current &&\r\n            ((current = current.memoCache),\r\n            null != current &&\r\n              (memoCache = {\r\n                data: current.data.map(function (array) {\r\n                  return array.slice();\r\n                }),\r\n                index: 0\r\n              })));\r\n      }\r\n      null == memoCache && (memoCache = { data: [], index: 0 });\r\n      null === updateQueue &&\r\n        ((updateQueue = createFunctionComponentUpdateQueue()),\r\n        (currentlyRenderingFiber.updateQueue = updateQueue));\r\n      updateQueue.memoCache = memoCache;\r\n      updateQueue = memoCache.data[memoCache.index];\r\n      if (void 0 === updateQueue || ignorePreviousDependencies)\r\n        for (\r\n          updateQueue = memoCache.data[memoCache.index] = Array(size),\r\n            current = 0;\r\n          current < size;\r\n          current++\r\n        )\r\n          updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;\r\n      else\r\n        updateQueue.length !== size &&\r\n          console.error(\r\n            \"Expected a constant size argument for each invocation of useMemoCache. The previous cache was allocated with size %s but size %s was requested.\",\r\n            updateQueue.length,\r\n            size\r\n          );\r\n      memoCache.index++;\r\n      return updateQueue;\r\n    }\r\n    function basicStateReducer(state, action) {\r\n      return \"function\" === typeof action ? action(state) : action;\r\n    }\r\n    function mountReducer(reducer, initialArg, init) {\r\n      var hook = mountWorkInProgressHook();\r\n      if (void 0 !== init) {\r\n        var initialState = init(initialArg);\r\n        if (shouldDoubleInvokeUserFnsInHooksDEV) {\r\n          setIsStrictModeForDevtools(!0);\r\n          try {\r\n            init(initialArg);\r\n          } finally {\r\n            setIsStrictModeForDevtools(!1);\r\n          }\r\n        }\r\n      } else initialState = initialArg;\r\n      hook.memoizedState = hook.baseState = initialState;\r\n      reducer = {\r\n        pending: null,\r\n        lanes: 0,\r\n        dispatch: null,\r\n        lastRenderedReducer: reducer,\r\n        lastRenderedState: initialState\r\n      };\r\n      hook.queue = reducer;\r\n      reducer = reducer.dispatch = dispatchReducerAction.bind(\r\n        null,\r\n        currentlyRenderingFiber,\r\n        reducer\r\n      );\r\n      return [hook.memoizedState, reducer];\r\n    }\r\n    function updateReducer(reducer) {\r\n      var hook = updateWorkInProgressHook();\r\n      return updateReducerImpl(hook, currentHook, reducer);\r\n    }\r\n    function updateReducerImpl(hook, current, reducer) {\r\n      var queue = hook.queue;\r\n      if (null === queue)\r\n        throw Error(\r\n          \"Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)\"\r\n        );\r\n      queue.lastRenderedReducer = reducer;\r\n      var baseQueue = hook.baseQueue,\r\n        pendingQueue = queue.pending;\r\n      if (null !== pendingQueue) {\r\n        if (null !== baseQueue) {\r\n          var baseFirst = baseQueue.next;\r\n          baseQueue.next = pendingQueue.next;\r\n          pendingQueue.next = baseFirst;\r\n        }\r\n        current.baseQueue !== baseQueue &&\r\n          console.error(\r\n            \"Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.\"\r\n          );\r\n        current.baseQueue = baseQueue = pendingQueue;\r\n        queue.pending = null;\r\n      }\r\n      pendingQueue = hook.baseState;\r\n      if (null === baseQueue) hook.memoizedState = pendingQueue;\r\n      else {\r\n        current = baseQueue.next;\r\n        var newBaseQueueFirst = (baseFirst = null),\r\n          newBaseQueueLast = null,\r\n          update = current,\r\n          didReadFromEntangledAsyncAction = !1;\r\n        do {\r\n          var updateLane = update.lane & -536870913;\r\n          if (\r\n            updateLane !== update.lane\r\n              ? (workInProgressRootRenderLanes & updateLane) === updateLane\r\n              : (renderLanes & updateLane) === updateLane\r\n          ) {\r\n            var revertLane = update.revertLane;\r\n            if (0 === revertLane)\r\n              null !== newBaseQueueLast &&\r\n                (newBaseQueueLast = newBaseQueueLast.next =\r\n                  {\r\n                    lane: 0,\r\n                    revertLane: 0,\r\n                    action: update.action,\r\n                    hasEagerState: update.hasEagerState,\r\n                    eagerState: update.eagerState,\r\n                    next: null\r\n                  }),\r\n                updateLane === currentEntangledLane &&\r\n                  (didReadFromEntangledAsyncAction = !0);\r\n            else if ((renderLanes & revertLane) === revertLane) {\r\n              update = update.next;\r\n              revertLane === currentEntangledLane &&\r\n                (didReadFromEntangledAsyncAction = !0);\r\n              continue;\r\n            } else\r\n              (updateLane = {\r\n                lane: 0,\r\n                revertLane: update.revertLane,\r\n                action: update.action,\r\n                hasEagerState: update.hasEagerState,\r\n                eagerState: update.eagerState,\r\n                next: null\r\n              }),\r\n                null === newBaseQueueLast\r\n                  ? ((newBaseQueueFirst = newBaseQueueLast = updateLane),\r\n                    (baseFirst = pendingQueue))\r\n                  : (newBaseQueueLast = newBaseQueueLast.next = updateLane),\r\n                (currentlyRenderingFiber.lanes |= revertLane),\r\n                (workInProgressRootSkippedLanes |= revertLane);\r\n            updateLane = update.action;\r\n            shouldDoubleInvokeUserFnsInHooksDEV &&\r\n              reducer(pendingQueue, updateLane);\r\n            pendingQueue = update.hasEagerState\r\n              ? update.eagerState\r\n              : reducer(pendingQueue, updateLane);\r\n          } else\r\n            (revertLane = {\r\n              lane: updateLane,\r\n              revertLane: update.revertLane,\r\n              action: update.action,\r\n              hasEagerState: update.hasEagerState,\r\n              eagerState: update.eagerState,\r\n              next: null\r\n            }),\r\n              null === newBaseQueueLast\r\n                ? ((newBaseQueueFirst = newBaseQueueLast = revertLane),\r\n                  (baseFirst = pendingQueue))\r\n                : (newBaseQueueLast = newBaseQueueLast.next = revertLane),\r\n              (currentlyRenderingFiber.lanes |= updateLane),\r\n              (workInProgressRootSkippedLanes |= updateLane);\r\n          update = update.next;\r\n        } while (null !== update && update !== current);\r\n        null === newBaseQueueLast\r\n          ? (baseFirst = pendingQueue)\r\n          : (newBaseQueueLast.next = newBaseQueueFirst);\r\n        if (\r\n          !objectIs(pendingQueue, hook.memoizedState) &&\r\n          ((didReceiveUpdate = !0),\r\n          didReadFromEntangledAsyncAction &&\r\n            ((reducer = currentEntangledActionThenable), null !== reducer))\r\n        )\r\n          throw reducer;\r\n        hook.memoizedState = pendingQueue;\r\n        hook.baseState = baseFirst;\r\n        hook.baseQueue = newBaseQueueLast;\r\n        queue.lastRenderedState = pendingQueue;\r\n      }\r\n      null === baseQueue && (queue.lanes = 0);\r\n      return [hook.memoizedState, queue.dispatch];\r\n    }\r\n    function rerenderReducer(reducer) {\r\n      var hook = updateWorkInProgressHook(),\r\n        queue = hook.queue;\r\n      if (null === queue)\r\n        throw Error(\r\n          \"Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)\"\r\n        );\r\n      queue.lastRenderedReducer = reducer;\r\n      var dispatch = queue.dispatch,\r\n        lastRenderPhaseUpdate = queue.pending,\r\n        newState = hook.memoizedState;\r\n      if (null !== lastRenderPhaseUpdate) {\r\n        queue.pending = null;\r\n        var update = (lastRenderPhaseUpdate = lastRenderPhaseUpdate.next);\r\n        do\r\n          (newState = reducer(newState, update.action)), (update = update.next);\r\n        while (update !== lastRenderPhaseUpdate);\r\n        objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);\r\n        hook.memoizedState = newState;\r\n        null === hook.baseQueue && (hook.baseState = newState);\r\n        queue.lastRenderedState = newState;\r\n      }\r\n      return [newState, dispatch];\r\n    }\r\n    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\r\n      var fiber = currentlyRenderingFiber,\r\n        hook = mountWorkInProgressHook();\r\n      if (isHydrating) {\r\n        if (void 0 === getServerSnapshot)\r\n          throw Error(\r\n            \"Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.\"\r\n          );\r\n        var nextSnapshot = getServerSnapshot();\r\n        didWarnUncachedGetSnapshot ||\r\n          nextSnapshot === getServerSnapshot() ||\r\n          (console.error(\r\n            \"The result of getServerSnapshot should be cached to avoid an infinite loop\"\r\n          ),\r\n          (didWarnUncachedGetSnapshot = !0));\r\n      } else {\r\n        nextSnapshot = getSnapshot();\r\n        didWarnUncachedGetSnapshot ||\r\n          ((getServerSnapshot = getSnapshot()),\r\n          objectIs(nextSnapshot, getServerSnapshot) ||\r\n            (console.error(\r\n              \"The result of getSnapshot should be cached to avoid an infinite loop\"\r\n            ),\r\n            (didWarnUncachedGetSnapshot = !0)));\r\n        if (null === workInProgressRoot)\r\n          throw Error(\r\n            \"Expected a work-in-progress root. This is a bug in React. Please file an issue.\"\r\n          );\r\n        0 !== (workInProgressRootRenderLanes & 124) ||\r\n          pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\r\n      }\r\n      hook.memoizedState = nextSnapshot;\r\n      getServerSnapshot = { value: nextSnapshot, getSnapshot: getSnapshot };\r\n      hook.queue = getServerSnapshot;\r\n      mountEffect(\r\n        subscribeToStore.bind(null, fiber, getServerSnapshot, subscribe),\r\n        [subscribe]\r\n      );\r\n      fiber.flags |= 2048;\r\n      pushSimpleEffect(\r\n        HasEffect | Passive,\r\n        createEffectInstance(),\r\n        updateStoreInstance.bind(\r\n          null,\r\n          fiber,\r\n          getServerSnapshot,\r\n          nextSnapshot,\r\n          getSnapshot\r\n        ),\r\n        null\r\n      );\r\n      return nextSnapshot;\r\n    }\r\n    function updateSyncExternalStore(\r\n      subscribe,\r\n      getSnapshot,\r\n      getServerSnapshot\r\n    ) {\r\n      var fiber = currentlyRenderingFiber,\r\n        hook = updateWorkInProgressHook(),\r\n        isHydrating$jscomp$0 = isHydrating;\r\n      if (isHydrating$jscomp$0) {\r\n        if (void 0 === getServerSnapshot)\r\n          throw Error(\r\n            \"Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.\"\r\n          );\r\n        getServerSnapshot = getServerSnapshot();\r\n      } else if (\r\n        ((getServerSnapshot = getSnapshot()), !didWarnUncachedGetSnapshot)\r\n      ) {\r\n        var cachedSnapshot = getSnapshot();\r\n        objectIs(getServerSnapshot, cachedSnapshot) ||\r\n          (console.error(\r\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\r\n          ),\r\n          (didWarnUncachedGetSnapshot = !0));\r\n      }\r\n      if (\r\n        (cachedSnapshot = !objectIs(\r\n          (currentHook || hook).memoizedState,\r\n          getServerSnapshot\r\n        ))\r\n      )\r\n        (hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0);\r\n      hook = hook.queue;\r\n      var create = subscribeToStore.bind(null, fiber, hook, subscribe);\r\n      updateEffectImpl(2048, Passive, create, [subscribe]);\r\n      if (\r\n        hook.getSnapshot !== getSnapshot ||\r\n        cachedSnapshot ||\r\n        (null !== workInProgressHook &&\r\n          workInProgressHook.memoizedState.tag & HasEffect)\r\n      ) {\r\n        fiber.flags |= 2048;\r\n        pushSimpleEffect(\r\n          HasEffect | Passive,\r\n          createEffectInstance(),\r\n          updateStoreInstance.bind(\r\n            null,\r\n            fiber,\r\n            hook,\r\n            getServerSnapshot,\r\n            getSnapshot\r\n          ),\r\n          null\r\n        );\r\n        if (null === workInProgressRoot)\r\n          throw Error(\r\n            \"Expected a work-in-progress root. This is a bug in React. Please file an issue.\"\r\n          );\r\n        isHydrating$jscomp$0 ||\r\n          0 !== (renderLanes & 124) ||\r\n          pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\r\n      }\r\n      return getServerSnapshot;\r\n    }\r\n    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\r\n      fiber.flags |= 16384;\r\n      fiber = { getSnapshot: getSnapshot, value: renderedSnapshot };\r\n      getSnapshot = currentlyRenderingFiber.updateQueue;\r\n      null === getSnapshot\r\n        ? ((getSnapshot = createFunctionComponentUpdateQueue()),\r\n          (currentlyRenderingFiber.updateQueue = getSnapshot),\r\n          (getSnapshot.stores = [fiber]))\r\n        : ((renderedSnapshot = getSnapshot.stores),\r\n          null === renderedSnapshot\r\n            ? (getSnapshot.stores = [fiber])\r\n            : renderedSnapshot.push(fiber));\r\n    }\r\n    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\r\n      inst.value = nextSnapshot;\r\n      inst.getSnapshot = getSnapshot;\r\n      checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\r\n    }\r\n    function subscribeToStore(fiber, inst, subscribe) {\r\n      return subscribe(function () {\r\n        checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\r\n      });\r\n    }\r\n    function checkIfSnapshotChanged(inst) {\r\n      var latestGetSnapshot = inst.getSnapshot;\r\n      inst = inst.value;\r\n      try {\r\n        var nextValue = latestGetSnapshot();\r\n        return !objectIs(inst, nextValue);\r\n      } catch (error) {\r\n        return !0;\r\n      }\r\n    }\r\n    function forceStoreRerender(fiber) {\r\n      var root = enqueueConcurrentRenderForLane(fiber, 2);\r\n      null !== root && scheduleUpdateOnFiber(root, fiber, 2);\r\n    }\r\n    function mountStateImpl(initialState) {\r\n      var hook = mountWorkInProgressHook();\r\n      if (\"function\" === typeof initialState) {\r\n        var initialStateInitializer = initialState;\r\n        initialState = initialStateInitializer();\r\n        if (shouldDoubleInvokeUserFnsInHooksDEV) {\r\n          setIsStrictModeForDevtools(!0);\r\n          try {\r\n            initialStateInitializer();\r\n          } finally {\r\n            setIsStrictModeForDevtools(!1);\r\n          }\r\n        }\r\n      }\r\n      hook.memoizedState = hook.baseState = initialState;\r\n      hook.queue = {\r\n        pending: null,\r\n        lanes: 0,\r\n        dispatch: null,\r\n        lastRenderedReducer: basicStateReducer,\r\n        lastRenderedState: initialState\r\n      };\r\n      return hook;\r\n    }\r\n    function mountState(initialState) {\r\n      initialState = mountStateImpl(initialState);\r\n      var queue = initialState.queue,\r\n        dispatch = dispatchSetState.bind(null, currentlyRenderingFiber, queue);\r\n      queue.dispatch = dispatch;\r\n      return [initialState.memoizedState, dispatch];\r\n    }\r\n    function mountOptimistic(passthrough) {\r\n      var hook = mountWorkInProgressHook();\r\n      hook.memoizedState = hook.baseState = passthrough;\r\n      var queue = {\r\n        pending: null,\r\n        lanes: 0,\r\n        dispatch: null,\r\n        lastRenderedReducer: null,\r\n        lastRenderedState: null\r\n      };\r\n      hook.queue = queue;\r\n      hook = dispatchOptimisticSetState.bind(\r\n        null,\r\n        currentlyRenderingFiber,\r\n        !0,\r\n        queue\r\n      );\r\n      queue.dispatch = hook;\r\n      return [passthrough, hook];\r\n    }\r\n    function updateOptimistic(passthrough, reducer) {\r\n      var hook = updateWorkInProgressHook();\r\n      return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\r\n    }\r\n    function updateOptimisticImpl(hook, current, passthrough, reducer) {\r\n      hook.baseState = passthrough;\r\n      return updateReducerImpl(\r\n        hook,\r\n        currentHook,\r\n        \"function\" === typeof reducer ? reducer : basicStateReducer\r\n      );\r\n    }\r\n    function rerenderOptimistic(passthrough, reducer) {\r\n      var hook = updateWorkInProgressHook();\r\n      if (null !== currentHook)\r\n        return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\r\n      hook.baseState = passthrough;\r\n      return [passthrough, hook.queue.dispatch];\r\n    }\r\n    function dispatchActionState(\r\n      fiber,\r\n      actionQueue,\r\n      setPendingState,\r\n      setState,\r\n      payload\r\n    ) {\r\n      if (isRenderPhaseUpdate(fiber))\r\n        throw Error(\"Cannot update form state while rendering.\");\r\n      fiber = actionQueue.action;\r\n      if (null !== fiber) {\r\n        var actionNode = {\r\n          payload: payload,\r\n          action: fiber,\r\n          next: null,\r\n          isTransition: !0,\r\n          status: \"pending\",\r\n          value: null,\r\n          reason: null,\r\n          listeners: [],\r\n          then: function (listener) {\r\n            actionNode.listeners.push(listener);\r\n          }\r\n        };\r\n        null !== ReactSharedInternals.T\r\n          ? setPendingState(!0)\r\n          : (actionNode.isTransition = !1);\r\n        setState(actionNode);\r\n        setPendingState = actionQueue.pending;\r\n        null === setPendingState\r\n          ? ((actionNode.next = actionQueue.pending = actionNode),\r\n            runActionStateAction(actionQueue, actionNode))\r\n          : ((actionNode.next = setPendingState.next),\r\n            (actionQueue.pending = setPendingState.next = actionNode));\r\n      }\r\n    }\r\n    function runActionStateAction(actionQueue, node) {\r\n      var action = node.action,\r\n        payload = node.payload,\r\n        prevState = actionQueue.state;\r\n      if (node.isTransition) {\r\n        var prevTransition = ReactSharedInternals.T,\r\n          currentTransition = {};\r\n        ReactSharedInternals.T = currentTransition;\r\n        ReactSharedInternals.T._updatedFibers = new Set();\r\n        try {\r\n          var returnValue = action(prevState, payload),\r\n            onStartTransitionFinish = ReactSharedInternals.S;\r\n          null !== onStartTransitionFinish &&\r\n            onStartTransitionFinish(currentTransition, returnValue);\r\n          handleActionReturnValue(actionQueue, node, returnValue);\r\n        } catch (error) {\r\n          onActionError(actionQueue, node, error);\r\n        } finally {\r\n          (ReactSharedInternals.T = prevTransition),\r\n            null === prevTransition &&\r\n              currentTransition._updatedFibers &&\r\n              ((actionQueue = currentTransition._updatedFibers.size),\r\n              currentTransition._updatedFibers.clear(),\r\n              10 < actionQueue &&\r\n                console.warn(\r\n                  \"Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.\"\r\n                ));\r\n        }\r\n      } else\r\n        try {\r\n          (currentTransition = action(prevState, payload)),\r\n            handleActionReturnValue(actionQueue, node, currentTransition);\r\n        } catch (error$4) {\r\n          onActionError(actionQueue, node, error$4);\r\n        }\r\n    }\r\n    function handleActionReturnValue(actionQueue, node, returnValue) {\r\n      null !== returnValue &&\r\n      \"object\" === typeof returnValue &&\r\n      \"function\" === typeof returnValue.then\r\n        ? (returnValue.then(\r\n            function (nextState) {\r\n              onActionSuccess(actionQueue, node, nextState);\r\n            },\r\n            function (error) {\r\n              return onActionError(actionQueue, node, error);\r\n            }\r\n          ),\r\n          node.isTransition ||\r\n            console.error(\r\n              \"An async function with useActionState was called outside of a transition. This is likely not what you intended (for example, isPending will not update correctly). Either call the returned function inside startTransition, or pass it to an `action` or `formAction` prop.\"\r\n            ))\r\n        : onActionSuccess(actionQueue, node, returnValue);\r\n    }\r\n    function onActionSuccess(actionQueue, actionNode, nextState) {\r\n      actionNode.status = \"fulfilled\";\r\n      actionNode.value = nextState;\r\n      notifyActionListeners(actionNode);\r\n      actionQueue.state = nextState;\r\n      actionNode = actionQueue.pending;\r\n      null !== actionNode &&\r\n        ((nextState = actionNode.next),\r\n        nextState === actionNode\r\n          ? (actionQueue.pending = null)\r\n          : ((nextState = nextState.next),\r\n            (actionNode.next = nextState),\r\n            runActionStateAction(actionQueue, nextState)));\r\n    }\r\n    function onActionError(actionQueue, actionNode, error) {\r\n      var last = actionQueue.pending;\r\n      actionQueue.pending = null;\r\n      if (null !== last) {\r\n        last = last.next;\r\n        do\r\n          (actionNode.status = \"rejected\"),\r\n            (actionNode.reason = error),\r\n            notifyActionListeners(actionNode),\r\n            (actionNode = actionNode.next);\r\n        while (actionNode !== last);\r\n      }\r\n      actionQueue.action = null;\r\n    }\r\n    function notifyActionListeners(actionNode) {\r\n      actionNode = actionNode.listeners;\r\n      for (var i = 0; i < actionNode.length; i++) (0, actionNode[i])();\r\n    }\r\n    function actionStateReducer(oldState, newState) {\r\n      return newState;\r\n    }\r\n    function mountActionState(action, initialStateProp) {\r\n      if (isHydrating) {\r\n        var ssrFormState = workInProgressRoot.formState;\r\n        if (null !== ssrFormState) {\r\n          a: {\r\n            var isMatching = currentlyRenderingFiber;\r\n            if (isHydrating) {\r\n              if (nextHydratableInstance) {\r\n                b: {\r\n                  var markerInstance = nextHydratableInstance;\r\n                  for (\r\n                    var inRootOrSingleton = rootOrSingletonContext;\r\n                    8 !== markerInstance.nodeType;\r\n\r\n                  ) {\r\n                    if (!inRootOrSingleton) {\r\n                      markerInstance = null;\r\n                      break b;\r\n                    }\r\n                    markerInstance = getNextHydratable(\r\n                      markerInstance.nextSibling\r\n                    );\r\n                    if (null === markerInstance) {\r\n                      markerInstance = null;\r\n                      break b;\r\n                    }\r\n                  }\r\n                  inRootOrSingleton = markerInstance.data;\r\n                  markerInstance =\r\n                    inRootOrSingleton === FORM_STATE_IS_MATCHING ||\r\n                    inRootOrSingleton === FORM_STATE_IS_NOT_MATCHING\r\n                      ? markerInstance\r\n                      : null;\r\n                }\r\n                if (markerInstance) {\r\n                  nextHydratableInstance = getNextHydratable(\r\n                    markerInstance.nextSibling\r\n                  );\r\n                  isMatching = markerInstance.data === FORM_STATE_IS_MATCHING;\r\n                  break a;\r\n                }\r\n              }\r\n              throwOnHydrationMismatch(isMatching);\r\n            }\r\n            isMatching = !1;\r\n          }\r\n          isMatching && (initialStateProp = ssrFormState[0]);\r\n        }\r\n      }\r\n      ssrFormState = mountWorkInProgressHook();\r\n      ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;\r\n      isMatching = {\r\n        pending: null,\r\n        lanes: 0,\r\n        dispatch: null,\r\n        lastRenderedReducer: actionStateReducer,\r\n        lastRenderedState: initialStateProp\r\n      };\r\n      ssrFormState.queue = isMatching;\r\n      ssrFormState = dispatchSetState.bind(\r\n        null,\r\n        currentlyRenderingFiber,\r\n        isMatching\r\n      );\r\n      isMatching.dispatch = ssrFormState;\r\n      isMatching = mountStateImpl(!1);\r\n      inRootOrSingleton = dispatchOptimisticSetState.bind(\r\n        null,\r\n        currentlyRenderingFiber,\r\n        !1,\r\n        isMatching.queue\r\n      );\r\n      isMatching = mountWorkInProgressHook();\r\n      markerInstance = {\r\n        state: initialStateProp,\r\n        dispatch: null,\r\n        action: action,\r\n        pending: null\r\n      };\r\n      isMatching.queue = markerInstance;\r\n      ssrFormState = dispatchActionState.bind(\r\n        null,\r\n        currentlyRenderingFiber,\r\n        markerInstance,\r\n        inRootOrSingleton,\r\n        ssrFormState\r\n      );\r\n      markerInstance.dispatch = ssrFormState;\r\n      isMatching.memoizedState = action;\r\n      return [initialStateProp, ssrFormState, !1];\r\n    }\r\n    function updateActionState(action) {\r\n      var stateHook = updateWorkInProgressHook();\r\n      return updateActionStateImpl(stateHook, currentHook, action);\r\n    }\r\n    function updateActionStateImpl(stateHook, currentStateHook, action) {\r\n      currentStateHook = updateReducerImpl(\r\n        stateHook,\r\n        currentStateHook,\r\n        actionStateReducer\r\n      )[0];\r\n      stateHook = updateReducer(basicStateReducer)[0];\r\n      if (\r\n        \"object\" === typeof currentStateHook &&\r\n        null !== currentStateHook &&\r\n        \"function\" === typeof currentStateHook.then\r\n      )\r\n        try {\r\n          var state = useThenable(currentStateHook);\r\n        } catch (x) {\r\n          if (x === SuspenseException) throw SuspenseActionException;\r\n          throw x;\r\n        }\r\n      else state = currentStateHook;\r\n      currentStateHook = updateWorkInProgressHook();\r\n      var actionQueue = currentStateHook.queue,\r\n        dispatch = actionQueue.dispatch;\r\n      action !== currentStateHook.memoizedState &&\r\n        ((currentlyRenderingFiber.flags |= 2048),\r\n        pushSimpleEffect(\r\n          HasEffect | Passive,\r\n          createEffectInstance(),\r\n          actionStateActionEffect.bind(null, actionQueue, action),\r\n          null\r\n        ));\r\n      return [state, dispatch, stateHook];\r\n    }\r\n    function actionStateActionEffect(actionQueue, action) {\r\n      actionQueue.action = action;\r\n    }\r\n    function rerenderActionState(action) {\r\n      var stateHook = updateWorkInProgressHook(),\r\n        currentStateHook = currentHook;\r\n      if (null !== currentStateHook)\r\n        return updateActionStateImpl(stateHook, currentStateHook, action);\r\n      updateWorkInProgressHook();\r\n      stateHook = stateHook.memoizedState;\r\n      currentStateHook = updateWorkInProgressHook();\r\n      var dispatch = currentStateHook.queue.dispatch;\r\n      currentStateHook.memoizedState = action;\r\n      return [stateHook, dispatch, !1];\r\n    }\r\n    function pushSimpleEffect(tag, inst, create, createDeps) {\r\n      tag = {\r\n        tag: tag,\r\n        create: create,\r\n        deps: createDeps,\r\n        inst: inst,\r\n        next: null\r\n      };\r\n      inst = currentlyRenderingFiber.updateQueue;\r\n      null === inst &&\r\n        ((inst = createFunctionComponentUpdateQueue()),\r\n        (currentlyRenderingFiber.updateQueue = inst));\r\n      create = inst.lastEffect;\r\n      null === create\r\n        ? (inst.lastEffect = tag.next = tag)\r\n        : ((createDeps = create.next),\r\n          (create.next = tag),\r\n          (tag.next = createDeps),\r\n          (inst.lastEffect = tag));\r\n      return tag;\r\n    }\r\n    function createEffectInstance() {\r\n      return { destroy: void 0, resource: void 0 };\r\n    }\r\n    function mountRef(initialValue) {\r\n      var hook = mountWorkInProgressHook();\r\n      initialValue = { current: initialValue };\r\n      return (hook.memoizedState = initialValue);\r\n    }\r\n    function mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {\r\n      var hook = mountWorkInProgressHook();\r\n      createDeps = void 0 === createDeps ? null : createDeps;\r\n      currentlyRenderingFiber.flags |= fiberFlags;\r\n      hook.memoizedState = pushSimpleEffect(\r\n        HasEffect | hookFlags,\r\n        createEffectInstance(),\r\n        create,\r\n        createDeps\r\n      );\r\n    }\r\n    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {\r\n      var hook = updateWorkInProgressHook();\r\n      deps = void 0 === deps ? null : deps;\r\n      var inst = hook.memoizedState.inst;\r\n      null !== currentHook &&\r\n      null !== deps &&\r\n      areHookInputsEqual(deps, currentHook.memoizedState.deps)\r\n        ? (hook.memoizedState = pushSimpleEffect(hookFlags, inst, create, deps))\r\n        : ((currentlyRenderingFiber.flags |= fiberFlags),\r\n          (hook.memoizedState = pushSimpleEffect(\r\n            HasEffect | hookFlags,\r\n            inst,\r\n            create,\r\n            deps\r\n          )));\r\n    }\r\n    function mountEffect(create, createDeps) {\r\n      (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode &&\r\n      (currentlyRenderingFiber.mode & NoStrictPassiveEffectsMode) === NoMode\r\n        ? mountEffectImpl(276826112, Passive, create, createDeps)\r\n        : mountEffectImpl(8390656, Passive, create, createDeps);\r\n    }\r\n    function mountLayoutEffect(create, deps) {\r\n      var fiberFlags = 4194308;\r\n      (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode &&\r\n        (fiberFlags |= 134217728);\r\n      return mountEffectImpl(fiberFlags, Layout, create, deps);\r\n    }\r\n    function imperativeHandleEffect(create, ref) {\r\n      if (\"function\" === typeof ref) {\r\n        create = create();\r\n        var refCleanup = ref(create);\r\n        return function () {\r\n          \"function\" === typeof refCleanup ? refCleanup() : ref(null);\r\n        };\r\n      }\r\n      if (null !== ref && void 0 !== ref)\r\n        return (\r\n          ref.hasOwnProperty(\"current\") ||\r\n            console.error(\r\n              \"Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.\",\r\n              \"an object with keys {\" + Object.keys(ref).join(\", \") + \"}\"\r\n            ),\r\n          (create = create()),\r\n          (ref.current = create),\r\n          function () {\r\n            ref.current = null;\r\n          }\r\n        );\r\n    }\r\n    function mountImperativeHandle(ref, create, deps) {\r\n      \"function\" !== typeof create &&\r\n        console.error(\r\n          \"Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.\",\r\n          null !== create ? typeof create : \"null\"\r\n        );\r\n      deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\r\n      var fiberFlags = 4194308;\r\n      (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode &&\r\n        (fiberFlags |= 134217728);\r\n      mountEffectImpl(\r\n        fiberFlags,\r\n        Layout,\r\n        imperativeHandleEffect.bind(null, create, ref),\r\n        deps\r\n      );\r\n    }\r\n    function updateImperativeHandle(ref, create, deps) {\r\n      \"function\" !== typeof create &&\r\n        console.error(\r\n          \"Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.\",\r\n          null !== create ? typeof create : \"null\"\r\n        );\r\n      deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\r\n      updateEffectImpl(\r\n        4,\r\n        Layout,\r\n        imperativeHandleEffect.bind(null, create, ref),\r\n        deps\r\n      );\r\n    }\r\n    function mountCallback(callback, deps) {\r\n      mountWorkInProgressHook().memoizedState = [\r\n        callback,\r\n        void 0 === deps ? null : deps\r\n      ];\r\n      return callback;\r\n    }\r\n    function updateCallback(callback, deps) {\r\n      var hook = updateWorkInProgressHook();\r\n      deps = void 0 === deps ? null : deps;\r\n      var prevState = hook.memoizedState;\r\n      if (null !== deps && areHookInputsEqual(deps, prevState[1]))\r\n        return prevState[0];\r\n      hook.memoizedState = [callback, deps];\r\n      return callback;\r\n    }\r\n    function mountMemo(nextCreate, deps) {\r\n      var hook = mountWorkInProgressHook();\r\n      deps = void 0 === deps ? null : deps;\r\n      var nextValue = nextCreate();\r\n      if (shouldDoubleInvokeUserFnsInHooksDEV) {\r\n        setIsStrictModeForDevtools(!0);\r\n        try {\r\n          nextCreate();\r\n        } finally {\r\n          setIsStrictModeForDevtools(!1);\r\n        }\r\n      }\r\n      hook.memoizedState = [nextValue, deps];\r\n      return nextValue;\r\n    }\r\n    function updateMemo(nextCreate, deps) {\r\n      var hook = updateWorkInProgressHook();\r\n      deps = void 0 === deps ? null : deps;\r\n      var prevState = hook.memoizedState;\r\n      if (null !== deps && areHookInputsEqual(deps, prevState[1]))\r\n        return prevState[0];\r\n      prevState = nextCreate();\r\n      if (shouldDoubleInvokeUserFnsInHooksDEV) {\r\n        setIsStrictModeForDevtools(!0);\r\n        try {\r\n          nextCreate();\r\n        } finally {\r\n          setIsStrictModeForDevtools(!1);\r\n        }\r\n      }\r\n      hook.memoizedState = [prevState, deps];\r\n      return prevState;\r\n    }\r\n    function mountDeferredValue(value, initialValue) {\r\n      var hook = mountWorkInProgressHook();\r\n      return mountDeferredValueImpl(hook, value, initialValue);\r\n    }\r\n    function updateDeferredValue(value, initialValue) {\r\n      var hook = updateWorkInProgressHook();\r\n      return updateDeferredValueImpl(\r\n        hook,\r\n        currentHook.memoizedState,\r\n        value,\r\n        initialValue\r\n      );\r\n    }\r\n    function rerenderDeferredValue(value, initialValue) {\r\n      var hook = updateWorkInProgressHook();\r\n      return null === currentHook\r\n        ? mountDeferredValueImpl(hook, value, initialValue)\r\n        : updateDeferredValueImpl(\r\n            hook,\r\n            currentHook.memoizedState,\r\n            value,\r\n            initialValue\r\n          );\r\n    }\r\n    function mountDeferredValueImpl(hook, value, initialValue) {\r\n      if (void 0 === initialValue || 0 !== (renderLanes & 1073741824))\r\n        return (hook.memoizedState = value);\r\n      hook.memoizedState = initialValue;\r\n      hook = requestDeferredLane();\r\n      currentlyRenderingFiber.lanes |= hook;\r\n      workInProgressRootSkippedLanes |= hook;\r\n      return initialValue;\r\n    }\r\n    function updateDeferredValueImpl(hook, prevValue, value, initialValue) {\r\n      if (objectIs(value, prevValue)) return value;\r\n      if (null !== currentTreeHiddenStackCursor.current)\r\n        return (\r\n          (hook = mountDeferredValueImpl(hook, value, initialValue)),\r\n          objectIs(hook, prevValue) || (didReceiveUpdate = !0),\r\n          hook\r\n        );\r\n      if (0 === (renderLanes & 42))\r\n        return (didReceiveUpdate = !0), (hook.memoizedState = value);\r\n      hook = requestDeferredLane();\r\n      currentlyRenderingFiber.lanes |= hook;\r\n      workInProgressRootSkippedLanes |= hook;\r\n      return prevValue;\r\n    }\r\n    function startTransition(\r\n      fiber,\r\n      queue,\r\n      pendingState,\r\n      finishedState,\r\n      callback\r\n    ) {\r\n      var previousPriority = ReactDOMSharedInternals.p;\r\n      ReactDOMSharedInternals.p =\r\n        0 !== previousPriority && previousPriority < ContinuousEventPriority\r\n          ? previousPriority\r\n          : ContinuousEventPriority;\r\n      var prevTransition = ReactSharedInternals.T,\r\n        currentTransition = {};\r\n      ReactSharedInternals.T = currentTransition;\r\n      dispatchOptimisticSetState(fiber, !1, queue, pendingState);\r\n      currentTransition._updatedFibers = new Set();\r\n      try {\r\n        var returnValue = callback(),\r\n          onStartTransitionFinish = ReactSharedInternals.S;\r\n        null !== onStartTransitionFinish &&\r\n          onStartTransitionFinish(currentTransition, returnValue);\r\n        if (\r\n          null !== returnValue &&\r\n          \"object\" === typeof returnValue &&\r\n          \"function\" === typeof returnValue.then\r\n        ) {\r\n          var thenableForFinishedState = chainThenableValue(\r\n            returnValue,\r\n            finishedState\r\n          );\r\n          dispatchSetStateInternal(\r\n            fiber,\r\n            queue,\r\n            thenableForFinishedState,\r\n            requestUpdateLane(fiber)\r\n          );\r\n        } else\r\n          dispatchSetStateInternal(\r\n            fiber,\r\n            queue,\r\n            finishedState,\r\n            requestUpdateLane(fiber)\r\n          );\r\n      } catch (error) {\r\n        dispatchSetStateInternal(\r\n          fiber,\r\n          queue,\r\n          { then: function () {}, status: \"rejected\", reason: error },\r\n          requestUpdateLane(fiber)\r\n        );\r\n      } finally {\r\n        (ReactDOMSharedInternals.p = previousPriority),\r\n          (ReactSharedInternals.T = prevTransition),\r\n          null === prevTransition &&\r\n            currentTransition._updatedFibers &&\r\n            ((fiber = currentTransition._updatedFibers.size),\r\n            currentTransition._updatedFibers.clear(),\r\n            10 < fiber &&\r\n              console.warn(\r\n                \"Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.\"\r\n              ));\r\n      }\r\n    }\r\n    function startHostTransition(formFiber, pendingState, action, formData) {\r\n      if (5 !== formFiber.tag)\r\n        throw Error(\r\n          \"Expected the form instance to be a HostComponent. This is a bug in React.\"\r\n        );\r\n      var queue = ensureFormComponentIsStateful(formFiber).queue;\r\n      startTransition(\r\n        formFiber,\r\n        queue,\r\n        pendingState,\r\n        NotPendingTransition,\r\n        null === action\r\n          ? noop$2\r\n          : function () {\r\n              requestFormReset$1(formFiber);\r\n              return action(formData);\r\n            }\r\n      );\r\n    }\r\n    function ensureFormComponentIsStateful(formFiber) {\r\n      var existingStateHook = formFiber.memoizedState;\r\n      if (null !== existingStateHook) return existingStateHook;\r\n      existingStateHook = {\r\n        memoizedState: NotPendingTransition,\r\n        baseState: NotPendingTransition,\r\n        baseQueue: null,\r\n        queue: {\r\n          pending: null,\r\n          lanes: 0,\r\n          dispatch: null,\r\n          lastRenderedReducer: basicStateReducer,\r\n          lastRenderedState: NotPendingTransition\r\n        },\r\n        next: null\r\n      };\r\n      var initialResetState = {};\r\n      existingStateHook.next = {\r\n        memoizedState: initialResetState,\r\n        baseState: initialResetState,\r\n        baseQueue: null,\r\n        queue: {\r\n          pending: null,\r\n          lanes: 0,\r\n          dispatch: null,\r\n          lastRenderedReducer: basicStateReducer,\r\n          lastRenderedState: initialResetState\r\n        },\r\n        next: null\r\n      };\r\n      formFiber.memoizedState = existingStateHook;\r\n      formFiber = formFiber.alternate;\r\n      null !== formFiber && (formFiber.memoizedState = existingStateHook);\r\n      return existingStateHook;\r\n    }\r\n    function requestFormReset$1(formFiber) {\r\n      null === ReactSharedInternals.T &&\r\n        console.error(\r\n          \"requestFormReset was called outside a transition or action. To fix, move to an action, or wrap with startTransition.\"\r\n        );\r\n      var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;\r\n      dispatchSetStateInternal(\r\n        formFiber,\r\n        resetStateQueue,\r\n        {},\r\n        requestUpdateLane(formFiber)\r\n      );\r\n    }\r\n    function mountTransition() {\r\n      var stateHook = mountStateImpl(!1);\r\n      stateHook = startTransition.bind(\r\n        null,\r\n        currentlyRenderingFiber,\r\n        stateHook.queue,\r\n        !0,\r\n        !1\r\n      );\r\n      mountWorkInProgressHook().memoizedState = stateHook;\r\n      return [!1, stateHook];\r\n    }\r\n    function updateTransition() {\r\n      var booleanOrThenable = updateReducer(basicStateReducer)[0],\r\n        start = updateWorkInProgressHook().memoizedState;\r\n      return [\r\n        \"boolean\" === typeof booleanOrThenable\r\n          ? booleanOrThenable\r\n          : useThenable(booleanOrThenable),\r\n        start\r\n      ];\r\n    }\r\n    function rerenderTransition() {\r\n      var booleanOrThenable = rerenderReducer(basicStateReducer)[0],\r\n        start = updateWorkInProgressHook().memoizedState;\r\n      return [\r\n        \"boolean\" === typeof booleanOrThenable\r\n          ? booleanOrThenable\r\n          : useThenable(booleanOrThenable),\r\n        start\r\n      ];\r\n    }\r\n    function useHostTransitionStatus() {\r\n      return readContext(HostTransitionContext);\r\n    }\r\n    function mountId() {\r\n      var hook = mountWorkInProgressHook(),\r\n        identifierPrefix = workInProgressRoot.identifierPrefix;\r\n      if (isHydrating) {\r\n        var treeId = treeContextOverflow;\r\n        var idWithLeadingBit = treeContextId;\r\n        treeId =\r\n          (\r\n            idWithLeadingBit & ~(1 << (32 - clz32(idWithLeadingBit) - 1))\r\n          ).toString(32) + treeId;\r\n        identifierPrefix = \"\\u00ab\" + identifierPrefix + \"R\" + treeId;\r\n        treeId = localIdCounter++;\r\n        0 < treeId && (identifierPrefix += \"H\" + treeId.toString(32));\r\n        identifierPrefix += \"\\u00bb\";\r\n      } else\r\n        (treeId = globalClientIdCounter++),\r\n          (identifierPrefix =\r\n            \"\\u00ab\" + identifierPrefix + \"r\" + treeId.toString(32) + \"\\u00bb\");\r\n      return (hook.memoizedState = identifierPrefix);\r\n    }\r\n    function mountRefresh() {\r\n      return (mountWorkInProgressHook().memoizedState = refreshCache.bind(\r\n        null,\r\n        currentlyRenderingFiber\r\n      ));\r\n    }\r\n    function refreshCache(fiber, seedKey) {\r\n      for (var provider = fiber.return; null !== provider; ) {\r\n        switch (provider.tag) {\r\n          case 24:\r\n          case 3:\r\n            var lane = requestUpdateLane(provider);\r\n            fiber = createUpdate(lane);\r\n            var root = enqueueUpdate(provider, fiber, lane);\r\n            null !== root &&\r\n              (scheduleUpdateOnFiber(root, provider, lane),\r\n              entangleTransitions(root, provider, lane));\r\n            provider = createCache();\r\n            null !== seedKey &&\r\n              void 0 !== seedKey &&\r\n              null !== root &&\r\n              console.error(\r\n                \"The seed argument is not enabled outside experimental channels.\"\r\n              );\r\n            fiber.payload = { cache: provider };\r\n            return;\r\n        }\r\n        provider = provider.return;\r\n      }\r\n    }\r\n    function dispatchReducerAction(fiber, queue, action) {\r\n      var args = arguments;\r\n      \"function\" === typeof args[3] &&\r\n        console.error(\r\n          \"State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().\"\r\n        );\r\n      args = requestUpdateLane(fiber);\r\n      var update = {\r\n        lane: args,\r\n        revertLane: 0,\r\n        action: action,\r\n        hasEagerState: !1,\r\n        eagerState: null,\r\n        next: null\r\n      };\r\n      isRenderPhaseUpdate(fiber)\r\n        ? enqueueRenderPhaseUpdate(queue, update)\r\n        : ((update = enqueueConcurrentHookUpdate(fiber, queue, update, args)),\r\n          null !== update &&\r\n            (scheduleUpdateOnFiber(update, fiber, args),\r\n            entangleTransitionUpdate(update, queue, args)));\r\n      markStateUpdateScheduled(fiber, args);\r\n    }\r\n    function dispatchSetState(fiber, queue, action) {\r\n      var args = arguments;\r\n      \"function\" === typeof args[3] &&\r\n        console.error(\r\n          \"State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().\"\r\n        );\r\n      args = requestUpdateLane(fiber);\r\n      dispatchSetStateInternal(fiber, queue, action, args);\r\n      markStateUpdateScheduled(fiber, args);\r\n    }\r\n    function dispatchSetStateInternal(fiber, queue, action, lane) {\r\n      var update = {\r\n        lane: lane,\r\n        revertLane: 0,\r\n        action: action,\r\n        hasEagerState: !1,\r\n        eagerState: null,\r\n        next: null\r\n      };\r\n      if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);\r\n      else {\r\n        var alternate = fiber.alternate;\r\n        if (\r\n          0 === fiber.lanes &&\r\n          (null === alternate || 0 === alternate.lanes) &&\r\n          ((alternate = queue.lastRenderedReducer), null !== alternate)\r\n        ) {\r\n          var prevDispatcher = ReactSharedInternals.H;\r\n          ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n          try {\r\n            var currentState = queue.lastRenderedState,\r\n              eagerState = alternate(currentState, action);\r\n            update.hasEagerState = !0;\r\n            update.eagerState = eagerState;\r\n            if (objectIs(eagerState, currentState))\r\n              return (\r\n                enqueueUpdate$1(fiber, queue, update, 0),\r\n                null === workInProgressRoot &&\r\n                  finishQueueingConcurrentUpdates(),\r\n                !1\r\n              );\r\n          } catch (error) {\r\n          } finally {\r\n            ReactSharedInternals.H = prevDispatcher;\r\n          }\r\n        }\r\n        action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\r\n        if (null !== action)\r\n          return (\r\n            scheduleUpdateOnFiber(action, fiber, lane),\r\n            entangleTransitionUpdate(action, queue, lane),\r\n            !0\r\n          );\r\n      }\r\n      return !1;\r\n    }\r\n    function dispatchOptimisticSetState(\r\n      fiber,\r\n      throwIfDuringRender,\r\n      queue,\r\n      action\r\n    ) {\r\n      null === ReactSharedInternals.T &&\r\n        0 === currentEntangledLane &&\r\n        console.error(\r\n          \"An optimistic state update occurred outside a transition or action. To fix, move the update to an action, or wrap with startTransition.\"\r\n        );\r\n      action = {\r\n        lane: 2,\r\n        revertLane: requestTransitionLane(),\r\n        action: action,\r\n        hasEagerState: !1,\r\n        eagerState: null,\r\n        next: null\r\n      };\r\n      if (isRenderPhaseUpdate(fiber)) {\r\n        if (throwIfDuringRender)\r\n          throw Error(\"Cannot update optimistic state while rendering.\");\r\n        console.error(\"Cannot call startTransition while rendering.\");\r\n      } else\r\n        (throwIfDuringRender = enqueueConcurrentHookUpdate(\r\n          fiber,\r\n          queue,\r\n          action,\r\n          2\r\n        )),\r\n          null !== throwIfDuringRender &&\r\n            scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);\r\n      markStateUpdateScheduled(fiber, 2);\r\n    }\r\n    function isRenderPhaseUpdate(fiber) {\r\n      var alternate = fiber.alternate;\r\n      return (\r\n        fiber === currentlyRenderingFiber ||\r\n        (null !== alternate && alternate === currentlyRenderingFiber)\r\n      );\r\n    }\r\n    function enqueueRenderPhaseUpdate(queue, update) {\r\n      didScheduleRenderPhaseUpdateDuringThisPass =\r\n        didScheduleRenderPhaseUpdate = !0;\r\n      var pending = queue.pending;\r\n      null === pending\r\n        ? (update.next = update)\r\n        : ((update.next = pending.next), (pending.next = update));\r\n      queue.pending = update;\r\n    }\r\n    function entangleTransitionUpdate(root, queue, lane) {\r\n      if (0 !== (lane & 4194048)) {\r\n        var queueLanes = queue.lanes;\r\n        queueLanes &= root.pendingLanes;\r\n        lane |= queueLanes;\r\n        queue.lanes = lane;\r\n        markRootEntangled(root, lane);\r\n      }\r\n    }\r\n    function pushDebugInfo(debugInfo) {\r\n      var previousDebugInfo = currentDebugInfo;\r\n      null != debugInfo &&\r\n        (currentDebugInfo =\r\n          null === previousDebugInfo\r\n            ? debugInfo\r\n            : previousDebugInfo.concat(debugInfo));\r\n      return previousDebugInfo;\r\n    }\r\n    function validateFragmentProps(element, fiber, returnFiber) {\r\n      for (var keys = Object.keys(element.props), i = 0; i < keys.length; i++) {\r\n        var key = keys[i];\r\n        if (\"children\" !== key && \"key\" !== key) {\r\n          null === fiber &&\r\n            ((fiber = createFiberFromElement(element, returnFiber.mode, 0)),\r\n            (fiber._debugInfo = currentDebugInfo),\r\n            (fiber.return = returnFiber));\r\n          runWithFiberInDEV(\r\n            fiber,\r\n            function (erroredKey) {\r\n              console.error(\r\n                \"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",\r\n                erroredKey\r\n              );\r\n            },\r\n            key\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    function unwrapThenable(thenable) {\r\n      var index = thenableIndexCounter;\r\n      thenableIndexCounter += 1;\r\n      null === thenableState && (thenableState = createThenableState());\r\n      return trackUsedThenable(thenableState, thenable, index);\r\n    }\r\n    function coerceRef(workInProgress, element) {\r\n      element = element.props.ref;\r\n      workInProgress.ref = void 0 !== element ? element : null;\r\n    }\r\n    function throwOnInvalidObjectType(returnFiber, newChild) {\r\n      if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE)\r\n        throw Error(\r\n          'A React Element from an older version of React was rendered. This is not supported. It can happen if:\\n- Multiple copies of the \"react\" package is used.\\n- A library pre-bundled an old copy of \"react\" or \"react/jsx-runtime\".\\n- A compiler tries to \"inline\" JSX instead of using the runtime.'\r\n        );\r\n      returnFiber = Object.prototype.toString.call(newChild);\r\n      throw Error(\r\n        \"Objects are not valid as a React child (found: \" +\r\n          (\"[object Object]\" === returnFiber\r\n            ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\"\r\n            : returnFiber) +\r\n          \"). If you meant to render a collection of children, use an array instead.\"\r\n      );\r\n    }\r\n    function warnOnFunctionType(returnFiber, invalidChild) {\r\n      var parentName = getComponentNameFromFiber(returnFiber) || \"Component\";\r\n      ownerHasFunctionTypeWarning[parentName] ||\r\n        ((ownerHasFunctionTypeWarning[parentName] = !0),\r\n        (invalidChild =\r\n          invalidChild.displayName || invalidChild.name || \"Component\"),\r\n        3 === returnFiber.tag\r\n          ? console.error(\r\n              \"Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\\n  root.render(%s)\",\r\n              invalidChild,\r\n              invalidChild,\r\n              invalidChild\r\n            )\r\n          : console.error(\r\n              \"Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\\n  <%s>{%s}</%s>\",\r\n              invalidChild,\r\n              invalidChild,\r\n              parentName,\r\n              invalidChild,\r\n              parentName\r\n            ));\r\n    }\r\n    function warnOnSymbolType(returnFiber, invalidChild) {\r\n      var parentName = getComponentNameFromFiber(returnFiber) || \"Component\";\r\n      ownerHasSymbolTypeWarning[parentName] ||\r\n        ((ownerHasSymbolTypeWarning[parentName] = !0),\r\n        (invalidChild = String(invalidChild)),\r\n        3 === returnFiber.tag\r\n          ? console.error(\r\n              \"Symbols are not valid as a React child.\\n  root.render(%s)\",\r\n              invalidChild\r\n            )\r\n          : console.error(\r\n              \"Symbols are not valid as a React child.\\n  <%s>%s</%s>\",\r\n              parentName,\r\n              invalidChild,\r\n              parentName\r\n            ));\r\n    }\r\n    function createChildReconciler(shouldTrackSideEffects) {\r\n      function deleteChild(returnFiber, childToDelete) {\r\n        if (shouldTrackSideEffects) {\r\n          var deletions = returnFiber.deletions;\r\n          null === deletions\r\n            ? ((returnFiber.deletions = [childToDelete]),\r\n              (returnFiber.flags |= 16))\r\n            : deletions.push(childToDelete);\r\n        }\r\n      }\r\n      function deleteRemainingChildren(returnFiber, currentFirstChild) {\r\n        if (!shouldTrackSideEffects) return null;\r\n        for (; null !== currentFirstChild; )\r\n          deleteChild(returnFiber, currentFirstChild),\r\n            (currentFirstChild = currentFirstChild.sibling);\r\n        return null;\r\n      }\r\n      function mapRemainingChildren(currentFirstChild) {\r\n        for (var existingChildren = new Map(); null !== currentFirstChild; )\r\n          null !== currentFirstChild.key\r\n            ? existingChildren.set(currentFirstChild.key, currentFirstChild)\r\n            : existingChildren.set(currentFirstChild.index, currentFirstChild),\r\n            (currentFirstChild = currentFirstChild.sibling);\r\n        return existingChildren;\r\n      }\r\n      function useFiber(fiber, pendingProps) {\r\n        fiber = createWorkInProgress(fiber, pendingProps);\r\n        fiber.index = 0;\r\n        fiber.sibling = null;\r\n        return fiber;\r\n      }\r\n      function placeChild(newFiber, lastPlacedIndex, newIndex) {\r\n        newFiber.index = newIndex;\r\n        if (!shouldTrackSideEffects)\r\n          return (newFiber.flags |= 1048576), lastPlacedIndex;\r\n        newIndex = newFiber.alternate;\r\n        if (null !== newIndex)\r\n          return (\r\n            (newIndex = newIndex.index),\r\n            newIndex < lastPlacedIndex\r\n              ? ((newFiber.flags |= 67108866), lastPlacedIndex)\r\n              : newIndex\r\n          );\r\n        newFiber.flags |= 67108866;\r\n        return lastPlacedIndex;\r\n      }\r\n      function placeSingleChild(newFiber) {\r\n        shouldTrackSideEffects &&\r\n          null === newFiber.alternate &&\r\n          (newFiber.flags |= 67108866);\r\n        return newFiber;\r\n      }\r\n      function updateTextNode(returnFiber, current, textContent, lanes) {\r\n        if (null === current || 6 !== current.tag)\r\n          return (\r\n            (current = createFiberFromText(\r\n              textContent,\r\n              returnFiber.mode,\r\n              lanes\r\n            )),\r\n            (current.return = returnFiber),\r\n            (current._debugOwner = returnFiber),\r\n            (current._debugTask = returnFiber._debugTask),\r\n            (current._debugInfo = currentDebugInfo),\r\n            current\r\n          );\r\n        current = useFiber(current, textContent);\r\n        current.return = returnFiber;\r\n        current._debugInfo = currentDebugInfo;\r\n        return current;\r\n      }\r\n      function updateElement(returnFiber, current, element, lanes) {\r\n        var elementType = element.type;\r\n        if (elementType === REACT_FRAGMENT_TYPE)\r\n          return (\r\n            (current = updateFragment(\r\n              returnFiber,\r\n              current,\r\n              element.props.children,\r\n              lanes,\r\n              element.key\r\n            )),\r\n            validateFragmentProps(element, current, returnFiber),\r\n            current\r\n          );\r\n        if (\r\n          null !== current &&\r\n          (current.elementType === elementType ||\r\n            isCompatibleFamilyForHotReloading(current, element) ||\r\n            (\"object\" === typeof elementType &&\r\n              null !== elementType &&\r\n              elementType.$$typeof === REACT_LAZY_TYPE &&\r\n              callLazyInitInDEV(elementType) === current.type))\r\n        )\r\n          return (\r\n            (current = useFiber(current, element.props)),\r\n            coerceRef(current, element),\r\n            (current.return = returnFiber),\r\n            (current._debugOwner = element._owner),\r\n            (current._debugInfo = currentDebugInfo),\r\n            current\r\n          );\r\n        current = createFiberFromElement(element, returnFiber.mode, lanes);\r\n        coerceRef(current, element);\r\n        current.return = returnFiber;\r\n        current._debugInfo = currentDebugInfo;\r\n        return current;\r\n      }\r\n      function updatePortal(returnFiber, current, portal, lanes) {\r\n        if (\r\n          null === current ||\r\n          4 !== current.tag ||\r\n          current.stateNode.containerInfo !== portal.containerInfo ||\r\n          current.stateNode.implementation !== portal.implementation\r\n        )\r\n          return (\r\n            (current = createFiberFromPortal(portal, returnFiber.mode, lanes)),\r\n            (current.return = returnFiber),\r\n            (current._debugInfo = currentDebugInfo),\r\n            current\r\n          );\r\n        current = useFiber(current, portal.children || []);\r\n        current.return = returnFiber;\r\n        current._debugInfo = currentDebugInfo;\r\n        return current;\r\n      }\r\n      function updateFragment(returnFiber, current, fragment, lanes, key) {\r\n        if (null === current || 7 !== current.tag)\r\n          return (\r\n            (current = createFiberFromFragment(\r\n              fragment,\r\n              returnFiber.mode,\r\n              lanes,\r\n              key\r\n            )),\r\n            (current.return = returnFiber),\r\n            (current._debugOwner = returnFiber),\r\n            (current._debugTask = returnFiber._debugTask),\r\n            (current._debugInfo = currentDebugInfo),\r\n            current\r\n          );\r\n        current = useFiber(current, fragment);\r\n        current.return = returnFiber;\r\n        current._debugInfo = currentDebugInfo;\r\n        return current;\r\n      }\r\n      function createChild(returnFiber, newChild, lanes) {\r\n        if (\r\n          (\"string\" === typeof newChild && \"\" !== newChild) ||\r\n          \"number\" === typeof newChild ||\r\n          \"bigint\" === typeof newChild\r\n        )\r\n          return (\r\n            (newChild = createFiberFromText(\r\n              \"\" + newChild,\r\n              returnFiber.mode,\r\n              lanes\r\n            )),\r\n            (newChild.return = returnFiber),\r\n            (newChild._debugOwner = returnFiber),\r\n            (newChild._debugTask = returnFiber._debugTask),\r\n            (newChild._debugInfo = currentDebugInfo),\r\n            newChild\r\n          );\r\n        if (\"object\" === typeof newChild && null !== newChild) {\r\n          switch (newChild.$$typeof) {\r\n            case REACT_ELEMENT_TYPE:\r\n              return (\r\n                (lanes = createFiberFromElement(\r\n                  newChild,\r\n                  returnFiber.mode,\r\n                  lanes\r\n                )),\r\n                coerceRef(lanes, newChild),\r\n                (lanes.return = returnFiber),\r\n                (returnFiber = pushDebugInfo(newChild._debugInfo)),\r\n                (lanes._debugInfo = currentDebugInfo),\r\n                (currentDebugInfo = returnFiber),\r\n                lanes\r\n              );\r\n            case REACT_PORTAL_TYPE:\r\n              return (\r\n                (newChild = createFiberFromPortal(\r\n                  newChild,\r\n                  returnFiber.mode,\r\n                  lanes\r\n                )),\r\n                (newChild.return = returnFiber),\r\n                (newChild._debugInfo = currentDebugInfo),\r\n                newChild\r\n              );\r\n            case REACT_LAZY_TYPE:\r\n              var _prevDebugInfo = pushDebugInfo(newChild._debugInfo);\r\n              newChild = callLazyInitInDEV(newChild);\r\n              returnFiber = createChild(returnFiber, newChild, lanes);\r\n              currentDebugInfo = _prevDebugInfo;\r\n              return returnFiber;\r\n          }\r\n          if (isArrayImpl(newChild) || getIteratorFn(newChild))\r\n            return (\r\n              (lanes = createFiberFromFragment(\r\n                newChild,\r\n                returnFiber.mode,\r\n                lanes,\r\n                null\r\n              )),\r\n              (lanes.return = returnFiber),\r\n              (lanes._debugOwner = returnFiber),\r\n              (lanes._debugTask = returnFiber._debugTask),\r\n              (returnFiber = pushDebugInfo(newChild._debugInfo)),\r\n              (lanes._debugInfo = currentDebugInfo),\r\n              (currentDebugInfo = returnFiber),\r\n              lanes\r\n            );\r\n          if (\"function\" === typeof newChild.then)\r\n            return (\r\n              (_prevDebugInfo = pushDebugInfo(newChild._debugInfo)),\r\n              (returnFiber = createChild(\r\n                returnFiber,\r\n                unwrapThenable(newChild),\r\n                lanes\r\n              )),\r\n              (currentDebugInfo = _prevDebugInfo),\r\n              returnFiber\r\n            );\r\n          if (newChild.$$typeof === REACT_CONTEXT_TYPE)\r\n            return createChild(\r\n              returnFiber,\r\n              readContextDuringReconciliation(returnFiber, newChild),\r\n              lanes\r\n            );\r\n          throwOnInvalidObjectType(returnFiber, newChild);\r\n        }\r\n        \"function\" === typeof newChild &&\r\n          warnOnFunctionType(returnFiber, newChild);\r\n        \"symbol\" === typeof newChild && warnOnSymbolType(returnFiber, newChild);\r\n        return null;\r\n      }\r\n      function updateSlot(returnFiber, oldFiber, newChild, lanes) {\r\n        var key = null !== oldFiber ? oldFiber.key : null;\r\n        if (\r\n          (\"string\" === typeof newChild && \"\" !== newChild) ||\r\n          \"number\" === typeof newChild ||\r\n          \"bigint\" === typeof newChild\r\n        )\r\n          return null !== key\r\n            ? null\r\n            : updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\r\n        if (\"object\" === typeof newChild && null !== newChild) {\r\n          switch (newChild.$$typeof) {\r\n            case REACT_ELEMENT_TYPE:\r\n              return newChild.key === key\r\n                ? ((key = pushDebugInfo(newChild._debugInfo)),\r\n                  (returnFiber = updateElement(\r\n                    returnFiber,\r\n                    oldFiber,\r\n                    newChild,\r\n                    lanes\r\n                  )),\r\n                  (currentDebugInfo = key),\r\n                  returnFiber)\r\n                : null;\r\n            case REACT_PORTAL_TYPE:\r\n              return newChild.key === key\r\n                ? updatePortal(returnFiber, oldFiber, newChild, lanes)\r\n                : null;\r\n            case REACT_LAZY_TYPE:\r\n              return (\r\n                (key = pushDebugInfo(newChild._debugInfo)),\r\n                (newChild = callLazyInitInDEV(newChild)),\r\n                (returnFiber = updateSlot(\r\n                  returnFiber,\r\n                  oldFiber,\r\n                  newChild,\r\n                  lanes\r\n                )),\r\n                (currentDebugInfo = key),\r\n                returnFiber\r\n              );\r\n          }\r\n          if (isArrayImpl(newChild) || getIteratorFn(newChild)) {\r\n            if (null !== key) return null;\r\n            key = pushDebugInfo(newChild._debugInfo);\r\n            returnFiber = updateFragment(\r\n              returnFiber,\r\n              oldFiber,\r\n              newChild,\r\n              lanes,\r\n              null\r\n            );\r\n            currentDebugInfo = key;\r\n            return returnFiber;\r\n          }\r\n          if (\"function\" === typeof newChild.then)\r\n            return (\r\n              (key = pushDebugInfo(newChild._debugInfo)),\r\n              (returnFiber = updateSlot(\r\n                returnFiber,\r\n                oldFiber,\r\n                unwrapThenable(newChild),\r\n                lanes\r\n              )),\r\n              (currentDebugInfo = key),\r\n              returnFiber\r\n            );\r\n          if (newChild.$$typeof === REACT_CONTEXT_TYPE)\r\n            return updateSlot(\r\n              returnFiber,\r\n              oldFiber,\r\n              readContextDuringReconciliation(returnFiber, newChild),\r\n              lanes\r\n            );\r\n          throwOnInvalidObjectType(returnFiber, newChild);\r\n        }\r\n        \"function\" === typeof newChild &&\r\n          warnOnFunctionType(returnFiber, newChild);\r\n        \"symbol\" === typeof newChild && warnOnSymbolType(returnFiber, newChild);\r\n        return null;\r\n      }\r\n      function updateFromMap(\r\n        existingChildren,\r\n        returnFiber,\r\n        newIdx,\r\n        newChild,\r\n        lanes\r\n      ) {\r\n        if (\r\n          (\"string\" === typeof newChild && \"\" !== newChild) ||\r\n          \"number\" === typeof newChild ||\r\n          \"bigint\" === typeof newChild\r\n        )\r\n          return (\r\n            (existingChildren = existingChildren.get(newIdx) || null),\r\n            updateTextNode(returnFiber, existingChildren, \"\" + newChild, lanes)\r\n          );\r\n        if (\"object\" === typeof newChild && null !== newChild) {\r\n          switch (newChild.$$typeof) {\r\n            case REACT_ELEMENT_TYPE:\r\n              return (\r\n                (newIdx =\r\n                  existingChildren.get(\r\n                    null === newChild.key ? newIdx : newChild.key\r\n                  ) || null),\r\n                (existingChildren = pushDebugInfo(newChild._debugInfo)),\r\n                (returnFiber = updateElement(\r\n                  returnFiber,\r\n                  newIdx,\r\n                  newChild,\r\n                  lanes\r\n                )),\r\n                (currentDebugInfo = existingChildren),\r\n                returnFiber\r\n              );\r\n            case REACT_PORTAL_TYPE:\r\n              return (\r\n                (existingChildren =\r\n                  existingChildren.get(\r\n                    null === newChild.key ? newIdx : newChild.key\r\n                  ) || null),\r\n                updatePortal(returnFiber, existingChildren, newChild, lanes)\r\n              );\r\n            case REACT_LAZY_TYPE:\r\n              var _prevDebugInfo7 = pushDebugInfo(newChild._debugInfo);\r\n              newChild = callLazyInitInDEV(newChild);\r\n              returnFiber = updateFromMap(\r\n                existingChildren,\r\n                returnFiber,\r\n                newIdx,\r\n                newChild,\r\n                lanes\r\n              );\r\n              currentDebugInfo = _prevDebugInfo7;\r\n              return returnFiber;\r\n          }\r\n          if (isArrayImpl(newChild) || getIteratorFn(newChild))\r\n            return (\r\n              (newIdx = existingChildren.get(newIdx) || null),\r\n              (existingChildren = pushDebugInfo(newChild._debugInfo)),\r\n              (returnFiber = updateFragment(\r\n                returnFiber,\r\n                newIdx,\r\n                newChild,\r\n                lanes,\r\n                null\r\n              )),\r\n              (currentDebugInfo = existingChildren),\r\n              returnFiber\r\n            );\r\n          if (\"function\" === typeof newChild.then)\r\n            return (\r\n              (_prevDebugInfo7 = pushDebugInfo(newChild._debugInfo)),\r\n              (returnFiber = updateFromMap(\r\n                existingChildren,\r\n                returnFiber,\r\n                newIdx,\r\n                unwrapThenable(newChild),\r\n                lanes\r\n              )),\r\n              (currentDebugInfo = _prevDebugInfo7),\r\n              returnFiber\r\n            );\r\n          if (newChild.$$typeof === REACT_CONTEXT_TYPE)\r\n            return updateFromMap(\r\n              existingChildren,\r\n              returnFiber,\r\n              newIdx,\r\n              readContextDuringReconciliation(returnFiber, newChild),\r\n              lanes\r\n            );\r\n          throwOnInvalidObjectType(returnFiber, newChild);\r\n        }\r\n        \"function\" === typeof newChild &&\r\n          warnOnFunctionType(returnFiber, newChild);\r\n        \"symbol\" === typeof newChild && warnOnSymbolType(returnFiber, newChild);\r\n        return null;\r\n      }\r\n      function warnOnInvalidKey(returnFiber, workInProgress, child, knownKeys) {\r\n        if (\"object\" !== typeof child || null === child) return knownKeys;\r\n        switch (child.$$typeof) {\r\n          case REACT_ELEMENT_TYPE:\r\n          case REACT_PORTAL_TYPE:\r\n            warnForMissingKey(returnFiber, workInProgress, child);\r\n            var key = child.key;\r\n            if (\"string\" !== typeof key) break;\r\n            if (null === knownKeys) {\r\n              knownKeys = new Set();\r\n              knownKeys.add(key);\r\n              break;\r\n            }\r\n            if (!knownKeys.has(key)) {\r\n              knownKeys.add(key);\r\n              break;\r\n            }\r\n            runWithFiberInDEV(workInProgress, function () {\r\n              console.error(\r\n                \"Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \\u2014 the behavior is unsupported and could change in a future version.\",\r\n                key\r\n              );\r\n            });\r\n            break;\r\n          case REACT_LAZY_TYPE:\r\n            (child = callLazyInitInDEV(child)),\r\n              warnOnInvalidKey(returnFiber, workInProgress, child, knownKeys);\r\n        }\r\n        return knownKeys;\r\n      }\r\n      function reconcileChildrenArray(\r\n        returnFiber,\r\n        currentFirstChild,\r\n        newChildren,\r\n        lanes\r\n      ) {\r\n        for (\r\n          var knownKeys = null,\r\n            resultingFirstChild = null,\r\n            previousNewFiber = null,\r\n            oldFiber = currentFirstChild,\r\n            newIdx = (currentFirstChild = 0),\r\n            nextOldFiber = null;\r\n          null !== oldFiber && newIdx < newChildren.length;\r\n          newIdx++\r\n        ) {\r\n          oldFiber.index > newIdx\r\n            ? ((nextOldFiber = oldFiber), (oldFiber = null))\r\n            : (nextOldFiber = oldFiber.sibling);\r\n          var newFiber = updateSlot(\r\n            returnFiber,\r\n            oldFiber,\r\n            newChildren[newIdx],\r\n            lanes\r\n          );\r\n          if (null === newFiber) {\r\n            null === oldFiber && (oldFiber = nextOldFiber);\r\n            break;\r\n          }\r\n          knownKeys = warnOnInvalidKey(\r\n            returnFiber,\r\n            newFiber,\r\n            newChildren[newIdx],\r\n            knownKeys\r\n          );\r\n          shouldTrackSideEffects &&\r\n            oldFiber &&\r\n            null === newFiber.alternate &&\r\n            deleteChild(returnFiber, oldFiber);\r\n          currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\r\n          null === previousNewFiber\r\n            ? (resultingFirstChild = newFiber)\r\n            : (previousNewFiber.sibling = newFiber);\r\n          previousNewFiber = newFiber;\r\n          oldFiber = nextOldFiber;\r\n        }\r\n        if (newIdx === newChildren.length)\r\n          return (\r\n            deleteRemainingChildren(returnFiber, oldFiber),\r\n            isHydrating && pushTreeFork(returnFiber, newIdx),\r\n            resultingFirstChild\r\n          );\r\n        if (null === oldFiber) {\r\n          for (; newIdx < newChildren.length; newIdx++)\r\n            (oldFiber = createChild(returnFiber, newChildren[newIdx], lanes)),\r\n              null !== oldFiber &&\r\n                ((knownKeys = warnOnInvalidKey(\r\n                  returnFiber,\r\n                  oldFiber,\r\n                  newChildren[newIdx],\r\n                  knownKeys\r\n                )),\r\n                (currentFirstChild = placeChild(\r\n                  oldFiber,\r\n                  currentFirstChild,\r\n                  newIdx\r\n                )),\r\n                null === previousNewFiber\r\n                  ? (resultingFirstChild = oldFiber)\r\n                  : (previousNewFiber.sibling = oldFiber),\r\n                (previousNewFiber = oldFiber));\r\n          isHydrating && pushTreeFork(returnFiber, newIdx);\r\n          return resultingFirstChild;\r\n        }\r\n        for (\r\n          oldFiber = mapRemainingChildren(oldFiber);\r\n          newIdx < newChildren.length;\r\n          newIdx++\r\n        )\r\n          (nextOldFiber = updateFromMap(\r\n            oldFiber,\r\n            returnFiber,\r\n            newIdx,\r\n            newChildren[newIdx],\r\n            lanes\r\n          )),\r\n            null !== nextOldFiber &&\r\n              ((knownKeys = warnOnInvalidKey(\r\n                returnFiber,\r\n                nextOldFiber,\r\n                newChildren[newIdx],\r\n                knownKeys\r\n              )),\r\n              shouldTrackSideEffects &&\r\n                null !== nextOldFiber.alternate &&\r\n                oldFiber.delete(\r\n                  null === nextOldFiber.key ? newIdx : nextOldFiber.key\r\n                ),\r\n              (currentFirstChild = placeChild(\r\n                nextOldFiber,\r\n                currentFirstChild,\r\n                newIdx\r\n              )),\r\n              null === previousNewFiber\r\n                ? (resultingFirstChild = nextOldFiber)\r\n                : (previousNewFiber.sibling = nextOldFiber),\r\n              (previousNewFiber = nextOldFiber));\r\n        shouldTrackSideEffects &&\r\n          oldFiber.forEach(function (child) {\r\n            return deleteChild(returnFiber, child);\r\n          });\r\n        isHydrating && pushTreeFork(returnFiber, newIdx);\r\n        return resultingFirstChild;\r\n      }\r\n      function reconcileChildrenIterator(\r\n        returnFiber,\r\n        currentFirstChild,\r\n        newChildren,\r\n        lanes\r\n      ) {\r\n        if (null == newChildren)\r\n          throw Error(\"An iterable object provided no iterator.\");\r\n        for (\r\n          var resultingFirstChild = null,\r\n            previousNewFiber = null,\r\n            oldFiber = currentFirstChild,\r\n            newIdx = (currentFirstChild = 0),\r\n            nextOldFiber = null,\r\n            knownKeys = null,\r\n            step = newChildren.next();\r\n          null !== oldFiber && !step.done;\r\n          newIdx++, step = newChildren.next()\r\n        ) {\r\n          oldFiber.index > newIdx\r\n            ? ((nextOldFiber = oldFiber), (oldFiber = null))\r\n            : (nextOldFiber = oldFiber.sibling);\r\n          var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\r\n          if (null === newFiber) {\r\n            null === oldFiber && (oldFiber = nextOldFiber);\r\n            break;\r\n          }\r\n          knownKeys = warnOnInvalidKey(\r\n            returnFiber,\r\n            newFiber,\r\n            step.value,\r\n            knownKeys\r\n          );\r\n          shouldTrackSideEffects &&\r\n            oldFiber &&\r\n            null === newFiber.alternate &&\r\n            deleteChild(returnFiber, oldFiber);\r\n          currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\r\n          null === previousNewFiber\r\n            ? (resultingFirstChild = newFiber)\r\n            : (previousNewFiber.sibling = newFiber);\r\n          previousNewFiber = newFiber;\r\n          oldFiber = nextOldFiber;\r\n        }\r\n        if (step.done)\r\n          return (\r\n            deleteRemainingChildren(returnFiber, oldFiber),\r\n            isHydrating && pushTreeFork(returnFiber, newIdx),\r\n            resultingFirstChild\r\n          );\r\n        if (null === oldFiber) {\r\n          for (; !step.done; newIdx++, step = newChildren.next())\r\n            (oldFiber = createChild(returnFiber, step.value, lanes)),\r\n              null !== oldFiber &&\r\n                ((knownKeys = warnOnInvalidKey(\r\n                  returnFiber,\r\n                  oldFiber,\r\n                  step.value,\r\n                  knownKeys\r\n                )),\r\n                (currentFirstChild = placeChild(\r\n                  oldFiber,\r\n                  currentFirstChild,\r\n                  newIdx\r\n                )),\r\n                null === previousNewFiber\r\n                  ? (resultingFirstChild = oldFiber)\r\n                  : (previousNewFiber.sibling = oldFiber),\r\n                (previousNewFiber = oldFiber));\r\n          isHydrating && pushTreeFork(returnFiber, newIdx);\r\n          return resultingFirstChild;\r\n        }\r\n        for (\r\n          oldFiber = mapRemainingChildren(oldFiber);\r\n          !step.done;\r\n          newIdx++, step = newChildren.next()\r\n        )\r\n          (nextOldFiber = updateFromMap(\r\n            oldFiber,\r\n            returnFiber,\r\n            newIdx,\r\n            step.value,\r\n            lanes\r\n          )),\r\n            null !== nextOldFiber &&\r\n              ((knownKeys = warnOnInvalidKey(\r\n                returnFiber,\r\n                nextOldFiber,\r\n                step.value,\r\n                knownKeys\r\n              )),\r\n              shouldTrackSideEffects &&\r\n                null !== nextOldFiber.alternate &&\r\n                oldFiber.delete(\r\n                  null === nextOldFiber.key ? newIdx : nextOldFiber.key\r\n                ),\r\n              (currentFirstChild = placeChild(\r\n                nextOldFiber,\r\n                currentFirstChild,\r\n                newIdx\r\n              )),\r\n              null === previousNewFiber\r\n                ? (resultingFirstChild = nextOldFiber)\r\n                : (previousNewFiber.sibling = nextOldFiber),\r\n              (previousNewFiber = nextOldFiber));\r\n        shouldTrackSideEffects &&\r\n          oldFiber.forEach(function (child) {\r\n            return deleteChild(returnFiber, child);\r\n          });\r\n        isHydrating && pushTreeFork(returnFiber, newIdx);\r\n        return resultingFirstChild;\r\n      }\r\n      function reconcileChildFibersImpl(\r\n        returnFiber,\r\n        currentFirstChild,\r\n        newChild,\r\n        lanes\r\n      ) {\r\n        \"object\" === typeof newChild &&\r\n          null !== newChild &&\r\n          newChild.type === REACT_FRAGMENT_TYPE &&\r\n          null === newChild.key &&\r\n          (validateFragmentProps(newChild, null, returnFiber),\r\n          (newChild = newChild.props.children));\r\n        if (\"object\" === typeof newChild && null !== newChild) {\r\n          switch (newChild.$$typeof) {\r\n            case REACT_ELEMENT_TYPE:\r\n              var prevDebugInfo = pushDebugInfo(newChild._debugInfo);\r\n              a: {\r\n                for (var key = newChild.key; null !== currentFirstChild; ) {\r\n                  if (currentFirstChild.key === key) {\r\n                    key = newChild.type;\r\n                    if (key === REACT_FRAGMENT_TYPE) {\r\n                      if (7 === currentFirstChild.tag) {\r\n                        deleteRemainingChildren(\r\n                          returnFiber,\r\n                          currentFirstChild.sibling\r\n                        );\r\n                        lanes = useFiber(\r\n                          currentFirstChild,\r\n                          newChild.props.children\r\n                        );\r\n                        lanes.return = returnFiber;\r\n                        lanes._debugOwner = newChild._owner;\r\n                        lanes._debugInfo = currentDebugInfo;\r\n                        validateFragmentProps(newChild, lanes, returnFiber);\r\n                        returnFiber = lanes;\r\n                        break a;\r\n                      }\r\n                    } else if (\r\n                      currentFirstChild.elementType === key ||\r\n                      isCompatibleFamilyForHotReloading(\r\n                        currentFirstChild,\r\n                        newChild\r\n                      ) ||\r\n                      (\"object\" === typeof key &&\r\n                        null !== key &&\r\n                        key.$$typeof === REACT_LAZY_TYPE &&\r\n                        callLazyInitInDEV(key) === currentFirstChild.type)\r\n                    ) {\r\n                      deleteRemainingChildren(\r\n                        returnFiber,\r\n                        currentFirstChild.sibling\r\n                      );\r\n                      lanes = useFiber(currentFirstChild, newChild.props);\r\n                      coerceRef(lanes, newChild);\r\n                      lanes.return = returnFiber;\r\n                      lanes._debugOwner = newChild._owner;\r\n                      lanes._debugInfo = currentDebugInfo;\r\n                      returnFiber = lanes;\r\n                      break a;\r\n                    }\r\n                    deleteRemainingChildren(returnFiber, currentFirstChild);\r\n                    break;\r\n                  } else deleteChild(returnFiber, currentFirstChild);\r\n                  currentFirstChild = currentFirstChild.sibling;\r\n                }\r\n                newChild.type === REACT_FRAGMENT_TYPE\r\n                  ? ((lanes = createFiberFromFragment(\r\n                      newChild.props.children,\r\n                      returnFiber.mode,\r\n                      lanes,\r\n                      newChild.key\r\n                    )),\r\n                    (lanes.return = returnFiber),\r\n                    (lanes._debugOwner = returnFiber),\r\n                    (lanes._debugTask = returnFiber._debugTask),\r\n                    (lanes._debugInfo = currentDebugInfo),\r\n                    validateFragmentProps(newChild, lanes, returnFiber),\r\n                    (returnFiber = lanes))\r\n                  : ((lanes = createFiberFromElement(\r\n                      newChild,\r\n                      returnFiber.mode,\r\n                      lanes\r\n                    )),\r\n                    coerceRef(lanes, newChild),\r\n                    (lanes.return = returnFiber),\r\n                    (lanes._debugInfo = currentDebugInfo),\r\n                    (returnFiber = lanes));\r\n              }\r\n              returnFiber = placeSingleChild(returnFiber);\r\n              currentDebugInfo = prevDebugInfo;\r\n              return returnFiber;\r\n            case REACT_PORTAL_TYPE:\r\n              a: {\r\n                prevDebugInfo = newChild;\r\n                for (\r\n                  newChild = prevDebugInfo.key;\r\n                  null !== currentFirstChild;\r\n\r\n                ) {\r\n                  if (currentFirstChild.key === newChild)\r\n                    if (\r\n                      4 === currentFirstChild.tag &&\r\n                      currentFirstChild.stateNode.containerInfo ===\r\n                        prevDebugInfo.containerInfo &&\r\n                      currentFirstChild.stateNode.implementation ===\r\n                        prevDebugInfo.implementation\r\n                    ) {\r\n                      deleteRemainingChildren(\r\n                        returnFiber,\r\n                        currentFirstChild.sibling\r\n                      );\r\n                      lanes = useFiber(\r\n                        currentFirstChild,\r\n                        prevDebugInfo.children || []\r\n                      );\r\n                      lanes.return = returnFiber;\r\n                      returnFiber = lanes;\r\n                      break a;\r\n                    } else {\r\n                      deleteRemainingChildren(returnFiber, currentFirstChild);\r\n                      break;\r\n                    }\r\n                  else deleteChild(returnFiber, currentFirstChild);\r\n                  currentFirstChild = currentFirstChild.sibling;\r\n                }\r\n                lanes = createFiberFromPortal(\r\n                  prevDebugInfo,\r\n                  returnFiber.mode,\r\n                  lanes\r\n                );\r\n                lanes.return = returnFiber;\r\n                returnFiber = lanes;\r\n              }\r\n              return placeSingleChild(returnFiber);\r\n            case REACT_LAZY_TYPE:\r\n              return (\r\n                (prevDebugInfo = pushDebugInfo(newChild._debugInfo)),\r\n                (newChild = callLazyInitInDEV(newChild)),\r\n                (returnFiber = reconcileChildFibersImpl(\r\n                  returnFiber,\r\n                  currentFirstChild,\r\n                  newChild,\r\n                  lanes\r\n                )),\r\n                (currentDebugInfo = prevDebugInfo),\r\n                returnFiber\r\n              );\r\n          }\r\n          if (isArrayImpl(newChild))\r\n            return (\r\n              (prevDebugInfo = pushDebugInfo(newChild._debugInfo)),\r\n              (returnFiber = reconcileChildrenArray(\r\n                returnFiber,\r\n                currentFirstChild,\r\n                newChild,\r\n                lanes\r\n              )),\r\n              (currentDebugInfo = prevDebugInfo),\r\n              returnFiber\r\n            );\r\n          if (getIteratorFn(newChild)) {\r\n            prevDebugInfo = pushDebugInfo(newChild._debugInfo);\r\n            key = getIteratorFn(newChild);\r\n            if (\"function\" !== typeof key)\r\n              throw Error(\r\n                \"An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.\"\r\n              );\r\n            var newChildren = key.call(newChild);\r\n            if (newChildren === newChild) {\r\n              if (\r\n                0 !== returnFiber.tag ||\r\n                \"[object GeneratorFunction]\" !==\r\n                  Object.prototype.toString.call(returnFiber.type) ||\r\n                \"[object Generator]\" !==\r\n                  Object.prototype.toString.call(newChildren)\r\n              )\r\n                didWarnAboutGenerators ||\r\n                  console.error(\r\n                    \"Using Iterators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. You can also use an Iterable that can iterate multiple times over the same items.\"\r\n                  ),\r\n                  (didWarnAboutGenerators = !0);\r\n            } else\r\n              newChild.entries !== key ||\r\n                didWarnAboutMaps ||\r\n                (console.error(\r\n                  \"Using Maps as children is not supported. Use an array of keyed ReactElements instead.\"\r\n                ),\r\n                (didWarnAboutMaps = !0));\r\n            returnFiber = reconcileChildrenIterator(\r\n              returnFiber,\r\n              currentFirstChild,\r\n              newChildren,\r\n              lanes\r\n            );\r\n            currentDebugInfo = prevDebugInfo;\r\n            return returnFiber;\r\n          }\r\n          if (\"function\" === typeof newChild.then)\r\n            return (\r\n              (prevDebugInfo = pushDebugInfo(newChild._debugInfo)),\r\n              (returnFiber = reconcileChildFibersImpl(\r\n                returnFiber,\r\n                currentFirstChild,\r\n                unwrapThenable(newChild),\r\n                lanes\r\n              )),\r\n              (currentDebugInfo = prevDebugInfo),\r\n              returnFiber\r\n            );\r\n          if (newChild.$$typeof === REACT_CONTEXT_TYPE)\r\n            return reconcileChildFibersImpl(\r\n              returnFiber,\r\n              currentFirstChild,\r\n              readContextDuringReconciliation(returnFiber, newChild),\r\n              lanes\r\n            );\r\n          throwOnInvalidObjectType(returnFiber, newChild);\r\n        }\r\n        if (\r\n          (\"string\" === typeof newChild && \"\" !== newChild) ||\r\n          \"number\" === typeof newChild ||\r\n          \"bigint\" === typeof newChild\r\n        )\r\n          return (\r\n            (prevDebugInfo = \"\" + newChild),\r\n            null !== currentFirstChild && 6 === currentFirstChild.tag\r\n              ? (deleteRemainingChildren(\r\n                  returnFiber,\r\n                  currentFirstChild.sibling\r\n                ),\r\n                (lanes = useFiber(currentFirstChild, prevDebugInfo)),\r\n                (lanes.return = returnFiber),\r\n                (returnFiber = lanes))\r\n              : (deleteRemainingChildren(returnFiber, currentFirstChild),\r\n                (lanes = createFiberFromText(\r\n                  prevDebugInfo,\r\n                  returnFiber.mode,\r\n                  lanes\r\n                )),\r\n                (lanes.return = returnFiber),\r\n                (lanes._debugOwner = returnFiber),\r\n                (lanes._debugTask = returnFiber._debugTask),\r\n                (lanes._debugInfo = currentDebugInfo),\r\n                (returnFiber = lanes)),\r\n            placeSingleChild(returnFiber)\r\n          );\r\n        \"function\" === typeof newChild &&\r\n          warnOnFunctionType(returnFiber, newChild);\r\n        \"symbol\" === typeof newChild && warnOnSymbolType(returnFiber, newChild);\r\n        return deleteRemainingChildren(returnFiber, currentFirstChild);\r\n      }\r\n      return function (returnFiber, currentFirstChild, newChild, lanes) {\r\n        var prevDebugInfo = currentDebugInfo;\r\n        currentDebugInfo = null;\r\n        try {\r\n          thenableIndexCounter = 0;\r\n          var firstChildFiber = reconcileChildFibersImpl(\r\n            returnFiber,\r\n            currentFirstChild,\r\n            newChild,\r\n            lanes\r\n          );\r\n          thenableState = null;\r\n          return firstChildFiber;\r\n        } catch (x) {\r\n          if (x === SuspenseException || x === SuspenseActionException) throw x;\r\n          var fiber = createFiber(29, x, null, returnFiber.mode);\r\n          fiber.lanes = lanes;\r\n          fiber.return = returnFiber;\r\n          var debugInfo = (fiber._debugInfo = currentDebugInfo);\r\n          fiber._debugOwner = returnFiber._debugOwner;\r\n          fiber._debugTask = returnFiber._debugTask;\r\n          if (null != debugInfo)\r\n            for (var i = debugInfo.length - 1; 0 <= i; i--)\r\n              if (\"string\" === typeof debugInfo[i].stack) {\r\n                fiber._debugOwner = debugInfo[i];\r\n                fiber._debugTask = debugInfo[i].debugTask;\r\n                break;\r\n              }\r\n          return fiber;\r\n        } finally {\r\n          currentDebugInfo = prevDebugInfo;\r\n        }\r\n      };\r\n    }\r\n    function pushPrimaryTreeSuspenseHandler(handler) {\r\n      var current = handler.alternate;\r\n      push(\r\n        suspenseStackCursor,\r\n        suspenseStackCursor.current & SubtreeSuspenseContextMask,\r\n        handler\r\n      );\r\n      push(suspenseHandlerStackCursor, handler, handler);\r\n      null === shellBoundary &&\r\n        (null === current || null !== currentTreeHiddenStackCursor.current\r\n          ? (shellBoundary = handler)\r\n          : null !== current.memoizedState && (shellBoundary = handler));\r\n    }\r\n    function pushOffscreenSuspenseHandler(fiber) {\r\n      if (22 === fiber.tag) {\r\n        if (\r\n          (push(suspenseStackCursor, suspenseStackCursor.current, fiber),\r\n          push(suspenseHandlerStackCursor, fiber, fiber),\r\n          null === shellBoundary)\r\n        ) {\r\n          var current = fiber.alternate;\r\n          null !== current &&\r\n            null !== current.memoizedState &&\r\n            (shellBoundary = fiber);\r\n        }\r\n      } else reuseSuspenseHandlerOnStack(fiber);\r\n    }\r\n    function reuseSuspenseHandlerOnStack(fiber) {\r\n      push(suspenseStackCursor, suspenseStackCursor.current, fiber);\r\n      push(\r\n        suspenseHandlerStackCursor,\r\n        suspenseHandlerStackCursor.current,\r\n        fiber\r\n      );\r\n    }\r\n    function popSuspenseHandler(fiber) {\r\n      pop(suspenseHandlerStackCursor, fiber);\r\n      shellBoundary === fiber && (shellBoundary = null);\r\n      pop(suspenseStackCursor, fiber);\r\n    }\r\n    function findFirstSuspended(row) {\r\n      for (var node = row; null !== node; ) {\r\n        if (13 === node.tag) {\r\n          var state = node.memoizedState;\r\n          if (\r\n            null !== state &&\r\n            ((state = state.dehydrated),\r\n            null === state ||\r\n              state.data === SUSPENSE_PENDING_START_DATA ||\r\n              isSuspenseInstanceFallback(state))\r\n          )\r\n            return node;\r\n        } else if (\r\n          19 === node.tag &&\r\n          void 0 !== node.memoizedProps.revealOrder\r\n        ) {\r\n          if (0 !== (node.flags & 128)) return node;\r\n        } else if (null !== node.child) {\r\n          node.child.return = node;\r\n          node = node.child;\r\n          continue;\r\n        }\r\n        if (node === row) break;\r\n        for (; null === node.sibling; ) {\r\n          if (null === node.return || node.return === row) return null;\r\n          node = node.return;\r\n        }\r\n        node.sibling.return = node.return;\r\n        node = node.sibling;\r\n      }\r\n      return null;\r\n    }\r\n    function warnOnInvalidCallback(callback) {\r\n      if (null !== callback && \"function\" !== typeof callback) {\r\n        var key = String(callback);\r\n        didWarnOnInvalidCallback.has(key) ||\r\n          (didWarnOnInvalidCallback.add(key),\r\n          console.error(\r\n            \"Expected the last optional `callback` argument to be a function. Instead received: %s.\",\r\n            callback\r\n          ));\r\n      }\r\n    }\r\n    function applyDerivedStateFromProps(\r\n      workInProgress,\r\n      ctor,\r\n      getDerivedStateFromProps,\r\n      nextProps\r\n    ) {\r\n      var prevState = workInProgress.memoizedState,\r\n        partialState = getDerivedStateFromProps(nextProps, prevState);\r\n      if (workInProgress.mode & StrictLegacyMode) {\r\n        setIsStrictModeForDevtools(!0);\r\n        try {\r\n          partialState = getDerivedStateFromProps(nextProps, prevState);\r\n        } finally {\r\n          setIsStrictModeForDevtools(!1);\r\n        }\r\n      }\r\n      void 0 === partialState &&\r\n        ((ctor = getComponentNameFromType(ctor) || \"Component\"),\r\n        didWarnAboutUndefinedDerivedState.has(ctor) ||\r\n          (didWarnAboutUndefinedDerivedState.add(ctor),\r\n          console.error(\r\n            \"%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.\",\r\n            ctor\r\n          )));\r\n      prevState =\r\n        null === partialState || void 0 === partialState\r\n          ? prevState\r\n          : assign({}, prevState, partialState);\r\n      workInProgress.memoizedState = prevState;\r\n      0 === workInProgress.lanes &&\r\n        (workInProgress.updateQueue.baseState = prevState);\r\n    }\r\n    function checkShouldComponentUpdate(\r\n      workInProgress,\r\n      ctor,\r\n      oldProps,\r\n      newProps,\r\n      oldState,\r\n      newState,\r\n      nextContext\r\n    ) {\r\n      var instance = workInProgress.stateNode;\r\n      if (\"function\" === typeof instance.shouldComponentUpdate) {\r\n        oldProps = instance.shouldComponentUpdate(\r\n          newProps,\r\n          newState,\r\n          nextContext\r\n        );\r\n        if (workInProgress.mode & StrictLegacyMode) {\r\n          setIsStrictModeForDevtools(!0);\r\n          try {\r\n            oldProps = instance.shouldComponentUpdate(\r\n              newProps,\r\n              newState,\r\n              nextContext\r\n            );\r\n          } finally {\r\n            setIsStrictModeForDevtools(!1);\r\n          }\r\n        }\r\n        void 0 === oldProps &&\r\n          console.error(\r\n            \"%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.\",\r\n            getComponentNameFromType(ctor) || \"Component\"\r\n          );\r\n        return oldProps;\r\n      }\r\n      return ctor.prototype && ctor.prototype.isPureReactComponent\r\n        ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\r\n        : !0;\r\n    }\r\n    function callComponentWillReceiveProps(\r\n      workInProgress,\r\n      instance,\r\n      newProps,\r\n      nextContext\r\n    ) {\r\n      var oldState = instance.state;\r\n      \"function\" === typeof instance.componentWillReceiveProps &&\r\n        instance.componentWillReceiveProps(newProps, nextContext);\r\n      \"function\" === typeof instance.UNSAFE_componentWillReceiveProps &&\r\n        instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\r\n      instance.state !== oldState &&\r\n        ((workInProgress =\r\n          getComponentNameFromFiber(workInProgress) || \"Component\"),\r\n        didWarnAboutStateAssignmentForComponent.has(workInProgress) ||\r\n          (didWarnAboutStateAssignmentForComponent.add(workInProgress),\r\n          console.error(\r\n            \"%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.\",\r\n            workInProgress\r\n          )),\r\n        classComponentUpdater.enqueueReplaceState(\r\n          instance,\r\n          instance.state,\r\n          null\r\n        ));\r\n    }\r\n    function resolveClassComponentProps(Component, baseProps) {\r\n      var newProps = baseProps;\r\n      if (\"ref\" in baseProps) {\r\n        newProps = {};\r\n        for (var propName in baseProps)\r\n          \"ref\" !== propName && (newProps[propName] = baseProps[propName]);\r\n      }\r\n      if ((Component = Component.defaultProps)) {\r\n        newProps === baseProps && (newProps = assign({}, newProps));\r\n        for (var _propName in Component)\r\n          void 0 === newProps[_propName] &&\r\n            (newProps[_propName] = Component[_propName]);\r\n      }\r\n      return newProps;\r\n    }\r\n    function defaultOnUncaughtError(error) {\r\n      reportGlobalError(error);\r\n      console.warn(\r\n        \"%s\\n\\n%s\\n\",\r\n        componentName\r\n          ? \"An error occurred in the <\" + componentName + \"> component.\"\r\n          : \"An error occurred in one of your React components.\",\r\n        \"Consider adding an error boundary to your tree to customize error handling behavior.\\nVisit https://react.dev/link/error-boundaries to learn more about error boundaries.\"\r\n      );\r\n    }\r\n    function defaultOnCaughtError(error) {\r\n      var componentNameMessage = componentName\r\n          ? \"The above error occurred in the <\" + componentName + \"> component.\"\r\n          : \"The above error occurred in one of your React components.\",\r\n        recreateMessage =\r\n          \"React will try to recreate this component tree from scratch using the error boundary you provided, \" +\r\n          ((errorBoundaryName || \"Anonymous\") + \".\");\r\n      if (\r\n        \"object\" === typeof error &&\r\n        null !== error &&\r\n        \"string\" === typeof error.environmentName\r\n      ) {\r\n        var JSCompiler_inline_result = error.environmentName;\r\n        error = [\r\n          \"%o\\n\\n%s\\n\\n%s\\n\",\r\n          error,\r\n          componentNameMessage,\r\n          recreateMessage\r\n        ].slice(0);\r\n        \"string\" === typeof error[0]\r\n          ? error.splice(\r\n              0,\r\n              1,\r\n              badgeFormat + error[0],\r\n              badgeStyle,\r\n              pad + JSCompiler_inline_result + pad,\r\n              resetStyle\r\n            )\r\n          : error.splice(\r\n              0,\r\n              0,\r\n              badgeFormat,\r\n              badgeStyle,\r\n              pad + JSCompiler_inline_result + pad,\r\n              resetStyle\r\n            );\r\n        error.unshift(console);\r\n        JSCompiler_inline_result = bind.apply(console.error, error);\r\n        JSCompiler_inline_result();\r\n      } else\r\n        console.error(\r\n          \"%o\\n\\n%s\\n\\n%s\\n\",\r\n          error,\r\n          componentNameMessage,\r\n          recreateMessage\r\n        );\r\n    }\r\n    function defaultOnRecoverableError(error) {\r\n      reportGlobalError(error);\r\n    }\r\n    function logUncaughtError(root, errorInfo) {\r\n      try {\r\n        componentName = errorInfo.source\r\n          ? getComponentNameFromFiber(errorInfo.source)\r\n          : null;\r\n        errorBoundaryName = null;\r\n        var error = errorInfo.value;\r\n        if (null !== ReactSharedInternals.actQueue)\r\n          ReactSharedInternals.thrownErrors.push(error);\r\n        else {\r\n          var onUncaughtError = root.onUncaughtError;\r\n          onUncaughtError(error, { componentStack: errorInfo.stack });\r\n        }\r\n      } catch (e$5) {\r\n        setTimeout(function () {\r\n          throw e$5;\r\n        });\r\n      }\r\n    }\r\n    function logCaughtError(root, boundary, errorInfo) {\r\n      try {\r\n        componentName = errorInfo.source\r\n          ? getComponentNameFromFiber(errorInfo.source)\r\n          : null;\r\n        errorBoundaryName = getComponentNameFromFiber(boundary);\r\n        var onCaughtError = root.onCaughtError;\r\n        onCaughtError(errorInfo.value, {\r\n          componentStack: errorInfo.stack,\r\n          errorBoundary: 1 === boundary.tag ? boundary.stateNode : null\r\n        });\r\n      } catch (e$6) {\r\n        setTimeout(function () {\r\n          throw e$6;\r\n        });\r\n      }\r\n    }\r\n    function createRootErrorUpdate(root, errorInfo, lane) {\r\n      lane = createUpdate(lane);\r\n      lane.tag = CaptureUpdate;\r\n      lane.payload = { element: null };\r\n      lane.callback = function () {\r\n        runWithFiberInDEV(errorInfo.source, logUncaughtError, root, errorInfo);\r\n      };\r\n      return lane;\r\n    }\r\n    function createClassErrorUpdate(lane) {\r\n      lane = createUpdate(lane);\r\n      lane.tag = CaptureUpdate;\r\n      return lane;\r\n    }\r\n    function initializeClassErrorUpdate(update, root, fiber, errorInfo) {\r\n      var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\r\n      if (\"function\" === typeof getDerivedStateFromError) {\r\n        var error = errorInfo.value;\r\n        update.payload = function () {\r\n          return getDerivedStateFromError(error);\r\n        };\r\n        update.callback = function () {\r\n          markFailedErrorBoundaryForHotReloading(fiber);\r\n          runWithFiberInDEV(\r\n            errorInfo.source,\r\n            logCaughtError,\r\n            root,\r\n            fiber,\r\n            errorInfo\r\n          );\r\n        };\r\n      }\r\n      var inst = fiber.stateNode;\r\n      null !== inst &&\r\n        \"function\" === typeof inst.componentDidCatch &&\r\n        (update.callback = function () {\r\n          markFailedErrorBoundaryForHotReloading(fiber);\r\n          runWithFiberInDEV(\r\n            errorInfo.source,\r\n            logCaughtError,\r\n            root,\r\n            fiber,\r\n            errorInfo\r\n          );\r\n          \"function\" !== typeof getDerivedStateFromError &&\r\n            (null === legacyErrorBoundariesThatAlreadyFailed\r\n              ? (legacyErrorBoundariesThatAlreadyFailed = new Set([this]))\r\n              : legacyErrorBoundariesThatAlreadyFailed.add(this));\r\n          callComponentDidCatchInDEV(this, errorInfo);\r\n          \"function\" === typeof getDerivedStateFromError ||\r\n            (0 === (fiber.lanes & 2) &&\r\n              console.error(\r\n                \"%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.\",\r\n                getComponentNameFromFiber(fiber) || \"Unknown\"\r\n              ));\r\n        });\r\n    }\r\n    function throwException(\r\n      root,\r\n      returnFiber,\r\n      sourceFiber,\r\n      value,\r\n      rootRenderLanes\r\n    ) {\r\n      sourceFiber.flags |= 32768;\r\n      isDevToolsPresent && restorePendingUpdaters(root, rootRenderLanes);\r\n      if (\r\n        null !== value &&\r\n        \"object\" === typeof value &&\r\n        \"function\" === typeof value.then\r\n      ) {\r\n        returnFiber = sourceFiber.alternate;\r\n        null !== returnFiber &&\r\n          propagateParentContextChanges(\r\n            returnFiber,\r\n            sourceFiber,\r\n            rootRenderLanes,\r\n            !0\r\n          );\r\n        isHydrating && (didSuspendOrErrorDEV = !0);\r\n        sourceFiber = suspenseHandlerStackCursor.current;\r\n        if (null !== sourceFiber) {\r\n          switch (sourceFiber.tag) {\r\n            case 13:\r\n              return (\r\n                null === shellBoundary\r\n                  ? renderDidSuspendDelayIfPossible()\r\n                  : null === sourceFiber.alternate &&\r\n                    workInProgressRootExitStatus === RootInProgress &&\r\n                    (workInProgressRootExitStatus = RootSuspended),\r\n                (sourceFiber.flags &= -257),\r\n                (sourceFiber.flags |= 65536),\r\n                (sourceFiber.lanes = rootRenderLanes),\r\n                value === noopSuspenseyCommitThenable\r\n                  ? (sourceFiber.flags |= 16384)\r\n                  : ((returnFiber = sourceFiber.updateQueue),\r\n                    null === returnFiber\r\n                      ? (sourceFiber.updateQueue = new Set([value]))\r\n                      : returnFiber.add(value),\r\n                    attachPingListener(root, value, rootRenderLanes)),\r\n                !1\r\n              );\r\n            case 22:\r\n              return (\r\n                (sourceFiber.flags |= 65536),\r\n                value === noopSuspenseyCommitThenable\r\n                  ? (sourceFiber.flags |= 16384)\r\n                  : ((returnFiber = sourceFiber.updateQueue),\r\n                    null === returnFiber\r\n                      ? ((returnFiber = {\r\n                          transitions: null,\r\n                          markerInstances: null,\r\n                          retryQueue: new Set([value])\r\n                        }),\r\n                        (sourceFiber.updateQueue = returnFiber))\r\n                      : ((sourceFiber = returnFiber.retryQueue),\r\n                        null === sourceFiber\r\n                          ? (returnFiber.retryQueue = new Set([value]))\r\n                          : sourceFiber.add(value)),\r\n                    attachPingListener(root, value, rootRenderLanes)),\r\n                !1\r\n              );\r\n          }\r\n          throw Error(\r\n            \"Unexpected Suspense handler tag (\" +\r\n              sourceFiber.tag +\r\n              \"). This is a bug in React.\"\r\n          );\r\n        }\r\n        attachPingListener(root, value, rootRenderLanes);\r\n        renderDidSuspendDelayIfPossible();\r\n        return !1;\r\n      }\r\n      if (isHydrating)\r\n        return (\r\n          (didSuspendOrErrorDEV = !0),\r\n          (returnFiber = suspenseHandlerStackCursor.current),\r\n          null !== returnFiber\r\n            ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256),\r\n              (returnFiber.flags |= 65536),\r\n              (returnFiber.lanes = rootRenderLanes),\r\n              value !== HydrationMismatchException &&\r\n                queueHydrationError(\r\n                  createCapturedValueAtFiber(\r\n                    Error(\r\n                      \"There was an error while hydrating but React was able to recover by instead client rendering from the nearest Suspense boundary.\",\r\n                      { cause: value }\r\n                    ),\r\n                    sourceFiber\r\n                  )\r\n                ))\r\n            : (value !== HydrationMismatchException &&\r\n                queueHydrationError(\r\n                  createCapturedValueAtFiber(\r\n                    Error(\r\n                      \"There was an error while hydrating but React was able to recover by instead client rendering the entire root.\",\r\n                      { cause: value }\r\n                    ),\r\n                    sourceFiber\r\n                  )\r\n                ),\r\n              (root = root.current.alternate),\r\n              (root.flags |= 65536),\r\n              (rootRenderLanes &= -rootRenderLanes),\r\n              (root.lanes |= rootRenderLanes),\r\n              (value = createCapturedValueAtFiber(value, sourceFiber)),\r\n              (rootRenderLanes = createRootErrorUpdate(\r\n                root.stateNode,\r\n                value,\r\n                rootRenderLanes\r\n              )),\r\n              enqueueCapturedUpdate(root, rootRenderLanes),\r\n              workInProgressRootExitStatus !== RootSuspendedWithDelay &&\r\n                (workInProgressRootExitStatus = RootErrored)),\r\n          !1\r\n        );\r\n      var error = createCapturedValueAtFiber(\r\n        Error(\r\n          \"There was an error during concurrent rendering but React was able to recover by instead synchronously rendering the entire root.\",\r\n          { cause: value }\r\n        ),\r\n        sourceFiber\r\n      );\r\n      null === workInProgressRootConcurrentErrors\r\n        ? (workInProgressRootConcurrentErrors = [error])\r\n        : workInProgressRootConcurrentErrors.push(error);\r\n      workInProgressRootExitStatus !== RootSuspendedWithDelay &&\r\n        (workInProgressRootExitStatus = RootErrored);\r\n      if (null === returnFiber) return !0;\r\n      value = createCapturedValueAtFiber(value, sourceFiber);\r\n      sourceFiber = returnFiber;\r\n      do {\r\n        switch (sourceFiber.tag) {\r\n          case 3:\r\n            return (\r\n              (sourceFiber.flags |= 65536),\r\n              (root = rootRenderLanes & -rootRenderLanes),\r\n              (sourceFiber.lanes |= root),\r\n              (root = createRootErrorUpdate(\r\n                sourceFiber.stateNode,\r\n                value,\r\n                root\r\n              )),\r\n              enqueueCapturedUpdate(sourceFiber, root),\r\n              !1\r\n            );\r\n          case 1:\r\n            if (\r\n              ((returnFiber = sourceFiber.type),\r\n              (error = sourceFiber.stateNode),\r\n              0 === (sourceFiber.flags & 128) &&\r\n                (\"function\" === typeof returnFiber.getDerivedStateFromError ||\r\n                  (null !== error &&\r\n                    \"function\" === typeof error.componentDidCatch &&\r\n                    (null === legacyErrorBoundariesThatAlreadyFailed ||\r\n                      !legacyErrorBoundariesThatAlreadyFailed.has(error)))))\r\n            )\r\n              return (\r\n                (sourceFiber.flags |= 65536),\r\n                (rootRenderLanes &= -rootRenderLanes),\r\n                (sourceFiber.lanes |= rootRenderLanes),\r\n                (rootRenderLanes = createClassErrorUpdate(rootRenderLanes)),\r\n                initializeClassErrorUpdate(\r\n                  rootRenderLanes,\r\n                  root,\r\n                  sourceFiber,\r\n                  value\r\n                ),\r\n                enqueueCapturedUpdate(sourceFiber, rootRenderLanes),\r\n                !1\r\n              );\r\n        }\r\n        sourceFiber = sourceFiber.return;\r\n      } while (null !== sourceFiber);\r\n      return !1;\r\n    }\r\n    function reconcileChildren(\r\n      current,\r\n      workInProgress,\r\n      nextChildren,\r\n      renderLanes\r\n    ) {\r\n      workInProgress.child =\r\n        null === current\r\n          ? mountChildFibers(workInProgress, null, nextChildren, renderLanes)\r\n          : reconcileChildFibers(\r\n              workInProgress,\r\n              current.child,\r\n              nextChildren,\r\n              renderLanes\r\n            );\r\n    }\r\n    function updateForwardRef(\r\n      current,\r\n      workInProgress,\r\n      Component,\r\n      nextProps,\r\n      renderLanes\r\n    ) {\r\n      Component = Component.render;\r\n      var ref = workInProgress.ref;\r\n      if (\"ref\" in nextProps) {\r\n        var propsWithoutRef = {};\r\n        for (var key in nextProps)\r\n          \"ref\" !== key && (propsWithoutRef[key] = nextProps[key]);\r\n      } else propsWithoutRef = nextProps;\r\n      prepareToReadContext(workInProgress);\r\n      markComponentRenderStarted(workInProgress);\r\n      nextProps = renderWithHooks(\r\n        current,\r\n        workInProgress,\r\n        Component,\r\n        propsWithoutRef,\r\n        ref,\r\n        renderLanes\r\n      );\r\n      key = checkDidRenderIdHook();\r\n      markComponentRenderStopped();\r\n      if (null !== current && !didReceiveUpdate)\r\n        return (\r\n          bailoutHooks(current, workInProgress, renderLanes),\r\n          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\r\n        );\r\n      isHydrating && key && pushMaterializedTreeId(workInProgress);\r\n      workInProgress.flags |= 1;\r\n      reconcileChildren(current, workInProgress, nextProps, renderLanes);\r\n      return workInProgress.child;\r\n    }\r\n    function updateMemoComponent(\r\n      current,\r\n      workInProgress,\r\n      Component,\r\n      nextProps,\r\n      renderLanes\r\n    ) {\r\n      if (null === current) {\r\n        var type = Component.type;\r\n        if (\r\n          \"function\" === typeof type &&\r\n          !shouldConstruct(type) &&\r\n          void 0 === type.defaultProps &&\r\n          null === Component.compare\r\n        )\r\n          return (\r\n            (Component = resolveFunctionForHotReloading(type)),\r\n            (workInProgress.tag = 15),\r\n            (workInProgress.type = Component),\r\n            validateFunctionComponentInDev(workInProgress, type),\r\n            updateSimpleMemoComponent(\r\n              current,\r\n              workInProgress,\r\n              Component,\r\n              nextProps,\r\n              renderLanes\r\n            )\r\n          );\r\n        current = createFiberFromTypeAndProps(\r\n          Component.type,\r\n          null,\r\n          nextProps,\r\n          workInProgress,\r\n          workInProgress.mode,\r\n          renderLanes\r\n        );\r\n        current.ref = workInProgress.ref;\r\n        current.return = workInProgress;\r\n        return (workInProgress.child = current);\r\n      }\r\n      type = current.child;\r\n      if (!checkScheduledUpdateOrContext(current, renderLanes)) {\r\n        var prevProps = type.memoizedProps;\r\n        Component = Component.compare;\r\n        Component = null !== Component ? Component : shallowEqual;\r\n        if (\r\n          Component(prevProps, nextProps) &&\r\n          current.ref === workInProgress.ref\r\n        )\r\n          return bailoutOnAlreadyFinishedWork(\r\n            current,\r\n            workInProgress,\r\n            renderLanes\r\n          );\r\n      }\r\n      workInProgress.flags |= 1;\r\n      current = createWorkInProgress(type, nextProps);\r\n      current.ref = workInProgress.ref;\r\n      current.return = workInProgress;\r\n      return (workInProgress.child = current);\r\n    }\r\n    function updateSimpleMemoComponent(\r\n      current,\r\n      workInProgress,\r\n      Component,\r\n      nextProps,\r\n      renderLanes\r\n    ) {\r\n      if (null !== current) {\r\n        var prevProps = current.memoizedProps;\r\n        if (\r\n          shallowEqual(prevProps, nextProps) &&\r\n          current.ref === workInProgress.ref &&\r\n          workInProgress.type === current.type\r\n        )\r\n          if (\r\n            ((didReceiveUpdate = !1),\r\n            (workInProgress.pendingProps = nextProps = prevProps),\r\n            checkScheduledUpdateOrContext(current, renderLanes))\r\n          )\r\n            0 !== (current.flags & 131072) && (didReceiveUpdate = !0);\r\n          else\r\n            return (\r\n              (workInProgress.lanes = current.lanes),\r\n              bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\r\n            );\r\n      }\r\n      return updateFunctionComponent(\r\n        current,\r\n        workInProgress,\r\n        Component,\r\n        nextProps,\r\n        renderLanes\r\n      );\r\n    }\r\n    function updateOffscreenComponent(current, workInProgress, renderLanes) {\r\n      var nextProps = workInProgress.pendingProps,\r\n        nextChildren = nextProps.children,\r\n        prevState = null !== current ? current.memoizedState : null;\r\n      if (\"hidden\" === nextProps.mode) {\r\n        if (0 !== (workInProgress.flags & 128)) {\r\n          nextProps =\r\n            null !== prevState\r\n              ? prevState.baseLanes | renderLanes\r\n              : renderLanes;\r\n          if (null !== current) {\r\n            nextChildren = workInProgress.child = current.child;\r\n            for (prevState = 0; null !== nextChildren; )\r\n              (prevState =\r\n                prevState | nextChildren.lanes | nextChildren.childLanes),\r\n                (nextChildren = nextChildren.sibling);\r\n            workInProgress.childLanes = prevState & ~nextProps;\r\n          } else (workInProgress.childLanes = 0), (workInProgress.child = null);\r\n          return deferHiddenOffscreenComponent(\r\n            current,\r\n            workInProgress,\r\n            nextProps,\r\n            renderLanes\r\n          );\r\n        }\r\n        if (0 !== (renderLanes & 536870912))\r\n          (workInProgress.memoizedState = { baseLanes: 0, cachePool: null }),\r\n            null !== current &&\r\n              pushTransition(\r\n                workInProgress,\r\n                null !== prevState ? prevState.cachePool : null\r\n              ),\r\n            null !== prevState\r\n              ? pushHiddenContext(workInProgress, prevState)\r\n              : reuseHiddenContextOnStack(workInProgress),\r\n            pushOffscreenSuspenseHandler(workInProgress);\r\n        else\r\n          return (\r\n            (workInProgress.lanes = workInProgress.childLanes = 536870912),\r\n            deferHiddenOffscreenComponent(\r\n              current,\r\n              workInProgress,\r\n              null !== prevState\r\n                ? prevState.baseLanes | renderLanes\r\n                : renderLanes,\r\n              renderLanes\r\n            )\r\n          );\r\n      } else\r\n        null !== prevState\r\n          ? (pushTransition(workInProgress, prevState.cachePool),\r\n            pushHiddenContext(workInProgress, prevState),\r\n            reuseSuspenseHandlerOnStack(workInProgress),\r\n            (workInProgress.memoizedState = null))\r\n          : (null !== current && pushTransition(workInProgress, null),\r\n            reuseHiddenContextOnStack(workInProgress),\r\n            reuseSuspenseHandlerOnStack(workInProgress));\r\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n      return workInProgress.child;\r\n    }\r\n    function deferHiddenOffscreenComponent(\r\n      current,\r\n      workInProgress,\r\n      nextBaseLanes,\r\n      renderLanes\r\n    ) {\r\n      var JSCompiler_inline_result = peekCacheFromPool();\r\n      JSCompiler_inline_result =\r\n        null === JSCompiler_inline_result\r\n          ? null\r\n          : {\r\n              parent: CacheContext._currentValue,\r\n              pool: JSCompiler_inline_result\r\n            };\r\n      workInProgress.memoizedState = {\r\n        baseLanes: nextBaseLanes,\r\n        cachePool: JSCompiler_inline_result\r\n      };\r\n      null !== current && pushTransition(workInProgress, null);\r\n      reuseHiddenContextOnStack(workInProgress);\r\n      pushOffscreenSuspenseHandler(workInProgress);\r\n      null !== current &&\r\n        propagateParentContextChanges(current, workInProgress, renderLanes, !0);\r\n      return null;\r\n    }\r\n    function markRef(current, workInProgress) {\r\n      var ref = workInProgress.ref;\r\n      if (null === ref)\r\n        null !== current &&\r\n          null !== current.ref &&\r\n          (workInProgress.flags |= 4194816);\r\n      else {\r\n        if (\"function\" !== typeof ref && \"object\" !== typeof ref)\r\n          throw Error(\r\n            \"Expected ref to be a function, an object returned by React.createRef(), or undefined/null.\"\r\n          );\r\n        if (null === current || current.ref !== ref)\r\n          workInProgress.flags |= 4194816;\r\n      }\r\n    }\r\n    function updateFunctionComponent(\r\n      current,\r\n      workInProgress,\r\n      Component,\r\n      nextProps,\r\n      renderLanes\r\n    ) {\r\n      if (\r\n        Component.prototype &&\r\n        \"function\" === typeof Component.prototype.render\r\n      ) {\r\n        var componentName = getComponentNameFromType(Component) || \"Unknown\";\r\n        didWarnAboutBadClass[componentName] ||\r\n          (console.error(\r\n            \"The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.\",\r\n            componentName,\r\n            componentName\r\n          ),\r\n          (didWarnAboutBadClass[componentName] = !0));\r\n      }\r\n      workInProgress.mode & StrictLegacyMode &&\r\n        ReactStrictModeWarnings.recordLegacyContextWarning(\r\n          workInProgress,\r\n          null\r\n        );\r\n      null === current &&\r\n        (validateFunctionComponentInDev(workInProgress, workInProgress.type),\r\n        Component.contextTypes &&\r\n          ((componentName = getComponentNameFromType(Component) || \"Unknown\"),\r\n          didWarnAboutContextTypes[componentName] ||\r\n            ((didWarnAboutContextTypes[componentName] = !0),\r\n            console.error(\r\n              \"%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with React.useContext() instead. (https://react.dev/link/legacy-context)\",\r\n              componentName\r\n            ))));\r\n      prepareToReadContext(workInProgress);\r\n      markComponentRenderStarted(workInProgress);\r\n      Component = renderWithHooks(\r\n        current,\r\n        workInProgress,\r\n        Component,\r\n        nextProps,\r\n        void 0,\r\n        renderLanes\r\n      );\r\n      nextProps = checkDidRenderIdHook();\r\n      markComponentRenderStopped();\r\n      if (null !== current && !didReceiveUpdate)\r\n        return (\r\n          bailoutHooks(current, workInProgress, renderLanes),\r\n          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\r\n        );\r\n      isHydrating && nextProps && pushMaterializedTreeId(workInProgress);\r\n      workInProgress.flags |= 1;\r\n      reconcileChildren(current, workInProgress, Component, renderLanes);\r\n      return workInProgress.child;\r\n    }\r\n    function replayFunctionComponent(\r\n      current,\r\n      workInProgress,\r\n      nextProps,\r\n      Component,\r\n      secondArg,\r\n      renderLanes\r\n    ) {\r\n      prepareToReadContext(workInProgress);\r\n      markComponentRenderStarted(workInProgress);\r\n      hookTypesUpdateIndexDev = -1;\r\n      ignorePreviousDependencies =\r\n        null !== current && current.type !== workInProgress.type;\r\n      workInProgress.updateQueue = null;\r\n      nextProps = renderWithHooksAgain(\r\n        workInProgress,\r\n        Component,\r\n        nextProps,\r\n        secondArg\r\n      );\r\n      finishRenderingHooks(current, workInProgress);\r\n      Component = checkDidRenderIdHook();\r\n      markComponentRenderStopped();\r\n      if (null !== current && !didReceiveUpdate)\r\n        return (\r\n          bailoutHooks(current, workInProgress, renderLanes),\r\n          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\r\n        );\r\n      isHydrating && Component && pushMaterializedTreeId(workInProgress);\r\n      workInProgress.flags |= 1;\r\n      reconcileChildren(current, workInProgress, nextProps, renderLanes);\r\n      return workInProgress.child;\r\n    }\r\n    function updateClassComponent(\r\n      current,\r\n      workInProgress,\r\n      Component,\r\n      nextProps,\r\n      renderLanes\r\n    ) {\r\n      switch (shouldErrorImpl(workInProgress)) {\r\n        case !1:\r\n          var _instance = workInProgress.stateNode,\r\n            state = new workInProgress.type(\r\n              workInProgress.memoizedProps,\r\n              _instance.context\r\n            ).state;\r\n          _instance.updater.enqueueSetState(_instance, state, null);\r\n          break;\r\n        case !0:\r\n          workInProgress.flags |= 128;\r\n          workInProgress.flags |= 65536;\r\n          _instance = Error(\"Simulated error coming from DevTools\");\r\n          var lane = renderLanes & -renderLanes;\r\n          workInProgress.lanes |= lane;\r\n          state = workInProgressRoot;\r\n          if (null === state)\r\n            throw Error(\r\n              \"Expected a work-in-progress root. This is a bug in React. Please file an issue.\"\r\n            );\r\n          lane = createClassErrorUpdate(lane);\r\n          initializeClassErrorUpdate(\r\n            lane,\r\n            state,\r\n            workInProgress,\r\n            createCapturedValueAtFiber(_instance, workInProgress)\r\n          );\r\n          enqueueCapturedUpdate(workInProgress, lane);\r\n      }\r\n      prepareToReadContext(workInProgress);\r\n      if (null === workInProgress.stateNode) {\r\n        state = emptyContextObject;\r\n        _instance = Component.contextType;\r\n        \"contextType\" in Component &&\r\n          null !== _instance &&\r\n          (void 0 === _instance || _instance.$$typeof !== REACT_CONTEXT_TYPE) &&\r\n          !didWarnAboutInvalidateContextType.has(Component) &&\r\n          (didWarnAboutInvalidateContextType.add(Component),\r\n          (lane =\r\n            void 0 === _instance\r\n              ? \" However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.\"\r\n              : \"object\" !== typeof _instance\r\n                ? \" However, it is set to a \" + typeof _instance + \".\"\r\n                : _instance.$$typeof === REACT_CONSUMER_TYPE\r\n                  ? \" Did you accidentally pass the Context.Consumer instead?\"\r\n                  : \" However, it is set to an object with keys {\" +\r\n                    Object.keys(_instance).join(\", \") +\r\n                    \"}.\"),\r\n          console.error(\r\n            \"%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s\",\r\n            getComponentNameFromType(Component) || \"Component\",\r\n            lane\r\n          ));\r\n        \"object\" === typeof _instance &&\r\n          null !== _instance &&\r\n          (state = readContext(_instance));\r\n        _instance = new Component(nextProps, state);\r\n        if (workInProgress.mode & StrictLegacyMode) {\r\n          setIsStrictModeForDevtools(!0);\r\n          try {\r\n            _instance = new Component(nextProps, state);\r\n          } finally {\r\n            setIsStrictModeForDevtools(!1);\r\n          }\r\n        }\r\n        state = workInProgress.memoizedState =\r\n          null !== _instance.state && void 0 !== _instance.state\r\n            ? _instance.state\r\n            : null;\r\n        _instance.updater = classComponentUpdater;\r\n        workInProgress.stateNode = _instance;\r\n        _instance._reactInternals = workInProgress;\r\n        _instance._reactInternalInstance = fakeInternalInstance;\r\n        \"function\" === typeof Component.getDerivedStateFromProps &&\r\n          null === state &&\r\n          ((state = getComponentNameFromType(Component) || \"Component\"),\r\n          didWarnAboutUninitializedState.has(state) ||\r\n            (didWarnAboutUninitializedState.add(state),\r\n            console.error(\r\n              \"`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.\",\r\n              state,\r\n              null === _instance.state ? \"null\" : \"undefined\",\r\n              state\r\n            )));\r\n        if (\r\n          \"function\" === typeof Component.getDerivedStateFromProps ||\r\n          \"function\" === typeof _instance.getSnapshotBeforeUpdate\r\n        ) {\r\n          var foundWillUpdateName = (lane = state = null);\r\n          \"function\" === typeof _instance.componentWillMount &&\r\n          !0 !== _instance.componentWillMount.__suppressDeprecationWarning\r\n            ? (state = \"componentWillMount\")\r\n            : \"function\" === typeof _instance.UNSAFE_componentWillMount &&\r\n              (state = \"UNSAFE_componentWillMount\");\r\n          \"function\" === typeof _instance.componentWillReceiveProps &&\r\n          !0 !==\r\n            _instance.componentWillReceiveProps.__suppressDeprecationWarning\r\n            ? (lane = \"componentWillReceiveProps\")\r\n            : \"function\" ===\r\n                typeof _instance.UNSAFE_componentWillReceiveProps &&\r\n              (lane = \"UNSAFE_componentWillReceiveProps\");\r\n          \"function\" === typeof _instance.componentWillUpdate &&\r\n          !0 !== _instance.componentWillUpdate.__suppressDeprecationWarning\r\n            ? (foundWillUpdateName = \"componentWillUpdate\")\r\n            : \"function\" === typeof _instance.UNSAFE_componentWillUpdate &&\r\n              (foundWillUpdateName = \"UNSAFE_componentWillUpdate\");\r\n          if (null !== state || null !== lane || null !== foundWillUpdateName) {\r\n            _instance = getComponentNameFromType(Component) || \"Component\";\r\n            var newApiName =\r\n              \"function\" === typeof Component.getDerivedStateFromProps\r\n                ? \"getDerivedStateFromProps()\"\r\n                : \"getSnapshotBeforeUpdate()\";\r\n            didWarnAboutLegacyLifecyclesAndDerivedState.has(_instance) ||\r\n              (didWarnAboutLegacyLifecyclesAndDerivedState.add(_instance),\r\n              console.error(\r\n                \"Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\nhttps://react.dev/link/unsafe-component-lifecycles\",\r\n                _instance,\r\n                newApiName,\r\n                null !== state ? \"\\n  \" + state : \"\",\r\n                null !== lane ? \"\\n  \" + lane : \"\",\r\n                null !== foundWillUpdateName ? \"\\n  \" + foundWillUpdateName : \"\"\r\n              ));\r\n          }\r\n        }\r\n        _instance = workInProgress.stateNode;\r\n        state = getComponentNameFromType(Component) || \"Component\";\r\n        _instance.render ||\r\n          (Component.prototype &&\r\n          \"function\" === typeof Component.prototype.render\r\n            ? console.error(\r\n                \"No `render` method found on the %s instance: did you accidentally return an object from the constructor?\",\r\n                state\r\n              )\r\n            : console.error(\r\n                \"No `render` method found on the %s instance: you may have forgotten to define `render`.\",\r\n                state\r\n              ));\r\n        !_instance.getInitialState ||\r\n          _instance.getInitialState.isReactClassApproved ||\r\n          _instance.state ||\r\n          console.error(\r\n            \"getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?\",\r\n            state\r\n          );\r\n        _instance.getDefaultProps &&\r\n          !_instance.getDefaultProps.isReactClassApproved &&\r\n          console.error(\r\n            \"getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.\",\r\n            state\r\n          );\r\n        _instance.contextType &&\r\n          console.error(\r\n            \"contextType was defined as an instance property on %s. Use a static property to define contextType instead.\",\r\n            state\r\n          );\r\n        Component.childContextTypes &&\r\n          !didWarnAboutChildContextTypes.has(Component) &&\r\n          (didWarnAboutChildContextTypes.add(Component),\r\n          console.error(\r\n            \"%s uses the legacy childContextTypes API which was removed in React 19. Use React.createContext() instead. (https://react.dev/link/legacy-context)\",\r\n            state\r\n          ));\r\n        Component.contextTypes &&\r\n          !didWarnAboutContextTypes$1.has(Component) &&\r\n          (didWarnAboutContextTypes$1.add(Component),\r\n          console.error(\r\n            \"%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with static contextType instead. (https://react.dev/link/legacy-context)\",\r\n            state\r\n          ));\r\n        \"function\" === typeof _instance.componentShouldUpdate &&\r\n          console.error(\r\n            \"%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.\",\r\n            state\r\n          );\r\n        Component.prototype &&\r\n          Component.prototype.isPureReactComponent &&\r\n          \"undefined\" !== typeof _instance.shouldComponentUpdate &&\r\n          console.error(\r\n            \"%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.\",\r\n            getComponentNameFromType(Component) || \"A pure component\"\r\n          );\r\n        \"function\" === typeof _instance.componentDidUnmount &&\r\n          console.error(\r\n            \"%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?\",\r\n            state\r\n          );\r\n        \"function\" === typeof _instance.componentDidReceiveProps &&\r\n          console.error(\r\n            \"%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().\",\r\n            state\r\n          );\r\n        \"function\" === typeof _instance.componentWillRecieveProps &&\r\n          console.error(\r\n            \"%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?\",\r\n            state\r\n          );\r\n        \"function\" === typeof _instance.UNSAFE_componentWillRecieveProps &&\r\n          console.error(\r\n            \"%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?\",\r\n            state\r\n          );\r\n        lane = _instance.props !== nextProps;\r\n        void 0 !== _instance.props &&\r\n          lane &&\r\n          console.error(\r\n            \"When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.\",\r\n            state\r\n          );\r\n        _instance.defaultProps &&\r\n          console.error(\r\n            \"Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.\",\r\n            state,\r\n            state\r\n          );\r\n        \"function\" !== typeof _instance.getSnapshotBeforeUpdate ||\r\n          \"function\" === typeof _instance.componentDidUpdate ||\r\n          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(Component) ||\r\n          (didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(Component),\r\n          console.error(\r\n            \"%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.\",\r\n            getComponentNameFromType(Component)\r\n          ));\r\n        \"function\" === typeof _instance.getDerivedStateFromProps &&\r\n          console.error(\r\n            \"%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.\",\r\n            state\r\n          );\r\n        \"function\" === typeof _instance.getDerivedStateFromError &&\r\n          console.error(\r\n            \"%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.\",\r\n            state\r\n          );\r\n        \"function\" === typeof Component.getSnapshotBeforeUpdate &&\r\n          console.error(\r\n            \"%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.\",\r\n            state\r\n          );\r\n        (lane = _instance.state) &&\r\n          (\"object\" !== typeof lane || isArrayImpl(lane)) &&\r\n          console.error(\"%s.state: must be set to an object or null\", state);\r\n        \"function\" === typeof _instance.getChildContext &&\r\n          \"object\" !== typeof Component.childContextTypes &&\r\n          console.error(\r\n            \"%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().\",\r\n            state\r\n          );\r\n        _instance = workInProgress.stateNode;\r\n        _instance.props = nextProps;\r\n        _instance.state = workInProgress.memoizedState;\r\n        _instance.refs = {};\r\n        initializeUpdateQueue(workInProgress);\r\n        state = Component.contextType;\r\n        _instance.context =\r\n          \"object\" === typeof state && null !== state\r\n            ? readContext(state)\r\n            : emptyContextObject;\r\n        _instance.state === nextProps &&\r\n          ((state = getComponentNameFromType(Component) || \"Component\"),\r\n          didWarnAboutDirectlyAssigningPropsToState.has(state) ||\r\n            (didWarnAboutDirectlyAssigningPropsToState.add(state),\r\n            console.error(\r\n              \"%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.\",\r\n              state\r\n            )));\r\n        workInProgress.mode & StrictLegacyMode &&\r\n          ReactStrictModeWarnings.recordLegacyContextWarning(\r\n            workInProgress,\r\n            _instance\r\n          );\r\n        ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\r\n          workInProgress,\r\n          _instance\r\n        );\r\n        _instance.state = workInProgress.memoizedState;\r\n        state = Component.getDerivedStateFromProps;\r\n        \"function\" === typeof state &&\r\n          (applyDerivedStateFromProps(\r\n            workInProgress,\r\n            Component,\r\n            state,\r\n            nextProps\r\n          ),\r\n          (_instance.state = workInProgress.memoizedState));\r\n        \"function\" === typeof Component.getDerivedStateFromProps ||\r\n          \"function\" === typeof _instance.getSnapshotBeforeUpdate ||\r\n          (\"function\" !== typeof _instance.UNSAFE_componentWillMount &&\r\n            \"function\" !== typeof _instance.componentWillMount) ||\r\n          ((state = _instance.state),\r\n          \"function\" === typeof _instance.componentWillMount &&\r\n            _instance.componentWillMount(),\r\n          \"function\" === typeof _instance.UNSAFE_componentWillMount &&\r\n            _instance.UNSAFE_componentWillMount(),\r\n          state !== _instance.state &&\r\n            (console.error(\r\n              \"%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.\",\r\n              getComponentNameFromFiber(workInProgress) || \"Component\"\r\n            ),\r\n            classComponentUpdater.enqueueReplaceState(\r\n              _instance,\r\n              _instance.state,\r\n              null\r\n            )),\r\n          processUpdateQueue(workInProgress, nextProps, _instance, renderLanes),\r\n          suspendIfUpdateReadFromEntangledAsyncAction(),\r\n          (_instance.state = workInProgress.memoizedState));\r\n        \"function\" === typeof _instance.componentDidMount &&\r\n          (workInProgress.flags |= 4194308);\r\n        (workInProgress.mode & StrictEffectsMode) !== NoMode &&\r\n          (workInProgress.flags |= 134217728);\r\n        _instance = !0;\r\n      } else if (null === current) {\r\n        _instance = workInProgress.stateNode;\r\n        var unresolvedOldProps = workInProgress.memoizedProps;\r\n        lane = resolveClassComponentProps(Component, unresolvedOldProps);\r\n        _instance.props = lane;\r\n        var oldContext = _instance.context;\r\n        foundWillUpdateName = Component.contextType;\r\n        state = emptyContextObject;\r\n        \"object\" === typeof foundWillUpdateName &&\r\n          null !== foundWillUpdateName &&\r\n          (state = readContext(foundWillUpdateName));\r\n        newApiName = Component.getDerivedStateFromProps;\r\n        foundWillUpdateName =\r\n          \"function\" === typeof newApiName ||\r\n          \"function\" === typeof _instance.getSnapshotBeforeUpdate;\r\n        unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;\r\n        foundWillUpdateName ||\r\n          (\"function\" !== typeof _instance.UNSAFE_componentWillReceiveProps &&\r\n            \"function\" !== typeof _instance.componentWillReceiveProps) ||\r\n          ((unresolvedOldProps || oldContext !== state) &&\r\n            callComponentWillReceiveProps(\r\n              workInProgress,\r\n              _instance,\r\n              nextProps,\r\n              state\r\n            ));\r\n        hasForceUpdate = !1;\r\n        var oldState = workInProgress.memoizedState;\r\n        _instance.state = oldState;\r\n        processUpdateQueue(workInProgress, nextProps, _instance, renderLanes);\r\n        suspendIfUpdateReadFromEntangledAsyncAction();\r\n        oldContext = workInProgress.memoizedState;\r\n        unresolvedOldProps || oldState !== oldContext || hasForceUpdate\r\n          ? (\"function\" === typeof newApiName &&\r\n              (applyDerivedStateFromProps(\r\n                workInProgress,\r\n                Component,\r\n                newApiName,\r\n                nextProps\r\n              ),\r\n              (oldContext = workInProgress.memoizedState)),\r\n            (lane =\r\n              hasForceUpdate ||\r\n              checkShouldComponentUpdate(\r\n                workInProgress,\r\n                Component,\r\n                lane,\r\n                nextProps,\r\n                oldState,\r\n                oldContext,\r\n                state\r\n              ))\r\n              ? (foundWillUpdateName ||\r\n                  (\"function\" !== typeof _instance.UNSAFE_componentWillMount &&\r\n                    \"function\" !== typeof _instance.componentWillMount) ||\r\n                  (\"function\" === typeof _instance.componentWillMount &&\r\n                    _instance.componentWillMount(),\r\n                  \"function\" === typeof _instance.UNSAFE_componentWillMount &&\r\n                    _instance.UNSAFE_componentWillMount()),\r\n                \"function\" === typeof _instance.componentDidMount &&\r\n                  (workInProgress.flags |= 4194308),\r\n                (workInProgress.mode & StrictEffectsMode) !== NoMode &&\r\n                  (workInProgress.flags |= 134217728))\r\n              : (\"function\" === typeof _instance.componentDidMount &&\r\n                  (workInProgress.flags |= 4194308),\r\n                (workInProgress.mode & StrictEffectsMode) !== NoMode &&\r\n                  (workInProgress.flags |= 134217728),\r\n                (workInProgress.memoizedProps = nextProps),\r\n                (workInProgress.memoizedState = oldContext)),\r\n            (_instance.props = nextProps),\r\n            (_instance.state = oldContext),\r\n            (_instance.context = state),\r\n            (_instance = lane))\r\n          : (\"function\" === typeof _instance.componentDidMount &&\r\n              (workInProgress.flags |= 4194308),\r\n            (workInProgress.mode & StrictEffectsMode) !== NoMode &&\r\n              (workInProgress.flags |= 134217728),\r\n            (_instance = !1));\r\n      } else {\r\n        _instance = workInProgress.stateNode;\r\n        cloneUpdateQueue(current, workInProgress);\r\n        state = workInProgress.memoizedProps;\r\n        foundWillUpdateName = resolveClassComponentProps(Component, state);\r\n        _instance.props = foundWillUpdateName;\r\n        newApiName = workInProgress.pendingProps;\r\n        oldState = _instance.context;\r\n        oldContext = Component.contextType;\r\n        lane = emptyContextObject;\r\n        \"object\" === typeof oldContext &&\r\n          null !== oldContext &&\r\n          (lane = readContext(oldContext));\r\n        unresolvedOldProps = Component.getDerivedStateFromProps;\r\n        (oldContext =\r\n          \"function\" === typeof unresolvedOldProps ||\r\n          \"function\" === typeof _instance.getSnapshotBeforeUpdate) ||\r\n          (\"function\" !== typeof _instance.UNSAFE_componentWillReceiveProps &&\r\n            \"function\" !== typeof _instance.componentWillReceiveProps) ||\r\n          ((state !== newApiName || oldState !== lane) &&\r\n            callComponentWillReceiveProps(\r\n              workInProgress,\r\n              _instance,\r\n              nextProps,\r\n              lane\r\n            ));\r\n        hasForceUpdate = !1;\r\n        oldState = workInProgress.memoizedState;\r\n        _instance.state = oldState;\r\n        processUpdateQueue(workInProgress, nextProps, _instance, renderLanes);\r\n        suspendIfUpdateReadFromEntangledAsyncAction();\r\n        var newState = workInProgress.memoizedState;\r\n        state !== newApiName ||\r\n        oldState !== newState ||\r\n        hasForceUpdate ||\r\n        (null !== current &&\r\n          null !== current.dependencies &&\r\n          checkIfContextChanged(current.dependencies))\r\n          ? (\"function\" === typeof unresolvedOldProps &&\r\n              (applyDerivedStateFromProps(\r\n                workInProgress,\r\n                Component,\r\n                unresolvedOldProps,\r\n                nextProps\r\n              ),\r\n              (newState = workInProgress.memoizedState)),\r\n            (foundWillUpdateName =\r\n              hasForceUpdate ||\r\n              checkShouldComponentUpdate(\r\n                workInProgress,\r\n                Component,\r\n                foundWillUpdateName,\r\n                nextProps,\r\n                oldState,\r\n                newState,\r\n                lane\r\n              ) ||\r\n              (null !== current &&\r\n                null !== current.dependencies &&\r\n                checkIfContextChanged(current.dependencies)))\r\n              ? (oldContext ||\r\n                  (\"function\" !== typeof _instance.UNSAFE_componentWillUpdate &&\r\n                    \"function\" !== typeof _instance.componentWillUpdate) ||\r\n                  (\"function\" === typeof _instance.componentWillUpdate &&\r\n                    _instance.componentWillUpdate(nextProps, newState, lane),\r\n                  \"function\" === typeof _instance.UNSAFE_componentWillUpdate &&\r\n                    _instance.UNSAFE_componentWillUpdate(\r\n                      nextProps,\r\n                      newState,\r\n                      lane\r\n                    )),\r\n                \"function\" === typeof _instance.componentDidUpdate &&\r\n                  (workInProgress.flags |= 4),\r\n                \"function\" === typeof _instance.getSnapshotBeforeUpdate &&\r\n                  (workInProgress.flags |= 1024))\r\n              : (\"function\" !== typeof _instance.componentDidUpdate ||\r\n                  (state === current.memoizedProps &&\r\n                    oldState === current.memoizedState) ||\r\n                  (workInProgress.flags |= 4),\r\n                \"function\" !== typeof _instance.getSnapshotBeforeUpdate ||\r\n                  (state === current.memoizedProps &&\r\n                    oldState === current.memoizedState) ||\r\n                  (workInProgress.flags |= 1024),\r\n                (workInProgress.memoizedProps = nextProps),\r\n                (workInProgress.memoizedState = newState)),\r\n            (_instance.props = nextProps),\r\n            (_instance.state = newState),\r\n            (_instance.context = lane),\r\n            (_instance = foundWillUpdateName))\r\n          : (\"function\" !== typeof _instance.componentDidUpdate ||\r\n              (state === current.memoizedProps &&\r\n                oldState === current.memoizedState) ||\r\n              (workInProgress.flags |= 4),\r\n            \"function\" !== typeof _instance.getSnapshotBeforeUpdate ||\r\n              (state === current.memoizedProps &&\r\n                oldState === current.memoizedState) ||\r\n              (workInProgress.flags |= 1024),\r\n            (_instance = !1));\r\n      }\r\n      lane = _instance;\r\n      markRef(current, workInProgress);\r\n      state = 0 !== (workInProgress.flags & 128);\r\n      if (lane || state) {\r\n        lane = workInProgress.stateNode;\r\n        setCurrentFiber(workInProgress);\r\n        if (state && \"function\" !== typeof Component.getDerivedStateFromError)\r\n          (Component = null), (profilerStartTime = -1);\r\n        else {\r\n          markComponentRenderStarted(workInProgress);\r\n          Component = callRenderInDEV(lane);\r\n          if (workInProgress.mode & StrictLegacyMode) {\r\n            setIsStrictModeForDevtools(!0);\r\n            try {\r\n              callRenderInDEV(lane);\r\n            } finally {\r\n              setIsStrictModeForDevtools(!1);\r\n            }\r\n          }\r\n          markComponentRenderStopped();\r\n        }\r\n        workInProgress.flags |= 1;\r\n        null !== current && state\r\n          ? ((workInProgress.child = reconcileChildFibers(\r\n              workInProgress,\r\n              current.child,\r\n              null,\r\n              renderLanes\r\n            )),\r\n            (workInProgress.child = reconcileChildFibers(\r\n              workInProgress,\r\n              null,\r\n              Component,\r\n              renderLanes\r\n            )))\r\n          : reconcileChildren(current, workInProgress, Component, renderLanes);\r\n        workInProgress.memoizedState = lane.state;\r\n        current = workInProgress.child;\r\n      } else\r\n        current = bailoutOnAlreadyFinishedWork(\r\n          current,\r\n          workInProgress,\r\n          renderLanes\r\n        );\r\n      renderLanes = workInProgress.stateNode;\r\n      _instance &&\r\n        renderLanes.props !== nextProps &&\r\n        (didWarnAboutReassigningProps ||\r\n          console.error(\r\n            \"It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.\",\r\n            getComponentNameFromFiber(workInProgress) || \"a component\"\r\n          ),\r\n        (didWarnAboutReassigningProps = !0));\r\n      return current;\r\n    }\r\n    function mountHostRootWithoutHydrating(\r\n      current,\r\n      workInProgress,\r\n      nextChildren,\r\n      renderLanes\r\n    ) {\r\n      resetHydrationState();\r\n      workInProgress.flags |= 256;\r\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n      return workInProgress.child;\r\n    }\r\n    function validateFunctionComponentInDev(workInProgress, Component) {\r\n      Component &&\r\n        Component.childContextTypes &&\r\n        console.error(\r\n          \"childContextTypes cannot be defined on a function component.\\n  %s.childContextTypes = ...\",\r\n          Component.displayName || Component.name || \"Component\"\r\n        );\r\n      \"function\" === typeof Component.getDerivedStateFromProps &&\r\n        ((workInProgress = getComponentNameFromType(Component) || \"Unknown\"),\r\n        didWarnAboutGetDerivedStateOnFunctionComponent[workInProgress] ||\r\n          (console.error(\r\n            \"%s: Function components do not support getDerivedStateFromProps.\",\r\n            workInProgress\r\n          ),\r\n          (didWarnAboutGetDerivedStateOnFunctionComponent[workInProgress] =\r\n            !0)));\r\n      \"object\" === typeof Component.contextType &&\r\n        null !== Component.contextType &&\r\n        ((Component = getComponentNameFromType(Component) || \"Unknown\"),\r\n        didWarnAboutContextTypeOnFunctionComponent[Component] ||\r\n          (console.error(\r\n            \"%s: Function components do not support contextType.\",\r\n            Component\r\n          ),\r\n          (didWarnAboutContextTypeOnFunctionComponent[Component] = !0)));\r\n    }\r\n    function mountSuspenseOffscreenState(renderLanes) {\r\n      return { baseLanes: renderLanes, cachePool: getSuspendedCache() };\r\n    }\r\n    function getRemainingWorkInPrimaryTree(\r\n      current,\r\n      primaryTreeDidDefer,\r\n      renderLanes\r\n    ) {\r\n      current = null !== current ? current.childLanes & ~renderLanes : 0;\r\n      primaryTreeDidDefer && (current |= workInProgressDeferredLane);\r\n      return current;\r\n    }\r\n    function updateSuspenseComponent(current, workInProgress, renderLanes) {\r\n      var JSCompiler_object_inline_digest_2451;\r\n      var JSCompiler_object_inline_stack_2452 = workInProgress.pendingProps;\r\n      shouldSuspendImpl(workInProgress) && (workInProgress.flags |= 128);\r\n      var JSCompiler_object_inline_componentStack_2453 = !1;\r\n      var didSuspend = 0 !== (workInProgress.flags & 128);\r\n      (JSCompiler_object_inline_digest_2451 = didSuspend) ||\r\n        (JSCompiler_object_inline_digest_2451 =\r\n          null !== current && null === current.memoizedState\r\n            ? !1\r\n            : 0 !== (suspenseStackCursor.current & ForceSuspenseFallback));\r\n      JSCompiler_object_inline_digest_2451 &&\r\n        ((JSCompiler_object_inline_componentStack_2453 = !0),\r\n        (workInProgress.flags &= -129));\r\n      JSCompiler_object_inline_digest_2451 = 0 !== (workInProgress.flags & 32);\r\n      workInProgress.flags &= -33;\r\n      if (null === current) {\r\n        if (isHydrating) {\r\n          JSCompiler_object_inline_componentStack_2453\r\n            ? pushPrimaryTreeSuspenseHandler(workInProgress)\r\n            : reuseSuspenseHandlerOnStack(workInProgress);\r\n          if (isHydrating) {\r\n            var JSCompiler_object_inline_message_2450 = nextHydratableInstance;\r\n            var JSCompiler_temp;\r\n            if (!(JSCompiler_temp = !JSCompiler_object_inline_message_2450)) {\r\n              c: {\r\n                var instance = JSCompiler_object_inline_message_2450;\r\n                for (\r\n                  JSCompiler_temp = rootOrSingletonContext;\r\n                  8 !== instance.nodeType;\r\n\r\n                ) {\r\n                  if (!JSCompiler_temp) {\r\n                    JSCompiler_temp = null;\r\n                    break c;\r\n                  }\r\n                  instance = getNextHydratable(instance.nextSibling);\r\n                  if (null === instance) {\r\n                    JSCompiler_temp = null;\r\n                    break c;\r\n                  }\r\n                }\r\n                JSCompiler_temp = instance;\r\n              }\r\n              null !== JSCompiler_temp\r\n                ? (warnIfNotHydrating(),\r\n                  (workInProgress.memoizedState = {\r\n                    dehydrated: JSCompiler_temp,\r\n                    treeContext:\r\n                      null !== treeContextProvider\r\n                        ? { id: treeContextId, overflow: treeContextOverflow }\r\n                        : null,\r\n                    retryLane: 536870912,\r\n                    hydrationErrors: null\r\n                  }),\r\n                  (instance = createFiber(18, null, null, NoMode)),\r\n                  (instance.stateNode = JSCompiler_temp),\r\n                  (instance.return = workInProgress),\r\n                  (workInProgress.child = instance),\r\n                  (hydrationParentFiber = workInProgress),\r\n                  (nextHydratableInstance = null),\r\n                  (JSCompiler_temp = !0))\r\n                : (JSCompiler_temp = !1);\r\n              JSCompiler_temp = !JSCompiler_temp;\r\n            }\r\n            JSCompiler_temp &&\r\n              (warnNonHydratedInstance(\r\n                workInProgress,\r\n                JSCompiler_object_inline_message_2450\r\n              ),\r\n              throwOnHydrationMismatch(workInProgress));\r\n          }\r\n          JSCompiler_object_inline_message_2450 = workInProgress.memoizedState;\r\n          if (\r\n            null !== JSCompiler_object_inline_message_2450 &&\r\n            ((JSCompiler_object_inline_message_2450 =\r\n              JSCompiler_object_inline_message_2450.dehydrated),\r\n            null !== JSCompiler_object_inline_message_2450)\r\n          )\r\n            return (\r\n              isSuspenseInstanceFallback(JSCompiler_object_inline_message_2450)\r\n                ? (workInProgress.lanes = 32)\r\n                : (workInProgress.lanes = 536870912),\r\n              null\r\n            );\r\n          popSuspenseHandler(workInProgress);\r\n        }\r\n        JSCompiler_object_inline_message_2450 =\r\n          JSCompiler_object_inline_stack_2452.children;\r\n        JSCompiler_object_inline_stack_2452 =\r\n          JSCompiler_object_inline_stack_2452.fallback;\r\n        if (JSCompiler_object_inline_componentStack_2453)\r\n          return (\r\n            reuseSuspenseHandlerOnStack(workInProgress),\r\n            (JSCompiler_object_inline_componentStack_2453 =\r\n              workInProgress.mode),\r\n            (JSCompiler_object_inline_message_2450 =\r\n              mountWorkInProgressOffscreenFiber(\r\n                {\r\n                  mode: \"hidden\",\r\n                  children: JSCompiler_object_inline_message_2450\r\n                },\r\n                JSCompiler_object_inline_componentStack_2453\r\n              )),\r\n            (JSCompiler_object_inline_stack_2452 = createFiberFromFragment(\r\n              JSCompiler_object_inline_stack_2452,\r\n              JSCompiler_object_inline_componentStack_2453,\r\n              renderLanes,\r\n              null\r\n            )),\r\n            (JSCompiler_object_inline_message_2450.return = workInProgress),\r\n            (JSCompiler_object_inline_stack_2452.return = workInProgress),\r\n            (JSCompiler_object_inline_message_2450.sibling =\r\n              JSCompiler_object_inline_stack_2452),\r\n            (workInProgress.child = JSCompiler_object_inline_message_2450),\r\n            (JSCompiler_object_inline_componentStack_2453 =\r\n              workInProgress.child),\r\n            (JSCompiler_object_inline_componentStack_2453.memoizedState =\r\n              mountSuspenseOffscreenState(renderLanes)),\r\n            (JSCompiler_object_inline_componentStack_2453.childLanes =\r\n              getRemainingWorkInPrimaryTree(\r\n                current,\r\n                JSCompiler_object_inline_digest_2451,\r\n                renderLanes\r\n              )),\r\n            (workInProgress.memoizedState = SUSPENDED_MARKER),\r\n            JSCompiler_object_inline_stack_2452\r\n          );\r\n        pushPrimaryTreeSuspenseHandler(workInProgress);\r\n        return mountSuspensePrimaryChildren(\r\n          workInProgress,\r\n          JSCompiler_object_inline_message_2450\r\n        );\r\n      }\r\n      var prevState = current.memoizedState;\r\n      if (\r\n        null !== prevState &&\r\n        ((JSCompiler_object_inline_message_2450 = prevState.dehydrated),\r\n        null !== JSCompiler_object_inline_message_2450)\r\n      ) {\r\n        if (didSuspend)\r\n          workInProgress.flags & 256\r\n            ? (pushPrimaryTreeSuspenseHandler(workInProgress),\r\n              (workInProgress.flags &= -257),\r\n              (workInProgress = retrySuspenseComponentWithoutHydrating(\r\n                current,\r\n                workInProgress,\r\n                renderLanes\r\n              )))\r\n            : null !== workInProgress.memoizedState\r\n              ? (reuseSuspenseHandlerOnStack(workInProgress),\r\n                (workInProgress.child = current.child),\r\n                (workInProgress.flags |= 128),\r\n                (workInProgress = null))\r\n              : (reuseSuspenseHandlerOnStack(workInProgress),\r\n                (JSCompiler_object_inline_componentStack_2453 =\r\n                  JSCompiler_object_inline_stack_2452.fallback),\r\n                (JSCompiler_object_inline_message_2450 = workInProgress.mode),\r\n                (JSCompiler_object_inline_stack_2452 =\r\n                  mountWorkInProgressOffscreenFiber(\r\n                    {\r\n                      mode: \"visible\",\r\n                      children: JSCompiler_object_inline_stack_2452.children\r\n                    },\r\n                    JSCompiler_object_inline_message_2450\r\n                  )),\r\n                (JSCompiler_object_inline_componentStack_2453 =\r\n                  createFiberFromFragment(\r\n                    JSCompiler_object_inline_componentStack_2453,\r\n                    JSCompiler_object_inline_message_2450,\r\n                    renderLanes,\r\n                    null\r\n                  )),\r\n                (JSCompiler_object_inline_componentStack_2453.flags |= 2),\r\n                (JSCompiler_object_inline_stack_2452.return = workInProgress),\r\n                (JSCompiler_object_inline_componentStack_2453.return =\r\n                  workInProgress),\r\n                (JSCompiler_object_inline_stack_2452.sibling =\r\n                  JSCompiler_object_inline_componentStack_2453),\r\n                (workInProgress.child = JSCompiler_object_inline_stack_2452),\r\n                reconcileChildFibers(\r\n                  workInProgress,\r\n                  current.child,\r\n                  null,\r\n                  renderLanes\r\n                ),\r\n                (JSCompiler_object_inline_stack_2452 = workInProgress.child),\r\n                (JSCompiler_object_inline_stack_2452.memoizedState =\r\n                  mountSuspenseOffscreenState(renderLanes)),\r\n                (JSCompiler_object_inline_stack_2452.childLanes =\r\n                  getRemainingWorkInPrimaryTree(\r\n                    current,\r\n                    JSCompiler_object_inline_digest_2451,\r\n                    renderLanes\r\n                  )),\r\n                (workInProgress.memoizedState = SUSPENDED_MARKER),\r\n                (workInProgress =\r\n                  JSCompiler_object_inline_componentStack_2453));\r\n        else if (\r\n          (pushPrimaryTreeSuspenseHandler(workInProgress),\r\n          isHydrating &&\r\n            console.error(\r\n              \"We should not be hydrating here. This is a bug in React. Please file a bug.\"\r\n            ),\r\n          isSuspenseInstanceFallback(JSCompiler_object_inline_message_2450))\r\n        ) {\r\n          JSCompiler_object_inline_digest_2451 =\r\n            JSCompiler_object_inline_message_2450.nextSibling &&\r\n            JSCompiler_object_inline_message_2450.nextSibling.dataset;\r\n          if (JSCompiler_object_inline_digest_2451) {\r\n            JSCompiler_temp = JSCompiler_object_inline_digest_2451.dgst;\r\n            var message = JSCompiler_object_inline_digest_2451.msg;\r\n            instance = JSCompiler_object_inline_digest_2451.stck;\r\n            var componentStack = JSCompiler_object_inline_digest_2451.cstck;\r\n          }\r\n          JSCompiler_object_inline_message_2450 = message;\r\n          JSCompiler_object_inline_digest_2451 = JSCompiler_temp;\r\n          JSCompiler_object_inline_stack_2452 = instance;\r\n          JSCompiler_temp = JSCompiler_object_inline_componentStack_2453 =\r\n            componentStack;\r\n          JSCompiler_object_inline_componentStack_2453 =\r\n            JSCompiler_object_inline_message_2450\r\n              ? Error(JSCompiler_object_inline_message_2450)\r\n              : Error(\r\n                  \"The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.\"\r\n                );\r\n          JSCompiler_object_inline_componentStack_2453.stack =\r\n            JSCompiler_object_inline_stack_2452 || \"\";\r\n          JSCompiler_object_inline_componentStack_2453.digest =\r\n            JSCompiler_object_inline_digest_2451;\r\n          JSCompiler_object_inline_digest_2451 =\r\n            void 0 === JSCompiler_temp ? null : JSCompiler_temp;\r\n          JSCompiler_object_inline_stack_2452 = {\r\n            value: JSCompiler_object_inline_componentStack_2453,\r\n            source: null,\r\n            stack: JSCompiler_object_inline_digest_2451\r\n          };\r\n          \"string\" === typeof JSCompiler_object_inline_digest_2451 &&\r\n            CapturedStacks.set(\r\n              JSCompiler_object_inline_componentStack_2453,\r\n              JSCompiler_object_inline_stack_2452\r\n            );\r\n          queueHydrationError(JSCompiler_object_inline_stack_2452);\r\n          workInProgress = retrySuspenseComponentWithoutHydrating(\r\n            current,\r\n            workInProgress,\r\n            renderLanes\r\n          );\r\n        } else if (\r\n          (didReceiveUpdate ||\r\n            propagateParentContextChanges(\r\n              current,\r\n              workInProgress,\r\n              renderLanes,\r\n              !1\r\n            ),\r\n          (JSCompiler_object_inline_digest_2451 =\r\n            0 !== (renderLanes & current.childLanes)),\r\n          didReceiveUpdate || JSCompiler_object_inline_digest_2451)\r\n        ) {\r\n          JSCompiler_object_inline_digest_2451 = workInProgressRoot;\r\n          if (\r\n            null !== JSCompiler_object_inline_digest_2451 &&\r\n            ((JSCompiler_object_inline_stack_2452 = renderLanes & -renderLanes),\r\n            (JSCompiler_object_inline_stack_2452 =\r\n              0 !== (JSCompiler_object_inline_stack_2452 & 42)\r\n                ? 1\r\n                : getBumpedLaneForHydrationByLane(\r\n                    JSCompiler_object_inline_stack_2452\r\n                  )),\r\n            (JSCompiler_object_inline_stack_2452 =\r\n              0 !==\r\n              (JSCompiler_object_inline_stack_2452 &\r\n                (JSCompiler_object_inline_digest_2451.suspendedLanes |\r\n                  renderLanes))\r\n                ? 0\r\n                : JSCompiler_object_inline_stack_2452),\r\n            0 !== JSCompiler_object_inline_stack_2452 &&\r\n              JSCompiler_object_inline_stack_2452 !== prevState.retryLane)\r\n          )\r\n            throw (\r\n              ((prevState.retryLane = JSCompiler_object_inline_stack_2452),\r\n              enqueueConcurrentRenderForLane(\r\n                current,\r\n                JSCompiler_object_inline_stack_2452\r\n              ),\r\n              scheduleUpdateOnFiber(\r\n                JSCompiler_object_inline_digest_2451,\r\n                current,\r\n                JSCompiler_object_inline_stack_2452\r\n              ),\r\n              SelectiveHydrationException)\r\n            );\r\n          JSCompiler_object_inline_message_2450.data ===\r\n            SUSPENSE_PENDING_START_DATA || renderDidSuspendDelayIfPossible();\r\n          workInProgress = retrySuspenseComponentWithoutHydrating(\r\n            current,\r\n            workInProgress,\r\n            renderLanes\r\n          );\r\n        } else\r\n          JSCompiler_object_inline_message_2450.data ===\r\n          SUSPENSE_PENDING_START_DATA\r\n            ? ((workInProgress.flags |= 192),\r\n              (workInProgress.child = current.child),\r\n              (workInProgress = null))\r\n            : ((current = prevState.treeContext),\r\n              (nextHydratableInstance = getNextHydratable(\r\n                JSCompiler_object_inline_message_2450.nextSibling\r\n              )),\r\n              (hydrationParentFiber = workInProgress),\r\n              (isHydrating = !0),\r\n              (hydrationErrors = null),\r\n              (didSuspendOrErrorDEV = !1),\r\n              (hydrationDiffRootDEV = null),\r\n              (rootOrSingletonContext = !1),\r\n              null !== current &&\r\n                (warnIfNotHydrating(),\r\n                (idStack[idStackIndex++] = treeContextId),\r\n                (idStack[idStackIndex++] = treeContextOverflow),\r\n                (idStack[idStackIndex++] = treeContextProvider),\r\n                (treeContextId = current.id),\r\n                (treeContextOverflow = current.overflow),\r\n                (treeContextProvider = workInProgress)),\r\n              (workInProgress = mountSuspensePrimaryChildren(\r\n                workInProgress,\r\n                JSCompiler_object_inline_stack_2452.children\r\n              )),\r\n              (workInProgress.flags |= 4096));\r\n        return workInProgress;\r\n      }\r\n      if (JSCompiler_object_inline_componentStack_2453)\r\n        return (\r\n          reuseSuspenseHandlerOnStack(workInProgress),\r\n          (JSCompiler_object_inline_componentStack_2453 =\r\n            JSCompiler_object_inline_stack_2452.fallback),\r\n          (JSCompiler_object_inline_message_2450 = workInProgress.mode),\r\n          (JSCompiler_temp = current.child),\r\n          (instance = JSCompiler_temp.sibling),\r\n          (JSCompiler_object_inline_stack_2452 = createWorkInProgress(\r\n            JSCompiler_temp,\r\n            {\r\n              mode: \"hidden\",\r\n              children: JSCompiler_object_inline_stack_2452.children\r\n            }\r\n          )),\r\n          (JSCompiler_object_inline_stack_2452.subtreeFlags =\r\n            JSCompiler_temp.subtreeFlags & 65011712),\r\n          null !== instance\r\n            ? (JSCompiler_object_inline_componentStack_2453 =\r\n                createWorkInProgress(\r\n                  instance,\r\n                  JSCompiler_object_inline_componentStack_2453\r\n                ))\r\n            : ((JSCompiler_object_inline_componentStack_2453 =\r\n                createFiberFromFragment(\r\n                  JSCompiler_object_inline_componentStack_2453,\r\n                  JSCompiler_object_inline_message_2450,\r\n                  renderLanes,\r\n                  null\r\n                )),\r\n              (JSCompiler_object_inline_componentStack_2453.flags |= 2)),\r\n          (JSCompiler_object_inline_componentStack_2453.return =\r\n            workInProgress),\r\n          (JSCompiler_object_inline_stack_2452.return = workInProgress),\r\n          (JSCompiler_object_inline_stack_2452.sibling =\r\n            JSCompiler_object_inline_componentStack_2453),\r\n          (workInProgress.child = JSCompiler_object_inline_stack_2452),\r\n          (JSCompiler_object_inline_stack_2452 =\r\n            JSCompiler_object_inline_componentStack_2453),\r\n          (JSCompiler_object_inline_componentStack_2453 = workInProgress.child),\r\n          (JSCompiler_object_inline_message_2450 = current.child.memoizedState),\r\n          null === JSCompiler_object_inline_message_2450\r\n            ? (JSCompiler_object_inline_message_2450 =\r\n                mountSuspenseOffscreenState(renderLanes))\r\n            : ((JSCompiler_temp =\r\n                JSCompiler_object_inline_message_2450.cachePool),\r\n              null !== JSCompiler_temp\r\n                ? ((instance = CacheContext._currentValue),\r\n                  (JSCompiler_temp =\r\n                    JSCompiler_temp.parent !== instance\r\n                      ? { parent: instance, pool: instance }\r\n                      : JSCompiler_temp))\r\n                : (JSCompiler_temp = getSuspendedCache()),\r\n              (JSCompiler_object_inline_message_2450 = {\r\n                baseLanes:\r\n                  JSCompiler_object_inline_message_2450.baseLanes | renderLanes,\r\n                cachePool: JSCompiler_temp\r\n              })),\r\n          (JSCompiler_object_inline_componentStack_2453.memoizedState =\r\n            JSCompiler_object_inline_message_2450),\r\n          (JSCompiler_object_inline_componentStack_2453.childLanes =\r\n            getRemainingWorkInPrimaryTree(\r\n              current,\r\n              JSCompiler_object_inline_digest_2451,\r\n              renderLanes\r\n            )),\r\n          (workInProgress.memoizedState = SUSPENDED_MARKER),\r\n          JSCompiler_object_inline_stack_2452\r\n        );\r\n      pushPrimaryTreeSuspenseHandler(workInProgress);\r\n      renderLanes = current.child;\r\n      current = renderLanes.sibling;\r\n      renderLanes = createWorkInProgress(renderLanes, {\r\n        mode: \"visible\",\r\n        children: JSCompiler_object_inline_stack_2452.children\r\n      });\r\n      renderLanes.return = workInProgress;\r\n      renderLanes.sibling = null;\r\n      null !== current &&\r\n        ((JSCompiler_object_inline_digest_2451 = workInProgress.deletions),\r\n        null === JSCompiler_object_inline_digest_2451\r\n          ? ((workInProgress.deletions = [current]),\r\n            (workInProgress.flags |= 16))\r\n          : JSCompiler_object_inline_digest_2451.push(current));\r\n      workInProgress.child = renderLanes;\r\n      workInProgress.memoizedState = null;\r\n      return renderLanes;\r\n    }\r\n    function mountSuspensePrimaryChildren(workInProgress, primaryChildren) {\r\n      primaryChildren = mountWorkInProgressOffscreenFiber(\r\n        { mode: \"visible\", children: primaryChildren },\r\n        workInProgress.mode\r\n      );\r\n      primaryChildren.return = workInProgress;\r\n      return (workInProgress.child = primaryChildren);\r\n    }\r\n    function mountWorkInProgressOffscreenFiber(offscreenProps, mode) {\r\n      offscreenProps = createFiber(22, offscreenProps, null, mode);\r\n      offscreenProps.lanes = 0;\r\n      offscreenProps.stateNode = {\r\n        _visibility: OffscreenVisible,\r\n        _pendingMarkers: null,\r\n        _retryCache: null,\r\n        _transitions: null\r\n      };\r\n      return offscreenProps;\r\n    }\r\n    function retrySuspenseComponentWithoutHydrating(\r\n      current,\r\n      workInProgress,\r\n      renderLanes\r\n    ) {\r\n      reconcileChildFibers(workInProgress, current.child, null, renderLanes);\r\n      current = mountSuspensePrimaryChildren(\r\n        workInProgress,\r\n        workInProgress.pendingProps.children\r\n      );\r\n      current.flags |= 2;\r\n      workInProgress.memoizedState = null;\r\n      return current;\r\n    }\r\n    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\r\n      fiber.lanes |= renderLanes;\r\n      var alternate = fiber.alternate;\r\n      null !== alternate && (alternate.lanes |= renderLanes);\r\n      scheduleContextWorkOnParentPath(\r\n        fiber.return,\r\n        renderLanes,\r\n        propagationRoot\r\n      );\r\n    }\r\n    function validateSuspenseListNestedChild(childSlot, index) {\r\n      var isAnArray = isArrayImpl(childSlot);\r\n      childSlot = !isAnArray && \"function\" === typeof getIteratorFn(childSlot);\r\n      return isAnArray || childSlot\r\n        ? ((isAnArray = isAnArray ? \"array\" : \"iterable\"),\r\n          console.error(\r\n            \"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>\",\r\n            isAnArray,\r\n            index,\r\n            isAnArray\r\n          ),\r\n          !1)\r\n        : !0;\r\n    }\r\n    function initSuspenseListRenderState(\r\n      workInProgress,\r\n      isBackwards,\r\n      tail,\r\n      lastContentRow,\r\n      tailMode\r\n    ) {\r\n      var renderState = workInProgress.memoizedState;\r\n      null === renderState\r\n        ? (workInProgress.memoizedState = {\r\n            isBackwards: isBackwards,\r\n            rendering: null,\r\n            renderingStartTime: 0,\r\n            last: lastContentRow,\r\n            tail: tail,\r\n            tailMode: tailMode\r\n          })\r\n        : ((renderState.isBackwards = isBackwards),\r\n          (renderState.rendering = null),\r\n          (renderState.renderingStartTime = 0),\r\n          (renderState.last = lastContentRow),\r\n          (renderState.tail = tail),\r\n          (renderState.tailMode = tailMode));\r\n    }\r\n    function updateSuspenseListComponent(current, workInProgress, renderLanes) {\r\n      var nextProps = workInProgress.pendingProps,\r\n        revealOrder = nextProps.revealOrder,\r\n        tailMode = nextProps.tail;\r\n      nextProps = nextProps.children;\r\n      if (\r\n        void 0 !== revealOrder &&\r\n        \"forwards\" !== revealOrder &&\r\n        \"backwards\" !== revealOrder &&\r\n        \"together\" !== revealOrder &&\r\n        !didWarnAboutRevealOrder[revealOrder]\r\n      )\r\n        if (\r\n          ((didWarnAboutRevealOrder[revealOrder] = !0),\r\n          \"string\" === typeof revealOrder)\r\n        )\r\n          switch (revealOrder.toLowerCase()) {\r\n            case \"together\":\r\n            case \"forwards\":\r\n            case \"backwards\":\r\n              console.error(\r\n                '\"%s\" is not a valid value for revealOrder on <SuspenseList />. Use lowercase \"%s\" instead.',\r\n                revealOrder,\r\n                revealOrder.toLowerCase()\r\n              );\r\n              break;\r\n            case \"forward\":\r\n            case \"backward\":\r\n              console.error(\r\n                '\"%s\" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use \"%ss\" instead.',\r\n                revealOrder,\r\n                revealOrder.toLowerCase()\r\n              );\r\n              break;\r\n            default:\r\n              console.error(\r\n                '\"%s\" is not a supported revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?',\r\n                revealOrder\r\n              );\r\n          }\r\n        else\r\n          console.error(\r\n            '%s is not a supported value for revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?',\r\n            revealOrder\r\n          );\r\n      void 0 === tailMode ||\r\n        didWarnAboutTailOptions[tailMode] ||\r\n        (\"collapsed\" !== tailMode && \"hidden\" !== tailMode\r\n          ? ((didWarnAboutTailOptions[tailMode] = !0),\r\n            console.error(\r\n              '\"%s\" is not a supported value for tail on <SuspenseList />. Did you mean \"collapsed\" or \"hidden\"?',\r\n              tailMode\r\n            ))\r\n          : \"forwards\" !== revealOrder &&\r\n            \"backwards\" !== revealOrder &&\r\n            ((didWarnAboutTailOptions[tailMode] = !0),\r\n            console.error(\r\n              '<SuspenseList tail=\"%s\" /> is only valid if revealOrder is \"forwards\" or \"backwards\". Did you mean to specify revealOrder=\"forwards\"?',\r\n              tailMode\r\n            )));\r\n      a: if (\r\n        (\"forwards\" === revealOrder || \"backwards\" === revealOrder) &&\r\n        void 0 !== nextProps &&\r\n        null !== nextProps &&\r\n        !1 !== nextProps\r\n      )\r\n        if (isArrayImpl(nextProps))\r\n          for (var i = 0; i < nextProps.length; i++) {\r\n            if (!validateSuspenseListNestedChild(nextProps[i], i)) break a;\r\n          }\r\n        else if (((i = getIteratorFn(nextProps)), \"function\" === typeof i)) {\r\n          if ((i = i.call(nextProps)))\r\n            for (var step = i.next(), _i = 0; !step.done; step = i.next()) {\r\n              if (!validateSuspenseListNestedChild(step.value, _i)) break a;\r\n              _i++;\r\n            }\r\n        } else\r\n          console.error(\r\n            'A single row was passed to a <SuspenseList revealOrder=\"%s\" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?',\r\n            revealOrder\r\n          );\r\n      reconcileChildren(current, workInProgress, nextProps, renderLanes);\r\n      nextProps = suspenseStackCursor.current;\r\n      if (0 !== (nextProps & ForceSuspenseFallback))\r\n        (nextProps =\r\n          (nextProps & SubtreeSuspenseContextMask) | ForceSuspenseFallback),\r\n          (workInProgress.flags |= 128);\r\n      else {\r\n        if (null !== current && 0 !== (current.flags & 128))\r\n          a: for (current = workInProgress.child; null !== current; ) {\r\n            if (13 === current.tag)\r\n              null !== current.memoizedState &&\r\n                scheduleSuspenseWorkOnFiber(\r\n                  current,\r\n                  renderLanes,\r\n                  workInProgress\r\n                );\r\n            else if (19 === current.tag)\r\n              scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\r\n            else if (null !== current.child) {\r\n              current.child.return = current;\r\n              current = current.child;\r\n              continue;\r\n            }\r\n            if (current === workInProgress) break a;\r\n            for (; null === current.sibling; ) {\r\n              if (null === current.return || current.return === workInProgress)\r\n                break a;\r\n              current = current.return;\r\n            }\r\n            current.sibling.return = current.return;\r\n            current = current.sibling;\r\n          }\r\n        nextProps &= SubtreeSuspenseContextMask;\r\n      }\r\n      push(suspenseStackCursor, nextProps, workInProgress);\r\n      switch (revealOrder) {\r\n        case \"forwards\":\r\n          renderLanes = workInProgress.child;\r\n          for (revealOrder = null; null !== renderLanes; )\r\n            (current = renderLanes.alternate),\r\n              null !== current &&\r\n                null === findFirstSuspended(current) &&\r\n                (revealOrder = renderLanes),\r\n              (renderLanes = renderLanes.sibling);\r\n          renderLanes = revealOrder;\r\n          null === renderLanes\r\n            ? ((revealOrder = workInProgress.child),\r\n              (workInProgress.child = null))\r\n            : ((revealOrder = renderLanes.sibling),\r\n              (renderLanes.sibling = null));\r\n          initSuspenseListRenderState(\r\n            workInProgress,\r\n            !1,\r\n            revealOrder,\r\n            renderLanes,\r\n            tailMode\r\n          );\r\n          break;\r\n        case \"backwards\":\r\n          renderLanes = null;\r\n          revealOrder = workInProgress.child;\r\n          for (workInProgress.child = null; null !== revealOrder; ) {\r\n            current = revealOrder.alternate;\r\n            if (null !== current && null === findFirstSuspended(current)) {\r\n              workInProgress.child = revealOrder;\r\n              break;\r\n            }\r\n            current = revealOrder.sibling;\r\n            revealOrder.sibling = renderLanes;\r\n            renderLanes = revealOrder;\r\n            revealOrder = current;\r\n          }\r\n          initSuspenseListRenderState(\r\n            workInProgress,\r\n            !0,\r\n            renderLanes,\r\n            null,\r\n            tailMode\r\n          );\r\n          break;\r\n        case \"together\":\r\n          initSuspenseListRenderState(workInProgress, !1, null, null, void 0);\r\n          break;\r\n        default:\r\n          workInProgress.memoizedState = null;\r\n      }\r\n      return workInProgress.child;\r\n    }\r\n    function bailoutOnAlreadyFinishedWork(\r\n      current,\r\n      workInProgress,\r\n      renderLanes\r\n    ) {\r\n      null !== current && (workInProgress.dependencies = current.dependencies);\r\n      profilerStartTime = -1;\r\n      workInProgressRootSkippedLanes |= workInProgress.lanes;\r\n      if (0 === (renderLanes & workInProgress.childLanes))\r\n        if (null !== current) {\r\n          if (\r\n            (propagateParentContextChanges(\r\n              current,\r\n              workInProgress,\r\n              renderLanes,\r\n              !1\r\n            ),\r\n            0 === (renderLanes & workInProgress.childLanes))\r\n          )\r\n            return null;\r\n        } else return null;\r\n      if (null !== current && workInProgress.child !== current.child)\r\n        throw Error(\"Resuming work not yet implemented.\");\r\n      if (null !== workInProgress.child) {\r\n        current = workInProgress.child;\r\n        renderLanes = createWorkInProgress(current, current.pendingProps);\r\n        workInProgress.child = renderLanes;\r\n        for (renderLanes.return = workInProgress; null !== current.sibling; )\r\n          (current = current.sibling),\r\n            (renderLanes = renderLanes.sibling =\r\n              createWorkInProgress(current, current.pendingProps)),\r\n            (renderLanes.return = workInProgress);\r\n        renderLanes.sibling = null;\r\n      }\r\n      return workInProgress.child;\r\n    }\r\n    function checkScheduledUpdateOrContext(current, renderLanes) {\r\n      if (0 !== (current.lanes & renderLanes)) return !0;\r\n      current = current.dependencies;\r\n      return null !== current && checkIfContextChanged(current) ? !0 : !1;\r\n    }\r\n    function attemptEarlyBailoutIfNoScheduledUpdate(\r\n      current,\r\n      workInProgress,\r\n      renderLanes\r\n    ) {\r\n      switch (workInProgress.tag) {\r\n        case 3:\r\n          pushHostContainer(\r\n            workInProgress,\r\n            workInProgress.stateNode.containerInfo\r\n          );\r\n          pushProvider(\r\n            workInProgress,\r\n            CacheContext,\r\n            current.memoizedState.cache\r\n          );\r\n          resetHydrationState();\r\n          break;\r\n        case 27:\r\n        case 5:\r\n          pushHostContext(workInProgress);\r\n          break;\r\n        case 4:\r\n          pushHostContainer(\r\n            workInProgress,\r\n            workInProgress.stateNode.containerInfo\r\n          );\r\n          break;\r\n        case 10:\r\n          pushProvider(\r\n            workInProgress,\r\n            workInProgress.type,\r\n            workInProgress.memoizedProps.value\r\n          );\r\n          break;\r\n        case 12:\r\n          0 !== (renderLanes & workInProgress.childLanes) &&\r\n            (workInProgress.flags |= 4);\r\n          workInProgress.flags |= 2048;\r\n          var stateNode = workInProgress.stateNode;\r\n          stateNode.effectDuration = -0;\r\n          stateNode.passiveEffectDuration = -0;\r\n          break;\r\n        case 13:\r\n          stateNode = workInProgress.memoizedState;\r\n          if (null !== stateNode) {\r\n            if (null !== stateNode.dehydrated)\r\n              return (\r\n                pushPrimaryTreeSuspenseHandler(workInProgress),\r\n                (workInProgress.flags |= 128),\r\n                null\r\n              );\r\n            if (0 !== (renderLanes & workInProgress.child.childLanes))\r\n              return updateSuspenseComponent(\r\n                current,\r\n                workInProgress,\r\n                renderLanes\r\n              );\r\n            pushPrimaryTreeSuspenseHandler(workInProgress);\r\n            current = bailoutOnAlreadyFinishedWork(\r\n              current,\r\n              workInProgress,\r\n              renderLanes\r\n            );\r\n            return null !== current ? current.sibling : null;\r\n          }\r\n          pushPrimaryTreeSuspenseHandler(workInProgress);\r\n          break;\r\n        case 19:\r\n          var didSuspendBefore = 0 !== (current.flags & 128);\r\n          stateNode = 0 !== (renderLanes & workInProgress.childLanes);\r\n          stateNode ||\r\n            (propagateParentContextChanges(\r\n              current,\r\n              workInProgress,\r\n              renderLanes,\r\n              !1\r\n            ),\r\n            (stateNode = 0 !== (renderLanes & workInProgress.childLanes)));\r\n          if (didSuspendBefore) {\r\n            if (stateNode)\r\n              return updateSuspenseListComponent(\r\n                current,\r\n                workInProgress,\r\n                renderLanes\r\n              );\r\n            workInProgress.flags |= 128;\r\n          }\r\n          didSuspendBefore = workInProgress.memoizedState;\r\n          null !== didSuspendBefore &&\r\n            ((didSuspendBefore.rendering = null),\r\n            (didSuspendBefore.tail = null),\r\n            (didSuspendBefore.lastEffect = null));\r\n          push(\r\n            suspenseStackCursor,\r\n            suspenseStackCursor.current,\r\n            workInProgress\r\n          );\r\n          if (stateNode) break;\r\n          else return null;\r\n        case 22:\r\n        case 23:\r\n          return (\r\n            (workInProgress.lanes = 0),\r\n            updateOffscreenComponent(current, workInProgress, renderLanes)\r\n          );\r\n        case 24:\r\n          pushProvider(\r\n            workInProgress,\r\n            CacheContext,\r\n            current.memoizedState.cache\r\n          );\r\n      }\r\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n    }\r\n    function beginWork(current, workInProgress, renderLanes) {\r\n      if (workInProgress._debugNeedsRemount && null !== current) {\r\n        renderLanes = createFiberFromTypeAndProps(\r\n          workInProgress.type,\r\n          workInProgress.key,\r\n          workInProgress.pendingProps,\r\n          workInProgress._debugOwner || null,\r\n          workInProgress.mode,\r\n          workInProgress.lanes\r\n        );\r\n        renderLanes._debugStack = workInProgress._debugStack;\r\n        renderLanes._debugTask = workInProgress._debugTask;\r\n        var returnFiber = workInProgress.return;\r\n        if (null === returnFiber) throw Error(\"Cannot swap the root fiber.\");\r\n        current.alternate = null;\r\n        workInProgress.alternate = null;\r\n        renderLanes.index = workInProgress.index;\r\n        renderLanes.sibling = workInProgress.sibling;\r\n        renderLanes.return = workInProgress.return;\r\n        renderLanes.ref = workInProgress.ref;\r\n        renderLanes._debugInfo = workInProgress._debugInfo;\r\n        if (workInProgress === returnFiber.child)\r\n          returnFiber.child = renderLanes;\r\n        else {\r\n          var prevSibling = returnFiber.child;\r\n          if (null === prevSibling)\r\n            throw Error(\"Expected parent to have a child.\");\r\n          for (; prevSibling.sibling !== workInProgress; )\r\n            if (((prevSibling = prevSibling.sibling), null === prevSibling))\r\n              throw Error(\"Expected to find the previous sibling.\");\r\n          prevSibling.sibling = renderLanes;\r\n        }\r\n        workInProgress = returnFiber.deletions;\r\n        null === workInProgress\r\n          ? ((returnFiber.deletions = [current]), (returnFiber.flags |= 16))\r\n          : workInProgress.push(current);\r\n        renderLanes.flags |= 2;\r\n        return renderLanes;\r\n      }\r\n      if (null !== current)\r\n        if (\r\n          current.memoizedProps !== workInProgress.pendingProps ||\r\n          workInProgress.type !== current.type\r\n        )\r\n          didReceiveUpdate = !0;\r\n        else {\r\n          if (\r\n            !checkScheduledUpdateOrContext(current, renderLanes) &&\r\n            0 === (workInProgress.flags & 128)\r\n          )\r\n            return (\r\n              (didReceiveUpdate = !1),\r\n              attemptEarlyBailoutIfNoScheduledUpdate(\r\n                current,\r\n                workInProgress,\r\n                renderLanes\r\n              )\r\n            );\r\n          didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;\r\n        }\r\n      else {\r\n        didReceiveUpdate = !1;\r\n        if ((returnFiber = isHydrating))\r\n          warnIfNotHydrating(),\r\n            (returnFiber = 0 !== (workInProgress.flags & 1048576));\r\n        returnFiber &&\r\n          ((returnFiber = workInProgress.index),\r\n          warnIfNotHydrating(),\r\n          pushTreeId(workInProgress, treeForkCount, returnFiber));\r\n      }\r\n      workInProgress.lanes = 0;\r\n      switch (workInProgress.tag) {\r\n        case 16:\r\n          a: if (\r\n            ((returnFiber = workInProgress.pendingProps),\r\n            (current = callLazyInitInDEV(workInProgress.elementType)),\r\n            (workInProgress.type = current),\r\n            \"function\" === typeof current)\r\n          )\r\n            shouldConstruct(current)\r\n              ? ((returnFiber = resolveClassComponentProps(\r\n                  current,\r\n                  returnFiber\r\n                )),\r\n                (workInProgress.tag = 1),\r\n                (workInProgress.type = current =\r\n                  resolveFunctionForHotReloading(current)),\r\n                (workInProgress = updateClassComponent(\r\n                  null,\r\n                  workInProgress,\r\n                  current,\r\n                  returnFiber,\r\n                  renderLanes\r\n                )))\r\n              : ((workInProgress.tag = 0),\r\n                validateFunctionComponentInDev(workInProgress, current),\r\n                (workInProgress.type = current =\r\n                  resolveFunctionForHotReloading(current)),\r\n                (workInProgress = updateFunctionComponent(\r\n                  null,\r\n                  workInProgress,\r\n                  current,\r\n                  returnFiber,\r\n                  renderLanes\r\n                )));\r\n          else {\r\n            if (void 0 !== current && null !== current)\r\n              if (\r\n                ((prevSibling = current.$$typeof),\r\n                prevSibling === REACT_FORWARD_REF_TYPE)\r\n              ) {\r\n                workInProgress.tag = 11;\r\n                workInProgress.type = current =\r\n                  resolveForwardRefForHotReloading(current);\r\n                workInProgress = updateForwardRef(\r\n                  null,\r\n                  workInProgress,\r\n                  current,\r\n                  returnFiber,\r\n                  renderLanes\r\n                );\r\n                break a;\r\n              } else if (prevSibling === REACT_MEMO_TYPE) {\r\n                workInProgress.tag = 14;\r\n                workInProgress = updateMemoComponent(\r\n                  null,\r\n                  workInProgress,\r\n                  current,\r\n                  returnFiber,\r\n                  renderLanes\r\n                );\r\n                break a;\r\n              }\r\n            workInProgress = \"\";\r\n            null !== current &&\r\n              \"object\" === typeof current &&\r\n              current.$$typeof === REACT_LAZY_TYPE &&\r\n              (workInProgress =\r\n                \" Did you wrap a component in React.lazy() more than once?\");\r\n            current = getComponentNameFromType(current) || current;\r\n            throw Error(\r\n              \"Element type is invalid. Received a promise that resolves to: \" +\r\n                current +\r\n                \". Lazy element type must resolve to a class or function.\" +\r\n                workInProgress\r\n            );\r\n          }\r\n          return workInProgress;\r\n        case 0:\r\n          return updateFunctionComponent(\r\n            current,\r\n            workInProgress,\r\n            workInProgress.type,\r\n            workInProgress.pendingProps,\r\n            renderLanes\r\n          );\r\n        case 1:\r\n          return (\r\n            (returnFiber = workInProgress.type),\r\n            (prevSibling = resolveClassComponentProps(\r\n              returnFiber,\r\n              workInProgress.pendingProps\r\n            )),\r\n            updateClassComponent(\r\n              current,\r\n              workInProgress,\r\n              returnFiber,\r\n              prevSibling,\r\n              renderLanes\r\n            )\r\n          );\r\n        case 3:\r\n          a: {\r\n            pushHostContainer(\r\n              workInProgress,\r\n              workInProgress.stateNode.containerInfo\r\n            );\r\n            if (null === current)\r\n              throw Error(\r\n                \"Should have a current fiber. This is a bug in React.\"\r\n              );\r\n            returnFiber = workInProgress.pendingProps;\r\n            var prevState = workInProgress.memoizedState;\r\n            prevSibling = prevState.element;\r\n            cloneUpdateQueue(current, workInProgress);\r\n            processUpdateQueue(workInProgress, returnFiber, null, renderLanes);\r\n            var nextState = workInProgress.memoizedState;\r\n            returnFiber = nextState.cache;\r\n            pushProvider(workInProgress, CacheContext, returnFiber);\r\n            returnFiber !== prevState.cache &&\r\n              propagateContextChanges(\r\n                workInProgress,\r\n                [CacheContext],\r\n                renderLanes,\r\n                !0\r\n              );\r\n            suspendIfUpdateReadFromEntangledAsyncAction();\r\n            returnFiber = nextState.element;\r\n            if (prevState.isDehydrated)\r\n              if (\r\n                ((prevState = {\r\n                  element: returnFiber,\r\n                  isDehydrated: !1,\r\n                  cache: nextState.cache\r\n                }),\r\n                (workInProgress.updateQueue.baseState = prevState),\r\n                (workInProgress.memoizedState = prevState),\r\n                workInProgress.flags & 256)\r\n              ) {\r\n                workInProgress = mountHostRootWithoutHydrating(\r\n                  current,\r\n                  workInProgress,\r\n                  returnFiber,\r\n                  renderLanes\r\n                );\r\n                break a;\r\n              } else if (returnFiber !== prevSibling) {\r\n                prevSibling = createCapturedValueAtFiber(\r\n                  Error(\r\n                    \"This root received an early update, before anything was able hydrate. Switched the entire root to client rendering.\"\r\n                  ),\r\n                  workInProgress\r\n                );\r\n                queueHydrationError(prevSibling);\r\n                workInProgress = mountHostRootWithoutHydrating(\r\n                  current,\r\n                  workInProgress,\r\n                  returnFiber,\r\n                  renderLanes\r\n                );\r\n                break a;\r\n              } else {\r\n                current = workInProgress.stateNode.containerInfo;\r\n                switch (current.nodeType) {\r\n                  case 9:\r\n                    current = current.body;\r\n                    break;\r\n                  default:\r\n                    current =\r\n                      \"HTML\" === current.nodeName\r\n                        ? current.ownerDocument.body\r\n                        : current;\r\n                }\r\n                nextHydratableInstance = getNextHydratable(current.firstChild);\r\n                hydrationParentFiber = workInProgress;\r\n                isHydrating = !0;\r\n                hydrationErrors = null;\r\n                didSuspendOrErrorDEV = !1;\r\n                hydrationDiffRootDEV = null;\r\n                rootOrSingletonContext = !0;\r\n                current = mountChildFibers(\r\n                  workInProgress,\r\n                  null,\r\n                  returnFiber,\r\n                  renderLanes\r\n                );\r\n                for (workInProgress.child = current; current; )\r\n                  (current.flags = (current.flags & -3) | 4096),\r\n                    (current = current.sibling);\r\n              }\r\n            else {\r\n              resetHydrationState();\r\n              if (returnFiber === prevSibling) {\r\n                workInProgress = bailoutOnAlreadyFinishedWork(\r\n                  current,\r\n                  workInProgress,\r\n                  renderLanes\r\n                );\r\n                break a;\r\n              }\r\n              reconcileChildren(\r\n                current,\r\n                workInProgress,\r\n                returnFiber,\r\n                renderLanes\r\n              );\r\n            }\r\n            workInProgress = workInProgress.child;\r\n          }\r\n          return workInProgress;\r\n        case 26:\r\n          return (\r\n            markRef(current, workInProgress),\r\n            null === current\r\n              ? (current = getResource(\r\n                  workInProgress.type,\r\n                  null,\r\n                  workInProgress.pendingProps,\r\n                  null\r\n                ))\r\n                ? (workInProgress.memoizedState = current)\r\n                : isHydrating ||\r\n                  ((current = workInProgress.type),\r\n                  (renderLanes = workInProgress.pendingProps),\r\n                  (returnFiber = requiredContext(\r\n                    rootInstanceStackCursor.current\r\n                  )),\r\n                  (returnFiber =\r\n                    getOwnerDocumentFromRootContainer(\r\n                      returnFiber\r\n                    ).createElement(current)),\r\n                  (returnFiber[internalInstanceKey] = workInProgress),\r\n                  (returnFiber[internalPropsKey] = renderLanes),\r\n                  setInitialProperties(returnFiber, current, renderLanes),\r\n                  markNodeAsHoistable(returnFiber),\r\n                  (workInProgress.stateNode = returnFiber))\r\n              : (workInProgress.memoizedState = getResource(\r\n                  workInProgress.type,\r\n                  current.memoizedProps,\r\n                  workInProgress.pendingProps,\r\n                  current.memoizedState\r\n                )),\r\n            null\r\n          );\r\n        case 27:\r\n          return (\r\n            pushHostContext(workInProgress),\r\n            null === current &&\r\n              isHydrating &&\r\n              ((returnFiber = requiredContext(rootInstanceStackCursor.current)),\r\n              (prevSibling = getHostContext()),\r\n              (returnFiber = workInProgress.stateNode =\r\n                resolveSingletonInstance(\r\n                  workInProgress.type,\r\n                  workInProgress.pendingProps,\r\n                  returnFiber,\r\n                  prevSibling,\r\n                  !1\r\n                )),\r\n              didSuspendOrErrorDEV ||\r\n                ((prevSibling = diffHydratedProperties(\r\n                  returnFiber,\r\n                  workInProgress.type,\r\n                  workInProgress.pendingProps,\r\n                  prevSibling\r\n                )),\r\n                null !== prevSibling &&\r\n                  (buildHydrationDiffNode(workInProgress, 0).serverProps =\r\n                    prevSibling)),\r\n              (hydrationParentFiber = workInProgress),\r\n              (rootOrSingletonContext = !0),\r\n              (prevSibling = nextHydratableInstance),\r\n              isSingletonScope(workInProgress.type)\r\n                ? ((previousHydratableOnEnteringScopedSingleton = prevSibling),\r\n                  (nextHydratableInstance = getNextHydratable(\r\n                    returnFiber.firstChild\r\n                  )))\r\n                : (nextHydratableInstance = prevSibling)),\r\n            reconcileChildren(\r\n              current,\r\n              workInProgress,\r\n              workInProgress.pendingProps.children,\r\n              renderLanes\r\n            ),\r\n            markRef(current, workInProgress),\r\n            null === current && (workInProgress.flags |= 4194304),\r\n            workInProgress.child\r\n          );\r\n        case 5:\r\n          return (\r\n            null === current &&\r\n              isHydrating &&\r\n              ((prevState = getHostContext()),\r\n              (returnFiber = validateDOMNesting(\r\n                workInProgress.type,\r\n                prevState.ancestorInfo\r\n              )),\r\n              (prevSibling = nextHydratableInstance),\r\n              (nextState = !prevSibling) ||\r\n                ((nextState = canHydrateInstance(\r\n                  prevSibling,\r\n                  workInProgress.type,\r\n                  workInProgress.pendingProps,\r\n                  rootOrSingletonContext\r\n                )),\r\n                null !== nextState\r\n                  ? ((workInProgress.stateNode = nextState),\r\n                    didSuspendOrErrorDEV ||\r\n                      ((prevState = diffHydratedProperties(\r\n                        nextState,\r\n                        workInProgress.type,\r\n                        workInProgress.pendingProps,\r\n                        prevState\r\n                      )),\r\n                      null !== prevState &&\r\n                        (buildHydrationDiffNode(workInProgress, 0).serverProps =\r\n                          prevState)),\r\n                    (hydrationParentFiber = workInProgress),\r\n                    (nextHydratableInstance = getNextHydratable(\r\n                      nextState.firstChild\r\n                    )),\r\n                    (rootOrSingletonContext = !1),\r\n                    (prevState = !0))\r\n                  : (prevState = !1),\r\n                (nextState = !prevState)),\r\n              nextState &&\r\n                (returnFiber &&\r\n                  warnNonHydratedInstance(workInProgress, prevSibling),\r\n                throwOnHydrationMismatch(workInProgress))),\r\n            pushHostContext(workInProgress),\r\n            (prevSibling = workInProgress.type),\r\n            (prevState = workInProgress.pendingProps),\r\n            (nextState = null !== current ? current.memoizedProps : null),\r\n            (returnFiber = prevState.children),\r\n            shouldSetTextContent(prevSibling, prevState)\r\n              ? (returnFiber = null)\r\n              : null !== nextState &&\r\n                shouldSetTextContent(prevSibling, nextState) &&\r\n                (workInProgress.flags |= 32),\r\n            null !== workInProgress.memoizedState &&\r\n              ((prevSibling = renderWithHooks(\r\n                current,\r\n                workInProgress,\r\n                TransitionAwareHostComponent,\r\n                null,\r\n                null,\r\n                renderLanes\r\n              )),\r\n              (HostTransitionContext._currentValue = prevSibling)),\r\n            markRef(current, workInProgress),\r\n            reconcileChildren(\r\n              current,\r\n              workInProgress,\r\n              returnFiber,\r\n              renderLanes\r\n            ),\r\n            workInProgress.child\r\n          );\r\n        case 6:\r\n          return (\r\n            null === current &&\r\n              isHydrating &&\r\n              ((current = workInProgress.pendingProps),\r\n              (renderLanes = getHostContext()),\r\n              (returnFiber = renderLanes.ancestorInfo.current),\r\n              (current =\r\n                null != returnFiber\r\n                  ? validateTextNesting(\r\n                      current,\r\n                      returnFiber.tag,\r\n                      renderLanes.ancestorInfo.implicitRootScope\r\n                    )\r\n                  : !0),\r\n              (renderLanes = nextHydratableInstance),\r\n              (returnFiber = !renderLanes) ||\r\n                ((returnFiber = canHydrateTextInstance(\r\n                  renderLanes,\r\n                  workInProgress.pendingProps,\r\n                  rootOrSingletonContext\r\n                )),\r\n                null !== returnFiber\r\n                  ? ((workInProgress.stateNode = returnFiber),\r\n                    (hydrationParentFiber = workInProgress),\r\n                    (nextHydratableInstance = null),\r\n                    (returnFiber = !0))\r\n                  : (returnFiber = !1),\r\n                (returnFiber = !returnFiber)),\r\n              returnFiber &&\r\n                (current &&\r\n                  warnNonHydratedInstance(workInProgress, renderLanes),\r\n                throwOnHydrationMismatch(workInProgress))),\r\n            null\r\n          );\r\n        case 13:\r\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\r\n        case 4:\r\n          return (\r\n            pushHostContainer(\r\n              workInProgress,\r\n              workInProgress.stateNode.containerInfo\r\n            ),\r\n            (returnFiber = workInProgress.pendingProps),\r\n            null === current\r\n              ? (workInProgress.child = reconcileChildFibers(\r\n                  workInProgress,\r\n                  null,\r\n                  returnFiber,\r\n                  renderLanes\r\n                ))\r\n              : reconcileChildren(\r\n                  current,\r\n                  workInProgress,\r\n                  returnFiber,\r\n                  renderLanes\r\n                ),\r\n            workInProgress.child\r\n          );\r\n        case 11:\r\n          return updateForwardRef(\r\n            current,\r\n            workInProgress,\r\n            workInProgress.type,\r\n            workInProgress.pendingProps,\r\n            renderLanes\r\n          );\r\n        case 7:\r\n          return (\r\n            reconcileChildren(\r\n              current,\r\n              workInProgress,\r\n              workInProgress.pendingProps,\r\n              renderLanes\r\n            ),\r\n            workInProgress.child\r\n          );\r\n        case 8:\r\n          return (\r\n            reconcileChildren(\r\n              current,\r\n              workInProgress,\r\n              workInProgress.pendingProps.children,\r\n              renderLanes\r\n            ),\r\n            workInProgress.child\r\n          );\r\n        case 12:\r\n          return (\r\n            (workInProgress.flags |= 4),\r\n            (workInProgress.flags |= 2048),\r\n            (returnFiber = workInProgress.stateNode),\r\n            (returnFiber.effectDuration = -0),\r\n            (returnFiber.passiveEffectDuration = -0),\r\n            reconcileChildren(\r\n              current,\r\n              workInProgress,\r\n              workInProgress.pendingProps.children,\r\n              renderLanes\r\n            ),\r\n            workInProgress.child\r\n          );\r\n        case 10:\r\n          return (\r\n            (returnFiber = workInProgress.type),\r\n            (prevSibling = workInProgress.pendingProps),\r\n            (prevState = prevSibling.value),\r\n            \"value\" in prevSibling ||\r\n              hasWarnedAboutUsingNoValuePropOnContextProvider ||\r\n              ((hasWarnedAboutUsingNoValuePropOnContextProvider = !0),\r\n              console.error(\r\n                \"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\"\r\n              )),\r\n            pushProvider(workInProgress, returnFiber, prevState),\r\n            reconcileChildren(\r\n              current,\r\n              workInProgress,\r\n              prevSibling.children,\r\n              renderLanes\r\n            ),\r\n            workInProgress.child\r\n          );\r\n        case 9:\r\n          return (\r\n            (prevSibling = workInProgress.type._context),\r\n            (returnFiber = workInProgress.pendingProps.children),\r\n            \"function\" !== typeof returnFiber &&\r\n              console.error(\r\n                \"A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.\"\r\n              ),\r\n            prepareToReadContext(workInProgress),\r\n            (prevSibling = readContext(prevSibling)),\r\n            markComponentRenderStarted(workInProgress),\r\n            (returnFiber = callComponentInDEV(\r\n              returnFiber,\r\n              prevSibling,\r\n              void 0\r\n            )),\r\n            markComponentRenderStopped(),\r\n            (workInProgress.flags |= 1),\r\n            reconcileChildren(\r\n              current,\r\n              workInProgress,\r\n              returnFiber,\r\n              renderLanes\r\n            ),\r\n            workInProgress.child\r\n          );\r\n        case 14:\r\n          return updateMemoComponent(\r\n            current,\r\n            workInProgress,\r\n            workInProgress.type,\r\n            workInProgress.pendingProps,\r\n            renderLanes\r\n          );\r\n        case 15:\r\n          return updateSimpleMemoComponent(\r\n            current,\r\n            workInProgress,\r\n            workInProgress.type,\r\n            workInProgress.pendingProps,\r\n            renderLanes\r\n          );\r\n        case 19:\r\n          return updateSuspenseListComponent(\r\n            current,\r\n            workInProgress,\r\n            renderLanes\r\n          );\r\n        case 31:\r\n          return (\r\n            (returnFiber = workInProgress.pendingProps),\r\n            (renderLanes = workInProgress.mode),\r\n            (returnFiber = {\r\n              mode: returnFiber.mode,\r\n              children: returnFiber.children\r\n            }),\r\n            null === current\r\n              ? ((current = mountWorkInProgressOffscreenFiber(\r\n                  returnFiber,\r\n                  renderLanes\r\n                )),\r\n                (current.ref = workInProgress.ref),\r\n                (workInProgress.child = current),\r\n                (current.return = workInProgress),\r\n                (workInProgress = current))\r\n              : ((current = createWorkInProgress(current.child, returnFiber)),\r\n                (current.ref = workInProgress.ref),\r\n                (workInProgress.child = current),\r\n                (current.return = workInProgress),\r\n                (workInProgress = current)),\r\n            workInProgress\r\n          );\r\n        case 22:\r\n          return updateOffscreenComponent(current, workInProgress, renderLanes);\r\n        case 24:\r\n          return (\r\n            prepareToReadContext(workInProgress),\r\n            (returnFiber = readContext(CacheContext)),\r\n            null === current\r\n              ? ((prevSibling = peekCacheFromPool()),\r\n                null === prevSibling &&\r\n                  ((prevSibling = workInProgressRoot),\r\n                  (prevState = createCache()),\r\n                  (prevSibling.pooledCache = prevState),\r\n                  retainCache(prevState),\r\n                  null !== prevState &&\r\n                    (prevSibling.pooledCacheLanes |= renderLanes),\r\n                  (prevSibling = prevState)),\r\n                (workInProgress.memoizedState = {\r\n                  parent: returnFiber,\r\n                  cache: prevSibling\r\n                }),\r\n                initializeUpdateQueue(workInProgress),\r\n                pushProvider(workInProgress, CacheContext, prevSibling))\r\n              : (0 !== (current.lanes & renderLanes) &&\r\n                  (cloneUpdateQueue(current, workInProgress),\r\n                  processUpdateQueue(workInProgress, null, null, renderLanes),\r\n                  suspendIfUpdateReadFromEntangledAsyncAction()),\r\n                (prevSibling = current.memoizedState),\r\n                (prevState = workInProgress.memoizedState),\r\n                prevSibling.parent !== returnFiber\r\n                  ? ((prevSibling = {\r\n                      parent: returnFiber,\r\n                      cache: returnFiber\r\n                    }),\r\n                    (workInProgress.memoizedState = prevSibling),\r\n                    0 === workInProgress.lanes &&\r\n                      (workInProgress.memoizedState =\r\n                        workInProgress.updateQueue.baseState =\r\n                          prevSibling),\r\n                    pushProvider(workInProgress, CacheContext, returnFiber))\r\n                  : ((returnFiber = prevState.cache),\r\n                    pushProvider(workInProgress, CacheContext, returnFiber),\r\n                    returnFiber !== prevSibling.cache &&\r\n                      propagateContextChanges(\r\n                        workInProgress,\r\n                        [CacheContext],\r\n                        renderLanes,\r\n                        !0\r\n                      ))),\r\n            reconcileChildren(\r\n              current,\r\n              workInProgress,\r\n              workInProgress.pendingProps.children,\r\n              renderLanes\r\n            ),\r\n            workInProgress.child\r\n          );\r\n        case 29:\r\n          throw workInProgress.pendingProps;\r\n      }\r\n      throw Error(\r\n        \"Unknown unit of work tag (\" +\r\n          workInProgress.tag +\r\n          \"). This error is likely caused by a bug in React. Please file an issue.\"\r\n      );\r\n    }\r\n    function markUpdate(workInProgress) {\r\n      workInProgress.flags |= 4;\r\n    }\r\n    function preloadResourceAndSuspendIfNeeded(workInProgress, resource) {\r\n      if (\r\n        \"stylesheet\" !== resource.type ||\r\n        (resource.state.loading & Inserted) !== NotLoaded\r\n      )\r\n        workInProgress.flags &= -16777217;\r\n      else if (\r\n        ((workInProgress.flags |= 16777216), !preloadResource(resource))\r\n      ) {\r\n        resource = suspenseHandlerStackCursor.current;\r\n        if (\r\n          null !== resource &&\r\n          ((workInProgressRootRenderLanes & 4194048) ===\r\n          workInProgressRootRenderLanes\r\n            ? null !== shellBoundary\r\n            : ((workInProgressRootRenderLanes & 62914560) !==\r\n                workInProgressRootRenderLanes &&\r\n                0 === (workInProgressRootRenderLanes & 536870912)) ||\r\n              resource !== shellBoundary)\r\n        )\r\n          throw (\r\n            ((suspendedThenable = noopSuspenseyCommitThenable),\r\n            SuspenseyCommitException)\r\n          );\r\n        workInProgress.flags |= 8192;\r\n      }\r\n    }\r\n    function scheduleRetryEffect(workInProgress, retryQueue) {\r\n      null !== retryQueue && (workInProgress.flags |= 4);\r\n      workInProgress.flags & 16384 &&\r\n        ((retryQueue =\r\n          22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),\r\n        (workInProgress.lanes |= retryQueue),\r\n        (workInProgressSuspendedRetryLanes |= retryQueue));\r\n    }\r\n    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\r\n      if (!isHydrating)\r\n        switch (renderState.tailMode) {\r\n          case \"hidden\":\r\n            hasRenderedATailFallback = renderState.tail;\r\n            for (var lastTailNode = null; null !== hasRenderedATailFallback; )\r\n              null !== hasRenderedATailFallback.alternate &&\r\n                (lastTailNode = hasRenderedATailFallback),\r\n                (hasRenderedATailFallback = hasRenderedATailFallback.sibling);\r\n            null === lastTailNode\r\n              ? (renderState.tail = null)\r\n              : (lastTailNode.sibling = null);\r\n            break;\r\n          case \"collapsed\":\r\n            lastTailNode = renderState.tail;\r\n            for (var _lastTailNode = null; null !== lastTailNode; )\r\n              null !== lastTailNode.alternate && (_lastTailNode = lastTailNode),\r\n                (lastTailNode = lastTailNode.sibling);\r\n            null === _lastTailNode\r\n              ? hasRenderedATailFallback || null === renderState.tail\r\n                ? (renderState.tail = null)\r\n                : (renderState.tail.sibling = null)\r\n              : (_lastTailNode.sibling = null);\r\n        }\r\n    }\r\n    function bubbleProperties(completedWork) {\r\n      var didBailout =\r\n          null !== completedWork.alternate &&\r\n          completedWork.alternate.child === completedWork.child,\r\n        newChildLanes = 0,\r\n        subtreeFlags = 0;\r\n      if (didBailout)\r\n        if ((completedWork.mode & ProfileMode) !== NoMode) {\r\n          for (\r\n            var _treeBaseDuration = completedWork.selfBaseDuration,\r\n              _child2 = completedWork.child;\r\n            null !== _child2;\r\n\r\n          )\r\n            (newChildLanes |= _child2.lanes | _child2.childLanes),\r\n              (subtreeFlags |= _child2.subtreeFlags & 65011712),\r\n              (subtreeFlags |= _child2.flags & 65011712),\r\n              (_treeBaseDuration += _child2.treeBaseDuration),\r\n              (_child2 = _child2.sibling);\r\n          completedWork.treeBaseDuration = _treeBaseDuration;\r\n        } else\r\n          for (\r\n            _treeBaseDuration = completedWork.child;\r\n            null !== _treeBaseDuration;\r\n\r\n          )\r\n            (newChildLanes |=\r\n              _treeBaseDuration.lanes | _treeBaseDuration.childLanes),\r\n              (subtreeFlags |= _treeBaseDuration.subtreeFlags & 65011712),\r\n              (subtreeFlags |= _treeBaseDuration.flags & 65011712),\r\n              (_treeBaseDuration.return = completedWork),\r\n              (_treeBaseDuration = _treeBaseDuration.sibling);\r\n      else if ((completedWork.mode & ProfileMode) !== NoMode) {\r\n        _treeBaseDuration = completedWork.actualDuration;\r\n        _child2 = completedWork.selfBaseDuration;\r\n        for (var child = completedWork.child; null !== child; )\r\n          (newChildLanes |= child.lanes | child.childLanes),\r\n            (subtreeFlags |= child.subtreeFlags),\r\n            (subtreeFlags |= child.flags),\r\n            (_treeBaseDuration += child.actualDuration),\r\n            (_child2 += child.treeBaseDuration),\r\n            (child = child.sibling);\r\n        completedWork.actualDuration = _treeBaseDuration;\r\n        completedWork.treeBaseDuration = _child2;\r\n      } else\r\n        for (\r\n          _treeBaseDuration = completedWork.child;\r\n          null !== _treeBaseDuration;\r\n\r\n        )\r\n          (newChildLanes |=\r\n            _treeBaseDuration.lanes | _treeBaseDuration.childLanes),\r\n            (subtreeFlags |= _treeBaseDuration.subtreeFlags),\r\n            (subtreeFlags |= _treeBaseDuration.flags),\r\n            (_treeBaseDuration.return = completedWork),\r\n            (_treeBaseDuration = _treeBaseDuration.sibling);\r\n      completedWork.subtreeFlags |= subtreeFlags;\r\n      completedWork.childLanes = newChildLanes;\r\n      return didBailout;\r\n    }\r\n    function completeWork(current, workInProgress, renderLanes) {\r\n      var newProps = workInProgress.pendingProps;\r\n      popTreeContext(workInProgress);\r\n      switch (workInProgress.tag) {\r\n        case 31:\r\n        case 16:\r\n        case 15:\r\n        case 0:\r\n        case 11:\r\n        case 7:\r\n        case 8:\r\n        case 12:\r\n        case 9:\r\n        case 14:\r\n          return bubbleProperties(workInProgress), null;\r\n        case 1:\r\n          return bubbleProperties(workInProgress), null;\r\n        case 3:\r\n          renderLanes = workInProgress.stateNode;\r\n          newProps = null;\r\n          null !== current && (newProps = current.memoizedState.cache);\r\n          workInProgress.memoizedState.cache !== newProps &&\r\n            (workInProgress.flags |= 2048);\r\n          popProvider(CacheContext, workInProgress);\r\n          popHostContainer(workInProgress);\r\n          renderLanes.pendingContext &&\r\n            ((renderLanes.context = renderLanes.pendingContext),\r\n            (renderLanes.pendingContext = null));\r\n          if (null === current || null === current.child)\r\n            popHydrationState(workInProgress)\r\n              ? (emitPendingHydrationWarnings(), markUpdate(workInProgress))\r\n              : null === current ||\r\n                (current.memoizedState.isDehydrated &&\r\n                  0 === (workInProgress.flags & 256)) ||\r\n                ((workInProgress.flags |= 1024),\r\n                upgradeHydrationErrorsToRecoverable());\r\n          bubbleProperties(workInProgress);\r\n          return null;\r\n        case 26:\r\n          return (\r\n            (renderLanes = workInProgress.memoizedState),\r\n            null === current\r\n              ? (markUpdate(workInProgress),\r\n                null !== renderLanes\r\n                  ? (bubbleProperties(workInProgress),\r\n                    preloadResourceAndSuspendIfNeeded(\r\n                      workInProgress,\r\n                      renderLanes\r\n                    ))\r\n                  : (bubbleProperties(workInProgress),\r\n                    (workInProgress.flags &= -16777217)))\r\n              : renderLanes\r\n                ? renderLanes !== current.memoizedState\r\n                  ? (markUpdate(workInProgress),\r\n                    bubbleProperties(workInProgress),\r\n                    preloadResourceAndSuspendIfNeeded(\r\n                      workInProgress,\r\n                      renderLanes\r\n                    ))\r\n                  : (bubbleProperties(workInProgress),\r\n                    (workInProgress.flags &= -16777217))\r\n                : (current.memoizedProps !== newProps &&\r\n                    markUpdate(workInProgress),\r\n                  bubbleProperties(workInProgress),\r\n                  (workInProgress.flags &= -16777217)),\r\n            null\r\n          );\r\n        case 27:\r\n          popHostContext(workInProgress);\r\n          renderLanes = requiredContext(rootInstanceStackCursor.current);\r\n          var _type = workInProgress.type;\r\n          if (null !== current && null != workInProgress.stateNode)\r\n            current.memoizedProps !== newProps && markUpdate(workInProgress);\r\n          else {\r\n            if (!newProps) {\r\n              if (null === workInProgress.stateNode)\r\n                throw Error(\r\n                  \"We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.\"\r\n                );\r\n              bubbleProperties(workInProgress);\r\n              return null;\r\n            }\r\n            current = getHostContext();\r\n            popHydrationState(workInProgress)\r\n              ? prepareToHydrateHostInstance(workInProgress, current)\r\n              : ((current = resolveSingletonInstance(\r\n                  _type,\r\n                  newProps,\r\n                  renderLanes,\r\n                  current,\r\n                  !0\r\n                )),\r\n                (workInProgress.stateNode = current),\r\n                markUpdate(workInProgress));\r\n          }\r\n          bubbleProperties(workInProgress);\r\n          return null;\r\n        case 5:\r\n          popHostContext(workInProgress);\r\n          renderLanes = workInProgress.type;\r\n          if (null !== current && null != workInProgress.stateNode)\r\n            current.memoizedProps !== newProps && markUpdate(workInProgress);\r\n          else {\r\n            if (!newProps) {\r\n              if (null === workInProgress.stateNode)\r\n                throw Error(\r\n                  \"We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.\"\r\n                );\r\n              bubbleProperties(workInProgress);\r\n              return null;\r\n            }\r\n            _type = getHostContext();\r\n            if (popHydrationState(workInProgress))\r\n              prepareToHydrateHostInstance(workInProgress, _type);\r\n            else {\r\n              current = requiredContext(rootInstanceStackCursor.current);\r\n              validateDOMNesting(renderLanes, _type.ancestorInfo);\r\n              _type = _type.context;\r\n              current = getOwnerDocumentFromRootContainer(current);\r\n              switch (_type) {\r\n                case HostContextNamespaceSvg:\r\n                  current = current.createElementNS(SVG_NAMESPACE, renderLanes);\r\n                  break;\r\n                case HostContextNamespaceMath:\r\n                  current = current.createElementNS(\r\n                    MATH_NAMESPACE,\r\n                    renderLanes\r\n                  );\r\n                  break;\r\n                default:\r\n                  switch (renderLanes) {\r\n                    case \"svg\":\r\n                      current = current.createElementNS(\r\n                        SVG_NAMESPACE,\r\n                        renderLanes\r\n                      );\r\n                      break;\r\n                    case \"math\":\r\n                      current = current.createElementNS(\r\n                        MATH_NAMESPACE,\r\n                        renderLanes\r\n                      );\r\n                      break;\r\n                    case \"script\":\r\n                      current = current.createElement(\"div\");\r\n                      current.innerHTML = \"<script>\\x3c/script>\";\r\n                      current = current.removeChild(current.firstChild);\r\n                      break;\r\n                    case \"select\":\r\n                      current =\r\n                        \"string\" === typeof newProps.is\r\n                          ? current.createElement(\"select\", { is: newProps.is })\r\n                          : current.createElement(\"select\");\r\n                      newProps.multiple\r\n                        ? (current.multiple = !0)\r\n                        : newProps.size && (current.size = newProps.size);\r\n                      break;\r\n                    default:\r\n                      (current =\r\n                        \"string\" === typeof newProps.is\r\n                          ? current.createElement(renderLanes, {\r\n                              is: newProps.is\r\n                            })\r\n                          : current.createElement(renderLanes)),\r\n                        -1 === renderLanes.indexOf(\"-\") &&\r\n                          (renderLanes !== renderLanes.toLowerCase() &&\r\n                            console.error(\r\n                              \"<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.\",\r\n                              renderLanes\r\n                            ),\r\n                          \"[object HTMLUnknownElement]\" !==\r\n                            Object.prototype.toString.call(current) ||\r\n                            hasOwnProperty.call(\r\n                              warnedUnknownTags,\r\n                              renderLanes\r\n                            ) ||\r\n                            ((warnedUnknownTags[renderLanes] = !0),\r\n                            console.error(\r\n                              \"The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.\",\r\n                              renderLanes\r\n                            )));\r\n                  }\r\n              }\r\n              current[internalInstanceKey] = workInProgress;\r\n              current[internalPropsKey] = newProps;\r\n              a: for (_type = workInProgress.child; null !== _type; ) {\r\n                if (5 === _type.tag || 6 === _type.tag)\r\n                  current.appendChild(_type.stateNode);\r\n                else if (\r\n                  4 !== _type.tag &&\r\n                  27 !== _type.tag &&\r\n                  null !== _type.child\r\n                ) {\r\n                  _type.child.return = _type;\r\n                  _type = _type.child;\r\n                  continue;\r\n                }\r\n                if (_type === workInProgress) break a;\r\n                for (; null === _type.sibling; ) {\r\n                  if (null === _type.return || _type.return === workInProgress)\r\n                    break a;\r\n                  _type = _type.return;\r\n                }\r\n                _type.sibling.return = _type.return;\r\n                _type = _type.sibling;\r\n              }\r\n              workInProgress.stateNode = current;\r\n              a: switch (\r\n                (setInitialProperties(current, renderLanes, newProps),\r\n                renderLanes)\r\n              ) {\r\n                case \"button\":\r\n                case \"input\":\r\n                case \"select\":\r\n                case \"textarea\":\r\n                  current = !!newProps.autoFocus;\r\n                  break a;\r\n                case \"img\":\r\n                  current = !0;\r\n                  break a;\r\n                default:\r\n                  current = !1;\r\n              }\r\n              current && markUpdate(workInProgress);\r\n            }\r\n          }\r\n          bubbleProperties(workInProgress);\r\n          workInProgress.flags &= -16777217;\r\n          return null;\r\n        case 6:\r\n          if (current && null != workInProgress.stateNode)\r\n            current.memoizedProps !== newProps && markUpdate(workInProgress);\r\n          else {\r\n            if (\r\n              \"string\" !== typeof newProps &&\r\n              null === workInProgress.stateNode\r\n            )\r\n              throw Error(\r\n                \"We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.\"\r\n              );\r\n            current = requiredContext(rootInstanceStackCursor.current);\r\n            renderLanes = getHostContext();\r\n            if (popHydrationState(workInProgress)) {\r\n              current = workInProgress.stateNode;\r\n              renderLanes = workInProgress.memoizedProps;\r\n              _type = !didSuspendOrErrorDEV;\r\n              newProps = null;\r\n              var returnFiber = hydrationParentFiber;\r\n              if (null !== returnFiber)\r\n                switch (returnFiber.tag) {\r\n                  case 3:\r\n                    _type &&\r\n                      ((_type = diffHydratedTextForDevWarnings(\r\n                        current,\r\n                        renderLanes,\r\n                        newProps\r\n                      )),\r\n                      null !== _type &&\r\n                        (buildHydrationDiffNode(workInProgress, 0).serverProps =\r\n                          _type));\r\n                    break;\r\n                  case 27:\r\n                  case 5:\r\n                    (newProps = returnFiber.memoizedProps),\r\n                      _type &&\r\n                        ((_type = diffHydratedTextForDevWarnings(\r\n                          current,\r\n                          renderLanes,\r\n                          newProps\r\n                        )),\r\n                        null !== _type &&\r\n                          (buildHydrationDiffNode(\r\n                            workInProgress,\r\n                            0\r\n                          ).serverProps = _type));\r\n                }\r\n              current[internalInstanceKey] = workInProgress;\r\n              current =\r\n                current.nodeValue === renderLanes ||\r\n                (null !== newProps &&\r\n                  !0 === newProps.suppressHydrationWarning) ||\r\n                checkForUnmatchedText(current.nodeValue, renderLanes)\r\n                  ? !0\r\n                  : !1;\r\n              current || throwOnHydrationMismatch(workInProgress);\r\n            } else\r\n              (_type = renderLanes.ancestorInfo.current),\r\n                null != _type &&\r\n                  validateTextNesting(\r\n                    newProps,\r\n                    _type.tag,\r\n                    renderLanes.ancestorInfo.implicitRootScope\r\n                  ),\r\n                (current =\r\n                  getOwnerDocumentFromRootContainer(current).createTextNode(\r\n                    newProps\r\n                  )),\r\n                (current[internalInstanceKey] = workInProgress),\r\n                (workInProgress.stateNode = current);\r\n          }\r\n          bubbleProperties(workInProgress);\r\n          return null;\r\n        case 13:\r\n          newProps = workInProgress.memoizedState;\r\n          if (\r\n            null === current ||\r\n            (null !== current.memoizedState &&\r\n              null !== current.memoizedState.dehydrated)\r\n          ) {\r\n            _type = popHydrationState(workInProgress);\r\n            if (null !== newProps && null !== newProps.dehydrated) {\r\n              if (null === current) {\r\n                if (!_type)\r\n                  throw Error(\r\n                    \"A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.\"\r\n                  );\r\n                _type = workInProgress.memoizedState;\r\n                _type = null !== _type ? _type.dehydrated : null;\r\n                if (!_type)\r\n                  throw Error(\r\n                    \"Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.\"\r\n                  );\r\n                _type[internalInstanceKey] = workInProgress;\r\n                bubbleProperties(workInProgress);\r\n                (workInProgress.mode & ProfileMode) !== NoMode &&\r\n                  null !== newProps &&\r\n                  ((_type = workInProgress.child),\r\n                  null !== _type &&\r\n                    (workInProgress.treeBaseDuration -=\r\n                      _type.treeBaseDuration));\r\n              } else\r\n                emitPendingHydrationWarnings(),\r\n                  resetHydrationState(),\r\n                  0 === (workInProgress.flags & 128) &&\r\n                    (workInProgress.memoizedState = null),\r\n                  (workInProgress.flags |= 4),\r\n                  bubbleProperties(workInProgress),\r\n                  (workInProgress.mode & ProfileMode) !== NoMode &&\r\n                    null !== newProps &&\r\n                    ((_type = workInProgress.child),\r\n                    null !== _type &&\r\n                      (workInProgress.treeBaseDuration -=\r\n                        _type.treeBaseDuration));\r\n              _type = !1;\r\n            } else\r\n              (_type = upgradeHydrationErrorsToRecoverable()),\r\n                null !== current &&\r\n                  null !== current.memoizedState &&\r\n                  (current.memoizedState.hydrationErrors = _type),\r\n                (_type = !0);\r\n            if (!_type) {\r\n              if (workInProgress.flags & 256)\r\n                return popSuspenseHandler(workInProgress), workInProgress;\r\n              popSuspenseHandler(workInProgress);\r\n              return null;\r\n            }\r\n          }\r\n          popSuspenseHandler(workInProgress);\r\n          if (0 !== (workInProgress.flags & 128))\r\n            return (\r\n              (workInProgress.lanes = renderLanes),\r\n              (workInProgress.mode & ProfileMode) !== NoMode &&\r\n                transferActualDuration(workInProgress),\r\n              workInProgress\r\n            );\r\n          renderLanes = null !== newProps;\r\n          current = null !== current && null !== current.memoizedState;\r\n          renderLanes &&\r\n            ((newProps = workInProgress.child),\r\n            (_type = null),\r\n            null !== newProps.alternate &&\r\n              null !== newProps.alternate.memoizedState &&\r\n              null !== newProps.alternate.memoizedState.cachePool &&\r\n              (_type = newProps.alternate.memoizedState.cachePool.pool),\r\n            (returnFiber = null),\r\n            null !== newProps.memoizedState &&\r\n              null !== newProps.memoizedState.cachePool &&\r\n              (returnFiber = newProps.memoizedState.cachePool.pool),\r\n            returnFiber !== _type && (newProps.flags |= 2048));\r\n          renderLanes !== current &&\r\n            renderLanes &&\r\n            (workInProgress.child.flags |= 8192);\r\n          scheduleRetryEffect(workInProgress, workInProgress.updateQueue);\r\n          bubbleProperties(workInProgress);\r\n          (workInProgress.mode & ProfileMode) !== NoMode &&\r\n            renderLanes &&\r\n            ((current = workInProgress.child),\r\n            null !== current &&\r\n              (workInProgress.treeBaseDuration -= current.treeBaseDuration));\r\n          return null;\r\n        case 4:\r\n          return (\r\n            popHostContainer(workInProgress),\r\n            null === current &&\r\n              listenToAllSupportedEvents(\r\n                workInProgress.stateNode.containerInfo\r\n              ),\r\n            bubbleProperties(workInProgress),\r\n            null\r\n          );\r\n        case 10:\r\n          return (\r\n            popProvider(workInProgress.type, workInProgress),\r\n            bubbleProperties(workInProgress),\r\n            null\r\n          );\r\n        case 19:\r\n          pop(suspenseStackCursor, workInProgress);\r\n          _type = workInProgress.memoizedState;\r\n          if (null === _type) return bubbleProperties(workInProgress), null;\r\n          newProps = 0 !== (workInProgress.flags & 128);\r\n          returnFiber = _type.rendering;\r\n          if (null === returnFiber)\r\n            if (newProps) cutOffTailIfNeeded(_type, !1);\r\n            else {\r\n              if (\r\n                workInProgressRootExitStatus !== RootInProgress ||\r\n                (null !== current && 0 !== (current.flags & 128))\r\n              )\r\n                for (current = workInProgress.child; null !== current; ) {\r\n                  returnFiber = findFirstSuspended(current);\r\n                  if (null !== returnFiber) {\r\n                    workInProgress.flags |= 128;\r\n                    cutOffTailIfNeeded(_type, !1);\r\n                    current = returnFiber.updateQueue;\r\n                    workInProgress.updateQueue = current;\r\n                    scheduleRetryEffect(workInProgress, current);\r\n                    workInProgress.subtreeFlags = 0;\r\n                    current = renderLanes;\r\n                    for (\r\n                      renderLanes = workInProgress.child;\r\n                      null !== renderLanes;\r\n\r\n                    )\r\n                      resetWorkInProgress(renderLanes, current),\r\n                        (renderLanes = renderLanes.sibling);\r\n                    push(\r\n                      suspenseStackCursor,\r\n                      (suspenseStackCursor.current &\r\n                        SubtreeSuspenseContextMask) |\r\n                        ForceSuspenseFallback,\r\n                      workInProgress\r\n                    );\r\n                    return workInProgress.child;\r\n                  }\r\n                  current = current.sibling;\r\n                }\r\n              null !== _type.tail &&\r\n                now$1() > workInProgressRootRenderTargetTime &&\r\n                ((workInProgress.flags |= 128),\r\n                (newProps = !0),\r\n                cutOffTailIfNeeded(_type, !1),\r\n                (workInProgress.lanes = 4194304));\r\n            }\r\n          else {\r\n            if (!newProps)\r\n              if (\r\n                ((current = findFirstSuspended(returnFiber)), null !== current)\r\n              ) {\r\n                if (\r\n                  ((workInProgress.flags |= 128),\r\n                  (newProps = !0),\r\n                  (current = current.updateQueue),\r\n                  (workInProgress.updateQueue = current),\r\n                  scheduleRetryEffect(workInProgress, current),\r\n                  cutOffTailIfNeeded(_type, !0),\r\n                  null === _type.tail &&\r\n                    \"hidden\" === _type.tailMode &&\r\n                    !returnFiber.alternate &&\r\n                    !isHydrating)\r\n                )\r\n                  return bubbleProperties(workInProgress), null;\r\n              } else\r\n                2 * now$1() - _type.renderingStartTime >\r\n                  workInProgressRootRenderTargetTime &&\r\n                  536870912 !== renderLanes &&\r\n                  ((workInProgress.flags |= 128),\r\n                  (newProps = !0),\r\n                  cutOffTailIfNeeded(_type, !1),\r\n                  (workInProgress.lanes = 4194304));\r\n            _type.isBackwards\r\n              ? ((returnFiber.sibling = workInProgress.child),\r\n                (workInProgress.child = returnFiber))\r\n              : ((current = _type.last),\r\n                null !== current\r\n                  ? (current.sibling = returnFiber)\r\n                  : (workInProgress.child = returnFiber),\r\n                (_type.last = returnFiber));\r\n          }\r\n          if (null !== _type.tail)\r\n            return (\r\n              (current = _type.tail),\r\n              (_type.rendering = current),\r\n              (_type.tail = current.sibling),\r\n              (_type.renderingStartTime = now$1()),\r\n              (current.sibling = null),\r\n              (renderLanes = suspenseStackCursor.current),\r\n              (renderLanes = newProps\r\n                ? (renderLanes & SubtreeSuspenseContextMask) |\r\n                  ForceSuspenseFallback\r\n                : renderLanes & SubtreeSuspenseContextMask),\r\n              push(suspenseStackCursor, renderLanes, workInProgress),\r\n              current\r\n            );\r\n          bubbleProperties(workInProgress);\r\n          return null;\r\n        case 22:\r\n        case 23:\r\n          return (\r\n            popSuspenseHandler(workInProgress),\r\n            popHiddenContext(workInProgress),\r\n            (newProps = null !== workInProgress.memoizedState),\r\n            null !== current\r\n              ? (null !== current.memoizedState) !== newProps &&\r\n                (workInProgress.flags |= 8192)\r\n              : newProps && (workInProgress.flags |= 8192),\r\n            newProps\r\n              ? 0 !== (renderLanes & 536870912) &&\r\n                0 === (workInProgress.flags & 128) &&\r\n                (bubbleProperties(workInProgress),\r\n                workInProgress.subtreeFlags & 6 &&\r\n                  (workInProgress.flags |= 8192))\r\n              : bubbleProperties(workInProgress),\r\n            (renderLanes = workInProgress.updateQueue),\r\n            null !== renderLanes &&\r\n              scheduleRetryEffect(workInProgress, renderLanes.retryQueue),\r\n            (renderLanes = null),\r\n            null !== current &&\r\n              null !== current.memoizedState &&\r\n              null !== current.memoizedState.cachePool &&\r\n              (renderLanes = current.memoizedState.cachePool.pool),\r\n            (newProps = null),\r\n            null !== workInProgress.memoizedState &&\r\n              null !== workInProgress.memoizedState.cachePool &&\r\n              (newProps = workInProgress.memoizedState.cachePool.pool),\r\n            newProps !== renderLanes && (workInProgress.flags |= 2048),\r\n            null !== current && pop(resumedCache, workInProgress),\r\n            null\r\n          );\r\n        case 24:\r\n          return (\r\n            (renderLanes = null),\r\n            null !== current && (renderLanes = current.memoizedState.cache),\r\n            workInProgress.memoizedState.cache !== renderLanes &&\r\n              (workInProgress.flags |= 2048),\r\n            popProvider(CacheContext, workInProgress),\r\n            bubbleProperties(workInProgress),\r\n            null\r\n          );\r\n        case 25:\r\n          return null;\r\n        case 30:\r\n          return null;\r\n      }\r\n      throw Error(\r\n        \"Unknown unit of work tag (\" +\r\n          workInProgress.tag +\r\n          \"). This error is likely caused by a bug in React. Please file an issue.\"\r\n      );\r\n    }\r\n    function unwindWork(current, workInProgress) {\r\n      popTreeContext(workInProgress);\r\n      switch (workInProgress.tag) {\r\n        case 1:\r\n          return (\r\n            (current = workInProgress.flags),\r\n            current & 65536\r\n              ? ((workInProgress.flags = (current & -65537) | 128),\r\n                (workInProgress.mode & ProfileMode) !== NoMode &&\r\n                  transferActualDuration(workInProgress),\r\n                workInProgress)\r\n              : null\r\n          );\r\n        case 3:\r\n          return (\r\n            popProvider(CacheContext, workInProgress),\r\n            popHostContainer(workInProgress),\r\n            (current = workInProgress.flags),\r\n            0 !== (current & 65536) && 0 === (current & 128)\r\n              ? ((workInProgress.flags = (current & -65537) | 128),\r\n                workInProgress)\r\n              : null\r\n          );\r\n        case 26:\r\n        case 27:\r\n        case 5:\r\n          return popHostContext(workInProgress), null;\r\n        case 13:\r\n          popSuspenseHandler(workInProgress);\r\n          current = workInProgress.memoizedState;\r\n          if (null !== current && null !== current.dehydrated) {\r\n            if (null === workInProgress.alternate)\r\n              throw Error(\r\n                \"Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.\"\r\n              );\r\n            resetHydrationState();\r\n          }\r\n          current = workInProgress.flags;\r\n          return current & 65536\r\n            ? ((workInProgress.flags = (current & -65537) | 128),\r\n              (workInProgress.mode & ProfileMode) !== NoMode &&\r\n                transferActualDuration(workInProgress),\r\n              workInProgress)\r\n            : null;\r\n        case 19:\r\n          return pop(suspenseStackCursor, workInProgress), null;\r\n        case 4:\r\n          return popHostContainer(workInProgress), null;\r\n        case 10:\r\n          return popProvider(workInProgress.type, workInProgress), null;\r\n        case 22:\r\n        case 23:\r\n          return (\r\n            popSuspenseHandler(workInProgress),\r\n            popHiddenContext(workInProgress),\r\n            null !== current && pop(resumedCache, workInProgress),\r\n            (current = workInProgress.flags),\r\n            current & 65536\r\n              ? ((workInProgress.flags = (current & -65537) | 128),\r\n                (workInProgress.mode & ProfileMode) !== NoMode &&\r\n                  transferActualDuration(workInProgress),\r\n                workInProgress)\r\n              : null\r\n          );\r\n        case 24:\r\n          return popProvider(CacheContext, workInProgress), null;\r\n        case 25:\r\n          return null;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n    function unwindInterruptedWork(current, interruptedWork) {\r\n      popTreeContext(interruptedWork);\r\n      switch (interruptedWork.tag) {\r\n        case 3:\r\n          popProvider(CacheContext, interruptedWork);\r\n          popHostContainer(interruptedWork);\r\n          break;\r\n        case 26:\r\n        case 27:\r\n        case 5:\r\n          popHostContext(interruptedWork);\r\n          break;\r\n        case 4:\r\n          popHostContainer(interruptedWork);\r\n          break;\r\n        case 13:\r\n          popSuspenseHandler(interruptedWork);\r\n          break;\r\n        case 19:\r\n          pop(suspenseStackCursor, interruptedWork);\r\n          break;\r\n        case 10:\r\n          popProvider(interruptedWork.type, interruptedWork);\r\n          break;\r\n        case 22:\r\n        case 23:\r\n          popSuspenseHandler(interruptedWork);\r\n          popHiddenContext(interruptedWork);\r\n          null !== current && pop(resumedCache, interruptedWork);\r\n          break;\r\n        case 24:\r\n          popProvider(CacheContext, interruptedWork);\r\n      }\r\n    }\r\n    function shouldProfile(current) {\r\n      return (current.mode & ProfileMode) !== NoMode;\r\n    }\r\n    function commitHookLayoutEffects(finishedWork, hookFlags) {\r\n      shouldProfile(finishedWork)\r\n        ? (startEffectTimer(),\r\n          commitHookEffectListMount(hookFlags, finishedWork),\r\n          recordEffectDuration())\r\n        : commitHookEffectListMount(hookFlags, finishedWork);\r\n    }\r\n    function commitHookLayoutUnmountEffects(\r\n      finishedWork,\r\n      nearestMountedAncestor,\r\n      hookFlags\r\n    ) {\r\n      shouldProfile(finishedWork)\r\n        ? (startEffectTimer(),\r\n          commitHookEffectListUnmount(\r\n            hookFlags,\r\n            finishedWork,\r\n            nearestMountedAncestor\r\n          ),\r\n          recordEffectDuration())\r\n        : commitHookEffectListUnmount(\r\n            hookFlags,\r\n            finishedWork,\r\n            nearestMountedAncestor\r\n          );\r\n    }\r\n    function commitHookEffectListMount(flags, finishedWork) {\r\n      try {\r\n        var updateQueue = finishedWork.updateQueue,\r\n          lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\r\n        if (null !== lastEffect) {\r\n          var firstEffect = lastEffect.next;\r\n          updateQueue = firstEffect;\r\n          do {\r\n            if (\r\n              (updateQueue.tag & flags) === flags &&\r\n              ((flags & Passive) !== NoFlags\r\n                ? null !== injectedProfilingHooks &&\r\n                  \"function\" ===\r\n                    typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted &&\r\n                  injectedProfilingHooks.markComponentPassiveEffectMountStarted(\r\n                    finishedWork\r\n                  )\r\n                : (flags & Layout) !== NoFlags &&\r\n                  null !== injectedProfilingHooks &&\r\n                  \"function\" ===\r\n                    typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted &&\r\n                  injectedProfilingHooks.markComponentLayoutEffectMountStarted(\r\n                    finishedWork\r\n                  ),\r\n              (lastEffect = void 0),\r\n              (flags & Insertion) !== NoFlags &&\r\n                (isRunningInsertionEffect = !0),\r\n              (lastEffect = runWithFiberInDEV(\r\n                finishedWork,\r\n                callCreateInDEV,\r\n                updateQueue\r\n              )),\r\n              (flags & Insertion) !== NoFlags &&\r\n                (isRunningInsertionEffect = !1),\r\n              (flags & Passive) !== NoFlags\r\n                ? null !== injectedProfilingHooks &&\r\n                  \"function\" ===\r\n                    typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped &&\r\n                  injectedProfilingHooks.markComponentPassiveEffectMountStopped()\r\n                : (flags & Layout) !== NoFlags &&\r\n                  null !== injectedProfilingHooks &&\r\n                  \"function\" ===\r\n                    typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped &&\r\n                  injectedProfilingHooks.markComponentLayoutEffectMountStopped(),\r\n              void 0 !== lastEffect && \"function\" !== typeof lastEffect)\r\n            ) {\r\n              var hookName = void 0;\r\n              hookName =\r\n                0 !== (updateQueue.tag & Layout)\r\n                  ? \"useLayoutEffect\"\r\n                  : 0 !== (updateQueue.tag & Insertion)\r\n                    ? \"useInsertionEffect\"\r\n                    : \"useEffect\";\r\n              var addendum = void 0;\r\n              addendum =\r\n                null === lastEffect\r\n                  ? \" You returned null. If your effect does not require clean up, return undefined (or nothing).\"\r\n                  : \"function\" === typeof lastEffect.then\r\n                    ? \"\\n\\nIt looks like you wrote \" +\r\n                      hookName +\r\n                      \"(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\\n\\n\" +\r\n                      hookName +\r\n                      \"(() => {\\n  async function fetchData() {\\n    // You can await here\\n    const response = await MyAPI.getData(someId);\\n    // ...\\n  }\\n  fetchData();\\n}, [someId]); // Or [] if effect doesn't need props or state\\n\\nLearn more about data fetching with Hooks: https://react.dev/link/hooks-data-fetching\"\r\n                    : \" You returned: \" + lastEffect;\r\n              runWithFiberInDEV(\r\n                finishedWork,\r\n                function (n, a) {\r\n                  console.error(\r\n                    \"%s must not return anything besides a function, which is used for clean-up.%s\",\r\n                    n,\r\n                    a\r\n                  );\r\n                },\r\n                hookName,\r\n                addendum\r\n              );\r\n            }\r\n            updateQueue = updateQueue.next;\r\n          } while (updateQueue !== firstEffect);\r\n        }\r\n      } catch (error) {\r\n        captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n      }\r\n    }\r\n    function commitHookEffectListUnmount(\r\n      flags,\r\n      finishedWork,\r\n      nearestMountedAncestor\r\n    ) {\r\n      try {\r\n        var updateQueue = finishedWork.updateQueue,\r\n          lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\r\n        if (null !== lastEffect) {\r\n          var firstEffect = lastEffect.next;\r\n          updateQueue = firstEffect;\r\n          do {\r\n            if ((updateQueue.tag & flags) === flags) {\r\n              var inst = updateQueue.inst,\r\n                destroy = inst.destroy;\r\n              void 0 !== destroy &&\r\n                ((inst.destroy = void 0),\r\n                (flags & Passive) !== NoFlags\r\n                  ? null !== injectedProfilingHooks &&\r\n                    \"function\" ===\r\n                      typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted &&\r\n                    injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(\r\n                      finishedWork\r\n                    )\r\n                  : (flags & Layout) !== NoFlags &&\r\n                    null !== injectedProfilingHooks &&\r\n                    \"function\" ===\r\n                      typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted &&\r\n                    injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(\r\n                      finishedWork\r\n                    ),\r\n                (flags & Insertion) !== NoFlags &&\r\n                  (isRunningInsertionEffect = !0),\r\n                (lastEffect = finishedWork),\r\n                runWithFiberInDEV(\r\n                  lastEffect,\r\n                  callDestroyInDEV,\r\n                  lastEffect,\r\n                  nearestMountedAncestor,\r\n                  destroy\r\n                ),\r\n                (flags & Insertion) !== NoFlags &&\r\n                  (isRunningInsertionEffect = !1),\r\n                (flags & Passive) !== NoFlags\r\n                  ? null !== injectedProfilingHooks &&\r\n                    \"function\" ===\r\n                      typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped &&\r\n                    injectedProfilingHooks.markComponentPassiveEffectUnmountStopped()\r\n                  : (flags & Layout) !== NoFlags &&\r\n                    null !== injectedProfilingHooks &&\r\n                    \"function\" ===\r\n                      typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped &&\r\n                    injectedProfilingHooks.markComponentLayoutEffectUnmountStopped());\r\n            }\r\n            updateQueue = updateQueue.next;\r\n          } while (updateQueue !== firstEffect);\r\n        }\r\n      } catch (error) {\r\n        captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n      }\r\n    }\r\n    function commitHookPassiveMountEffects(finishedWork, hookFlags) {\r\n      shouldProfile(finishedWork)\r\n        ? (startEffectTimer(),\r\n          commitHookEffectListMount(hookFlags, finishedWork),\r\n          recordEffectDuration())\r\n        : commitHookEffectListMount(hookFlags, finishedWork);\r\n    }\r\n    function commitHookPassiveUnmountEffects(\r\n      finishedWork,\r\n      nearestMountedAncestor,\r\n      hookFlags\r\n    ) {\r\n      shouldProfile(finishedWork)\r\n        ? (startEffectTimer(),\r\n          commitHookEffectListUnmount(\r\n            hookFlags,\r\n            finishedWork,\r\n            nearestMountedAncestor\r\n          ),\r\n          recordEffectDuration())\r\n        : commitHookEffectListUnmount(\r\n            hookFlags,\r\n            finishedWork,\r\n            nearestMountedAncestor\r\n          );\r\n    }\r\n    function commitClassCallbacks(finishedWork) {\r\n      var updateQueue = finishedWork.updateQueue;\r\n      if (null !== updateQueue) {\r\n        var instance = finishedWork.stateNode;\r\n        finishedWork.type.defaultProps ||\r\n          \"ref\" in finishedWork.memoizedProps ||\r\n          didWarnAboutReassigningProps ||\r\n          (instance.props !== finishedWork.memoizedProps &&\r\n            console.error(\r\n              \"Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\",\r\n              getComponentNameFromFiber(finishedWork) || \"instance\"\r\n            ),\r\n          instance.state !== finishedWork.memoizedState &&\r\n            console.error(\r\n              \"Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\",\r\n              getComponentNameFromFiber(finishedWork) || \"instance\"\r\n            ));\r\n        try {\r\n          runWithFiberInDEV(\r\n            finishedWork,\r\n            commitCallbacks,\r\n            updateQueue,\r\n            instance\r\n          );\r\n        } catch (error) {\r\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n        }\r\n      }\r\n    }\r\n    function callGetSnapshotBeforeUpdates(instance, prevProps, prevState) {\r\n      return instance.getSnapshotBeforeUpdate(prevProps, prevState);\r\n    }\r\n    function commitClassSnapshot(finishedWork, current) {\r\n      var prevProps = current.memoizedProps,\r\n        prevState = current.memoizedState;\r\n      current = finishedWork.stateNode;\r\n      finishedWork.type.defaultProps ||\r\n        \"ref\" in finishedWork.memoizedProps ||\r\n        didWarnAboutReassigningProps ||\r\n        (current.props !== finishedWork.memoizedProps &&\r\n          console.error(\r\n            \"Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\",\r\n            getComponentNameFromFiber(finishedWork) || \"instance\"\r\n          ),\r\n        current.state !== finishedWork.memoizedState &&\r\n          console.error(\r\n            \"Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\",\r\n            getComponentNameFromFiber(finishedWork) || \"instance\"\r\n          ));\r\n      try {\r\n        var resolvedPrevProps = resolveClassComponentProps(\r\n          finishedWork.type,\r\n          prevProps,\r\n          finishedWork.elementType === finishedWork.type\r\n        );\r\n        var snapshot = runWithFiberInDEV(\r\n          finishedWork,\r\n          callGetSnapshotBeforeUpdates,\r\n          current,\r\n          resolvedPrevProps,\r\n          prevState\r\n        );\r\n        prevProps = didWarnAboutUndefinedSnapshotBeforeUpdate;\r\n        void 0 !== snapshot ||\r\n          prevProps.has(finishedWork.type) ||\r\n          (prevProps.add(finishedWork.type),\r\n          runWithFiberInDEV(finishedWork, function () {\r\n            console.error(\r\n              \"%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.\",\r\n              getComponentNameFromFiber(finishedWork)\r\n            );\r\n          }));\r\n        current.__reactInternalSnapshotBeforeUpdate = snapshot;\r\n      } catch (error) {\r\n        captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n      }\r\n    }\r\n    function safelyCallComponentWillUnmount(\r\n      current,\r\n      nearestMountedAncestor,\r\n      instance\r\n    ) {\r\n      instance.props = resolveClassComponentProps(\r\n        current.type,\r\n        current.memoizedProps\r\n      );\r\n      instance.state = current.memoizedState;\r\n      shouldProfile(current)\r\n        ? (startEffectTimer(),\r\n          runWithFiberInDEV(\r\n            current,\r\n            callComponentWillUnmountInDEV,\r\n            current,\r\n            nearestMountedAncestor,\r\n            instance\r\n          ),\r\n          recordEffectDuration())\r\n        : runWithFiberInDEV(\r\n            current,\r\n            callComponentWillUnmountInDEV,\r\n            current,\r\n            nearestMountedAncestor,\r\n            instance\r\n          );\r\n    }\r\n    function commitAttachRef(finishedWork) {\r\n      var ref = finishedWork.ref;\r\n      if (null !== ref) {\r\n        switch (finishedWork.tag) {\r\n          case 26:\r\n          case 27:\r\n          case 5:\r\n            var instanceToUse = finishedWork.stateNode;\r\n            break;\r\n          case 30:\r\n            instanceToUse = finishedWork.stateNode;\r\n            break;\r\n          default:\r\n            instanceToUse = finishedWork.stateNode;\r\n        }\r\n        if (\"function\" === typeof ref)\r\n          if (shouldProfile(finishedWork))\r\n            try {\r\n              startEffectTimer(),\r\n                (finishedWork.refCleanup = ref(instanceToUse));\r\n            } finally {\r\n              recordEffectDuration();\r\n            }\r\n          else finishedWork.refCleanup = ref(instanceToUse);\r\n        else\r\n          \"string\" === typeof ref\r\n            ? console.error(\"String refs are no longer supported.\")\r\n            : ref.hasOwnProperty(\"current\") ||\r\n              console.error(\r\n                \"Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().\",\r\n                getComponentNameFromFiber(finishedWork)\r\n              ),\r\n            (ref.current = instanceToUse);\r\n      }\r\n    }\r\n    function safelyAttachRef(current, nearestMountedAncestor) {\r\n      try {\r\n        runWithFiberInDEV(current, commitAttachRef, current);\r\n      } catch (error) {\r\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\r\n      }\r\n    }\r\n    function safelyDetachRef(current, nearestMountedAncestor) {\r\n      var ref = current.ref,\r\n        refCleanup = current.refCleanup;\r\n      if (null !== ref)\r\n        if (\"function\" === typeof refCleanup)\r\n          try {\r\n            if (shouldProfile(current))\r\n              try {\r\n                startEffectTimer(), runWithFiberInDEV(current, refCleanup);\r\n              } finally {\r\n                recordEffectDuration(current);\r\n              }\r\n            else runWithFiberInDEV(current, refCleanup);\r\n          } catch (error) {\r\n            captureCommitPhaseError(current, nearestMountedAncestor, error);\r\n          } finally {\r\n            (current.refCleanup = null),\r\n              (current = current.alternate),\r\n              null != current && (current.refCleanup = null);\r\n          }\r\n        else if (\"function\" === typeof ref)\r\n          try {\r\n            if (shouldProfile(current))\r\n              try {\r\n                startEffectTimer(), runWithFiberInDEV(current, ref, null);\r\n              } finally {\r\n                recordEffectDuration(current);\r\n              }\r\n            else runWithFiberInDEV(current, ref, null);\r\n          } catch (error$7) {\r\n            captureCommitPhaseError(current, nearestMountedAncestor, error$7);\r\n          }\r\n        else ref.current = null;\r\n    }\r\n    function commitProfiler(\r\n      finishedWork,\r\n      current,\r\n      commitStartTime,\r\n      effectDuration\r\n    ) {\r\n      var _finishedWork$memoize = finishedWork.memoizedProps,\r\n        id = _finishedWork$memoize.id,\r\n        onCommit = _finishedWork$memoize.onCommit;\r\n      _finishedWork$memoize = _finishedWork$memoize.onRender;\r\n      current = null === current ? \"mount\" : \"update\";\r\n      currentUpdateIsNested && (current = \"nested-update\");\r\n      \"function\" === typeof _finishedWork$memoize &&\r\n        _finishedWork$memoize(\r\n          id,\r\n          current,\r\n          finishedWork.actualDuration,\r\n          finishedWork.treeBaseDuration,\r\n          finishedWork.actualStartTime,\r\n          commitStartTime\r\n        );\r\n      \"function\" === typeof onCommit &&\r\n        onCommit(\r\n          finishedWork.memoizedProps.id,\r\n          current,\r\n          effectDuration,\r\n          commitStartTime\r\n        );\r\n    }\r\n    function commitProfilerPostCommitImpl(\r\n      finishedWork,\r\n      current,\r\n      commitStartTime,\r\n      passiveEffectDuration\r\n    ) {\r\n      var _finishedWork$memoize2 = finishedWork.memoizedProps;\r\n      finishedWork = _finishedWork$memoize2.id;\r\n      _finishedWork$memoize2 = _finishedWork$memoize2.onPostCommit;\r\n      current = null === current ? \"mount\" : \"update\";\r\n      currentUpdateIsNested && (current = \"nested-update\");\r\n      \"function\" === typeof _finishedWork$memoize2 &&\r\n        _finishedWork$memoize2(\r\n          finishedWork,\r\n          current,\r\n          passiveEffectDuration,\r\n          commitStartTime\r\n        );\r\n    }\r\n    function commitHostMount(finishedWork) {\r\n      var type = finishedWork.type,\r\n        props = finishedWork.memoizedProps,\r\n        instance = finishedWork.stateNode;\r\n      try {\r\n        runWithFiberInDEV(\r\n          finishedWork,\r\n          commitMount,\r\n          instance,\r\n          type,\r\n          props,\r\n          finishedWork\r\n        );\r\n      } catch (error) {\r\n        captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n      }\r\n    }\r\n    function commitHostUpdate(finishedWork, newProps, oldProps) {\r\n      try {\r\n        runWithFiberInDEV(\r\n          finishedWork,\r\n          commitUpdate,\r\n          finishedWork.stateNode,\r\n          finishedWork.type,\r\n          oldProps,\r\n          newProps,\r\n          finishedWork\r\n        );\r\n      } catch (error) {\r\n        captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n      }\r\n    }\r\n    function isHostParent(fiber) {\r\n      return (\r\n        5 === fiber.tag ||\r\n        3 === fiber.tag ||\r\n        26 === fiber.tag ||\r\n        (27 === fiber.tag && isSingletonScope(fiber.type)) ||\r\n        4 === fiber.tag\r\n      );\r\n    }\r\n    function getHostSibling(fiber) {\r\n      a: for (;;) {\r\n        for (; null === fiber.sibling; ) {\r\n          if (null === fiber.return || isHostParent(fiber.return)) return null;\r\n          fiber = fiber.return;\r\n        }\r\n        fiber.sibling.return = fiber.return;\r\n        for (\r\n          fiber = fiber.sibling;\r\n          5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;\r\n\r\n        ) {\r\n          if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;\r\n          if (fiber.flags & 2) continue a;\r\n          if (null === fiber.child || 4 === fiber.tag) continue a;\r\n          else (fiber.child.return = fiber), (fiber = fiber.child);\r\n        }\r\n        if (!(fiber.flags & 2)) return fiber.stateNode;\r\n      }\r\n    }\r\n    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\r\n      var tag = node.tag;\r\n      if (5 === tag || 6 === tag)\r\n        (node = node.stateNode),\r\n          before\r\n            ? (9 === parent.nodeType\r\n                ? parent.body\r\n                : \"HTML\" === parent.nodeName\r\n                  ? parent.ownerDocument.body\r\n                  : parent\r\n              ).insertBefore(node, before)\r\n            : ((before =\r\n                9 === parent.nodeType\r\n                  ? parent.body\r\n                  : \"HTML\" === parent.nodeName\r\n                    ? parent.ownerDocument.body\r\n                    : parent),\r\n              before.appendChild(node),\r\n              (parent = parent._reactRootContainer),\r\n              (null !== parent && void 0 !== parent) ||\r\n                null !== before.onclick ||\r\n                (before.onclick = noop$1));\r\n      else if (\r\n        4 !== tag &&\r\n        (27 === tag &&\r\n          isSingletonScope(node.type) &&\r\n          ((parent = node.stateNode), (before = null)),\r\n        (node = node.child),\r\n        null !== node)\r\n      )\r\n        for (\r\n          insertOrAppendPlacementNodeIntoContainer(node, before, parent),\r\n            node = node.sibling;\r\n          null !== node;\r\n\r\n        )\r\n          insertOrAppendPlacementNodeIntoContainer(node, before, parent),\r\n            (node = node.sibling);\r\n    }\r\n    function insertOrAppendPlacementNode(node, before, parent) {\r\n      var tag = node.tag;\r\n      if (5 === tag || 6 === tag)\r\n        (node = node.stateNode),\r\n          before ? parent.insertBefore(node, before) : parent.appendChild(node);\r\n      else if (\r\n        4 !== tag &&\r\n        (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode),\r\n        (node = node.child),\r\n        null !== node)\r\n      )\r\n        for (\r\n          insertOrAppendPlacementNode(node, before, parent),\r\n            node = node.sibling;\r\n          null !== node;\r\n\r\n        )\r\n          insertOrAppendPlacementNode(node, before, parent),\r\n            (node = node.sibling);\r\n    }\r\n    function commitPlacement(finishedWork) {\r\n      for (\r\n        var hostParentFiber, parentFiber = finishedWork.return;\r\n        null !== parentFiber;\r\n\r\n      ) {\r\n        if (isHostParent(parentFiber)) {\r\n          hostParentFiber = parentFiber;\r\n          break;\r\n        }\r\n        parentFiber = parentFiber.return;\r\n      }\r\n      if (null == hostParentFiber)\r\n        throw Error(\r\n          \"Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.\"\r\n        );\r\n      switch (hostParentFiber.tag) {\r\n        case 27:\r\n          hostParentFiber = hostParentFiber.stateNode;\r\n          parentFiber = getHostSibling(finishedWork);\r\n          insertOrAppendPlacementNode(\r\n            finishedWork,\r\n            parentFiber,\r\n            hostParentFiber\r\n          );\r\n          break;\r\n        case 5:\r\n          parentFiber = hostParentFiber.stateNode;\r\n          hostParentFiber.flags & 32 &&\r\n            (resetTextContent(parentFiber), (hostParentFiber.flags &= -33));\r\n          hostParentFiber = getHostSibling(finishedWork);\r\n          insertOrAppendPlacementNode(\r\n            finishedWork,\r\n            hostParentFiber,\r\n            parentFiber\r\n          );\r\n          break;\r\n        case 3:\r\n        case 4:\r\n          hostParentFiber = hostParentFiber.stateNode.containerInfo;\r\n          parentFiber = getHostSibling(finishedWork);\r\n          insertOrAppendPlacementNodeIntoContainer(\r\n            finishedWork,\r\n            parentFiber,\r\n            hostParentFiber\r\n          );\r\n          break;\r\n        default:\r\n          throw Error(\r\n            \"Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.\"\r\n          );\r\n      }\r\n    }\r\n    function commitHostSingletonAcquisition(finishedWork) {\r\n      var singleton = finishedWork.stateNode,\r\n        props = finishedWork.memoizedProps;\r\n      try {\r\n        runWithFiberInDEV(\r\n          finishedWork,\r\n          acquireSingletonInstance,\r\n          finishedWork.type,\r\n          props,\r\n          singleton,\r\n          finishedWork\r\n        );\r\n      } catch (error) {\r\n        captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n      }\r\n    }\r\n    function commitBeforeMutationEffects(root, firstChild) {\r\n      root = root.containerInfo;\r\n      eventsEnabled = _enabled;\r\n      root = getActiveElementDeep(root);\r\n      if (hasSelectionCapabilities(root)) {\r\n        if (\"selectionStart\" in root)\r\n          var JSCompiler_temp = {\r\n            start: root.selectionStart,\r\n            end: root.selectionEnd\r\n          };\r\n        else\r\n          a: {\r\n            JSCompiler_temp =\r\n              ((JSCompiler_temp = root.ownerDocument) &&\r\n                JSCompiler_temp.defaultView) ||\r\n              window;\r\n            var selection =\r\n              JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();\r\n            if (selection && 0 !== selection.rangeCount) {\r\n              JSCompiler_temp = selection.anchorNode;\r\n              var anchorOffset = selection.anchorOffset,\r\n                focusNode = selection.focusNode;\r\n              selection = selection.focusOffset;\r\n              try {\r\n                JSCompiler_temp.nodeType, focusNode.nodeType;\r\n              } catch (e$2) {\r\n                JSCompiler_temp = null;\r\n                break a;\r\n              }\r\n              var length = 0,\r\n                start = -1,\r\n                end = -1,\r\n                indexWithinAnchor = 0,\r\n                indexWithinFocus = 0,\r\n                node = root,\r\n                parentNode = null;\r\n              b: for (;;) {\r\n                for (var next; ; ) {\r\n                  node !== JSCompiler_temp ||\r\n                    (0 !== anchorOffset && 3 !== node.nodeType) ||\r\n                    (start = length + anchorOffset);\r\n                  node !== focusNode ||\r\n                    (0 !== selection && 3 !== node.nodeType) ||\r\n                    (end = length + selection);\r\n                  3 === node.nodeType && (length += node.nodeValue.length);\r\n                  if (null === (next = node.firstChild)) break;\r\n                  parentNode = node;\r\n                  node = next;\r\n                }\r\n                for (;;) {\r\n                  if (node === root) break b;\r\n                  parentNode === JSCompiler_temp &&\r\n                    ++indexWithinAnchor === anchorOffset &&\r\n                    (start = length);\r\n                  parentNode === focusNode &&\r\n                    ++indexWithinFocus === selection &&\r\n                    (end = length);\r\n                  if (null !== (next = node.nextSibling)) break;\r\n                  node = parentNode;\r\n                  parentNode = node.parentNode;\r\n                }\r\n                node = next;\r\n              }\r\n              JSCompiler_temp =\r\n                -1 === start || -1 === end ? null : { start: start, end: end };\r\n            } else JSCompiler_temp = null;\r\n          }\r\n        JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };\r\n      } else JSCompiler_temp = null;\r\n      selectionInformation = {\r\n        focusedElem: root,\r\n        selectionRange: JSCompiler_temp\r\n      };\r\n      _enabled = !1;\r\n      for (nextEffect = firstChild; null !== nextEffect; )\r\n        if (\r\n          ((firstChild = nextEffect),\r\n          (root = firstChild.child),\r\n          0 !== (firstChild.subtreeFlags & 1024) && null !== root)\r\n        )\r\n          (root.return = firstChild), (nextEffect = root);\r\n        else\r\n          for (; null !== nextEffect; ) {\r\n            root = firstChild = nextEffect;\r\n            JSCompiler_temp = root.alternate;\r\n            anchorOffset = root.flags;\r\n            switch (root.tag) {\r\n              case 0:\r\n                break;\r\n              case 11:\r\n              case 15:\r\n                break;\r\n              case 1:\r\n                0 !== (anchorOffset & 1024) &&\r\n                  null !== JSCompiler_temp &&\r\n                  commitClassSnapshot(root, JSCompiler_temp);\r\n                break;\r\n              case 3:\r\n                if (0 !== (anchorOffset & 1024))\r\n                  if (\r\n                    ((root = root.stateNode.containerInfo),\r\n                    (JSCompiler_temp = root.nodeType),\r\n                    9 === JSCompiler_temp)\r\n                  )\r\n                    clearContainerSparingly(root);\r\n                  else if (1 === JSCompiler_temp)\r\n                    switch (root.nodeName) {\r\n                      case \"HEAD\":\r\n                      case \"HTML\":\r\n                      case \"BODY\":\r\n                        clearContainerSparingly(root);\r\n                        break;\r\n                      default:\r\n                        root.textContent = \"\";\r\n                    }\r\n                break;\r\n              case 5:\r\n              case 26:\r\n              case 27:\r\n              case 6:\r\n              case 4:\r\n              case 17:\r\n                break;\r\n              default:\r\n                if (0 !== (anchorOffset & 1024))\r\n                  throw Error(\r\n                    \"This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.\"\r\n                  );\r\n            }\r\n            root = firstChild.sibling;\r\n            if (null !== root) {\r\n              root.return = firstChild.return;\r\n              nextEffect = root;\r\n              break;\r\n            }\r\n            nextEffect = firstChild.return;\r\n          }\r\n    }\r\n    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {\r\n      var flags = finishedWork.flags;\r\n      switch (finishedWork.tag) {\r\n        case 0:\r\n        case 11:\r\n        case 15:\r\n          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\r\n          flags & 4 &&\r\n            commitHookLayoutEffects(finishedWork, Layout | HasEffect);\r\n          break;\r\n        case 1:\r\n          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\r\n          if (flags & 4)\r\n            if (((finishedRoot = finishedWork.stateNode), null === current))\r\n              finishedWork.type.defaultProps ||\r\n                \"ref\" in finishedWork.memoizedProps ||\r\n                didWarnAboutReassigningProps ||\r\n                (finishedRoot.props !== finishedWork.memoizedProps &&\r\n                  console.error(\r\n                    \"Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\",\r\n                    getComponentNameFromFiber(finishedWork) || \"instance\"\r\n                  ),\r\n                finishedRoot.state !== finishedWork.memoizedState &&\r\n                  console.error(\r\n                    \"Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\",\r\n                    getComponentNameFromFiber(finishedWork) || \"instance\"\r\n                  )),\r\n                shouldProfile(finishedWork)\r\n                  ? (startEffectTimer(),\r\n                    runWithFiberInDEV(\r\n                      finishedWork,\r\n                      callComponentDidMountInDEV,\r\n                      finishedWork,\r\n                      finishedRoot\r\n                    ),\r\n                    recordEffectDuration())\r\n                  : runWithFiberInDEV(\r\n                      finishedWork,\r\n                      callComponentDidMountInDEV,\r\n                      finishedWork,\r\n                      finishedRoot\r\n                    );\r\n            else {\r\n              var prevProps = resolveClassComponentProps(\r\n                finishedWork.type,\r\n                current.memoizedProps\r\n              );\r\n              current = current.memoizedState;\r\n              finishedWork.type.defaultProps ||\r\n                \"ref\" in finishedWork.memoizedProps ||\r\n                didWarnAboutReassigningProps ||\r\n                (finishedRoot.props !== finishedWork.memoizedProps &&\r\n                  console.error(\r\n                    \"Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\",\r\n                    getComponentNameFromFiber(finishedWork) || \"instance\"\r\n                  ),\r\n                finishedRoot.state !== finishedWork.memoizedState &&\r\n                  console.error(\r\n                    \"Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\",\r\n                    getComponentNameFromFiber(finishedWork) || \"instance\"\r\n                  ));\r\n              shouldProfile(finishedWork)\r\n                ? (startEffectTimer(),\r\n                  runWithFiberInDEV(\r\n                    finishedWork,\r\n                    callComponentDidUpdateInDEV,\r\n                    finishedWork,\r\n                    finishedRoot,\r\n                    prevProps,\r\n                    current,\r\n                    finishedRoot.__reactInternalSnapshotBeforeUpdate\r\n                  ),\r\n                  recordEffectDuration())\r\n                : runWithFiberInDEV(\r\n                    finishedWork,\r\n                    callComponentDidUpdateInDEV,\r\n                    finishedWork,\r\n                    finishedRoot,\r\n                    prevProps,\r\n                    current,\r\n                    finishedRoot.__reactInternalSnapshotBeforeUpdate\r\n                  );\r\n            }\r\n          flags & 64 && commitClassCallbacks(finishedWork);\r\n          flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\r\n          break;\r\n        case 3:\r\n          current = pushNestedEffectDurations();\r\n          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\r\n          if (\r\n            flags & 64 &&\r\n            ((flags = finishedWork.updateQueue), null !== flags)\r\n          ) {\r\n            prevProps = null;\r\n            if (null !== finishedWork.child)\r\n              switch (finishedWork.child.tag) {\r\n                case 27:\r\n                case 5:\r\n                  prevProps = finishedWork.child.stateNode;\r\n                  break;\r\n                case 1:\r\n                  prevProps = finishedWork.child.stateNode;\r\n              }\r\n            try {\r\n              runWithFiberInDEV(\r\n                finishedWork,\r\n                commitCallbacks,\r\n                flags,\r\n                prevProps\r\n              );\r\n            } catch (error) {\r\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n            }\r\n          }\r\n          finishedRoot.effectDuration += popNestedEffectDurations(current);\r\n          break;\r\n        case 27:\r\n          null === current &&\r\n            flags & 4 &&\r\n            commitHostSingletonAcquisition(finishedWork);\r\n        case 26:\r\n        case 5:\r\n          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\r\n          null === current && flags & 4 && commitHostMount(finishedWork);\r\n          flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\r\n          break;\r\n        case 12:\r\n          if (flags & 4) {\r\n            flags = pushNestedEffectDurations();\r\n            recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\r\n            finishedRoot = finishedWork.stateNode;\r\n            finishedRoot.effectDuration += bubbleNestedEffectDurations(flags);\r\n            try {\r\n              runWithFiberInDEV(\r\n                finishedWork,\r\n                commitProfiler,\r\n                finishedWork,\r\n                current,\r\n                commitStartTime,\r\n                finishedRoot.effectDuration\r\n              );\r\n            } catch (error) {\r\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n            }\r\n          } else recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\r\n          break;\r\n        case 13:\r\n          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\r\n          flags & 4 &&\r\n            commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\r\n          flags & 64 &&\r\n            ((finishedRoot = finishedWork.memoizedState),\r\n            null !== finishedRoot &&\r\n              ((finishedRoot = finishedRoot.dehydrated),\r\n              null !== finishedRoot &&\r\n                ((finishedWork = retryDehydratedSuspenseBoundary.bind(\r\n                  null,\r\n                  finishedWork\r\n                )),\r\n                registerSuspenseInstanceRetry(finishedRoot, finishedWork))));\r\n          break;\r\n        case 22:\r\n          flags =\r\n            null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;\r\n          if (!flags) {\r\n            current =\r\n              (null !== current && null !== current.memoizedState) ||\r\n              offscreenSubtreeWasHidden;\r\n            prevProps = offscreenSubtreeIsHidden;\r\n            var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\r\n            offscreenSubtreeIsHidden = flags;\r\n            (offscreenSubtreeWasHidden = current) &&\r\n            !prevOffscreenSubtreeWasHidden\r\n              ? recursivelyTraverseReappearLayoutEffects(\r\n                  finishedRoot,\r\n                  finishedWork,\r\n                  0 !== (finishedWork.subtreeFlags & 8772)\r\n                )\r\n              : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\r\n            offscreenSubtreeIsHidden = prevProps;\r\n            offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\r\n          }\r\n          break;\r\n        case 30:\r\n          break;\r\n        default:\r\n          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\r\n      }\r\n    }\r\n    function detachFiberAfterEffects(fiber) {\r\n      var alternate = fiber.alternate;\r\n      null !== alternate &&\r\n        ((fiber.alternate = null), detachFiberAfterEffects(alternate));\r\n      fiber.child = null;\r\n      fiber.deletions = null;\r\n      fiber.sibling = null;\r\n      5 === fiber.tag &&\r\n        ((alternate = fiber.stateNode),\r\n        null !== alternate && detachDeletedInstance(alternate));\r\n      fiber.stateNode = null;\r\n      fiber._debugOwner = null;\r\n      fiber.return = null;\r\n      fiber.dependencies = null;\r\n      fiber.memoizedProps = null;\r\n      fiber.memoizedState = null;\r\n      fiber.pendingProps = null;\r\n      fiber.stateNode = null;\r\n      fiber.updateQueue = null;\r\n    }\r\n    function recursivelyTraverseDeletionEffects(\r\n      finishedRoot,\r\n      nearestMountedAncestor,\r\n      parent\r\n    ) {\r\n      for (parent = parent.child; null !== parent; )\r\n        commitDeletionEffectsOnFiber(\r\n          finishedRoot,\r\n          nearestMountedAncestor,\r\n          parent\r\n        ),\r\n          (parent = parent.sibling);\r\n    }\r\n    function commitDeletionEffectsOnFiber(\r\n      finishedRoot,\r\n      nearestMountedAncestor,\r\n      deletedFiber\r\n    ) {\r\n      if (\r\n        injectedHook &&\r\n        \"function\" === typeof injectedHook.onCommitFiberUnmount\r\n      )\r\n        try {\r\n          injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);\r\n        } catch (err) {\r\n          hasLoggedError ||\r\n            ((hasLoggedError = !0),\r\n            console.error(\r\n              \"React instrumentation encountered an error: %s\",\r\n              err\r\n            ));\r\n        }\r\n      switch (deletedFiber.tag) {\r\n        case 26:\r\n          offscreenSubtreeWasHidden ||\r\n            safelyDetachRef(deletedFiber, nearestMountedAncestor);\r\n          recursivelyTraverseDeletionEffects(\r\n            finishedRoot,\r\n            nearestMountedAncestor,\r\n            deletedFiber\r\n          );\r\n          deletedFiber.memoizedState\r\n            ? deletedFiber.memoizedState.count--\r\n            : deletedFiber.stateNode &&\r\n              ((deletedFiber = deletedFiber.stateNode),\r\n              deletedFiber.parentNode.removeChild(deletedFiber));\r\n          break;\r\n        case 27:\r\n          offscreenSubtreeWasHidden ||\r\n            safelyDetachRef(deletedFiber, nearestMountedAncestor);\r\n          var prevHostParent = hostParent,\r\n            prevHostParentIsContainer = hostParentIsContainer;\r\n          isSingletonScope(deletedFiber.type) &&\r\n            ((hostParent = deletedFiber.stateNode),\r\n            (hostParentIsContainer = !1));\r\n          recursivelyTraverseDeletionEffects(\r\n            finishedRoot,\r\n            nearestMountedAncestor,\r\n            deletedFiber\r\n          );\r\n          runWithFiberInDEV(\r\n            deletedFiber,\r\n            releaseSingletonInstance,\r\n            deletedFiber.stateNode\r\n          );\r\n          hostParent = prevHostParent;\r\n          hostParentIsContainer = prevHostParentIsContainer;\r\n          break;\r\n        case 5:\r\n          offscreenSubtreeWasHidden ||\r\n            safelyDetachRef(deletedFiber, nearestMountedAncestor);\r\n        case 6:\r\n          prevHostParent = hostParent;\r\n          prevHostParentIsContainer = hostParentIsContainer;\r\n          hostParent = null;\r\n          recursivelyTraverseDeletionEffects(\r\n            finishedRoot,\r\n            nearestMountedAncestor,\r\n            deletedFiber\r\n          );\r\n          hostParent = prevHostParent;\r\n          hostParentIsContainer = prevHostParentIsContainer;\r\n          if (null !== hostParent)\r\n            if (hostParentIsContainer)\r\n              try {\r\n                runWithFiberInDEV(\r\n                  deletedFiber,\r\n                  removeChildFromContainer,\r\n                  hostParent,\r\n                  deletedFiber.stateNode\r\n                );\r\n              } catch (error) {\r\n                captureCommitPhaseError(\r\n                  deletedFiber,\r\n                  nearestMountedAncestor,\r\n                  error\r\n                );\r\n              }\r\n            else\r\n              try {\r\n                runWithFiberInDEV(\r\n                  deletedFiber,\r\n                  removeChild,\r\n                  hostParent,\r\n                  deletedFiber.stateNode\r\n                );\r\n              } catch (error) {\r\n                captureCommitPhaseError(\r\n                  deletedFiber,\r\n                  nearestMountedAncestor,\r\n                  error\r\n                );\r\n              }\r\n          break;\r\n        case 18:\r\n          null !== hostParent &&\r\n            (hostParentIsContainer\r\n              ? ((finishedRoot = hostParent),\r\n                clearSuspenseBoundary(\r\n                  9 === finishedRoot.nodeType\r\n                    ? finishedRoot.body\r\n                    : \"HTML\" === finishedRoot.nodeName\r\n                      ? finishedRoot.ownerDocument.body\r\n                      : finishedRoot,\r\n                  deletedFiber.stateNode\r\n                ),\r\n                retryIfBlockedOn(finishedRoot))\r\n              : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));\r\n          break;\r\n        case 4:\r\n          prevHostParent = hostParent;\r\n          prevHostParentIsContainer = hostParentIsContainer;\r\n          hostParent = deletedFiber.stateNode.containerInfo;\r\n          hostParentIsContainer = !0;\r\n          recursivelyTraverseDeletionEffects(\r\n            finishedRoot,\r\n            nearestMountedAncestor,\r\n            deletedFiber\r\n          );\r\n          hostParent = prevHostParent;\r\n          hostParentIsContainer = prevHostParentIsContainer;\r\n          break;\r\n        case 0:\r\n        case 11:\r\n        case 14:\r\n        case 15:\r\n          offscreenSubtreeWasHidden ||\r\n            commitHookEffectListUnmount(\r\n              Insertion,\r\n              deletedFiber,\r\n              nearestMountedAncestor\r\n            );\r\n          offscreenSubtreeWasHidden ||\r\n            commitHookLayoutUnmountEffects(\r\n              deletedFiber,\r\n              nearestMountedAncestor,\r\n              Layout\r\n            );\r\n          recursivelyTraverseDeletionEffects(\r\n            finishedRoot,\r\n            nearestMountedAncestor,\r\n            deletedFiber\r\n          );\r\n          break;\r\n        case 1:\r\n          offscreenSubtreeWasHidden ||\r\n            (safelyDetachRef(deletedFiber, nearestMountedAncestor),\r\n            (prevHostParent = deletedFiber.stateNode),\r\n            \"function\" === typeof prevHostParent.componentWillUnmount &&\r\n              safelyCallComponentWillUnmount(\r\n                deletedFiber,\r\n                nearestMountedAncestor,\r\n                prevHostParent\r\n              ));\r\n          recursivelyTraverseDeletionEffects(\r\n            finishedRoot,\r\n            nearestMountedAncestor,\r\n            deletedFiber\r\n          );\r\n          break;\r\n        case 21:\r\n          recursivelyTraverseDeletionEffects(\r\n            finishedRoot,\r\n            nearestMountedAncestor,\r\n            deletedFiber\r\n          );\r\n          break;\r\n        case 22:\r\n          offscreenSubtreeWasHidden =\r\n            (prevHostParent = offscreenSubtreeWasHidden) ||\r\n            null !== deletedFiber.memoizedState;\r\n          recursivelyTraverseDeletionEffects(\r\n            finishedRoot,\r\n            nearestMountedAncestor,\r\n            deletedFiber\r\n          );\r\n          offscreenSubtreeWasHidden = prevHostParent;\r\n          break;\r\n        default:\r\n          recursivelyTraverseDeletionEffects(\r\n            finishedRoot,\r\n            nearestMountedAncestor,\r\n            deletedFiber\r\n          );\r\n      }\r\n    }\r\n    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {\r\n      if (\r\n        null === finishedWork.memoizedState &&\r\n        ((finishedRoot = finishedWork.alternate),\r\n        null !== finishedRoot &&\r\n          ((finishedRoot = finishedRoot.memoizedState),\r\n          null !== finishedRoot &&\r\n            ((finishedRoot = finishedRoot.dehydrated), null !== finishedRoot)))\r\n      )\r\n        try {\r\n          runWithFiberInDEV(\r\n            finishedWork,\r\n            commitHydratedSuspenseInstance,\r\n            finishedRoot\r\n          );\r\n        } catch (error) {\r\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n        }\r\n    }\r\n    function getRetryCache(finishedWork) {\r\n      switch (finishedWork.tag) {\r\n        case 13:\r\n        case 19:\r\n          var retryCache = finishedWork.stateNode;\r\n          null === retryCache &&\r\n            (retryCache = finishedWork.stateNode = new PossiblyWeakSet());\r\n          return retryCache;\r\n        case 22:\r\n          return (\r\n            (finishedWork = finishedWork.stateNode),\r\n            (retryCache = finishedWork._retryCache),\r\n            null === retryCache &&\r\n              (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),\r\n            retryCache\r\n          );\r\n        default:\r\n          throw Error(\r\n            \"Unexpected Suspense handler tag (\" +\r\n              finishedWork.tag +\r\n              \"). This is a bug in React.\"\r\n          );\r\n      }\r\n    }\r\n    function attachSuspenseRetryListeners(finishedWork, wakeables) {\r\n      var retryCache = getRetryCache(finishedWork);\r\n      wakeables.forEach(function (wakeable) {\r\n        var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\r\n        if (!retryCache.has(wakeable)) {\r\n          retryCache.add(wakeable);\r\n          if (isDevToolsPresent)\r\n            if (null !== inProgressLanes && null !== inProgressRoot)\r\n              restorePendingUpdaters(inProgressRoot, inProgressLanes);\r\n            else\r\n              throw Error(\r\n                \"Expected finished root and lanes to be set. This is a bug in React.\"\r\n              );\r\n          wakeable.then(retry, retry);\r\n        }\r\n      });\r\n    }\r\n    function recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {\r\n      var deletions = parentFiber.deletions;\r\n      if (null !== deletions)\r\n        for (var i = 0; i < deletions.length; i++) {\r\n          var root = root$jscomp$0,\r\n            returnFiber = parentFiber,\r\n            deletedFiber = deletions[i],\r\n            parent = returnFiber;\r\n          a: for (; null !== parent; ) {\r\n            switch (parent.tag) {\r\n              case 27:\r\n                if (isSingletonScope(parent.type)) {\r\n                  hostParent = parent.stateNode;\r\n                  hostParentIsContainer = !1;\r\n                  break a;\r\n                }\r\n                break;\r\n              case 5:\r\n                hostParent = parent.stateNode;\r\n                hostParentIsContainer = !1;\r\n                break a;\r\n              case 3:\r\n              case 4:\r\n                hostParent = parent.stateNode.containerInfo;\r\n                hostParentIsContainer = !0;\r\n                break a;\r\n            }\r\n            parent = parent.return;\r\n          }\r\n          if (null === hostParent)\r\n            throw Error(\r\n              \"Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.\"\r\n            );\r\n          commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\r\n          hostParent = null;\r\n          hostParentIsContainer = !1;\r\n          root = deletedFiber;\r\n          returnFiber = root.alternate;\r\n          null !== returnFiber && (returnFiber.return = null);\r\n          root.return = null;\r\n        }\r\n      if (parentFiber.subtreeFlags & 13878)\r\n        for (parentFiber = parentFiber.child; null !== parentFiber; )\r\n          commitMutationEffectsOnFiber(parentFiber, root$jscomp$0),\r\n            (parentFiber = parentFiber.sibling);\r\n    }\r\n    function commitMutationEffectsOnFiber(finishedWork, root) {\r\n      var current = finishedWork.alternate,\r\n        flags = finishedWork.flags;\r\n      switch (finishedWork.tag) {\r\n        case 0:\r\n        case 11:\r\n        case 14:\r\n        case 15:\r\n          recursivelyTraverseMutationEffects(root, finishedWork);\r\n          commitReconciliationEffects(finishedWork);\r\n          flags & 4 &&\r\n            (commitHookEffectListUnmount(\r\n              Insertion | HasEffect,\r\n              finishedWork,\r\n              finishedWork.return\r\n            ),\r\n            commitHookEffectListMount(Insertion | HasEffect, finishedWork),\r\n            commitHookLayoutUnmountEffects(\r\n              finishedWork,\r\n              finishedWork.return,\r\n              Layout | HasEffect\r\n            ));\r\n          break;\r\n        case 1:\r\n          recursivelyTraverseMutationEffects(root, finishedWork);\r\n          commitReconciliationEffects(finishedWork);\r\n          flags & 512 &&\r\n            (offscreenSubtreeWasHidden ||\r\n              null === current ||\r\n              safelyDetachRef(current, current.return));\r\n          flags & 64 &&\r\n            offscreenSubtreeIsHidden &&\r\n            ((finishedWork = finishedWork.updateQueue),\r\n            null !== finishedWork &&\r\n              ((flags = finishedWork.callbacks),\r\n              null !== flags &&\r\n                ((current = finishedWork.shared.hiddenCallbacks),\r\n                (finishedWork.shared.hiddenCallbacks =\r\n                  null === current ? flags : current.concat(flags)))));\r\n          break;\r\n        case 26:\r\n          var hoistableRoot = currentHoistableRoot;\r\n          recursivelyTraverseMutationEffects(root, finishedWork);\r\n          commitReconciliationEffects(finishedWork);\r\n          flags & 512 &&\r\n            (offscreenSubtreeWasHidden ||\r\n              null === current ||\r\n              safelyDetachRef(current, current.return));\r\n          if (flags & 4)\r\n            if (\r\n              ((root = null !== current ? current.memoizedState : null),\r\n              (flags = finishedWork.memoizedState),\r\n              null === current)\r\n            )\r\n              if (null === flags)\r\n                if (null === finishedWork.stateNode) {\r\n                  a: {\r\n                    flags = finishedWork.type;\r\n                    current = finishedWork.memoizedProps;\r\n                    root = hoistableRoot.ownerDocument || hoistableRoot;\r\n                    b: switch (flags) {\r\n                      case \"title\":\r\n                        hoistableRoot = root.getElementsByTagName(\"title\")[0];\r\n                        if (\r\n                          !hoistableRoot ||\r\n                          hoistableRoot[internalHoistableMarker] ||\r\n                          hoistableRoot[internalInstanceKey] ||\r\n                          hoistableRoot.namespaceURI === SVG_NAMESPACE ||\r\n                          hoistableRoot.hasAttribute(\"itemprop\")\r\n                        )\r\n                          (hoistableRoot = root.createElement(flags)),\r\n                            root.head.insertBefore(\r\n                              hoistableRoot,\r\n                              root.querySelector(\"head > title\")\r\n                            );\r\n                        setInitialProperties(hoistableRoot, flags, current);\r\n                        hoistableRoot[internalInstanceKey] = finishedWork;\r\n                        markNodeAsHoistable(hoistableRoot);\r\n                        flags = hoistableRoot;\r\n                        break a;\r\n                      case \"link\":\r\n                        var maybeNodes = getHydratableHoistableCache(\r\n                          \"link\",\r\n                          \"href\",\r\n                          root\r\n                        ).get(flags + (current.href || \"\"));\r\n                        if (maybeNodes)\r\n                          for (var i = 0; i < maybeNodes.length; i++)\r\n                            if (\r\n                              ((hoistableRoot = maybeNodes[i]),\r\n                              hoistableRoot.getAttribute(\"href\") ===\r\n                                (null == current.href || \"\" === current.href\r\n                                  ? null\r\n                                  : current.href) &&\r\n                                hoistableRoot.getAttribute(\"rel\") ===\r\n                                  (null == current.rel ? null : current.rel) &&\r\n                                hoistableRoot.getAttribute(\"title\") ===\r\n                                  (null == current.title\r\n                                    ? null\r\n                                    : current.title) &&\r\n                                hoistableRoot.getAttribute(\"crossorigin\") ===\r\n                                  (null == current.crossOrigin\r\n                                    ? null\r\n                                    : current.crossOrigin))\r\n                            ) {\r\n                              maybeNodes.splice(i, 1);\r\n                              break b;\r\n                            }\r\n                        hoistableRoot = root.createElement(flags);\r\n                        setInitialProperties(hoistableRoot, flags, current);\r\n                        root.head.appendChild(hoistableRoot);\r\n                        break;\r\n                      case \"meta\":\r\n                        if (\r\n                          (maybeNodes = getHydratableHoistableCache(\r\n                            \"meta\",\r\n                            \"content\",\r\n                            root\r\n                          ).get(flags + (current.content || \"\")))\r\n                        )\r\n                          for (i = 0; i < maybeNodes.length; i++)\r\n                            if (\r\n                              ((hoistableRoot = maybeNodes[i]),\r\n                              checkAttributeStringCoercion(\r\n                                current.content,\r\n                                \"content\"\r\n                              ),\r\n                              hoistableRoot.getAttribute(\"content\") ===\r\n                                (null == current.content\r\n                                  ? null\r\n                                  : \"\" + current.content) &&\r\n                                hoistableRoot.getAttribute(\"name\") ===\r\n                                  (null == current.name\r\n                                    ? null\r\n                                    : current.name) &&\r\n                                hoistableRoot.getAttribute(\"property\") ===\r\n                                  (null == current.property\r\n                                    ? null\r\n                                    : current.property) &&\r\n                                hoistableRoot.getAttribute(\"http-equiv\") ===\r\n                                  (null == current.httpEquiv\r\n                                    ? null\r\n                                    : current.httpEquiv) &&\r\n                                hoistableRoot.getAttribute(\"charset\") ===\r\n                                  (null == current.charSet\r\n                                    ? null\r\n                                    : current.charSet))\r\n                            ) {\r\n                              maybeNodes.splice(i, 1);\r\n                              break b;\r\n                            }\r\n                        hoistableRoot = root.createElement(flags);\r\n                        setInitialProperties(hoistableRoot, flags, current);\r\n                        root.head.appendChild(hoistableRoot);\r\n                        break;\r\n                      default:\r\n                        throw Error(\r\n                          'getNodesForType encountered a type it did not expect: \"' +\r\n                            flags +\r\n                            '\". This is a bug in React.'\r\n                        );\r\n                    }\r\n                    hoistableRoot[internalInstanceKey] = finishedWork;\r\n                    markNodeAsHoistable(hoistableRoot);\r\n                    flags = hoistableRoot;\r\n                  }\r\n                  finishedWork.stateNode = flags;\r\n                } else\r\n                  mountHoistable(\r\n                    hoistableRoot,\r\n                    finishedWork.type,\r\n                    finishedWork.stateNode\r\n                  );\r\n              else\r\n                finishedWork.stateNode = acquireResource(\r\n                  hoistableRoot,\r\n                  flags,\r\n                  finishedWork.memoizedProps\r\n                );\r\n            else\r\n              root !== flags\r\n                ? (null === root\r\n                    ? null !== current.stateNode &&\r\n                      ((current = current.stateNode),\r\n                      current.parentNode.removeChild(current))\r\n                    : root.count--,\r\n                  null === flags\r\n                    ? mountHoistable(\r\n                        hoistableRoot,\r\n                        finishedWork.type,\r\n                        finishedWork.stateNode\r\n                      )\r\n                    : acquireResource(\r\n                        hoistableRoot,\r\n                        flags,\r\n                        finishedWork.memoizedProps\r\n                      ))\r\n                : null === flags &&\r\n                  null !== finishedWork.stateNode &&\r\n                  commitHostUpdate(\r\n                    finishedWork,\r\n                    finishedWork.memoizedProps,\r\n                    current.memoizedProps\r\n                  );\r\n          break;\r\n        case 27:\r\n          recursivelyTraverseMutationEffects(root, finishedWork);\r\n          commitReconciliationEffects(finishedWork);\r\n          flags & 512 &&\r\n            (offscreenSubtreeWasHidden ||\r\n              null === current ||\r\n              safelyDetachRef(current, current.return));\r\n          null !== current &&\r\n            flags & 4 &&\r\n            commitHostUpdate(\r\n              finishedWork,\r\n              finishedWork.memoizedProps,\r\n              current.memoizedProps\r\n            );\r\n          break;\r\n        case 5:\r\n          recursivelyTraverseMutationEffects(root, finishedWork);\r\n          commitReconciliationEffects(finishedWork);\r\n          flags & 512 &&\r\n            (offscreenSubtreeWasHidden ||\r\n              null === current ||\r\n              safelyDetachRef(current, current.return));\r\n          if (finishedWork.flags & 32) {\r\n            root = finishedWork.stateNode;\r\n            try {\r\n              runWithFiberInDEV(finishedWork, resetTextContent, root);\r\n            } catch (error) {\r\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n            }\r\n          }\r\n          flags & 4 &&\r\n            null != finishedWork.stateNode &&\r\n            ((root = finishedWork.memoizedProps),\r\n            commitHostUpdate(\r\n              finishedWork,\r\n              root,\r\n              null !== current ? current.memoizedProps : root\r\n            ));\r\n          flags & 1024 &&\r\n            ((needsFormReset = !0),\r\n            \"form\" !== finishedWork.type &&\r\n              console.error(\r\n                \"Unexpected host component type. Expected a form. This is a bug in React.\"\r\n              ));\r\n          break;\r\n        case 6:\r\n          recursivelyTraverseMutationEffects(root, finishedWork);\r\n          commitReconciliationEffects(finishedWork);\r\n          if (flags & 4) {\r\n            if (null === finishedWork.stateNode)\r\n              throw Error(\r\n                \"This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.\"\r\n              );\r\n            flags = finishedWork.memoizedProps;\r\n            current = null !== current ? current.memoizedProps : flags;\r\n            root = finishedWork.stateNode;\r\n            try {\r\n              runWithFiberInDEV(\r\n                finishedWork,\r\n                commitTextUpdate,\r\n                root,\r\n                current,\r\n                flags\r\n              );\r\n            } catch (error) {\r\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n            }\r\n          }\r\n          break;\r\n        case 3:\r\n          hoistableRoot = pushNestedEffectDurations();\r\n          tagCaches = null;\r\n          maybeNodes = currentHoistableRoot;\r\n          currentHoistableRoot = getHoistableRoot(root.containerInfo);\r\n          recursivelyTraverseMutationEffects(root, finishedWork);\r\n          currentHoistableRoot = maybeNodes;\r\n          commitReconciliationEffects(finishedWork);\r\n          if (\r\n            flags & 4 &&\r\n            null !== current &&\r\n            current.memoizedState.isDehydrated\r\n          )\r\n            try {\r\n              runWithFiberInDEV(\r\n                finishedWork,\r\n                commitHydratedContainer,\r\n                root.containerInfo\r\n              );\r\n            } catch (error) {\r\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n            }\r\n          needsFormReset &&\r\n            ((needsFormReset = !1), recursivelyResetForms(finishedWork));\r\n          root.effectDuration += popNestedEffectDurations(hoistableRoot);\r\n          break;\r\n        case 4:\r\n          flags = currentHoistableRoot;\r\n          currentHoistableRoot = getHoistableRoot(\r\n            finishedWork.stateNode.containerInfo\r\n          );\r\n          recursivelyTraverseMutationEffects(root, finishedWork);\r\n          commitReconciliationEffects(finishedWork);\r\n          currentHoistableRoot = flags;\r\n          break;\r\n        case 12:\r\n          flags = pushNestedEffectDurations();\r\n          recursivelyTraverseMutationEffects(root, finishedWork);\r\n          commitReconciliationEffects(finishedWork);\r\n          finishedWork.stateNode.effectDuration +=\r\n            bubbleNestedEffectDurations(flags);\r\n          break;\r\n        case 13:\r\n          recursivelyTraverseMutationEffects(root, finishedWork);\r\n          commitReconciliationEffects(finishedWork);\r\n          finishedWork.child.flags & 8192 &&\r\n            (null !== finishedWork.memoizedState) !==\r\n              (null !== current && null !== current.memoizedState) &&\r\n            (globalMostRecentFallbackTime = now$1());\r\n          flags & 4 &&\r\n            ((flags = finishedWork.updateQueue),\r\n            null !== flags &&\r\n              ((finishedWork.updateQueue = null),\r\n              attachSuspenseRetryListeners(finishedWork, flags)));\r\n          break;\r\n        case 22:\r\n          hoistableRoot = null !== finishedWork.memoizedState;\r\n          var wasHidden = null !== current && null !== current.memoizedState,\r\n            prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,\r\n            prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\r\n          offscreenSubtreeIsHidden =\r\n            prevOffscreenSubtreeIsHidden || hoistableRoot;\r\n          offscreenSubtreeWasHidden =\r\n            prevOffscreenSubtreeWasHidden || wasHidden;\r\n          recursivelyTraverseMutationEffects(root, finishedWork);\r\n          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\r\n          offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\r\n          commitReconciliationEffects(finishedWork);\r\n          if (flags & 8192)\r\n            a: for (\r\n              root = finishedWork.stateNode,\r\n                root._visibility = hoistableRoot\r\n                  ? root._visibility & ~OffscreenVisible\r\n                  : root._visibility | OffscreenVisible,\r\n                hoistableRoot &&\r\n                  (null === current ||\r\n                    wasHidden ||\r\n                    offscreenSubtreeIsHidden ||\r\n                    offscreenSubtreeWasHidden ||\r\n                    recursivelyTraverseDisappearLayoutEffects(finishedWork)),\r\n                current = null,\r\n                root = finishedWork;\r\n              ;\r\n\r\n            ) {\r\n              if (5 === root.tag || 26 === root.tag) {\r\n                if (null === current) {\r\n                  wasHidden = current = root;\r\n                  try {\r\n                    (maybeNodes = wasHidden.stateNode),\r\n                      hoistableRoot\r\n                        ? runWithFiberInDEV(wasHidden, hideInstance, maybeNodes)\r\n                        : runWithFiberInDEV(\r\n                            wasHidden,\r\n                            unhideInstance,\r\n                            wasHidden.stateNode,\r\n                            wasHidden.memoizedProps\r\n                          );\r\n                  } catch (error) {\r\n                    captureCommitPhaseError(wasHidden, wasHidden.return, error);\r\n                  }\r\n                }\r\n              } else if (6 === root.tag) {\r\n                if (null === current) {\r\n                  wasHidden = root;\r\n                  try {\r\n                    (i = wasHidden.stateNode),\r\n                      hoistableRoot\r\n                        ? runWithFiberInDEV(wasHidden, hideTextInstance, i)\r\n                        : runWithFiberInDEV(\r\n                            wasHidden,\r\n                            unhideTextInstance,\r\n                            i,\r\n                            wasHidden.memoizedProps\r\n                          );\r\n                  } catch (error) {\r\n                    captureCommitPhaseError(wasHidden, wasHidden.return, error);\r\n                  }\r\n                }\r\n              } else if (\r\n                ((22 !== root.tag && 23 !== root.tag) ||\r\n                  null === root.memoizedState ||\r\n                  root === finishedWork) &&\r\n                null !== root.child\r\n              ) {\r\n                root.child.return = root;\r\n                root = root.child;\r\n                continue;\r\n              }\r\n              if (root === finishedWork) break a;\r\n              for (; null === root.sibling; ) {\r\n                if (null === root.return || root.return === finishedWork)\r\n                  break a;\r\n                current === root && (current = null);\r\n                root = root.return;\r\n              }\r\n              current === root && (current = null);\r\n              root.sibling.return = root.return;\r\n              root = root.sibling;\r\n            }\r\n          flags & 4 &&\r\n            ((flags = finishedWork.updateQueue),\r\n            null !== flags &&\r\n              ((current = flags.retryQueue),\r\n              null !== current &&\r\n                ((flags.retryQueue = null),\r\n                attachSuspenseRetryListeners(finishedWork, current))));\r\n          break;\r\n        case 19:\r\n          recursivelyTraverseMutationEffects(root, finishedWork);\r\n          commitReconciliationEffects(finishedWork);\r\n          flags & 4 &&\r\n            ((flags = finishedWork.updateQueue),\r\n            null !== flags &&\r\n              ((finishedWork.updateQueue = null),\r\n              attachSuspenseRetryListeners(finishedWork, flags)));\r\n          break;\r\n        case 30:\r\n          break;\r\n        case 21:\r\n          break;\r\n        default:\r\n          recursivelyTraverseMutationEffects(root, finishedWork),\r\n            commitReconciliationEffects(finishedWork);\r\n      }\r\n    }\r\n    function commitReconciliationEffects(finishedWork) {\r\n      var flags = finishedWork.flags;\r\n      if (flags & 2) {\r\n        try {\r\n          runWithFiberInDEV(finishedWork, commitPlacement, finishedWork);\r\n        } catch (error) {\r\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n        }\r\n        finishedWork.flags &= -3;\r\n      }\r\n      flags & 4096 && (finishedWork.flags &= -4097);\r\n    }\r\n    function recursivelyResetForms(parentFiber) {\r\n      if (parentFiber.subtreeFlags & 1024)\r\n        for (parentFiber = parentFiber.child; null !== parentFiber; ) {\r\n          var fiber = parentFiber;\r\n          recursivelyResetForms(fiber);\r\n          5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();\r\n          parentFiber = parentFiber.sibling;\r\n        }\r\n    }\r\n    function recursivelyTraverseLayoutEffects(root, parentFiber) {\r\n      if (parentFiber.subtreeFlags & 8772)\r\n        for (parentFiber = parentFiber.child; null !== parentFiber; )\r\n          commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber),\r\n            (parentFiber = parentFiber.sibling);\r\n    }\r\n    function disappearLayoutEffects(finishedWork) {\r\n      switch (finishedWork.tag) {\r\n        case 0:\r\n        case 11:\r\n        case 14:\r\n        case 15:\r\n          commitHookLayoutUnmountEffects(\r\n            finishedWork,\r\n            finishedWork.return,\r\n            Layout\r\n          );\r\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\r\n          break;\r\n        case 1:\r\n          safelyDetachRef(finishedWork, finishedWork.return);\r\n          var instance = finishedWork.stateNode;\r\n          \"function\" === typeof instance.componentWillUnmount &&\r\n            safelyCallComponentWillUnmount(\r\n              finishedWork,\r\n              finishedWork.return,\r\n              instance\r\n            );\r\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\r\n          break;\r\n        case 27:\r\n          runWithFiberInDEV(\r\n            finishedWork,\r\n            releaseSingletonInstance,\r\n            finishedWork.stateNode\r\n          );\r\n        case 26:\r\n        case 5:\r\n          safelyDetachRef(finishedWork, finishedWork.return);\r\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\r\n          break;\r\n        case 22:\r\n          null === finishedWork.memoizedState &&\r\n            recursivelyTraverseDisappearLayoutEffects(finishedWork);\r\n          break;\r\n        case 30:\r\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\r\n          break;\r\n        default:\r\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\r\n      }\r\n    }\r\n    function recursivelyTraverseDisappearLayoutEffects(parentFiber) {\r\n      for (parentFiber = parentFiber.child; null !== parentFiber; )\r\n        disappearLayoutEffects(parentFiber),\r\n          (parentFiber = parentFiber.sibling);\r\n    }\r\n    function reappearLayoutEffects(\r\n      finishedRoot,\r\n      current,\r\n      finishedWork,\r\n      includeWorkInProgressEffects\r\n    ) {\r\n      var flags = finishedWork.flags;\r\n      switch (finishedWork.tag) {\r\n        case 0:\r\n        case 11:\r\n        case 15:\r\n          recursivelyTraverseReappearLayoutEffects(\r\n            finishedRoot,\r\n            finishedWork,\r\n            includeWorkInProgressEffects\r\n          );\r\n          commitHookLayoutEffects(finishedWork, Layout);\r\n          break;\r\n        case 1:\r\n          recursivelyTraverseReappearLayoutEffects(\r\n            finishedRoot,\r\n            finishedWork,\r\n            includeWorkInProgressEffects\r\n          );\r\n          current = finishedWork.stateNode;\r\n          \"function\" === typeof current.componentDidMount &&\r\n            runWithFiberInDEV(\r\n              finishedWork,\r\n              callComponentDidMountInDEV,\r\n              finishedWork,\r\n              current\r\n            );\r\n          current = finishedWork.updateQueue;\r\n          if (null !== current) {\r\n            finishedRoot = finishedWork.stateNode;\r\n            try {\r\n              runWithFiberInDEV(\r\n                finishedWork,\r\n                commitHiddenCallbacks,\r\n                current,\r\n                finishedRoot\r\n              );\r\n            } catch (error) {\r\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n            }\r\n          }\r\n          includeWorkInProgressEffects &&\r\n            flags & 64 &&\r\n            commitClassCallbacks(finishedWork);\r\n          safelyAttachRef(finishedWork, finishedWork.return);\r\n          break;\r\n        case 27:\r\n          commitHostSingletonAcquisition(finishedWork);\r\n        case 26:\r\n        case 5:\r\n          recursivelyTraverseReappearLayoutEffects(\r\n            finishedRoot,\r\n            finishedWork,\r\n            includeWorkInProgressEffects\r\n          );\r\n          includeWorkInProgressEffects &&\r\n            null === current &&\r\n            flags & 4 &&\r\n            commitHostMount(finishedWork);\r\n          safelyAttachRef(finishedWork, finishedWork.return);\r\n          break;\r\n        case 12:\r\n          if (includeWorkInProgressEffects && flags & 4) {\r\n            flags = pushNestedEffectDurations();\r\n            recursivelyTraverseReappearLayoutEffects(\r\n              finishedRoot,\r\n              finishedWork,\r\n              includeWorkInProgressEffects\r\n            );\r\n            includeWorkInProgressEffects = finishedWork.stateNode;\r\n            includeWorkInProgressEffects.effectDuration +=\r\n              bubbleNestedEffectDurations(flags);\r\n            try {\r\n              runWithFiberInDEV(\r\n                finishedWork,\r\n                commitProfiler,\r\n                finishedWork,\r\n                current,\r\n                commitStartTime,\r\n                includeWorkInProgressEffects.effectDuration\r\n              );\r\n            } catch (error) {\r\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n            }\r\n          } else\r\n            recursivelyTraverseReappearLayoutEffects(\r\n              finishedRoot,\r\n              finishedWork,\r\n              includeWorkInProgressEffects\r\n            );\r\n          break;\r\n        case 13:\r\n          recursivelyTraverseReappearLayoutEffects(\r\n            finishedRoot,\r\n            finishedWork,\r\n            includeWorkInProgressEffects\r\n          );\r\n          includeWorkInProgressEffects &&\r\n            flags & 4 &&\r\n            commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\r\n          break;\r\n        case 22:\r\n          null === finishedWork.memoizedState &&\r\n            recursivelyTraverseReappearLayoutEffects(\r\n              finishedRoot,\r\n              finishedWork,\r\n              includeWorkInProgressEffects\r\n            );\r\n          safelyAttachRef(finishedWork, finishedWork.return);\r\n          break;\r\n        case 30:\r\n          break;\r\n        default:\r\n          recursivelyTraverseReappearLayoutEffects(\r\n            finishedRoot,\r\n            finishedWork,\r\n            includeWorkInProgressEffects\r\n          );\r\n      }\r\n    }\r\n    function recursivelyTraverseReappearLayoutEffects(\r\n      finishedRoot,\r\n      parentFiber,\r\n      includeWorkInProgressEffects\r\n    ) {\r\n      includeWorkInProgressEffects =\r\n        includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);\r\n      for (parentFiber = parentFiber.child; null !== parentFiber; )\r\n        reappearLayoutEffects(\r\n          finishedRoot,\r\n          parentFiber.alternate,\r\n          parentFiber,\r\n          includeWorkInProgressEffects\r\n        ),\r\n          (parentFiber = parentFiber.sibling);\r\n    }\r\n    function commitOffscreenPassiveMountEffects(current, finishedWork) {\r\n      var previousCache = null;\r\n      null !== current &&\r\n        null !== current.memoizedState &&\r\n        null !== current.memoizedState.cachePool &&\r\n        (previousCache = current.memoizedState.cachePool.pool);\r\n      current = null;\r\n      null !== finishedWork.memoizedState &&\r\n        null !== finishedWork.memoizedState.cachePool &&\r\n        (current = finishedWork.memoizedState.cachePool.pool);\r\n      current !== previousCache &&\r\n        (null != current && retainCache(current),\r\n        null != previousCache && releaseCache(previousCache));\r\n    }\r\n    function commitCachePassiveMountEffect(current, finishedWork) {\r\n      current = null;\r\n      null !== finishedWork.alternate &&\r\n        (current = finishedWork.alternate.memoizedState.cache);\r\n      finishedWork = finishedWork.memoizedState.cache;\r\n      finishedWork !== current &&\r\n        (retainCache(finishedWork), null != current && releaseCache(current));\r\n    }\r\n    function recursivelyTraversePassiveMountEffects(\r\n      root,\r\n      parentFiber,\r\n      committedLanes,\r\n      committedTransitions\r\n    ) {\r\n      if (parentFiber.subtreeFlags & 10256)\r\n        for (parentFiber = parentFiber.child; null !== parentFiber; )\r\n          commitPassiveMountOnFiber(\r\n            root,\r\n            parentFiber,\r\n            committedLanes,\r\n            committedTransitions\r\n          ),\r\n            (parentFiber = parentFiber.sibling);\r\n    }\r\n    function commitPassiveMountOnFiber(\r\n      finishedRoot,\r\n      finishedWork,\r\n      committedLanes,\r\n      committedTransitions\r\n    ) {\r\n      var flags = finishedWork.flags;\r\n      switch (finishedWork.tag) {\r\n        case 0:\r\n        case 11:\r\n        case 15:\r\n          recursivelyTraversePassiveMountEffects(\r\n            finishedRoot,\r\n            finishedWork,\r\n            committedLanes,\r\n            committedTransitions\r\n          );\r\n          flags & 2048 &&\r\n            commitHookPassiveMountEffects(finishedWork, Passive | HasEffect);\r\n          break;\r\n        case 1:\r\n          recursivelyTraversePassiveMountEffects(\r\n            finishedRoot,\r\n            finishedWork,\r\n            committedLanes,\r\n            committedTransitions\r\n          );\r\n          break;\r\n        case 3:\r\n          var prevEffectDuration = pushNestedEffectDurations();\r\n          recursivelyTraversePassiveMountEffects(\r\n            finishedRoot,\r\n            finishedWork,\r\n            committedLanes,\r\n            committedTransitions\r\n          );\r\n          flags & 2048 &&\r\n            ((committedLanes = null),\r\n            null !== finishedWork.alternate &&\r\n              (committedLanes = finishedWork.alternate.memoizedState.cache),\r\n            (finishedWork = finishedWork.memoizedState.cache),\r\n            finishedWork !== committedLanes &&\r\n              (retainCache(finishedWork),\r\n              null != committedLanes && releaseCache(committedLanes)));\r\n          finishedRoot.passiveEffectDuration +=\r\n            popNestedEffectDurations(prevEffectDuration);\r\n          break;\r\n        case 12:\r\n          if (flags & 2048) {\r\n            flags = pushNestedEffectDurations();\r\n            recursivelyTraversePassiveMountEffects(\r\n              finishedRoot,\r\n              finishedWork,\r\n              committedLanes,\r\n              committedTransitions\r\n            );\r\n            finishedRoot = finishedWork.stateNode;\r\n            finishedRoot.passiveEffectDuration +=\r\n              bubbleNestedEffectDurations(flags);\r\n            try {\r\n              runWithFiberInDEV(\r\n                finishedWork,\r\n                commitProfilerPostCommitImpl,\r\n                finishedWork,\r\n                finishedWork.alternate,\r\n                commitStartTime,\r\n                finishedRoot.passiveEffectDuration\r\n              );\r\n            } catch (error) {\r\n              captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n            }\r\n          } else\r\n            recursivelyTraversePassiveMountEffects(\r\n              finishedRoot,\r\n              finishedWork,\r\n              committedLanes,\r\n              committedTransitions\r\n            );\r\n          break;\r\n        case 13:\r\n          recursivelyTraversePassiveMountEffects(\r\n            finishedRoot,\r\n            finishedWork,\r\n            committedLanes,\r\n            committedTransitions\r\n          );\r\n          break;\r\n        case 23:\r\n          break;\r\n        case 22:\r\n          prevEffectDuration = finishedWork.stateNode;\r\n          var _current = finishedWork.alternate;\r\n          null !== finishedWork.memoizedState\r\n            ? prevEffectDuration._visibility & OffscreenPassiveEffectsConnected\r\n              ? recursivelyTraversePassiveMountEffects(\r\n                  finishedRoot,\r\n                  finishedWork,\r\n                  committedLanes,\r\n                  committedTransitions\r\n                )\r\n              : recursivelyTraverseAtomicPassiveEffects(\r\n                  finishedRoot,\r\n                  finishedWork\r\n                )\r\n            : prevEffectDuration._visibility & OffscreenPassiveEffectsConnected\r\n              ? recursivelyTraversePassiveMountEffects(\r\n                  finishedRoot,\r\n                  finishedWork,\r\n                  committedLanes,\r\n                  committedTransitions\r\n                )\r\n              : ((prevEffectDuration._visibility |=\r\n                  OffscreenPassiveEffectsConnected),\r\n                recursivelyTraverseReconnectPassiveEffects(\r\n                  finishedRoot,\r\n                  finishedWork,\r\n                  committedLanes,\r\n                  committedTransitions,\r\n                  0 !== (finishedWork.subtreeFlags & 10256)\r\n                ));\r\n          flags & 2048 &&\r\n            commitOffscreenPassiveMountEffects(_current, finishedWork);\r\n          break;\r\n        case 24:\r\n          recursivelyTraversePassiveMountEffects(\r\n            finishedRoot,\r\n            finishedWork,\r\n            committedLanes,\r\n            committedTransitions\r\n          );\r\n          flags & 2048 &&\r\n            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\r\n          break;\r\n        default:\r\n          recursivelyTraversePassiveMountEffects(\r\n            finishedRoot,\r\n            finishedWork,\r\n            committedLanes,\r\n            committedTransitions\r\n          );\r\n      }\r\n    }\r\n    function recursivelyTraverseReconnectPassiveEffects(\r\n      finishedRoot,\r\n      parentFiber,\r\n      committedLanes,\r\n      committedTransitions,\r\n      includeWorkInProgressEffects\r\n    ) {\r\n      includeWorkInProgressEffects =\r\n        includeWorkInProgressEffects &&\r\n        0 !== (parentFiber.subtreeFlags & 10256);\r\n      for (parentFiber = parentFiber.child; null !== parentFiber; )\r\n        reconnectPassiveEffects(\r\n          finishedRoot,\r\n          parentFiber,\r\n          committedLanes,\r\n          committedTransitions,\r\n          includeWorkInProgressEffects\r\n        ),\r\n          (parentFiber = parentFiber.sibling);\r\n    }\r\n    function reconnectPassiveEffects(\r\n      finishedRoot,\r\n      finishedWork,\r\n      committedLanes,\r\n      committedTransitions,\r\n      includeWorkInProgressEffects\r\n    ) {\r\n      var flags = finishedWork.flags;\r\n      switch (finishedWork.tag) {\r\n        case 0:\r\n        case 11:\r\n        case 15:\r\n          recursivelyTraverseReconnectPassiveEffects(\r\n            finishedRoot,\r\n            finishedWork,\r\n            committedLanes,\r\n            committedTransitions,\r\n            includeWorkInProgressEffects\r\n          );\r\n          commitHookPassiveMountEffects(finishedWork, Passive);\r\n          break;\r\n        case 23:\r\n          break;\r\n        case 22:\r\n          var _instance2 = finishedWork.stateNode;\r\n          null !== finishedWork.memoizedState\r\n            ? _instance2._visibility & OffscreenPassiveEffectsConnected\r\n              ? recursivelyTraverseReconnectPassiveEffects(\r\n                  finishedRoot,\r\n                  finishedWork,\r\n                  committedLanes,\r\n                  committedTransitions,\r\n                  includeWorkInProgressEffects\r\n                )\r\n              : recursivelyTraverseAtomicPassiveEffects(\r\n                  finishedRoot,\r\n                  finishedWork\r\n                )\r\n            : ((_instance2._visibility |= OffscreenPassiveEffectsConnected),\r\n              recursivelyTraverseReconnectPassiveEffects(\r\n                finishedRoot,\r\n                finishedWork,\r\n                committedLanes,\r\n                committedTransitions,\r\n                includeWorkInProgressEffects\r\n              ));\r\n          includeWorkInProgressEffects &&\r\n            flags & 2048 &&\r\n            commitOffscreenPassiveMountEffects(\r\n              finishedWork.alternate,\r\n              finishedWork\r\n            );\r\n          break;\r\n        case 24:\r\n          recursivelyTraverseReconnectPassiveEffects(\r\n            finishedRoot,\r\n            finishedWork,\r\n            committedLanes,\r\n            committedTransitions,\r\n            includeWorkInProgressEffects\r\n          );\r\n          includeWorkInProgressEffects &&\r\n            flags & 2048 &&\r\n            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\r\n          break;\r\n        default:\r\n          recursivelyTraverseReconnectPassiveEffects(\r\n            finishedRoot,\r\n            finishedWork,\r\n            committedLanes,\r\n            committedTransitions,\r\n            includeWorkInProgressEffects\r\n          );\r\n      }\r\n    }\r\n    function recursivelyTraverseAtomicPassiveEffects(\r\n      finishedRoot$jscomp$0,\r\n      parentFiber\r\n    ) {\r\n      if (parentFiber.subtreeFlags & 10256)\r\n        for (parentFiber = parentFiber.child; null !== parentFiber; ) {\r\n          var finishedRoot = finishedRoot$jscomp$0,\r\n            finishedWork = parentFiber,\r\n            flags = finishedWork.flags;\r\n          switch (finishedWork.tag) {\r\n            case 22:\r\n              recursivelyTraverseAtomicPassiveEffects(\r\n                finishedRoot,\r\n                finishedWork\r\n              );\r\n              flags & 2048 &&\r\n                commitOffscreenPassiveMountEffects(\r\n                  finishedWork.alternate,\r\n                  finishedWork\r\n                );\r\n              break;\r\n            case 24:\r\n              recursivelyTraverseAtomicPassiveEffects(\r\n                finishedRoot,\r\n                finishedWork\r\n              );\r\n              flags & 2048 &&\r\n                commitCachePassiveMountEffect(\r\n                  finishedWork.alternate,\r\n                  finishedWork\r\n                );\r\n              break;\r\n            default:\r\n              recursivelyTraverseAtomicPassiveEffects(\r\n                finishedRoot,\r\n                finishedWork\r\n              );\r\n          }\r\n          parentFiber = parentFiber.sibling;\r\n        }\r\n    }\r\n    function recursivelyAccumulateSuspenseyCommit(parentFiber) {\r\n      if (parentFiber.subtreeFlags & suspenseyCommitFlag)\r\n        for (parentFiber = parentFiber.child; null !== parentFiber; )\r\n          accumulateSuspenseyCommitOnFiber(parentFiber),\r\n            (parentFiber = parentFiber.sibling);\r\n    }\r\n    function accumulateSuspenseyCommitOnFiber(fiber) {\r\n      switch (fiber.tag) {\r\n        case 26:\r\n          recursivelyAccumulateSuspenseyCommit(fiber);\r\n          fiber.flags & suspenseyCommitFlag &&\r\n            null !== fiber.memoizedState &&\r\n            suspendResource(\r\n              currentHoistableRoot,\r\n              fiber.memoizedState,\r\n              fiber.memoizedProps\r\n            );\r\n          break;\r\n        case 5:\r\n          recursivelyAccumulateSuspenseyCommit(fiber);\r\n          break;\r\n        case 3:\r\n        case 4:\r\n          var previousHoistableRoot = currentHoistableRoot;\r\n          currentHoistableRoot = getHoistableRoot(\r\n            fiber.stateNode.containerInfo\r\n          );\r\n          recursivelyAccumulateSuspenseyCommit(fiber);\r\n          currentHoistableRoot = previousHoistableRoot;\r\n          break;\r\n        case 22:\r\n          null === fiber.memoizedState &&\r\n            ((previousHoistableRoot = fiber.alternate),\r\n            null !== previousHoistableRoot &&\r\n            null !== previousHoistableRoot.memoizedState\r\n              ? ((previousHoistableRoot = suspenseyCommitFlag),\r\n                (suspenseyCommitFlag = 16777216),\r\n                recursivelyAccumulateSuspenseyCommit(fiber),\r\n                (suspenseyCommitFlag = previousHoistableRoot))\r\n              : recursivelyAccumulateSuspenseyCommit(fiber));\r\n          break;\r\n        default:\r\n          recursivelyAccumulateSuspenseyCommit(fiber);\r\n      }\r\n    }\r\n    function detachAlternateSiblings(parentFiber) {\r\n      var previousFiber = parentFiber.alternate;\r\n      if (\r\n        null !== previousFiber &&\r\n        ((parentFiber = previousFiber.child), null !== parentFiber)\r\n      ) {\r\n        previousFiber.child = null;\r\n        do\r\n          (previousFiber = parentFiber.sibling),\r\n            (parentFiber.sibling = null),\r\n            (parentFiber = previousFiber);\r\n        while (null !== parentFiber);\r\n      }\r\n    }\r\n    function recursivelyTraversePassiveUnmountEffects(parentFiber) {\r\n      var deletions = parentFiber.deletions;\r\n      if (0 !== (parentFiber.flags & 16)) {\r\n        if (null !== deletions)\r\n          for (var i = 0; i < deletions.length; i++) {\r\n            var childToDelete = deletions[i];\r\n            nextEffect = childToDelete;\r\n            commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\r\n              childToDelete,\r\n              parentFiber\r\n            );\r\n          }\r\n        detachAlternateSiblings(parentFiber);\r\n      }\r\n      if (parentFiber.subtreeFlags & 10256)\r\n        for (parentFiber = parentFiber.child; null !== parentFiber; )\r\n          commitPassiveUnmountOnFiber(parentFiber),\r\n            (parentFiber = parentFiber.sibling);\r\n    }\r\n    function commitPassiveUnmountOnFiber(finishedWork) {\r\n      switch (finishedWork.tag) {\r\n        case 0:\r\n        case 11:\r\n        case 15:\r\n          recursivelyTraversePassiveUnmountEffects(finishedWork);\r\n          finishedWork.flags & 2048 &&\r\n            commitHookPassiveUnmountEffects(\r\n              finishedWork,\r\n              finishedWork.return,\r\n              Passive | HasEffect\r\n            );\r\n          break;\r\n        case 3:\r\n          var prevEffectDuration = pushNestedEffectDurations();\r\n          recursivelyTraversePassiveUnmountEffects(finishedWork);\r\n          finishedWork.stateNode.passiveEffectDuration +=\r\n            popNestedEffectDurations(prevEffectDuration);\r\n          break;\r\n        case 12:\r\n          prevEffectDuration = pushNestedEffectDurations();\r\n          recursivelyTraversePassiveUnmountEffects(finishedWork);\r\n          finishedWork.stateNode.passiveEffectDuration +=\r\n            bubbleNestedEffectDurations(prevEffectDuration);\r\n          break;\r\n        case 22:\r\n          prevEffectDuration = finishedWork.stateNode;\r\n          null !== finishedWork.memoizedState &&\r\n          prevEffectDuration._visibility & OffscreenPassiveEffectsConnected &&\r\n          (null === finishedWork.return || 13 !== finishedWork.return.tag)\r\n            ? ((prevEffectDuration._visibility &=\r\n                ~OffscreenPassiveEffectsConnected),\r\n              recursivelyTraverseDisconnectPassiveEffects(finishedWork))\r\n            : recursivelyTraversePassiveUnmountEffects(finishedWork);\r\n          break;\r\n        default:\r\n          recursivelyTraversePassiveUnmountEffects(finishedWork);\r\n      }\r\n    }\r\n    function recursivelyTraverseDisconnectPassiveEffects(parentFiber) {\r\n      var deletions = parentFiber.deletions;\r\n      if (0 !== (parentFiber.flags & 16)) {\r\n        if (null !== deletions)\r\n          for (var i = 0; i < deletions.length; i++) {\r\n            var childToDelete = deletions[i];\r\n            nextEffect = childToDelete;\r\n            commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\r\n              childToDelete,\r\n              parentFiber\r\n            );\r\n          }\r\n        detachAlternateSiblings(parentFiber);\r\n      }\r\n      for (parentFiber = parentFiber.child; null !== parentFiber; )\r\n        disconnectPassiveEffect(parentFiber),\r\n          (parentFiber = parentFiber.sibling);\r\n    }\r\n    function disconnectPassiveEffect(finishedWork) {\r\n      switch (finishedWork.tag) {\r\n        case 0:\r\n        case 11:\r\n        case 15:\r\n          commitHookPassiveUnmountEffects(\r\n            finishedWork,\r\n            finishedWork.return,\r\n            Passive\r\n          );\r\n          recursivelyTraverseDisconnectPassiveEffects(finishedWork);\r\n          break;\r\n        case 22:\r\n          var instance = finishedWork.stateNode;\r\n          instance._visibility & OffscreenPassiveEffectsConnected &&\r\n            ((instance._visibility &= ~OffscreenPassiveEffectsConnected),\r\n            recursivelyTraverseDisconnectPassiveEffects(finishedWork));\r\n          break;\r\n        default:\r\n          recursivelyTraverseDisconnectPassiveEffects(finishedWork);\r\n      }\r\n    }\r\n    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\r\n      deletedSubtreeRoot,\r\n      nearestMountedAncestor\r\n    ) {\r\n      for (; null !== nextEffect; ) {\r\n        var fiber = nextEffect,\r\n          current = fiber;\r\n        switch (current.tag) {\r\n          case 0:\r\n          case 11:\r\n          case 15:\r\n            commitHookPassiveUnmountEffects(\r\n              current,\r\n              nearestMountedAncestor,\r\n              Passive\r\n            );\r\n            break;\r\n          case 23:\r\n          case 22:\r\n            null !== current.memoizedState &&\r\n              null !== current.memoizedState.cachePool &&\r\n              ((current = current.memoizedState.cachePool.pool),\r\n              null != current && retainCache(current));\r\n            break;\r\n          case 24:\r\n            releaseCache(current.memoizedState.cache);\r\n        }\r\n        current = fiber.child;\r\n        if (null !== current) (current.return = fiber), (nextEffect = current);\r\n        else\r\n          a: for (fiber = deletedSubtreeRoot; null !== nextEffect; ) {\r\n            current = nextEffect;\r\n            var sibling = current.sibling,\r\n              returnFiber = current.return;\r\n            detachFiberAfterEffects(current);\r\n            if (current === fiber) {\r\n              nextEffect = null;\r\n              break a;\r\n            }\r\n            if (null !== sibling) {\r\n              sibling.return = returnFiber;\r\n              nextEffect = sibling;\r\n              break a;\r\n            }\r\n            nextEffect = returnFiber;\r\n          }\r\n      }\r\n    }\r\n    function onCommitRoot() {\r\n      commitHooks.forEach(function (commitHook) {\r\n        return commitHook();\r\n      });\r\n    }\r\n    function isConcurrentActEnvironment() {\r\n      var isReactActEnvironmentGlobal =\r\n        \"undefined\" !== typeof IS_REACT_ACT_ENVIRONMENT\r\n          ? IS_REACT_ACT_ENVIRONMENT\r\n          : void 0;\r\n      isReactActEnvironmentGlobal ||\r\n        null === ReactSharedInternals.actQueue ||\r\n        console.error(\r\n          \"The current testing environment is not configured to support act(...)\"\r\n        );\r\n      return isReactActEnvironmentGlobal;\r\n    }\r\n    function requestUpdateLane(fiber) {\r\n      if (\r\n        (executionContext & RenderContext) !== NoContext &&\r\n        0 !== workInProgressRootRenderLanes\r\n      )\r\n        return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;\r\n      var transition = ReactSharedInternals.T;\r\n      return null !== transition\r\n        ? (transition._updatedFibers || (transition._updatedFibers = new Set()),\r\n          transition._updatedFibers.add(fiber),\r\n          (fiber = currentEntangledLane),\r\n          0 !== fiber ? fiber : requestTransitionLane())\r\n        : resolveUpdatePriority();\r\n    }\r\n    function requestDeferredLane() {\r\n      0 === workInProgressDeferredLane &&\r\n        (workInProgressDeferredLane =\r\n          0 === (workInProgressRootRenderLanes & 536870912) || isHydrating\r\n            ? claimNextTransitionLane()\r\n            : 536870912);\r\n      var suspenseHandler = suspenseHandlerStackCursor.current;\r\n      null !== suspenseHandler && (suspenseHandler.flags |= 32);\r\n      return workInProgressDeferredLane;\r\n    }\r\n    function scheduleUpdateOnFiber(root, fiber, lane) {\r\n      isRunningInsertionEffect &&\r\n        console.error(\"useInsertionEffect must not schedule updates.\");\r\n      isFlushingPassiveEffects && (didScheduleUpdateDuringPassiveEffects = !0);\r\n      if (\r\n        (root === workInProgressRoot &&\r\n          (workInProgressSuspendedReason === SuspendedOnData ||\r\n            workInProgressSuspendedReason === SuspendedOnAction)) ||\r\n        null !== root.cancelPendingCommit\r\n      )\r\n        prepareFreshStack(root, 0),\r\n          markRootSuspended(\r\n            root,\r\n            workInProgressRootRenderLanes,\r\n            workInProgressDeferredLane,\r\n            !1\r\n          );\r\n      markRootUpdated$1(root, lane);\r\n      if (\r\n        0 !== (executionContext & RenderContext) &&\r\n        root === workInProgressRoot\r\n      ) {\r\n        if (isRendering)\r\n          switch (fiber.tag) {\r\n            case 0:\r\n            case 11:\r\n            case 15:\r\n              root =\r\n                (workInProgress && getComponentNameFromFiber(workInProgress)) ||\r\n                \"Unknown\";\r\n              didWarnAboutUpdateInRenderForAnotherComponent.has(root) ||\r\n                (didWarnAboutUpdateInRenderForAnotherComponent.add(root),\r\n                (fiber = getComponentNameFromFiber(fiber) || \"Unknown\"),\r\n                console.error(\r\n                  \"Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://react.dev/link/setstate-in-render\",\r\n                  fiber,\r\n                  root,\r\n                  root\r\n                ));\r\n              break;\r\n            case 1:\r\n              didWarnAboutUpdateInRender ||\r\n                (console.error(\r\n                  \"Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.\"\r\n                ),\r\n                (didWarnAboutUpdateInRender = !0));\r\n          }\r\n      } else\r\n        isDevToolsPresent && addFiberToLanesMap(root, fiber, lane),\r\n          warnIfUpdatesNotWrappedWithActDEV(fiber),\r\n          root === workInProgressRoot &&\r\n            ((executionContext & RenderContext) === NoContext &&\r\n              (workInProgressRootInterleavedUpdatedLanes |= lane),\r\n            workInProgressRootExitStatus === RootSuspendedWithDelay &&\r\n              markRootSuspended(\r\n                root,\r\n                workInProgressRootRenderLanes,\r\n                workInProgressDeferredLane,\r\n                !1\r\n              )),\r\n          ensureRootIsScheduled(root);\r\n    }\r\n    function performWorkOnRoot(root, lanes, forceSync) {\r\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext)\r\n        throw Error(\"Should not already be working.\");\r\n      var shouldTimeSlice =\r\n          (!forceSync &&\r\n            0 === (lanes & 124) &&\r\n            0 === (lanes & root.expiredLanes)) ||\r\n          checkIfRootIsPrerendering(root, lanes),\r\n        exitStatus = shouldTimeSlice\r\n          ? renderRootConcurrent(root, lanes)\r\n          : renderRootSync(root, lanes, !0),\r\n        renderWasConcurrent = shouldTimeSlice;\r\n      do {\r\n        if (exitStatus === RootInProgress) {\r\n          workInProgressRootIsPrerendering &&\r\n            !shouldTimeSlice &&\r\n            markRootSuspended(root, lanes, 0, !1);\r\n          break;\r\n        } else {\r\n          forceSync = root.current.alternate;\r\n          if (\r\n            renderWasConcurrent &&\r\n            !isRenderConsistentWithExternalStores(forceSync)\r\n          ) {\r\n            exitStatus = renderRootSync(root, lanes, !1);\r\n            renderWasConcurrent = !1;\r\n            continue;\r\n          }\r\n          if (exitStatus === RootErrored) {\r\n            renderWasConcurrent = lanes;\r\n            if (root.errorRecoveryDisabledLanes & renderWasConcurrent)\r\n              var errorRetryLanes = 0;\r\n            else\r\n              (errorRetryLanes = root.pendingLanes & -536870913),\r\n                (errorRetryLanes =\r\n                  0 !== errorRetryLanes\r\n                    ? errorRetryLanes\r\n                    : errorRetryLanes & 536870912\r\n                      ? 536870912\r\n                      : 0);\r\n            if (0 !== errorRetryLanes) {\r\n              lanes = errorRetryLanes;\r\n              a: {\r\n                exitStatus = root;\r\n                var errorRetryLanes$jscomp$0 = errorRetryLanes;\r\n                errorRetryLanes = workInProgressRootConcurrentErrors;\r\n                var wasRootDehydrated =\r\n                  exitStatus.current.memoizedState.isDehydrated;\r\n                wasRootDehydrated &&\r\n                  (prepareFreshStack(\r\n                    exitStatus,\r\n                    errorRetryLanes$jscomp$0\r\n                  ).flags |= 256);\r\n                errorRetryLanes$jscomp$0 = renderRootSync(\r\n                  exitStatus,\r\n                  errorRetryLanes$jscomp$0,\r\n                  !1\r\n                );\r\n                if (errorRetryLanes$jscomp$0 !== RootErrored) {\r\n                  if (\r\n                    workInProgressRootDidAttachPingListener &&\r\n                    !wasRootDehydrated\r\n                  ) {\r\n                    exitStatus.errorRecoveryDisabledLanes |=\r\n                      renderWasConcurrent;\r\n                    workInProgressRootInterleavedUpdatedLanes |=\r\n                      renderWasConcurrent;\r\n                    exitStatus = RootSuspendedWithDelay;\r\n                    break a;\r\n                  }\r\n                  exitStatus = workInProgressRootRecoverableErrors;\r\n                  workInProgressRootRecoverableErrors = errorRetryLanes;\r\n                  null !== exitStatus &&\r\n                    (null === workInProgressRootRecoverableErrors\r\n                      ? (workInProgressRootRecoverableErrors = exitStatus)\r\n                      : workInProgressRootRecoverableErrors.push.apply(\r\n                          workInProgressRootRecoverableErrors,\r\n                          exitStatus\r\n                        ));\r\n                }\r\n                exitStatus = errorRetryLanes$jscomp$0;\r\n              }\r\n              renderWasConcurrent = !1;\r\n              if (exitStatus !== RootErrored) continue;\r\n            }\r\n          }\r\n          if (exitStatus === RootFatalErrored) {\r\n            prepareFreshStack(root, 0);\r\n            markRootSuspended(root, lanes, 0, !0);\r\n            break;\r\n          }\r\n          a: {\r\n            shouldTimeSlice = root;\r\n            switch (exitStatus) {\r\n              case RootInProgress:\r\n              case RootFatalErrored:\r\n                throw Error(\"Root did not complete. This is a bug in React.\");\r\n              case RootSuspendedWithDelay:\r\n                if ((lanes & 4194048) !== lanes) break;\r\n              case RootSuspendedAtTheShell:\r\n                markRootSuspended(\r\n                  shouldTimeSlice,\r\n                  lanes,\r\n                  workInProgressDeferredLane,\r\n                  !workInProgressRootDidSkipSuspendedSiblings\r\n                );\r\n                break a;\r\n              case RootErrored:\r\n                workInProgressRootRecoverableErrors = null;\r\n                break;\r\n              case RootSuspended:\r\n              case RootCompleted:\r\n                break;\r\n              default:\r\n                throw Error(\"Unknown root exit status.\");\r\n            }\r\n            if (null !== ReactSharedInternals.actQueue)\r\n              commitRoot(\r\n                shouldTimeSlice,\r\n                forceSync,\r\n                lanes,\r\n                workInProgressRootRecoverableErrors,\r\n                workInProgressTransitions,\r\n                workInProgressRootDidIncludeRecursiveRenderUpdate,\r\n                workInProgressDeferredLane,\r\n                workInProgressRootInterleavedUpdatedLanes,\r\n                workInProgressSuspendedRetryLanes\r\n              );\r\n            else {\r\n              if (\r\n                (lanes & 62914560) === lanes &&\r\n                ((renderWasConcurrent =\r\n                  globalMostRecentFallbackTime +\r\n                  FALLBACK_THROTTLE_MS -\r\n                  now$1()),\r\n                10 < renderWasConcurrent)\r\n              ) {\r\n                markRootSuspended(\r\n                  shouldTimeSlice,\r\n                  lanes,\r\n                  workInProgressDeferredLane,\r\n                  !workInProgressRootDidSkipSuspendedSiblings\r\n                );\r\n                if (0 !== getNextLanes(shouldTimeSlice, 0, !0)) break a;\r\n                shouldTimeSlice.timeoutHandle = scheduleTimeout(\r\n                  commitRootWhenReady.bind(\r\n                    null,\r\n                    shouldTimeSlice,\r\n                    forceSync,\r\n                    workInProgressRootRecoverableErrors,\r\n                    workInProgressTransitions,\r\n                    workInProgressRootDidIncludeRecursiveRenderUpdate,\r\n                    lanes,\r\n                    workInProgressDeferredLane,\r\n                    workInProgressRootInterleavedUpdatedLanes,\r\n                    workInProgressSuspendedRetryLanes,\r\n                    workInProgressRootDidSkipSuspendedSiblings,\r\n                    exitStatus,\r\n                    THROTTLED_COMMIT,\r\n                    renderStartTime,\r\n                    0\r\n                  ),\r\n                  renderWasConcurrent\r\n                );\r\n                break a;\r\n              }\r\n              commitRootWhenReady(\r\n                shouldTimeSlice,\r\n                forceSync,\r\n                workInProgressRootRecoverableErrors,\r\n                workInProgressTransitions,\r\n                workInProgressRootDidIncludeRecursiveRenderUpdate,\r\n                lanes,\r\n                workInProgressDeferredLane,\r\n                workInProgressRootInterleavedUpdatedLanes,\r\n                workInProgressSuspendedRetryLanes,\r\n                workInProgressRootDidSkipSuspendedSiblings,\r\n                exitStatus,\r\n                IMMEDIATE_COMMIT,\r\n                renderStartTime,\r\n                0\r\n              );\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      } while (1);\r\n      ensureRootIsScheduled(root);\r\n    }\r\n    function commitRootWhenReady(\r\n      root,\r\n      finishedWork,\r\n      recoverableErrors,\r\n      transitions,\r\n      didIncludeRenderPhaseUpdate,\r\n      lanes,\r\n      spawnedLane,\r\n      updatedLanes,\r\n      suspendedRetryLanes,\r\n      didSkipSuspendedSiblings,\r\n      exitStatus,\r\n      suspendedCommitReason,\r\n      completedRenderStartTime,\r\n      completedRenderEndTime\r\n    ) {\r\n      root.timeoutHandle = noTimeout;\r\n      suspendedCommitReason = finishedWork.subtreeFlags;\r\n      if (\r\n        suspendedCommitReason & 8192 ||\r\n        16785408 === (suspendedCommitReason & 16785408)\r\n      )\r\n        if (\r\n          ((suspendedState = { stylesheets: null, count: 0, unsuspend: noop }),\r\n          accumulateSuspenseyCommitOnFiber(finishedWork),\r\n          (suspendedCommitReason = waitForCommitToBeReady()),\r\n          null !== suspendedCommitReason)\r\n        ) {\r\n          root.cancelPendingCommit = suspendedCommitReason(\r\n            commitRoot.bind(\r\n              null,\r\n              root,\r\n              finishedWork,\r\n              lanes,\r\n              recoverableErrors,\r\n              transitions,\r\n              didIncludeRenderPhaseUpdate,\r\n              spawnedLane,\r\n              updatedLanes,\r\n              suspendedRetryLanes,\r\n              exitStatus,\r\n              SUSPENDED_COMMIT,\r\n              completedRenderStartTime,\r\n              completedRenderEndTime\r\n            )\r\n          );\r\n          markRootSuspended(\r\n            root,\r\n            lanes,\r\n            spawnedLane,\r\n            !didSkipSuspendedSiblings\r\n          );\r\n          return;\r\n        }\r\n      commitRoot(\r\n        root,\r\n        finishedWork,\r\n        lanes,\r\n        recoverableErrors,\r\n        transitions,\r\n        didIncludeRenderPhaseUpdate,\r\n        spawnedLane,\r\n        updatedLanes,\r\n        suspendedRetryLanes\r\n      );\r\n    }\r\n    function isRenderConsistentWithExternalStores(finishedWork) {\r\n      for (var node = finishedWork; ; ) {\r\n        var tag = node.tag;\r\n        if (\r\n          (0 === tag || 11 === tag || 15 === tag) &&\r\n          node.flags & 16384 &&\r\n          ((tag = node.updateQueue),\r\n          null !== tag && ((tag = tag.stores), null !== tag))\r\n        )\r\n          for (var i = 0; i < tag.length; i++) {\r\n            var check = tag[i],\r\n              getSnapshot = check.getSnapshot;\r\n            check = check.value;\r\n            try {\r\n              if (!objectIs(getSnapshot(), check)) return !1;\r\n            } catch (error) {\r\n              return !1;\r\n            }\r\n          }\r\n        tag = node.child;\r\n        if (node.subtreeFlags & 16384 && null !== tag)\r\n          (tag.return = node), (node = tag);\r\n        else {\r\n          if (node === finishedWork) break;\r\n          for (; null === node.sibling; ) {\r\n            if (null === node.return || node.return === finishedWork) return !0;\r\n            node = node.return;\r\n          }\r\n          node.sibling.return = node.return;\r\n          node = node.sibling;\r\n        }\r\n      }\r\n      return !0;\r\n    }\r\n    function markRootSuspended(\r\n      root,\r\n      suspendedLanes,\r\n      spawnedLane,\r\n      didAttemptEntireTree\r\n    ) {\r\n      suspendedLanes &= ~workInProgressRootPingedLanes;\r\n      suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;\r\n      root.suspendedLanes |= suspendedLanes;\r\n      root.pingedLanes &= ~suspendedLanes;\r\n      didAttemptEntireTree && (root.warmLanes |= suspendedLanes);\r\n      didAttemptEntireTree = root.expirationTimes;\r\n      for (var lanes = suspendedLanes; 0 < lanes; ) {\r\n        var index = 31 - clz32(lanes),\r\n          lane = 1 << index;\r\n        didAttemptEntireTree[index] = -1;\r\n        lanes &= ~lane;\r\n      }\r\n      0 !== spawnedLane &&\r\n        markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);\r\n    }\r\n    function flushSyncWork$1() {\r\n      return (executionContext & (RenderContext | CommitContext)) === NoContext\r\n        ? (flushSyncWorkAcrossRoots_impl(0, !1), !1)\r\n        : !0;\r\n    }\r\n    function resetWorkInProgressStack() {\r\n      if (null !== workInProgress) {\r\n        if (workInProgressSuspendedReason === NotSuspended)\r\n          var interruptedWork = workInProgress.return;\r\n        else\r\n          (interruptedWork = workInProgress),\r\n            resetContextDependencies(),\r\n            resetHooksOnUnwind(interruptedWork),\r\n            (thenableState = null),\r\n            (thenableIndexCounter = 0),\r\n            (interruptedWork = workInProgress);\r\n        for (; null !== interruptedWork; )\r\n          unwindInterruptedWork(interruptedWork.alternate, interruptedWork),\r\n            (interruptedWork = interruptedWork.return);\r\n        workInProgress = null;\r\n      }\r\n    }\r\n    function prepareFreshStack(root, lanes) {\r\n      var timeoutHandle = root.timeoutHandle;\r\n      timeoutHandle !== noTimeout &&\r\n        ((root.timeoutHandle = noTimeout), cancelTimeout(timeoutHandle));\r\n      timeoutHandle = root.cancelPendingCommit;\r\n      null !== timeoutHandle &&\r\n        ((root.cancelPendingCommit = null), timeoutHandle());\r\n      resetWorkInProgressStack();\r\n      workInProgressRoot = root;\r\n      workInProgress = timeoutHandle = createWorkInProgress(root.current, null);\r\n      workInProgressRootRenderLanes = lanes;\r\n      workInProgressSuspendedReason = NotSuspended;\r\n      workInProgressThrownValue = null;\r\n      workInProgressRootDidSkipSuspendedSiblings = !1;\r\n      workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);\r\n      workInProgressRootDidAttachPingListener = !1;\r\n      workInProgressRootExitStatus = RootInProgress;\r\n      workInProgressSuspendedRetryLanes =\r\n        workInProgressDeferredLane =\r\n        workInProgressRootPingedLanes =\r\n        workInProgressRootInterleavedUpdatedLanes =\r\n        workInProgressRootSkippedLanes =\r\n          0;\r\n      workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =\r\n        null;\r\n      workInProgressRootDidIncludeRecursiveRenderUpdate = !1;\r\n      0 !== (lanes & 8) && (lanes |= lanes & 32);\r\n      var allEntangledLanes = root.entangledLanes;\r\n      if (0 !== allEntangledLanes)\r\n        for (\r\n          root = root.entanglements, allEntangledLanes &= lanes;\r\n          0 < allEntangledLanes;\r\n\r\n        ) {\r\n          var index = 31 - clz32(allEntangledLanes),\r\n            lane = 1 << index;\r\n          lanes |= root[index];\r\n          allEntangledLanes &= ~lane;\r\n        }\r\n      entangledRenderLanes = lanes;\r\n      finishQueueingConcurrentUpdates();\r\n      lanes = getCurrentTime();\r\n      1e3 < lanes - lastResetTime &&\r\n        ((ReactSharedInternals.recentlyCreatedOwnerStacks = 0),\r\n        (lastResetTime = lanes));\r\n      ReactStrictModeWarnings.discardPendingWarnings();\r\n      return timeoutHandle;\r\n    }\r\n    function handleThrow(root, thrownValue) {\r\n      currentlyRenderingFiber = null;\r\n      ReactSharedInternals.H = ContextOnlyDispatcher;\r\n      ReactSharedInternals.getCurrentStack = null;\r\n      isRendering = !1;\r\n      current = null;\r\n      thrownValue === SuspenseException ||\r\n      thrownValue === SuspenseActionException\r\n        ? ((thrownValue = getSuspendedThenable()),\r\n          (workInProgressSuspendedReason = SuspendedOnImmediate))\r\n        : thrownValue === SuspenseyCommitException\r\n          ? ((thrownValue = getSuspendedThenable()),\r\n            (workInProgressSuspendedReason = SuspendedOnInstance))\r\n          : (workInProgressSuspendedReason =\r\n              thrownValue === SelectiveHydrationException\r\n                ? SuspendedOnHydration\r\n                : null !== thrownValue &&\r\n                    \"object\" === typeof thrownValue &&\r\n                    \"function\" === typeof thrownValue.then\r\n                  ? SuspendedOnDeprecatedThrowPromise\r\n                  : SuspendedOnError);\r\n      workInProgressThrownValue = thrownValue;\r\n      var erroredWork = workInProgress;\r\n      if (null === erroredWork)\r\n        (workInProgressRootExitStatus = RootFatalErrored),\r\n          logUncaughtError(\r\n            root,\r\n            createCapturedValueAtFiber(thrownValue, root.current)\r\n          );\r\n      else\r\n        switch (\r\n          (erroredWork.mode & ProfileMode &&\r\n            stopProfilerTimerIfRunningAndRecordDuration(erroredWork),\r\n          markComponentRenderStopped(),\r\n          workInProgressSuspendedReason)\r\n        ) {\r\n          case SuspendedOnError:\r\n            null !== injectedProfilingHooks &&\r\n              \"function\" ===\r\n                typeof injectedProfilingHooks.markComponentErrored &&\r\n              injectedProfilingHooks.markComponentErrored(\r\n                erroredWork,\r\n                thrownValue,\r\n                workInProgressRootRenderLanes\r\n              );\r\n            break;\r\n          case SuspendedOnData:\r\n          case SuspendedOnAction:\r\n          case SuspendedOnImmediate:\r\n          case SuspendedOnDeprecatedThrowPromise:\r\n          case SuspendedAndReadyToContinue:\r\n            null !== injectedProfilingHooks &&\r\n              \"function\" ===\r\n                typeof injectedProfilingHooks.markComponentSuspended &&\r\n              injectedProfilingHooks.markComponentSuspended(\r\n                erroredWork,\r\n                thrownValue,\r\n                workInProgressRootRenderLanes\r\n              );\r\n        }\r\n    }\r\n    function pushDispatcher() {\r\n      var prevDispatcher = ReactSharedInternals.H;\r\n      ReactSharedInternals.H = ContextOnlyDispatcher;\r\n      return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;\r\n    }\r\n    function pushAsyncDispatcher() {\r\n      var prevAsyncDispatcher = ReactSharedInternals.A;\r\n      ReactSharedInternals.A = DefaultAsyncDispatcher;\r\n      return prevAsyncDispatcher;\r\n    }\r\n    function renderDidSuspendDelayIfPossible() {\r\n      workInProgressRootExitStatus = RootSuspendedWithDelay;\r\n      workInProgressRootDidSkipSuspendedSiblings ||\r\n        ((workInProgressRootRenderLanes & 4194048) !==\r\n          workInProgressRootRenderLanes &&\r\n          null !== suspenseHandlerStackCursor.current) ||\r\n        (workInProgressRootIsPrerendering = !0);\r\n      (0 === (workInProgressRootSkippedLanes & 134217727) &&\r\n        0 === (workInProgressRootInterleavedUpdatedLanes & 134217727)) ||\r\n        null === workInProgressRoot ||\r\n        markRootSuspended(\r\n          workInProgressRoot,\r\n          workInProgressRootRenderLanes,\r\n          workInProgressDeferredLane,\r\n          !1\r\n        );\r\n    }\r\n    function renderRootSync(root, lanes, shouldYieldForPrerendering) {\r\n      var prevExecutionContext = executionContext;\r\n      executionContext |= RenderContext;\r\n      var prevDispatcher = pushDispatcher(),\r\n        prevAsyncDispatcher = pushAsyncDispatcher();\r\n      if (\r\n        workInProgressRoot !== root ||\r\n        workInProgressRootRenderLanes !== lanes\r\n      ) {\r\n        if (isDevToolsPresent) {\r\n          var memoizedUpdaters = root.memoizedUpdaters;\r\n          0 < memoizedUpdaters.size &&\r\n            (restorePendingUpdaters(root, workInProgressRootRenderLanes),\r\n            memoizedUpdaters.clear());\r\n          movePendingFibersToMemoized(root, lanes);\r\n        }\r\n        workInProgressTransitions = null;\r\n        prepareFreshStack(root, lanes);\r\n      }\r\n      markRenderStarted(lanes);\r\n      lanes = !1;\r\n      memoizedUpdaters = workInProgressRootExitStatus;\r\n      a: do\r\n        try {\r\n          if (\r\n            workInProgressSuspendedReason !== NotSuspended &&\r\n            null !== workInProgress\r\n          ) {\r\n            var unitOfWork = workInProgress,\r\n              thrownValue = workInProgressThrownValue;\r\n            switch (workInProgressSuspendedReason) {\r\n              case SuspendedOnHydration:\r\n                resetWorkInProgressStack();\r\n                memoizedUpdaters = RootSuspendedAtTheShell;\r\n                break a;\r\n              case SuspendedOnImmediate:\r\n              case SuspendedOnData:\r\n              case SuspendedOnAction:\r\n              case SuspendedOnDeprecatedThrowPromise:\r\n                null === suspenseHandlerStackCursor.current && (lanes = !0);\r\n                var reason = workInProgressSuspendedReason;\r\n                workInProgressSuspendedReason = NotSuspended;\r\n                workInProgressThrownValue = null;\r\n                throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\r\n                if (\r\n                  shouldYieldForPrerendering &&\r\n                  workInProgressRootIsPrerendering\r\n                ) {\r\n                  memoizedUpdaters = RootInProgress;\r\n                  break a;\r\n                }\r\n                break;\r\n              default:\r\n                (reason = workInProgressSuspendedReason),\r\n                  (workInProgressSuspendedReason = NotSuspended),\r\n                  (workInProgressThrownValue = null),\r\n                  throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\r\n            }\r\n          }\r\n          workLoopSync();\r\n          memoizedUpdaters = workInProgressRootExitStatus;\r\n          break;\r\n        } catch (thrownValue$8) {\r\n          handleThrow(root, thrownValue$8);\r\n        }\r\n      while (1);\r\n      lanes && root.shellSuspendCounter++;\r\n      resetContextDependencies();\r\n      executionContext = prevExecutionContext;\r\n      ReactSharedInternals.H = prevDispatcher;\r\n      ReactSharedInternals.A = prevAsyncDispatcher;\r\n      markRenderStopped();\r\n      null === workInProgress &&\r\n        ((workInProgressRoot = null),\r\n        (workInProgressRootRenderLanes = 0),\r\n        finishQueueingConcurrentUpdates());\r\n      return memoizedUpdaters;\r\n    }\r\n    function workLoopSync() {\r\n      for (; null !== workInProgress; ) performUnitOfWork(workInProgress);\r\n    }\r\n    function renderRootConcurrent(root, lanes) {\r\n      var prevExecutionContext = executionContext;\r\n      executionContext |= RenderContext;\r\n      var prevDispatcher = pushDispatcher(),\r\n        prevAsyncDispatcher = pushAsyncDispatcher();\r\n      if (\r\n        workInProgressRoot !== root ||\r\n        workInProgressRootRenderLanes !== lanes\r\n      ) {\r\n        if (isDevToolsPresent) {\r\n          var memoizedUpdaters = root.memoizedUpdaters;\r\n          0 < memoizedUpdaters.size &&\r\n            (restorePendingUpdaters(root, workInProgressRootRenderLanes),\r\n            memoizedUpdaters.clear());\r\n          movePendingFibersToMemoized(root, lanes);\r\n        }\r\n        workInProgressTransitions = null;\r\n        workInProgressRootRenderTargetTime = now$1() + RENDER_TIMEOUT_MS;\r\n        prepareFreshStack(root, lanes);\r\n      } else\r\n        workInProgressRootIsPrerendering = checkIfRootIsPrerendering(\r\n          root,\r\n          lanes\r\n        );\r\n      markRenderStarted(lanes);\r\n      a: do\r\n        try {\r\n          if (\r\n            workInProgressSuspendedReason !== NotSuspended &&\r\n            null !== workInProgress\r\n          )\r\n            b: switch (\r\n              ((lanes = workInProgress),\r\n              (memoizedUpdaters = workInProgressThrownValue),\r\n              workInProgressSuspendedReason)\r\n            ) {\r\n              case SuspendedOnError:\r\n                workInProgressSuspendedReason = NotSuspended;\r\n                workInProgressThrownValue = null;\r\n                throwAndUnwindWorkLoop(\r\n                  root,\r\n                  lanes,\r\n                  memoizedUpdaters,\r\n                  SuspendedOnError\r\n                );\r\n                break;\r\n              case SuspendedOnData:\r\n              case SuspendedOnAction:\r\n                if (isThenableResolved(memoizedUpdaters)) {\r\n                  workInProgressSuspendedReason = NotSuspended;\r\n                  workInProgressThrownValue = null;\r\n                  replaySuspendedUnitOfWork(lanes);\r\n                  break;\r\n                }\r\n                lanes = function () {\r\n                  (workInProgressSuspendedReason !== SuspendedOnData &&\r\n                    workInProgressSuspendedReason !== SuspendedOnAction) ||\r\n                    workInProgressRoot !== root ||\r\n                    (workInProgressSuspendedReason =\r\n                      SuspendedAndReadyToContinue);\r\n                  ensureRootIsScheduled(root);\r\n                };\r\n                memoizedUpdaters.then(lanes, lanes);\r\n                break a;\r\n              case SuspendedOnImmediate:\r\n                workInProgressSuspendedReason = SuspendedAndReadyToContinue;\r\n                break a;\r\n              case SuspendedOnInstance:\r\n                workInProgressSuspendedReason =\r\n                  SuspendedOnInstanceAndReadyToContinue;\r\n                break a;\r\n              case SuspendedAndReadyToContinue:\r\n                isThenableResolved(memoizedUpdaters)\r\n                  ? ((workInProgressSuspendedReason = NotSuspended),\r\n                    (workInProgressThrownValue = null),\r\n                    replaySuspendedUnitOfWork(lanes))\r\n                  : ((workInProgressSuspendedReason = NotSuspended),\r\n                    (workInProgressThrownValue = null),\r\n                    throwAndUnwindWorkLoop(\r\n                      root,\r\n                      lanes,\r\n                      memoizedUpdaters,\r\n                      SuspendedAndReadyToContinue\r\n                    ));\r\n                break;\r\n              case SuspendedOnInstanceAndReadyToContinue:\r\n                var resource = null;\r\n                switch (workInProgress.tag) {\r\n                  case 26:\r\n                    resource = workInProgress.memoizedState;\r\n                  case 5:\r\n                  case 27:\r\n                    var hostFiber = workInProgress;\r\n                    if (resource ? preloadResource(resource) : 1) {\r\n                      workInProgressSuspendedReason = NotSuspended;\r\n                      workInProgressThrownValue = null;\r\n                      var sibling = hostFiber.sibling;\r\n                      if (null !== sibling) workInProgress = sibling;\r\n                      else {\r\n                        var returnFiber = hostFiber.return;\r\n                        null !== returnFiber\r\n                          ? ((workInProgress = returnFiber),\r\n                            completeUnitOfWork(returnFiber))\r\n                          : (workInProgress = null);\r\n                      }\r\n                      break b;\r\n                    }\r\n                    break;\r\n                  default:\r\n                    console.error(\r\n                      \"Unexpected type of fiber triggered a suspensey commit. This is a bug in React.\"\r\n                    );\r\n                }\r\n                workInProgressSuspendedReason = NotSuspended;\r\n                workInProgressThrownValue = null;\r\n                throwAndUnwindWorkLoop(\r\n                  root,\r\n                  lanes,\r\n                  memoizedUpdaters,\r\n                  SuspendedOnInstanceAndReadyToContinue\r\n                );\r\n                break;\r\n              case SuspendedOnDeprecatedThrowPromise:\r\n                workInProgressSuspendedReason = NotSuspended;\r\n                workInProgressThrownValue = null;\r\n                throwAndUnwindWorkLoop(\r\n                  root,\r\n                  lanes,\r\n                  memoizedUpdaters,\r\n                  SuspendedOnDeprecatedThrowPromise\r\n                );\r\n                break;\r\n              case SuspendedOnHydration:\r\n                resetWorkInProgressStack();\r\n                workInProgressRootExitStatus = RootSuspendedAtTheShell;\r\n                break a;\r\n              default:\r\n                throw Error(\r\n                  \"Unexpected SuspendedReason. This is a bug in React.\"\r\n                );\r\n            }\r\n          null !== ReactSharedInternals.actQueue\r\n            ? workLoopSync()\r\n            : workLoopConcurrentByScheduler();\r\n          break;\r\n        } catch (thrownValue$9) {\r\n          handleThrow(root, thrownValue$9);\r\n        }\r\n      while (1);\r\n      resetContextDependencies();\r\n      ReactSharedInternals.H = prevDispatcher;\r\n      ReactSharedInternals.A = prevAsyncDispatcher;\r\n      executionContext = prevExecutionContext;\r\n      if (null !== workInProgress)\r\n        return (\r\n          null !== injectedProfilingHooks &&\r\n            \"function\" === typeof injectedProfilingHooks.markRenderYielded &&\r\n            injectedProfilingHooks.markRenderYielded(),\r\n          RootInProgress\r\n        );\r\n      markRenderStopped();\r\n      workInProgressRoot = null;\r\n      workInProgressRootRenderLanes = 0;\r\n      finishQueueingConcurrentUpdates();\r\n      return workInProgressRootExitStatus;\r\n    }\r\n    function workLoopConcurrentByScheduler() {\r\n      for (; null !== workInProgress && !shouldYield(); )\r\n        performUnitOfWork(workInProgress);\r\n    }\r\n    function performUnitOfWork(unitOfWork) {\r\n      var current = unitOfWork.alternate;\r\n      (unitOfWork.mode & ProfileMode) !== NoMode\r\n        ? (startProfilerTimer(unitOfWork),\r\n          (current = runWithFiberInDEV(\r\n            unitOfWork,\r\n            beginWork,\r\n            current,\r\n            unitOfWork,\r\n            entangledRenderLanes\r\n          )),\r\n          stopProfilerTimerIfRunningAndRecordDuration(unitOfWork))\r\n        : (current = runWithFiberInDEV(\r\n            unitOfWork,\r\n            beginWork,\r\n            current,\r\n            unitOfWork,\r\n            entangledRenderLanes\r\n          ));\r\n      unitOfWork.memoizedProps = unitOfWork.pendingProps;\r\n      null === current\r\n        ? completeUnitOfWork(unitOfWork)\r\n        : (workInProgress = current);\r\n    }\r\n    function replaySuspendedUnitOfWork(unitOfWork) {\r\n      var next = runWithFiberInDEV(unitOfWork, replayBeginWork, unitOfWork);\r\n      unitOfWork.memoizedProps = unitOfWork.pendingProps;\r\n      null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\r\n    }\r\n    function replayBeginWork(unitOfWork) {\r\n      var current = unitOfWork.alternate,\r\n        isProfilingMode = (unitOfWork.mode & ProfileMode) !== NoMode;\r\n      isProfilingMode && startProfilerTimer(unitOfWork);\r\n      switch (unitOfWork.tag) {\r\n        case 15:\r\n        case 0:\r\n          current = replayFunctionComponent(\r\n            current,\r\n            unitOfWork,\r\n            unitOfWork.pendingProps,\r\n            unitOfWork.type,\r\n            void 0,\r\n            workInProgressRootRenderLanes\r\n          );\r\n          break;\r\n        case 11:\r\n          current = replayFunctionComponent(\r\n            current,\r\n            unitOfWork,\r\n            unitOfWork.pendingProps,\r\n            unitOfWork.type.render,\r\n            unitOfWork.ref,\r\n            workInProgressRootRenderLanes\r\n          );\r\n          break;\r\n        case 5:\r\n          resetHooksOnUnwind(unitOfWork);\r\n        default:\r\n          unwindInterruptedWork(current, unitOfWork),\r\n            (unitOfWork = workInProgress =\r\n              resetWorkInProgress(unitOfWork, entangledRenderLanes)),\r\n            (current = beginWork(current, unitOfWork, entangledRenderLanes));\r\n      }\r\n      isProfilingMode &&\r\n        stopProfilerTimerIfRunningAndRecordDuration(unitOfWork);\r\n      return current;\r\n    }\r\n    function throwAndUnwindWorkLoop(\r\n      root,\r\n      unitOfWork,\r\n      thrownValue,\r\n      suspendedReason\r\n    ) {\r\n      resetContextDependencies();\r\n      resetHooksOnUnwind(unitOfWork);\r\n      thenableState = null;\r\n      thenableIndexCounter = 0;\r\n      var returnFiber = unitOfWork.return;\r\n      try {\r\n        if (\r\n          throwException(\r\n            root,\r\n            returnFiber,\r\n            unitOfWork,\r\n            thrownValue,\r\n            workInProgressRootRenderLanes\r\n          )\r\n        ) {\r\n          workInProgressRootExitStatus = RootFatalErrored;\r\n          logUncaughtError(\r\n            root,\r\n            createCapturedValueAtFiber(thrownValue, root.current)\r\n          );\r\n          workInProgress = null;\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        if (null !== returnFiber) throw ((workInProgress = returnFiber), error);\r\n        workInProgressRootExitStatus = RootFatalErrored;\r\n        logUncaughtError(\r\n          root,\r\n          createCapturedValueAtFiber(thrownValue, root.current)\r\n        );\r\n        workInProgress = null;\r\n        return;\r\n      }\r\n      if (unitOfWork.flags & 32768) {\r\n        if (isHydrating || suspendedReason === SuspendedOnError) root = !0;\r\n        else if (\r\n          workInProgressRootIsPrerendering ||\r\n          0 !== (workInProgressRootRenderLanes & 536870912)\r\n        )\r\n          root = !1;\r\n        else if (\r\n          ((workInProgressRootDidSkipSuspendedSiblings = root = !0),\r\n          suspendedReason === SuspendedOnData ||\r\n            suspendedReason === SuspendedOnAction ||\r\n            suspendedReason === SuspendedOnImmediate ||\r\n            suspendedReason === SuspendedOnDeprecatedThrowPromise)\r\n        )\r\n          (suspendedReason = suspenseHandlerStackCursor.current),\r\n            null !== suspendedReason &&\r\n              13 === suspendedReason.tag &&\r\n              (suspendedReason.flags |= 16384);\r\n        unwindUnitOfWork(unitOfWork, root);\r\n      } else completeUnitOfWork(unitOfWork);\r\n    }\r\n    function completeUnitOfWork(unitOfWork) {\r\n      var completedWork = unitOfWork;\r\n      do {\r\n        if (0 !== (completedWork.flags & 32768)) {\r\n          unwindUnitOfWork(\r\n            completedWork,\r\n            workInProgressRootDidSkipSuspendedSiblings\r\n          );\r\n          return;\r\n        }\r\n        var current = completedWork.alternate;\r\n        unitOfWork = completedWork.return;\r\n        startProfilerTimer(completedWork);\r\n        current = runWithFiberInDEV(\r\n          completedWork,\r\n          completeWork,\r\n          current,\r\n          completedWork,\r\n          entangledRenderLanes\r\n        );\r\n        (completedWork.mode & ProfileMode) !== NoMode &&\r\n          stopProfilerTimerIfRunningAndRecordIncompleteDuration(completedWork);\r\n        if (null !== current) {\r\n          workInProgress = current;\r\n          return;\r\n        }\r\n        completedWork = completedWork.sibling;\r\n        if (null !== completedWork) {\r\n          workInProgress = completedWork;\r\n          return;\r\n        }\r\n        workInProgress = completedWork = unitOfWork;\r\n      } while (null !== completedWork);\r\n      workInProgressRootExitStatus === RootInProgress &&\r\n        (workInProgressRootExitStatus = RootCompleted);\r\n    }\r\n    function unwindUnitOfWork(unitOfWork, skipSiblings) {\r\n      do {\r\n        var next = unwindWork(unitOfWork.alternate, unitOfWork);\r\n        if (null !== next) {\r\n          next.flags &= 32767;\r\n          workInProgress = next;\r\n          return;\r\n        }\r\n        if ((unitOfWork.mode & ProfileMode) !== NoMode) {\r\n          stopProfilerTimerIfRunningAndRecordIncompleteDuration(unitOfWork);\r\n          next = unitOfWork.actualDuration;\r\n          for (var child = unitOfWork.child; null !== child; )\r\n            (next += child.actualDuration), (child = child.sibling);\r\n          unitOfWork.actualDuration = next;\r\n        }\r\n        next = unitOfWork.return;\r\n        null !== next &&\r\n          ((next.flags |= 32768),\r\n          (next.subtreeFlags = 0),\r\n          (next.deletions = null));\r\n        if (\r\n          !skipSiblings &&\r\n          ((unitOfWork = unitOfWork.sibling), null !== unitOfWork)\r\n        ) {\r\n          workInProgress = unitOfWork;\r\n          return;\r\n        }\r\n        workInProgress = unitOfWork = next;\r\n      } while (null !== unitOfWork);\r\n      workInProgressRootExitStatus = RootSuspendedAtTheShell;\r\n      workInProgress = null;\r\n    }\r\n    function commitRoot(\r\n      root,\r\n      finishedWork,\r\n      lanes,\r\n      recoverableErrors,\r\n      transitions,\r\n      didIncludeRenderPhaseUpdate,\r\n      spawnedLane,\r\n      updatedLanes,\r\n      suspendedRetryLanes\r\n    ) {\r\n      root.cancelPendingCommit = null;\r\n      do flushPendingEffects();\r\n      while (pendingEffectsStatus !== NO_PENDING_EFFECTS);\r\n      ReactStrictModeWarnings.flushLegacyContextWarning();\r\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\r\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext)\r\n        throw Error(\"Should not already be working.\");\r\n      null !== injectedProfilingHooks &&\r\n        \"function\" === typeof injectedProfilingHooks.markCommitStarted &&\r\n        injectedProfilingHooks.markCommitStarted(lanes);\r\n      if (null === finishedWork) markCommitStopped();\r\n      else {\r\n        0 === lanes &&\r\n          console.error(\r\n            \"finishedLanes should not be empty during a commit. This is a bug in React.\"\r\n          );\r\n        if (finishedWork === root.current)\r\n          throw Error(\r\n            \"Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.\"\r\n          );\r\n        didIncludeRenderPhaseUpdate =\r\n          finishedWork.lanes | finishedWork.childLanes;\r\n        didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;\r\n        markRootFinished(\r\n          root,\r\n          lanes,\r\n          didIncludeRenderPhaseUpdate,\r\n          spawnedLane,\r\n          updatedLanes,\r\n          suspendedRetryLanes\r\n        );\r\n        root === workInProgressRoot &&\r\n          ((workInProgress = workInProgressRoot = null),\r\n          (workInProgressRootRenderLanes = 0));\r\n        pendingFinishedWork = finishedWork;\r\n        pendingEffectsRoot = root;\r\n        pendingEffectsLanes = lanes;\r\n        pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;\r\n        pendingPassiveTransitions = transitions;\r\n        pendingRecoverableErrors = recoverableErrors;\r\n        0 !== (finishedWork.subtreeFlags & 10256) ||\r\n        0 !== (finishedWork.flags & 10256)\r\n          ? ((root.callbackNode = null),\r\n            (root.callbackPriority = 0),\r\n            scheduleCallback$1(NormalPriority$1, function () {\r\n              flushPassiveEffects(!0);\r\n              return null;\r\n            }))\r\n          : ((root.callbackNode = null), (root.callbackPriority = 0));\r\n        commitStartTime = now();\r\n        recoverableErrors = 0 !== (finishedWork.flags & 13878);\r\n        if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {\r\n          recoverableErrors = ReactSharedInternals.T;\r\n          ReactSharedInternals.T = null;\r\n          transitions = ReactDOMSharedInternals.p;\r\n          ReactDOMSharedInternals.p = DiscreteEventPriority;\r\n          spawnedLane = executionContext;\r\n          executionContext |= CommitContext;\r\n          try {\r\n            commitBeforeMutationEffects(root, finishedWork, lanes);\r\n          } finally {\r\n            (executionContext = spawnedLane),\r\n              (ReactDOMSharedInternals.p = transitions),\r\n              (ReactSharedInternals.T = recoverableErrors);\r\n          }\r\n        }\r\n        pendingEffectsStatus = PENDING_MUTATION_PHASE;\r\n        flushMutationEffects();\r\n        flushLayoutEffects();\r\n        flushSpawnedWork();\r\n      }\r\n    }\r\n    function flushMutationEffects() {\r\n      if (pendingEffectsStatus === PENDING_MUTATION_PHASE) {\r\n        pendingEffectsStatus = NO_PENDING_EFFECTS;\r\n        var root = pendingEffectsRoot,\r\n          finishedWork = pendingFinishedWork,\r\n          lanes = pendingEffectsLanes,\r\n          rootMutationHasEffect = 0 !== (finishedWork.flags & 13878);\r\n        if (\r\n          0 !== (finishedWork.subtreeFlags & 13878) ||\r\n          rootMutationHasEffect\r\n        ) {\r\n          rootMutationHasEffect = ReactSharedInternals.T;\r\n          ReactSharedInternals.T = null;\r\n          var previousPriority = ReactDOMSharedInternals.p;\r\n          ReactDOMSharedInternals.p = DiscreteEventPriority;\r\n          var prevExecutionContext = executionContext;\r\n          executionContext |= CommitContext;\r\n          try {\r\n            inProgressLanes = lanes;\r\n            inProgressRoot = root;\r\n            commitMutationEffectsOnFiber(finishedWork, root);\r\n            inProgressRoot = inProgressLanes = null;\r\n            lanes = selectionInformation;\r\n            var curFocusedElem = getActiveElementDeep(root.containerInfo),\r\n              priorFocusedElem = lanes.focusedElem,\r\n              priorSelectionRange = lanes.selectionRange;\r\n            if (\r\n              curFocusedElem !== priorFocusedElem &&\r\n              priorFocusedElem &&\r\n              priorFocusedElem.ownerDocument &&\r\n              containsNode(\r\n                priorFocusedElem.ownerDocument.documentElement,\r\n                priorFocusedElem\r\n              )\r\n            ) {\r\n              if (\r\n                null !== priorSelectionRange &&\r\n                hasSelectionCapabilities(priorFocusedElem)\r\n              ) {\r\n                var start = priorSelectionRange.start,\r\n                  end = priorSelectionRange.end;\r\n                void 0 === end && (end = start);\r\n                if (\"selectionStart\" in priorFocusedElem)\r\n                  (priorFocusedElem.selectionStart = start),\r\n                    (priorFocusedElem.selectionEnd = Math.min(\r\n                      end,\r\n                      priorFocusedElem.value.length\r\n                    ));\r\n                else {\r\n                  var doc = priorFocusedElem.ownerDocument || document,\r\n                    win = (doc && doc.defaultView) || window;\r\n                  if (win.getSelection) {\r\n                    var selection = win.getSelection(),\r\n                      length = priorFocusedElem.textContent.length,\r\n                      start$jscomp$0 = Math.min(\r\n                        priorSelectionRange.start,\r\n                        length\r\n                      ),\r\n                      end$jscomp$0 =\r\n                        void 0 === priorSelectionRange.end\r\n                          ? start$jscomp$0\r\n                          : Math.min(priorSelectionRange.end, length);\r\n                    !selection.extend &&\r\n                      start$jscomp$0 > end$jscomp$0 &&\r\n                      ((curFocusedElem = end$jscomp$0),\r\n                      (end$jscomp$0 = start$jscomp$0),\r\n                      (start$jscomp$0 = curFocusedElem));\r\n                    var startMarker = getNodeForCharacterOffset(\r\n                        priorFocusedElem,\r\n                        start$jscomp$0\r\n                      ),\r\n                      endMarker = getNodeForCharacterOffset(\r\n                        priorFocusedElem,\r\n                        end$jscomp$0\r\n                      );\r\n                    if (\r\n                      startMarker &&\r\n                      endMarker &&\r\n                      (1 !== selection.rangeCount ||\r\n                        selection.anchorNode !== startMarker.node ||\r\n                        selection.anchorOffset !== startMarker.offset ||\r\n                        selection.focusNode !== endMarker.node ||\r\n                        selection.focusOffset !== endMarker.offset)\r\n                    ) {\r\n                      var range = doc.createRange();\r\n                      range.setStart(startMarker.node, startMarker.offset);\r\n                      selection.removeAllRanges();\r\n                      start$jscomp$0 > end$jscomp$0\r\n                        ? (selection.addRange(range),\r\n                          selection.extend(endMarker.node, endMarker.offset))\r\n                        : (range.setEnd(endMarker.node, endMarker.offset),\r\n                          selection.addRange(range));\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              doc = [];\r\n              for (\r\n                selection = priorFocusedElem;\r\n                (selection = selection.parentNode);\r\n\r\n              )\r\n                1 === selection.nodeType &&\r\n                  doc.push({\r\n                    element: selection,\r\n                    left: selection.scrollLeft,\r\n                    top: selection.scrollTop\r\n                  });\r\n              \"function\" === typeof priorFocusedElem.focus &&\r\n                priorFocusedElem.focus();\r\n              for (\r\n                priorFocusedElem = 0;\r\n                priorFocusedElem < doc.length;\r\n                priorFocusedElem++\r\n              ) {\r\n                var info = doc[priorFocusedElem];\r\n                info.element.scrollLeft = info.left;\r\n                info.element.scrollTop = info.top;\r\n              }\r\n            }\r\n            _enabled = !!eventsEnabled;\r\n            selectionInformation = eventsEnabled = null;\r\n          } finally {\r\n            (executionContext = prevExecutionContext),\r\n              (ReactDOMSharedInternals.p = previousPriority),\r\n              (ReactSharedInternals.T = rootMutationHasEffect);\r\n          }\r\n        }\r\n        root.current = finishedWork;\r\n        pendingEffectsStatus = PENDING_LAYOUT_PHASE;\r\n      }\r\n    }\r\n    function flushLayoutEffects() {\r\n      if (pendingEffectsStatus === PENDING_LAYOUT_PHASE) {\r\n        pendingEffectsStatus = NO_PENDING_EFFECTS;\r\n        var root = pendingEffectsRoot,\r\n          finishedWork = pendingFinishedWork,\r\n          lanes = pendingEffectsLanes,\r\n          rootHasLayoutEffect = 0 !== (finishedWork.flags & 8772);\r\n        if (0 !== (finishedWork.subtreeFlags & 8772) || rootHasLayoutEffect) {\r\n          rootHasLayoutEffect = ReactSharedInternals.T;\r\n          ReactSharedInternals.T = null;\r\n          var previousPriority = ReactDOMSharedInternals.p;\r\n          ReactDOMSharedInternals.p = DiscreteEventPriority;\r\n          var prevExecutionContext = executionContext;\r\n          executionContext |= CommitContext;\r\n          try {\r\n            null !== injectedProfilingHooks &&\r\n              \"function\" ===\r\n                typeof injectedProfilingHooks.markLayoutEffectsStarted &&\r\n              injectedProfilingHooks.markLayoutEffectsStarted(lanes),\r\n              (inProgressLanes = lanes),\r\n              (inProgressRoot = root),\r\n              commitLayoutEffectOnFiber(\r\n                root,\r\n                finishedWork.alternate,\r\n                finishedWork\r\n              ),\r\n              (inProgressRoot = inProgressLanes = null),\r\n              null !== injectedProfilingHooks &&\r\n                \"function\" ===\r\n                  typeof injectedProfilingHooks.markLayoutEffectsStopped &&\r\n                injectedProfilingHooks.markLayoutEffectsStopped();\r\n          } finally {\r\n            (executionContext = prevExecutionContext),\r\n              (ReactDOMSharedInternals.p = previousPriority),\r\n              (ReactSharedInternals.T = rootHasLayoutEffect);\r\n          }\r\n        }\r\n        pendingEffectsStatus = PENDING_AFTER_MUTATION_PHASE;\r\n      }\r\n    }\r\n    function flushSpawnedWork() {\r\n      if (\r\n        pendingEffectsStatus === PENDING_SPAWNED_WORK ||\r\n        pendingEffectsStatus === PENDING_AFTER_MUTATION_PHASE\r\n      ) {\r\n        pendingEffectsStatus = NO_PENDING_EFFECTS;\r\n        requestPaint();\r\n        var root = pendingEffectsRoot,\r\n          finishedWork = pendingFinishedWork,\r\n          lanes = pendingEffectsLanes,\r\n          recoverableErrors = pendingRecoverableErrors,\r\n          rootDidHavePassiveEffects =\r\n            0 !== (finishedWork.subtreeFlags & 10256) ||\r\n            0 !== (finishedWork.flags & 10256);\r\n        rootDidHavePassiveEffects\r\n          ? (pendingEffectsStatus = PENDING_PASSIVE_PHASE)\r\n          : ((pendingEffectsStatus = NO_PENDING_EFFECTS),\r\n            (pendingFinishedWork = pendingEffectsRoot = null),\r\n            releaseRootPooledCache(root, root.pendingLanes),\r\n            (nestedPassiveUpdateCount = 0),\r\n            (rootWithPassiveNestedUpdates = null));\r\n        var remainingLanes = root.pendingLanes;\r\n        0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);\r\n        rootDidHavePassiveEffects || commitDoubleInvokeEffectsInDEV(root);\r\n        rootDidHavePassiveEffects = lanesToEventPriority(lanes);\r\n        finishedWork = finishedWork.stateNode;\r\n        if (\r\n          injectedHook &&\r\n          \"function\" === typeof injectedHook.onCommitFiberRoot\r\n        )\r\n          try {\r\n            var didError = 128 === (finishedWork.current.flags & 128);\r\n            switch (rootDidHavePassiveEffects) {\r\n              case DiscreteEventPriority:\r\n                var schedulerPriority = ImmediatePriority;\r\n                break;\r\n              case ContinuousEventPriority:\r\n                schedulerPriority = UserBlockingPriority;\r\n                break;\r\n              case DefaultEventPriority:\r\n                schedulerPriority = NormalPriority$1;\r\n                break;\r\n              case IdleEventPriority:\r\n                schedulerPriority = IdlePriority;\r\n                break;\r\n              default:\r\n                schedulerPriority = NormalPriority$1;\r\n            }\r\n            injectedHook.onCommitFiberRoot(\r\n              rendererID,\r\n              finishedWork,\r\n              schedulerPriority,\r\n              didError\r\n            );\r\n          } catch (err) {\r\n            hasLoggedError ||\r\n              ((hasLoggedError = !0),\r\n              console.error(\r\n                \"React instrumentation encountered an error: %s\",\r\n                err\r\n              ));\r\n          }\r\n        isDevToolsPresent && root.memoizedUpdaters.clear();\r\n        onCommitRoot();\r\n        if (null !== recoverableErrors) {\r\n          didError = ReactSharedInternals.T;\r\n          schedulerPriority = ReactDOMSharedInternals.p;\r\n          ReactDOMSharedInternals.p = DiscreteEventPriority;\r\n          ReactSharedInternals.T = null;\r\n          try {\r\n            var onRecoverableError = root.onRecoverableError;\r\n            for (\r\n              finishedWork = 0;\r\n              finishedWork < recoverableErrors.length;\r\n              finishedWork++\r\n            ) {\r\n              var recoverableError = recoverableErrors[finishedWork],\r\n                errorInfo = makeErrorInfo(recoverableError.stack);\r\n              runWithFiberInDEV(\r\n                recoverableError.source,\r\n                onRecoverableError,\r\n                recoverableError.value,\r\n                errorInfo\r\n              );\r\n            }\r\n          } finally {\r\n            (ReactSharedInternals.T = didError),\r\n              (ReactDOMSharedInternals.p = schedulerPriority);\r\n          }\r\n        }\r\n        0 !== (pendingEffectsLanes & 3) && flushPendingEffects();\r\n        ensureRootIsScheduled(root);\r\n        remainingLanes = root.pendingLanes;\r\n        0 !== (lanes & 4194090) && 0 !== (remainingLanes & 42)\r\n          ? ((nestedUpdateScheduled = !0),\r\n            root === rootWithNestedUpdates\r\n              ? nestedUpdateCount++\r\n              : ((nestedUpdateCount = 0), (rootWithNestedUpdates = root)))\r\n          : (nestedUpdateCount = 0);\r\n        flushSyncWorkAcrossRoots_impl(0, !1);\r\n        markCommitStopped();\r\n      }\r\n    }\r\n    function makeErrorInfo(componentStack) {\r\n      componentStack = { componentStack: componentStack };\r\n      Object.defineProperty(componentStack, \"digest\", {\r\n        get: function () {\r\n          console.error(\r\n            'You are accessing \"digest\" from the errorInfo object passed to onRecoverableError. This property is no longer provided as part of errorInfo but can be accessed as a property of the Error instance itself.'\r\n          );\r\n        }\r\n      });\r\n      return componentStack;\r\n    }\r\n    function releaseRootPooledCache(root, remainingLanes) {\r\n      0 === (root.pooledCacheLanes &= remainingLanes) &&\r\n        ((remainingLanes = root.pooledCache),\r\n        null != remainingLanes &&\r\n          ((root.pooledCache = null), releaseCache(remainingLanes)));\r\n    }\r\n    function flushPendingEffects(wasDelayedCommit) {\r\n      flushMutationEffects();\r\n      flushLayoutEffects();\r\n      flushSpawnedWork();\r\n      return flushPassiveEffects(wasDelayedCommit);\r\n    }\r\n    function flushPassiveEffects() {\r\n      if (pendingEffectsStatus !== PENDING_PASSIVE_PHASE) return !1;\r\n      var root = pendingEffectsRoot,\r\n        remainingLanes = pendingEffectsRemainingLanes;\r\n      pendingEffectsRemainingLanes = 0;\r\n      var renderPriority = lanesToEventPriority(pendingEffectsLanes),\r\n        priority =\r\n          0 === DefaultEventPriority || DefaultEventPriority > renderPriority\r\n            ? DefaultEventPriority\r\n            : renderPriority;\r\n      renderPriority = ReactSharedInternals.T;\r\n      var previousPriority = ReactDOMSharedInternals.p;\r\n      try {\r\n        ReactDOMSharedInternals.p = priority;\r\n        ReactSharedInternals.T = null;\r\n        priority = pendingPassiveTransitions;\r\n        pendingPassiveTransitions = null;\r\n        var root$jscomp$0 = pendingEffectsRoot,\r\n          lanes = pendingEffectsLanes;\r\n        pendingEffectsStatus = NO_PENDING_EFFECTS;\r\n        pendingFinishedWork = pendingEffectsRoot = null;\r\n        pendingEffectsLanes = 0;\r\n        if ((executionContext & (RenderContext | CommitContext)) !== NoContext)\r\n          throw Error(\"Cannot flush passive effects while already rendering.\");\r\n        isFlushingPassiveEffects = !0;\r\n        didScheduleUpdateDuringPassiveEffects = !1;\r\n        null !== injectedProfilingHooks &&\r\n          \"function\" ===\r\n            typeof injectedProfilingHooks.markPassiveEffectsStarted &&\r\n          injectedProfilingHooks.markPassiveEffectsStarted(lanes);\r\n        var prevExecutionContext = executionContext;\r\n        executionContext |= CommitContext;\r\n        commitPassiveUnmountOnFiber(root$jscomp$0.current);\r\n        commitPassiveMountOnFiber(\r\n          root$jscomp$0,\r\n          root$jscomp$0.current,\r\n          lanes,\r\n          priority\r\n        );\r\n        null !== injectedProfilingHooks &&\r\n          \"function\" ===\r\n            typeof injectedProfilingHooks.markPassiveEffectsStopped &&\r\n          injectedProfilingHooks.markPassiveEffectsStopped();\r\n        commitDoubleInvokeEffectsInDEV(root$jscomp$0);\r\n        executionContext = prevExecutionContext;\r\n        flushSyncWorkAcrossRoots_impl(0, !1);\r\n        didScheduleUpdateDuringPassiveEffects\r\n          ? root$jscomp$0 === rootWithPassiveNestedUpdates\r\n            ? nestedPassiveUpdateCount++\r\n            : ((nestedPassiveUpdateCount = 0),\r\n              (rootWithPassiveNestedUpdates = root$jscomp$0))\r\n          : (nestedPassiveUpdateCount = 0);\r\n        didScheduleUpdateDuringPassiveEffects = isFlushingPassiveEffects = !1;\r\n        if (\r\n          injectedHook &&\r\n          \"function\" === typeof injectedHook.onPostCommitFiberRoot\r\n        )\r\n          try {\r\n            injectedHook.onPostCommitFiberRoot(rendererID, root$jscomp$0);\r\n          } catch (err) {\r\n            hasLoggedError ||\r\n              ((hasLoggedError = !0),\r\n              console.error(\r\n                \"React instrumentation encountered an error: %s\",\r\n                err\r\n              ));\r\n          }\r\n        var stateNode = root$jscomp$0.current.stateNode;\r\n        stateNode.effectDuration = 0;\r\n        stateNode.passiveEffectDuration = 0;\r\n        return !0;\r\n      } finally {\r\n        (ReactDOMSharedInternals.p = previousPriority),\r\n          (ReactSharedInternals.T = renderPriority),\r\n          releaseRootPooledCache(root, remainingLanes);\r\n      }\r\n    }\r\n    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\r\n      sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\r\n      sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);\r\n      rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);\r\n      null !== rootFiber &&\r\n        (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));\r\n    }\r\n    function captureCommitPhaseError(\r\n      sourceFiber,\r\n      nearestMountedAncestor,\r\n      error\r\n    ) {\r\n      isRunningInsertionEffect = !1;\r\n      if (3 === sourceFiber.tag)\r\n        captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\r\n      else {\r\n        for (; null !== nearestMountedAncestor; ) {\r\n          if (3 === nearestMountedAncestor.tag) {\r\n            captureCommitPhaseErrorOnRoot(\r\n              nearestMountedAncestor,\r\n              sourceFiber,\r\n              error\r\n            );\r\n            return;\r\n          }\r\n          if (1 === nearestMountedAncestor.tag) {\r\n            var instance = nearestMountedAncestor.stateNode;\r\n            if (\r\n              \"function\" ===\r\n                typeof nearestMountedAncestor.type.getDerivedStateFromError ||\r\n              (\"function\" === typeof instance.componentDidCatch &&\r\n                (null === legacyErrorBoundariesThatAlreadyFailed ||\r\n                  !legacyErrorBoundariesThatAlreadyFailed.has(instance)))\r\n            ) {\r\n              sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\r\n              error = createClassErrorUpdate(2);\r\n              instance = enqueueUpdate(nearestMountedAncestor, error, 2);\r\n              null !== instance &&\r\n                (initializeClassErrorUpdate(\r\n                  error,\r\n                  instance,\r\n                  nearestMountedAncestor,\r\n                  sourceFiber\r\n                ),\r\n                markRootUpdated$1(instance, 2),\r\n                ensureRootIsScheduled(instance));\r\n              return;\r\n            }\r\n          }\r\n          nearestMountedAncestor = nearestMountedAncestor.return;\r\n        }\r\n        console.error(\r\n          \"Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Potential causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\\n\\nError message:\\n\\n%s\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n    function attachPingListener(root, wakeable, lanes) {\r\n      var pingCache = root.pingCache;\r\n      if (null === pingCache) {\r\n        pingCache = root.pingCache = new PossiblyWeakMap();\r\n        var threadIDs = new Set();\r\n        pingCache.set(wakeable, threadIDs);\r\n      } else\r\n        (threadIDs = pingCache.get(wakeable)),\r\n          void 0 === threadIDs &&\r\n            ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));\r\n      threadIDs.has(lanes) ||\r\n        ((workInProgressRootDidAttachPingListener = !0),\r\n        threadIDs.add(lanes),\r\n        (pingCache = pingSuspendedRoot.bind(null, root, wakeable, lanes)),\r\n        isDevToolsPresent && restorePendingUpdaters(root, lanes),\r\n        wakeable.then(pingCache, pingCache));\r\n    }\r\n    function pingSuspendedRoot(root, wakeable, pingedLanes) {\r\n      var pingCache = root.pingCache;\r\n      null !== pingCache && pingCache.delete(wakeable);\r\n      root.pingedLanes |= root.suspendedLanes & pingedLanes;\r\n      root.warmLanes &= ~pingedLanes;\r\n      isConcurrentActEnvironment() &&\r\n        null === ReactSharedInternals.actQueue &&\r\n        console.error(\r\n          \"A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\\n\\nWhen testing, code that resolves suspended data should be wrapped into act(...):\\n\\nact(() => {\\n  /* finish loading suspended data */\\n});\\n/* assert on the output */\\n\\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act\"\r\n        );\r\n      workInProgressRoot === root &&\r\n        (workInProgressRootRenderLanes & pingedLanes) === pingedLanes &&\r\n        (workInProgressRootExitStatus === RootSuspendedWithDelay ||\r\n        (workInProgressRootExitStatus === RootSuspended &&\r\n          (workInProgressRootRenderLanes & 62914560) ===\r\n            workInProgressRootRenderLanes &&\r\n          now$1() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)\r\n          ? (executionContext & RenderContext) === NoContext &&\r\n            prepareFreshStack(root, 0)\r\n          : (workInProgressRootPingedLanes |= pingedLanes),\r\n        workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes &&\r\n          (workInProgressSuspendedRetryLanes = 0));\r\n      ensureRootIsScheduled(root);\r\n    }\r\n    function retryTimedOutBoundary(boundaryFiber, retryLane) {\r\n      0 === retryLane && (retryLane = claimNextRetryLane());\r\n      boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\r\n      null !== boundaryFiber &&\r\n        (markRootUpdated$1(boundaryFiber, retryLane),\r\n        ensureRootIsScheduled(boundaryFiber));\r\n    }\r\n    function retryDehydratedSuspenseBoundary(boundaryFiber) {\r\n      var suspenseState = boundaryFiber.memoizedState,\r\n        retryLane = 0;\r\n      null !== suspenseState && (retryLane = suspenseState.retryLane);\r\n      retryTimedOutBoundary(boundaryFiber, retryLane);\r\n    }\r\n    function resolveRetryWakeable(boundaryFiber, wakeable) {\r\n      var retryLane = 0;\r\n      switch (boundaryFiber.tag) {\r\n        case 13:\r\n          var retryCache = boundaryFiber.stateNode;\r\n          var suspenseState = boundaryFiber.memoizedState;\r\n          null !== suspenseState && (retryLane = suspenseState.retryLane);\r\n          break;\r\n        case 19:\r\n          retryCache = boundaryFiber.stateNode;\r\n          break;\r\n        case 22:\r\n          retryCache = boundaryFiber.stateNode._retryCache;\r\n          break;\r\n        default:\r\n          throw Error(\r\n            \"Pinged unknown suspense boundary type. This is probably a bug in React.\"\r\n          );\r\n      }\r\n      null !== retryCache && retryCache.delete(wakeable);\r\n      retryTimedOutBoundary(boundaryFiber, retryLane);\r\n    }\r\n    function recursivelyTraverseAndDoubleInvokeEffectsInDEV(\r\n      root$jscomp$0,\r\n      parentFiber,\r\n      isInStrictMode\r\n    ) {\r\n      if (0 !== (parentFiber.subtreeFlags & 67117056))\r\n        for (parentFiber = parentFiber.child; null !== parentFiber; ) {\r\n          var root = root$jscomp$0,\r\n            fiber = parentFiber,\r\n            isStrictModeFiber = fiber.type === REACT_STRICT_MODE_TYPE;\r\n          isStrictModeFiber = isInStrictMode || isStrictModeFiber;\r\n          22 !== fiber.tag\r\n            ? fiber.flags & 67108864\r\n              ? isStrictModeFiber &&\r\n                runWithFiberInDEV(\r\n                  fiber,\r\n                  doubleInvokeEffectsOnFiber,\r\n                  root,\r\n                  fiber,\r\n                  (fiber.mode & NoStrictPassiveEffectsMode) === NoMode\r\n                )\r\n              : recursivelyTraverseAndDoubleInvokeEffectsInDEV(\r\n                  root,\r\n                  fiber,\r\n                  isStrictModeFiber\r\n                )\r\n            : null === fiber.memoizedState &&\r\n              (isStrictModeFiber && fiber.flags & 8192\r\n                ? runWithFiberInDEV(\r\n                    fiber,\r\n                    doubleInvokeEffectsOnFiber,\r\n                    root,\r\n                    fiber\r\n                  )\r\n                : fiber.subtreeFlags & 67108864 &&\r\n                  runWithFiberInDEV(\r\n                    fiber,\r\n                    recursivelyTraverseAndDoubleInvokeEffectsInDEV,\r\n                    root,\r\n                    fiber,\r\n                    isStrictModeFiber\r\n                  ));\r\n          parentFiber = parentFiber.sibling;\r\n        }\r\n    }\r\n    function doubleInvokeEffectsOnFiber(root, fiber) {\r\n      var shouldDoubleInvokePassiveEffects =\r\n        2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : !0;\r\n      setIsStrictModeForDevtools(!0);\r\n      try {\r\n        disappearLayoutEffects(fiber),\r\n          shouldDoubleInvokePassiveEffects && disconnectPassiveEffect(fiber),\r\n          reappearLayoutEffects(root, fiber.alternate, fiber, !1),\r\n          shouldDoubleInvokePassiveEffects &&\r\n            reconnectPassiveEffects(root, fiber, 0, null, !1, 0);\r\n      } finally {\r\n        setIsStrictModeForDevtools(!1);\r\n      }\r\n    }\r\n    function commitDoubleInvokeEffectsInDEV(root) {\r\n      var doubleInvokeEffects = !0;\r\n      root.current.mode & (StrictLegacyMode | StrictEffectsMode) ||\r\n        (doubleInvokeEffects = !1);\r\n      recursivelyTraverseAndDoubleInvokeEffectsInDEV(\r\n        root,\r\n        root.current,\r\n        doubleInvokeEffects\r\n      );\r\n    }\r\n    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\r\n      if ((executionContext & RenderContext) === NoContext) {\r\n        var tag = fiber.tag;\r\n        if (\r\n          3 === tag ||\r\n          1 === tag ||\r\n          0 === tag ||\r\n          11 === tag ||\r\n          14 === tag ||\r\n          15 === tag\r\n        ) {\r\n          tag = getComponentNameFromFiber(fiber) || \"ReactComponent\";\r\n          if (null !== didWarnStateUpdateForNotYetMountedComponent) {\r\n            if (didWarnStateUpdateForNotYetMountedComponent.has(tag)) return;\r\n            didWarnStateUpdateForNotYetMountedComponent.add(tag);\r\n          } else didWarnStateUpdateForNotYetMountedComponent = new Set([tag]);\r\n          runWithFiberInDEV(fiber, function () {\r\n            console.error(\r\n              \"Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.\"\r\n            );\r\n          });\r\n        }\r\n      }\r\n    }\r\n    function restorePendingUpdaters(root, lanes) {\r\n      isDevToolsPresent &&\r\n        root.memoizedUpdaters.forEach(function (schedulingFiber) {\r\n          addFiberToLanesMap(root, schedulingFiber, lanes);\r\n        });\r\n    }\r\n    function scheduleCallback$1(priorityLevel, callback) {\r\n      var actQueue = ReactSharedInternals.actQueue;\r\n      return null !== actQueue\r\n        ? (actQueue.push(callback), fakeActCallbackNode$1)\r\n        : scheduleCallback$3(priorityLevel, callback);\r\n    }\r\n    function warnIfUpdatesNotWrappedWithActDEV(fiber) {\r\n      isConcurrentActEnvironment() &&\r\n        null === ReactSharedInternals.actQueue &&\r\n        runWithFiberInDEV(fiber, function () {\r\n          console.error(\r\n            \"An update to %s inside a test was not wrapped in act(...).\\n\\nWhen testing, code that causes React state updates should be wrapped into act(...):\\n\\nact(() => {\\n  /* fire events that update state */\\n});\\n/* assert on the output */\\n\\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act\",\r\n            getComponentNameFromFiber(fiber)\r\n          );\r\n        });\r\n    }\r\n    function ensureRootIsScheduled(root) {\r\n      root !== lastScheduledRoot &&\r\n        null === root.next &&\r\n        (null === lastScheduledRoot\r\n          ? (firstScheduledRoot = lastScheduledRoot = root)\r\n          : (lastScheduledRoot = lastScheduledRoot.next = root));\r\n      mightHavePendingSyncWork = !0;\r\n      null !== ReactSharedInternals.actQueue\r\n        ? didScheduleMicrotask_act ||\r\n          ((didScheduleMicrotask_act = !0), scheduleImmediateRootScheduleTask())\r\n        : didScheduleMicrotask ||\r\n          ((didScheduleMicrotask = !0), scheduleImmediateRootScheduleTask());\r\n    }\r\n    function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {\r\n      if (!isFlushingWork && mightHavePendingSyncWork) {\r\n        isFlushingWork = !0;\r\n        do {\r\n          var didPerformSomeWork = !1;\r\n          for (var root = firstScheduledRoot; null !== root; ) {\r\n            if (!onlyLegacy)\r\n              if (0 !== syncTransitionLanes) {\r\n                var pendingLanes = root.pendingLanes;\r\n                if (0 === pendingLanes) var nextLanes = 0;\r\n                else {\r\n                  var suspendedLanes = root.suspendedLanes,\r\n                    pingedLanes = root.pingedLanes;\r\n                  nextLanes =\r\n                    (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;\r\n                  nextLanes &= pendingLanes & ~(suspendedLanes & ~pingedLanes);\r\n                  nextLanes =\r\n                    nextLanes & 201326741\r\n                      ? (nextLanes & 201326741) | 1\r\n                      : nextLanes\r\n                        ? nextLanes | 2\r\n                        : 0;\r\n                }\r\n                0 !== nextLanes &&\r\n                  ((didPerformSomeWork = !0),\r\n                  performSyncWorkOnRoot(root, nextLanes));\r\n              } else\r\n                (nextLanes = workInProgressRootRenderLanes),\r\n                  (nextLanes = getNextLanes(\r\n                    root,\r\n                    root === workInProgressRoot ? nextLanes : 0,\r\n                    null !== root.cancelPendingCommit ||\r\n                      root.timeoutHandle !== noTimeout\r\n                  )),\r\n                  0 === (nextLanes & 3) ||\r\n                    checkIfRootIsPrerendering(root, nextLanes) ||\r\n                    ((didPerformSomeWork = !0),\r\n                    performSyncWorkOnRoot(root, nextLanes));\r\n            root = root.next;\r\n          }\r\n        } while (didPerformSomeWork);\r\n        isFlushingWork = !1;\r\n      }\r\n    }\r\n    function processRootScheduleInImmediateTask() {\r\n      processRootScheduleInMicrotask();\r\n    }\r\n    function processRootScheduleInMicrotask() {\r\n      mightHavePendingSyncWork =\r\n        didScheduleMicrotask_act =\r\n        didScheduleMicrotask =\r\n          !1;\r\n      var syncTransitionLanes = 0;\r\n      0 !== currentEventTransitionLane &&\r\n        (shouldAttemptEagerTransition() &&\r\n          (syncTransitionLanes = currentEventTransitionLane),\r\n        (currentEventTransitionLane = 0));\r\n      for (\r\n        var currentTime = now$1(), prev = null, root = firstScheduledRoot;\r\n        null !== root;\r\n\r\n      ) {\r\n        var next = root.next,\r\n          nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);\r\n        if (0 === nextLanes)\r\n          (root.next = null),\r\n            null === prev ? (firstScheduledRoot = next) : (prev.next = next),\r\n            null === next && (lastScheduledRoot = prev);\r\n        else if (\r\n          ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))\r\n        )\r\n          mightHavePendingSyncWork = !0;\r\n        root = next;\r\n      }\r\n      flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);\r\n    }\r\n    function scheduleTaskForRootDuringMicrotask(root, currentTime) {\r\n      for (\r\n        var suspendedLanes = root.suspendedLanes,\r\n          pingedLanes = root.pingedLanes,\r\n          expirationTimes = root.expirationTimes,\r\n          lanes = root.pendingLanes & -62914561;\r\n        0 < lanes;\r\n\r\n      ) {\r\n        var index = 31 - clz32(lanes),\r\n          lane = 1 << index,\r\n          expirationTime = expirationTimes[index];\r\n        if (-1 === expirationTime) {\r\n          if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes))\r\n            expirationTimes[index] = computeExpirationTime(lane, currentTime);\r\n        } else expirationTime <= currentTime && (root.expiredLanes |= lane);\r\n        lanes &= ~lane;\r\n      }\r\n      currentTime = workInProgressRoot;\r\n      suspendedLanes = workInProgressRootRenderLanes;\r\n      suspendedLanes = getNextLanes(\r\n        root,\r\n        root === currentTime ? suspendedLanes : 0,\r\n        null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout\r\n      );\r\n      pingedLanes = root.callbackNode;\r\n      if (\r\n        0 === suspendedLanes ||\r\n        (root === currentTime &&\r\n          (workInProgressSuspendedReason === SuspendedOnData ||\r\n            workInProgressSuspendedReason === SuspendedOnAction)) ||\r\n        null !== root.cancelPendingCommit\r\n      )\r\n        return (\r\n          null !== pingedLanes && cancelCallback(pingedLanes),\r\n          (root.callbackNode = null),\r\n          (root.callbackPriority = 0)\r\n        );\r\n      if (\r\n        0 === (suspendedLanes & 3) ||\r\n        checkIfRootIsPrerendering(root, suspendedLanes)\r\n      ) {\r\n        currentTime = suspendedLanes & -suspendedLanes;\r\n        if (\r\n          currentTime !== root.callbackPriority ||\r\n          (null !== ReactSharedInternals.actQueue &&\r\n            pingedLanes !== fakeActCallbackNode)\r\n        )\r\n          cancelCallback(pingedLanes);\r\n        else return currentTime;\r\n        switch (lanesToEventPriority(suspendedLanes)) {\r\n          case DiscreteEventPriority:\r\n          case ContinuousEventPriority:\r\n            suspendedLanes = UserBlockingPriority;\r\n            break;\r\n          case DefaultEventPriority:\r\n            suspendedLanes = NormalPriority$1;\r\n            break;\r\n          case IdleEventPriority:\r\n            suspendedLanes = IdlePriority;\r\n            break;\r\n          default:\r\n            suspendedLanes = NormalPriority$1;\r\n        }\r\n        pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);\r\n        null !== ReactSharedInternals.actQueue\r\n          ? (ReactSharedInternals.actQueue.push(pingedLanes),\r\n            (suspendedLanes = fakeActCallbackNode))\r\n          : (suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes));\r\n        root.callbackPriority = currentTime;\r\n        root.callbackNode = suspendedLanes;\r\n        return currentTime;\r\n      }\r\n      null !== pingedLanes && cancelCallback(pingedLanes);\r\n      root.callbackPriority = 2;\r\n      root.callbackNode = null;\r\n      return 2;\r\n    }\r\n    function performWorkOnRootViaSchedulerTask(root, didTimeout) {\r\n      nestedUpdateScheduled = currentUpdateIsNested = !1;\r\n      if (\r\n        pendingEffectsStatus !== NO_PENDING_EFFECTS &&\r\n        pendingEffectsStatus !== PENDING_PASSIVE_PHASE\r\n      )\r\n        return (root.callbackNode = null), (root.callbackPriority = 0), null;\r\n      var originalCallbackNode = root.callbackNode;\r\n      if (flushPendingEffects(!0) && root.callbackNode !== originalCallbackNode)\r\n        return null;\r\n      var workInProgressRootRenderLanes$jscomp$0 =\r\n        workInProgressRootRenderLanes;\r\n      workInProgressRootRenderLanes$jscomp$0 = getNextLanes(\r\n        root,\r\n        root === workInProgressRoot\r\n          ? workInProgressRootRenderLanes$jscomp$0\r\n          : 0,\r\n        null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout\r\n      );\r\n      if (0 === workInProgressRootRenderLanes$jscomp$0) return null;\r\n      performWorkOnRoot(\r\n        root,\r\n        workInProgressRootRenderLanes$jscomp$0,\r\n        didTimeout\r\n      );\r\n      scheduleTaskForRootDuringMicrotask(root, now$1());\r\n      return null != root.callbackNode &&\r\n        root.callbackNode === originalCallbackNode\r\n        ? performWorkOnRootViaSchedulerTask.bind(null, root)\r\n        : null;\r\n    }\r\n    function performSyncWorkOnRoot(root, lanes) {\r\n      if (flushPendingEffects()) return null;\r\n      currentUpdateIsNested = nestedUpdateScheduled;\r\n      nestedUpdateScheduled = !1;\r\n      performWorkOnRoot(root, lanes, !0);\r\n    }\r\n    function cancelCallback(callbackNode) {\r\n      callbackNode !== fakeActCallbackNode &&\r\n        null !== callbackNode &&\r\n        cancelCallback$1(callbackNode);\r\n    }\r\n    function scheduleImmediateRootScheduleTask() {\r\n      null !== ReactSharedInternals.actQueue &&\r\n        ReactSharedInternals.actQueue.push(function () {\r\n          processRootScheduleInMicrotask();\r\n          return null;\r\n        });\r\n      scheduleMicrotask(function () {\r\n        (executionContext & (RenderContext | CommitContext)) !== NoContext\r\n          ? scheduleCallback$3(\r\n              ImmediatePriority,\r\n              processRootScheduleInImmediateTask\r\n            )\r\n          : processRootScheduleInMicrotask();\r\n      });\r\n    }\r\n    function requestTransitionLane() {\r\n      0 === currentEventTransitionLane &&\r\n        (currentEventTransitionLane = claimNextTransitionLane());\r\n      return currentEventTransitionLane;\r\n    }\r\n    function coerceFormActionProp(actionProp) {\r\n      if (\r\n        null == actionProp ||\r\n        \"symbol\" === typeof actionProp ||\r\n        \"boolean\" === typeof actionProp\r\n      )\r\n        return null;\r\n      if (\"function\" === typeof actionProp) return actionProp;\r\n      checkAttributeStringCoercion(actionProp, \"action\");\r\n      return sanitizeURL(\"\" + actionProp);\r\n    }\r\n    function createFormDataWithSubmitter(form, submitter) {\r\n      var temp = submitter.ownerDocument.createElement(\"input\");\r\n      temp.name = submitter.name;\r\n      temp.value = submitter.value;\r\n      form.id && temp.setAttribute(\"form\", form.id);\r\n      submitter.parentNode.insertBefore(temp, submitter);\r\n      form = new FormData(form);\r\n      temp.parentNode.removeChild(temp);\r\n      return form;\r\n    }\r\n    function extractEvents$1(\r\n      dispatchQueue,\r\n      domEventName,\r\n      maybeTargetInst,\r\n      nativeEvent,\r\n      nativeEventTarget\r\n    ) {\r\n      if (\r\n        \"submit\" === domEventName &&\r\n        maybeTargetInst &&\r\n        maybeTargetInst.stateNode === nativeEventTarget\r\n      ) {\r\n        var action = coerceFormActionProp(\r\n            (nativeEventTarget[internalPropsKey] || null).action\r\n          ),\r\n          submitter = nativeEvent.submitter;\r\n        submitter &&\r\n          ((domEventName = (domEventName = submitter[internalPropsKey] || null)\r\n            ? coerceFormActionProp(domEventName.formAction)\r\n            : submitter.getAttribute(\"formAction\")),\r\n          null !== domEventName &&\r\n            ((action = domEventName), (submitter = null)));\r\n        var event = new SyntheticEvent(\r\n          \"action\",\r\n          \"action\",\r\n          null,\r\n          nativeEvent,\r\n          nativeEventTarget\r\n        );\r\n        dispatchQueue.push({\r\n          event: event,\r\n          listeners: [\r\n            {\r\n              instance: null,\r\n              listener: function () {\r\n                if (nativeEvent.defaultPrevented) {\r\n                  if (0 !== currentEventTransitionLane) {\r\n                    var formData = submitter\r\n                        ? createFormDataWithSubmitter(\r\n                            nativeEventTarget,\r\n                            submitter\r\n                          )\r\n                        : new FormData(nativeEventTarget),\r\n                      pendingState = {\r\n                        pending: !0,\r\n                        data: formData,\r\n                        method: nativeEventTarget.method,\r\n                        action: action\r\n                      };\r\n                    Object.freeze(pendingState);\r\n                    startHostTransition(\r\n                      maybeTargetInst,\r\n                      pendingState,\r\n                      null,\r\n                      formData\r\n                    );\r\n                  }\r\n                } else\r\n                  \"function\" === typeof action &&\r\n                    (event.preventDefault(),\r\n                    (formData = submitter\r\n                      ? createFormDataWithSubmitter(\r\n                          nativeEventTarget,\r\n                          submitter\r\n                        )\r\n                      : new FormData(nativeEventTarget)),\r\n                    (pendingState = {\r\n                      pending: !0,\r\n                      data: formData,\r\n                      method: nativeEventTarget.method,\r\n                      action: action\r\n                    }),\r\n                    Object.freeze(pendingState),\r\n                    startHostTransition(\r\n                      maybeTargetInst,\r\n                      pendingState,\r\n                      action,\r\n                      formData\r\n                    ));\r\n              },\r\n              currentTarget: nativeEventTarget\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n    function executeDispatch(event, listener, currentTarget) {\r\n      event.currentTarget = currentTarget;\r\n      try {\r\n        listener(event);\r\n      } catch (error) {\r\n        reportGlobalError(error);\r\n      }\r\n      event.currentTarget = null;\r\n    }\r\n    function processDispatchQueue(dispatchQueue, eventSystemFlags) {\r\n      eventSystemFlags = 0 !== (eventSystemFlags & 4);\r\n      for (var i = 0; i < dispatchQueue.length; i++) {\r\n        var _dispatchQueue$i = dispatchQueue[i];\r\n        a: {\r\n          var previousInstance = void 0,\r\n            event = _dispatchQueue$i.event;\r\n          _dispatchQueue$i = _dispatchQueue$i.listeners;\r\n          if (eventSystemFlags)\r\n            for (\r\n              var i$jscomp$0 = _dispatchQueue$i.length - 1;\r\n              0 <= i$jscomp$0;\r\n              i$jscomp$0--\r\n            ) {\r\n              var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0],\r\n                instance = _dispatchListeners$i.instance,\r\n                currentTarget = _dispatchListeners$i.currentTarget;\r\n              _dispatchListeners$i = _dispatchListeners$i.listener;\r\n              if (instance !== previousInstance && event.isPropagationStopped())\r\n                break a;\r\n              null !== instance\r\n                ? runWithFiberInDEV(\r\n                    instance,\r\n                    executeDispatch,\r\n                    event,\r\n                    _dispatchListeners$i,\r\n                    currentTarget\r\n                  )\r\n                : executeDispatch(event, _dispatchListeners$i, currentTarget);\r\n              previousInstance = instance;\r\n            }\r\n          else\r\n            for (\r\n              i$jscomp$0 = 0;\r\n              i$jscomp$0 < _dispatchQueue$i.length;\r\n              i$jscomp$0++\r\n            ) {\r\n              _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];\r\n              instance = _dispatchListeners$i.instance;\r\n              currentTarget = _dispatchListeners$i.currentTarget;\r\n              _dispatchListeners$i = _dispatchListeners$i.listener;\r\n              if (instance !== previousInstance && event.isPropagationStopped())\r\n                break a;\r\n              null !== instance\r\n                ? runWithFiberInDEV(\r\n                    instance,\r\n                    executeDispatch,\r\n                    event,\r\n                    _dispatchListeners$i,\r\n                    currentTarget\r\n                  )\r\n                : executeDispatch(event, _dispatchListeners$i, currentTarget);\r\n              previousInstance = instance;\r\n            }\r\n        }\r\n      }\r\n    }\r\n    function listenToNonDelegatedEvent(domEventName, targetElement) {\r\n      nonDelegatedEvents.has(domEventName) ||\r\n        console.error(\r\n          'Did not expect a listenToNonDelegatedEvent() call for \"%s\". This is a bug in React. Please file an issue.',\r\n          domEventName\r\n        );\r\n      var listenerSet = targetElement[internalEventHandlersKey];\r\n      void 0 === listenerSet &&\r\n        (listenerSet = targetElement[internalEventHandlersKey] = new Set());\r\n      var listenerSetKey = domEventName + \"__bubble\";\r\n      listenerSet.has(listenerSetKey) ||\r\n        (addTrappedEventListener(targetElement, domEventName, 2, !1),\r\n        listenerSet.add(listenerSetKey));\r\n    }\r\n    function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {\r\n      nonDelegatedEvents.has(domEventName) &&\r\n        !isCapturePhaseListener &&\r\n        console.error(\r\n          'Did not expect a listenToNativeEvent() call for \"%s\" in the bubble phase. This is a bug in React. Please file an issue.',\r\n          domEventName\r\n        );\r\n      var eventSystemFlags = 0;\r\n      isCapturePhaseListener && (eventSystemFlags |= 4);\r\n      addTrappedEventListener(\r\n        target,\r\n        domEventName,\r\n        eventSystemFlags,\r\n        isCapturePhaseListener\r\n      );\r\n    }\r\n    function listenToAllSupportedEvents(rootContainerElement) {\r\n      if (!rootContainerElement[listeningMarker]) {\r\n        rootContainerElement[listeningMarker] = !0;\r\n        allNativeEvents.forEach(function (domEventName) {\r\n          \"selectionchange\" !== domEventName &&\r\n            (nonDelegatedEvents.has(domEventName) ||\r\n              listenToNativeEvent(domEventName, !1, rootContainerElement),\r\n            listenToNativeEvent(domEventName, !0, rootContainerElement));\r\n        });\r\n        var ownerDocument =\r\n          9 === rootContainerElement.nodeType\r\n            ? rootContainerElement\r\n            : rootContainerElement.ownerDocument;\r\n        null === ownerDocument ||\r\n          ownerDocument[listeningMarker] ||\r\n          ((ownerDocument[listeningMarker] = !0),\r\n          listenToNativeEvent(\"selectionchange\", !1, ownerDocument));\r\n      }\r\n    }\r\n    function addTrappedEventListener(\r\n      targetContainer,\r\n      domEventName,\r\n      eventSystemFlags,\r\n      isCapturePhaseListener\r\n    ) {\r\n      switch (getEventPriority(domEventName)) {\r\n        case DiscreteEventPriority:\r\n          var listenerWrapper = dispatchDiscreteEvent;\r\n          break;\r\n        case ContinuousEventPriority:\r\n          listenerWrapper = dispatchContinuousEvent;\r\n          break;\r\n        default:\r\n          listenerWrapper = dispatchEvent;\r\n      }\r\n      eventSystemFlags = listenerWrapper.bind(\r\n        null,\r\n        domEventName,\r\n        eventSystemFlags,\r\n        targetContainer\r\n      );\r\n      listenerWrapper = void 0;\r\n      !passiveBrowserEventsSupported ||\r\n        (\"touchstart\" !== domEventName &&\r\n          \"touchmove\" !== domEventName &&\r\n          \"wheel\" !== domEventName) ||\r\n        (listenerWrapper = !0);\r\n      isCapturePhaseListener\r\n        ? void 0 !== listenerWrapper\r\n          ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\r\n              capture: !0,\r\n              passive: listenerWrapper\r\n            })\r\n          : targetContainer.addEventListener(domEventName, eventSystemFlags, !0)\r\n        : void 0 !== listenerWrapper\r\n          ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\r\n              passive: listenerWrapper\r\n            })\r\n          : targetContainer.addEventListener(\r\n              domEventName,\r\n              eventSystemFlags,\r\n              !1\r\n            );\r\n    }\r\n    function dispatchEventForPluginEventSystem(\r\n      domEventName,\r\n      eventSystemFlags,\r\n      nativeEvent,\r\n      targetInst$jscomp$0,\r\n      targetContainer\r\n    ) {\r\n      var ancestorInst = targetInst$jscomp$0;\r\n      if (\r\n        0 === (eventSystemFlags & 1) &&\r\n        0 === (eventSystemFlags & 2) &&\r\n        null !== targetInst$jscomp$0\r\n      )\r\n        a: for (;;) {\r\n          if (null === targetInst$jscomp$0) return;\r\n          var nodeTag = targetInst$jscomp$0.tag;\r\n          if (3 === nodeTag || 4 === nodeTag) {\r\n            var container = targetInst$jscomp$0.stateNode.containerInfo;\r\n            if (container === targetContainer) break;\r\n            if (4 === nodeTag)\r\n              for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {\r\n                var grandTag = nodeTag.tag;\r\n                if (\r\n                  (3 === grandTag || 4 === grandTag) &&\r\n                  nodeTag.stateNode.containerInfo === targetContainer\r\n                )\r\n                  return;\r\n                nodeTag = nodeTag.return;\r\n              }\r\n            for (; null !== container; ) {\r\n              nodeTag = getClosestInstanceFromNode(container);\r\n              if (null === nodeTag) return;\r\n              grandTag = nodeTag.tag;\r\n              if (\r\n                5 === grandTag ||\r\n                6 === grandTag ||\r\n                26 === grandTag ||\r\n                27 === grandTag\r\n              ) {\r\n                targetInst$jscomp$0 = ancestorInst = nodeTag;\r\n                continue a;\r\n              }\r\n              container = container.parentNode;\r\n            }\r\n          }\r\n          targetInst$jscomp$0 = targetInst$jscomp$0.return;\r\n        }\r\n      batchedUpdates$1(function () {\r\n        var targetInst = ancestorInst,\r\n          nativeEventTarget = getEventTarget(nativeEvent),\r\n          dispatchQueue = [];\r\n        a: {\r\n          var reactName = topLevelEventsToReactNames.get(domEventName);\r\n          if (void 0 !== reactName) {\r\n            var SyntheticEventCtor = SyntheticEvent,\r\n              reactEventType = domEventName;\r\n            switch (domEventName) {\r\n              case \"keypress\":\r\n                if (0 === getEventCharCode(nativeEvent)) break a;\r\n              case \"keydown\":\r\n              case \"keyup\":\r\n                SyntheticEventCtor = SyntheticKeyboardEvent;\r\n                break;\r\n              case \"focusin\":\r\n                reactEventType = \"focus\";\r\n                SyntheticEventCtor = SyntheticFocusEvent;\r\n                break;\r\n              case \"focusout\":\r\n                reactEventType = \"blur\";\r\n                SyntheticEventCtor = SyntheticFocusEvent;\r\n                break;\r\n              case \"beforeblur\":\r\n              case \"afterblur\":\r\n                SyntheticEventCtor = SyntheticFocusEvent;\r\n                break;\r\n              case \"click\":\r\n                if (2 === nativeEvent.button) break a;\r\n              case \"auxclick\":\r\n              case \"dblclick\":\r\n              case \"mousedown\":\r\n              case \"mousemove\":\r\n              case \"mouseup\":\r\n              case \"mouseout\":\r\n              case \"mouseover\":\r\n              case \"contextmenu\":\r\n                SyntheticEventCtor = SyntheticMouseEvent;\r\n                break;\r\n              case \"drag\":\r\n              case \"dragend\":\r\n              case \"dragenter\":\r\n              case \"dragexit\":\r\n              case \"dragleave\":\r\n              case \"dragover\":\r\n              case \"dragstart\":\r\n              case \"drop\":\r\n                SyntheticEventCtor = SyntheticDragEvent;\r\n                break;\r\n              case \"touchcancel\":\r\n              case \"touchend\":\r\n              case \"touchmove\":\r\n              case \"touchstart\":\r\n                SyntheticEventCtor = SyntheticTouchEvent;\r\n                break;\r\n              case ANIMATION_END:\r\n              case ANIMATION_ITERATION:\r\n              case ANIMATION_START:\r\n                SyntheticEventCtor = SyntheticAnimationEvent;\r\n                break;\r\n              case TRANSITION_END:\r\n                SyntheticEventCtor = SyntheticTransitionEvent;\r\n                break;\r\n              case \"scroll\":\r\n              case \"scrollend\":\r\n                SyntheticEventCtor = SyntheticUIEvent;\r\n                break;\r\n              case \"wheel\":\r\n                SyntheticEventCtor = SyntheticWheelEvent;\r\n                break;\r\n              case \"copy\":\r\n              case \"cut\":\r\n              case \"paste\":\r\n                SyntheticEventCtor = SyntheticClipboardEvent;\r\n                break;\r\n              case \"gotpointercapture\":\r\n              case \"lostpointercapture\":\r\n              case \"pointercancel\":\r\n              case \"pointerdown\":\r\n              case \"pointermove\":\r\n              case \"pointerout\":\r\n              case \"pointerover\":\r\n              case \"pointerup\":\r\n                SyntheticEventCtor = SyntheticPointerEvent;\r\n                break;\r\n              case \"toggle\":\r\n              case \"beforetoggle\":\r\n                SyntheticEventCtor = SyntheticToggleEvent;\r\n            }\r\n            var inCapturePhase = 0 !== (eventSystemFlags & 4),\r\n              accumulateTargetOnly =\r\n                !inCapturePhase &&\r\n                (\"scroll\" === domEventName || \"scrollend\" === domEventName),\r\n              reactEventName = inCapturePhase\r\n                ? null !== reactName\r\n                  ? reactName + \"Capture\"\r\n                  : null\r\n                : reactName;\r\n            inCapturePhase = [];\r\n            for (\r\n              var instance = targetInst, lastHostComponent;\r\n              null !== instance;\r\n\r\n            ) {\r\n              var _instance2 = instance;\r\n              lastHostComponent = _instance2.stateNode;\r\n              _instance2 = _instance2.tag;\r\n              (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||\r\n                null === lastHostComponent ||\r\n                null === reactEventName ||\r\n                ((_instance2 = getListener(instance, reactEventName)),\r\n                null != _instance2 &&\r\n                  inCapturePhase.push(\r\n                    createDispatchListener(\r\n                      instance,\r\n                      _instance2,\r\n                      lastHostComponent\r\n                    )\r\n                  ));\r\n              if (accumulateTargetOnly) break;\r\n              instance = instance.return;\r\n            }\r\n            0 < inCapturePhase.length &&\r\n              ((reactName = new SyntheticEventCtor(\r\n                reactName,\r\n                reactEventType,\r\n                null,\r\n                nativeEvent,\r\n                nativeEventTarget\r\n              )),\r\n              dispatchQueue.push({\r\n                event: reactName,\r\n                listeners: inCapturePhase\r\n              }));\r\n          }\r\n        }\r\n        if (0 === (eventSystemFlags & 7)) {\r\n          a: {\r\n            reactName =\r\n              \"mouseover\" === domEventName || \"pointerover\" === domEventName;\r\n            SyntheticEventCtor =\r\n              \"mouseout\" === domEventName || \"pointerout\" === domEventName;\r\n            if (\r\n              reactName &&\r\n              nativeEvent !== currentReplayingEvent &&\r\n              (reactEventType =\r\n                nativeEvent.relatedTarget || nativeEvent.fromElement) &&\r\n              (getClosestInstanceFromNode(reactEventType) ||\r\n                reactEventType[internalContainerInstanceKey])\r\n            )\r\n              break a;\r\n            if (SyntheticEventCtor || reactName) {\r\n              reactName =\r\n                nativeEventTarget.window === nativeEventTarget\r\n                  ? nativeEventTarget\r\n                  : (reactName = nativeEventTarget.ownerDocument)\r\n                    ? reactName.defaultView || reactName.parentWindow\r\n                    : window;\r\n              if (SyntheticEventCtor) {\r\n                if (\r\n                  ((reactEventType =\r\n                    nativeEvent.relatedTarget || nativeEvent.toElement),\r\n                  (SyntheticEventCtor = targetInst),\r\n                  (reactEventType = reactEventType\r\n                    ? getClosestInstanceFromNode(reactEventType)\r\n                    : null),\r\n                  null !== reactEventType &&\r\n                    ((accumulateTargetOnly =\r\n                      getNearestMountedFiber(reactEventType)),\r\n                    (inCapturePhase = reactEventType.tag),\r\n                    reactEventType !== accumulateTargetOnly ||\r\n                      (5 !== inCapturePhase &&\r\n                        27 !== inCapturePhase &&\r\n                        6 !== inCapturePhase)))\r\n                )\r\n                  reactEventType = null;\r\n              } else (SyntheticEventCtor = null), (reactEventType = targetInst);\r\n              if (SyntheticEventCtor !== reactEventType) {\r\n                inCapturePhase = SyntheticMouseEvent;\r\n                _instance2 = \"onMouseLeave\";\r\n                reactEventName = \"onMouseEnter\";\r\n                instance = \"mouse\";\r\n                if (\r\n                  \"pointerout\" === domEventName ||\r\n                  \"pointerover\" === domEventName\r\n                )\r\n                  (inCapturePhase = SyntheticPointerEvent),\r\n                    (_instance2 = \"onPointerLeave\"),\r\n                    (reactEventName = \"onPointerEnter\"),\r\n                    (instance = \"pointer\");\r\n                accumulateTargetOnly =\r\n                  null == SyntheticEventCtor\r\n                    ? reactName\r\n                    : getNodeFromInstance(SyntheticEventCtor);\r\n                lastHostComponent =\r\n                  null == reactEventType\r\n                    ? reactName\r\n                    : getNodeFromInstance(reactEventType);\r\n                reactName = new inCapturePhase(\r\n                  _instance2,\r\n                  instance + \"leave\",\r\n                  SyntheticEventCtor,\r\n                  nativeEvent,\r\n                  nativeEventTarget\r\n                );\r\n                reactName.target = accumulateTargetOnly;\r\n                reactName.relatedTarget = lastHostComponent;\r\n                _instance2 = null;\r\n                getClosestInstanceFromNode(nativeEventTarget) === targetInst &&\r\n                  ((inCapturePhase = new inCapturePhase(\r\n                    reactEventName,\r\n                    instance + \"enter\",\r\n                    reactEventType,\r\n                    nativeEvent,\r\n                    nativeEventTarget\r\n                  )),\r\n                  (inCapturePhase.target = lastHostComponent),\r\n                  (inCapturePhase.relatedTarget = accumulateTargetOnly),\r\n                  (_instance2 = inCapturePhase));\r\n                accumulateTargetOnly = _instance2;\r\n                if (SyntheticEventCtor && reactEventType)\r\n                  b: {\r\n                    inCapturePhase = SyntheticEventCtor;\r\n                    reactEventName = reactEventType;\r\n                    instance = 0;\r\n                    for (\r\n                      lastHostComponent = inCapturePhase;\r\n                      lastHostComponent;\r\n                      lastHostComponent = getParent(lastHostComponent)\r\n                    )\r\n                      instance++;\r\n                    lastHostComponent = 0;\r\n                    for (\r\n                      _instance2 = reactEventName;\r\n                      _instance2;\r\n                      _instance2 = getParent(_instance2)\r\n                    )\r\n                      lastHostComponent++;\r\n                    for (; 0 < instance - lastHostComponent; )\r\n                      (inCapturePhase = getParent(inCapturePhase)), instance--;\r\n                    for (; 0 < lastHostComponent - instance; )\r\n                      (reactEventName = getParent(reactEventName)),\r\n                        lastHostComponent--;\r\n                    for (; instance--; ) {\r\n                      if (\r\n                        inCapturePhase === reactEventName ||\r\n                        (null !== reactEventName &&\r\n                          inCapturePhase === reactEventName.alternate)\r\n                      )\r\n                        break b;\r\n                      inCapturePhase = getParent(inCapturePhase);\r\n                      reactEventName = getParent(reactEventName);\r\n                    }\r\n                    inCapturePhase = null;\r\n                  }\r\n                else inCapturePhase = null;\r\n                null !== SyntheticEventCtor &&\r\n                  accumulateEnterLeaveListenersForEvent(\r\n                    dispatchQueue,\r\n                    reactName,\r\n                    SyntheticEventCtor,\r\n                    inCapturePhase,\r\n                    !1\r\n                  );\r\n                null !== reactEventType &&\r\n                  null !== accumulateTargetOnly &&\r\n                  accumulateEnterLeaveListenersForEvent(\r\n                    dispatchQueue,\r\n                    accumulateTargetOnly,\r\n                    reactEventType,\r\n                    inCapturePhase,\r\n                    !0\r\n                  );\r\n              }\r\n            }\r\n          }\r\n          a: {\r\n            reactName = targetInst ? getNodeFromInstance(targetInst) : window;\r\n            SyntheticEventCtor =\r\n              reactName.nodeName && reactName.nodeName.toLowerCase();\r\n            if (\r\n              \"select\" === SyntheticEventCtor ||\r\n              (\"input\" === SyntheticEventCtor && \"file\" === reactName.type)\r\n            )\r\n              var getTargetInstFunc = getTargetInstForChangeEvent;\r\n            else if (isTextInputElement(reactName))\r\n              if (isInputEventSupported)\r\n                getTargetInstFunc = getTargetInstForInputOrChangeEvent;\r\n              else {\r\n                getTargetInstFunc = getTargetInstForInputEventPolyfill;\r\n                var handleEventFunc = handleEventsForInputEventPolyfill;\r\n              }\r\n            else\r\n              (SyntheticEventCtor = reactName.nodeName),\r\n                !SyntheticEventCtor ||\r\n                \"input\" !== SyntheticEventCtor.toLowerCase() ||\r\n                (\"checkbox\" !== reactName.type && \"radio\" !== reactName.type)\r\n                  ? targetInst &&\r\n                    isCustomElement(targetInst.elementType) &&\r\n                    (getTargetInstFunc = getTargetInstForChangeEvent)\r\n                  : (getTargetInstFunc = getTargetInstForClickEvent);\r\n            if (\r\n              getTargetInstFunc &&\r\n              (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))\r\n            ) {\r\n              createAndAccumulateChangeEvent(\r\n                dispatchQueue,\r\n                getTargetInstFunc,\r\n                nativeEvent,\r\n                nativeEventTarget\r\n              );\r\n              break a;\r\n            }\r\n            handleEventFunc &&\r\n              handleEventFunc(domEventName, reactName, targetInst);\r\n            \"focusout\" === domEventName &&\r\n              targetInst &&\r\n              \"number\" === reactName.type &&\r\n              null != targetInst.memoizedProps.value &&\r\n              setDefaultValue(reactName, \"number\", reactName.value);\r\n          }\r\n          handleEventFunc = targetInst\r\n            ? getNodeFromInstance(targetInst)\r\n            : window;\r\n          switch (domEventName) {\r\n            case \"focusin\":\r\n              if (\r\n                isTextInputElement(handleEventFunc) ||\r\n                \"true\" === handleEventFunc.contentEditable\r\n              )\r\n                (activeElement = handleEventFunc),\r\n                  (activeElementInst = targetInst),\r\n                  (lastSelection = null);\r\n              break;\r\n            case \"focusout\":\r\n              lastSelection = activeElementInst = activeElement = null;\r\n              break;\r\n            case \"mousedown\":\r\n              mouseDown = !0;\r\n              break;\r\n            case \"contextmenu\":\r\n            case \"mouseup\":\r\n            case \"dragend\":\r\n              mouseDown = !1;\r\n              constructSelectEvent(\r\n                dispatchQueue,\r\n                nativeEvent,\r\n                nativeEventTarget\r\n              );\r\n              break;\r\n            case \"selectionchange\":\r\n              if (skipSelectionChangeEvent) break;\r\n            case \"keydown\":\r\n            case \"keyup\":\r\n              constructSelectEvent(\r\n                dispatchQueue,\r\n                nativeEvent,\r\n                nativeEventTarget\r\n              );\r\n          }\r\n          var fallbackData;\r\n          if (canUseCompositionEvent)\r\n            b: {\r\n              switch (domEventName) {\r\n                case \"compositionstart\":\r\n                  var eventType = \"onCompositionStart\";\r\n                  break b;\r\n                case \"compositionend\":\r\n                  eventType = \"onCompositionEnd\";\r\n                  break b;\r\n                case \"compositionupdate\":\r\n                  eventType = \"onCompositionUpdate\";\r\n                  break b;\r\n              }\r\n              eventType = void 0;\r\n            }\r\n          else\r\n            isComposing\r\n              ? isFallbackCompositionEnd(domEventName, nativeEvent) &&\r\n                (eventType = \"onCompositionEnd\")\r\n              : \"keydown\" === domEventName &&\r\n                nativeEvent.keyCode === START_KEYCODE &&\r\n                (eventType = \"onCompositionStart\");\r\n          eventType &&\r\n            (useFallbackCompositionData &&\r\n              \"ko\" !== nativeEvent.locale &&\r\n              (isComposing || \"onCompositionStart\" !== eventType\r\n                ? \"onCompositionEnd\" === eventType &&\r\n                  isComposing &&\r\n                  (fallbackData = getData())\r\n                : ((root = nativeEventTarget),\r\n                  (startText = \"value\" in root ? root.value : root.textContent),\r\n                  (isComposing = !0))),\r\n            (handleEventFunc = accumulateTwoPhaseListeners(\r\n              targetInst,\r\n              eventType\r\n            )),\r\n            0 < handleEventFunc.length &&\r\n              ((eventType = new SyntheticCompositionEvent(\r\n                eventType,\r\n                domEventName,\r\n                null,\r\n                nativeEvent,\r\n                nativeEventTarget\r\n              )),\r\n              dispatchQueue.push({\r\n                event: eventType,\r\n                listeners: handleEventFunc\r\n              }),\r\n              fallbackData\r\n                ? (eventType.data = fallbackData)\r\n                : ((fallbackData = getDataFromCustomEvent(nativeEvent)),\r\n                  null !== fallbackData && (eventType.data = fallbackData))));\r\n          if (\r\n            (fallbackData = canUseTextInputEvent\r\n              ? getNativeBeforeInputChars(domEventName, nativeEvent)\r\n              : getFallbackBeforeInputChars(domEventName, nativeEvent))\r\n          )\r\n            (eventType = accumulateTwoPhaseListeners(\r\n              targetInst,\r\n              \"onBeforeInput\"\r\n            )),\r\n              0 < eventType.length &&\r\n                ((handleEventFunc = new SyntheticInputEvent(\r\n                  \"onBeforeInput\",\r\n                  \"beforeinput\",\r\n                  null,\r\n                  nativeEvent,\r\n                  nativeEventTarget\r\n                )),\r\n                dispatchQueue.push({\r\n                  event: handleEventFunc,\r\n                  listeners: eventType\r\n                }),\r\n                (handleEventFunc.data = fallbackData));\r\n          extractEvents$1(\r\n            dispatchQueue,\r\n            domEventName,\r\n            targetInst,\r\n            nativeEvent,\r\n            nativeEventTarget\r\n          );\r\n        }\r\n        processDispatchQueue(dispatchQueue, eventSystemFlags);\r\n      });\r\n    }\r\n    function createDispatchListener(instance, listener, currentTarget) {\r\n      return {\r\n        instance: instance,\r\n        listener: listener,\r\n        currentTarget: currentTarget\r\n      };\r\n    }\r\n    function accumulateTwoPhaseListeners(targetFiber, reactName) {\r\n      for (\r\n        var captureName = reactName + \"Capture\", listeners = [];\r\n        null !== targetFiber;\r\n\r\n      ) {\r\n        var _instance3 = targetFiber,\r\n          stateNode = _instance3.stateNode;\r\n        _instance3 = _instance3.tag;\r\n        (5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3) ||\r\n          null === stateNode ||\r\n          ((_instance3 = getListener(targetFiber, captureName)),\r\n          null != _instance3 &&\r\n            listeners.unshift(\r\n              createDispatchListener(targetFiber, _instance3, stateNode)\r\n            ),\r\n          (_instance3 = getListener(targetFiber, reactName)),\r\n          null != _instance3 &&\r\n            listeners.push(\r\n              createDispatchListener(targetFiber, _instance3, stateNode)\r\n            ));\r\n        if (3 === targetFiber.tag) return listeners;\r\n        targetFiber = targetFiber.return;\r\n      }\r\n      return [];\r\n    }\r\n    function getParent(inst) {\r\n      if (null === inst) return null;\r\n      do inst = inst.return;\r\n      while (inst && 5 !== inst.tag && 27 !== inst.tag);\r\n      return inst ? inst : null;\r\n    }\r\n    function accumulateEnterLeaveListenersForEvent(\r\n      dispatchQueue,\r\n      event,\r\n      target,\r\n      common,\r\n      inCapturePhase\r\n    ) {\r\n      for (\r\n        var registrationName = event._reactName, listeners = [];\r\n        null !== target && target !== common;\r\n\r\n      ) {\r\n        var _instance4 = target,\r\n          alternate = _instance4.alternate,\r\n          stateNode = _instance4.stateNode;\r\n        _instance4 = _instance4.tag;\r\n        if (null !== alternate && alternate === common) break;\r\n        (5 !== _instance4 && 26 !== _instance4 && 27 !== _instance4) ||\r\n          null === stateNode ||\r\n          ((alternate = stateNode),\r\n          inCapturePhase\r\n            ? ((stateNode = getListener(target, registrationName)),\r\n              null != stateNode &&\r\n                listeners.unshift(\r\n                  createDispatchListener(target, stateNode, alternate)\r\n                ))\r\n            : inCapturePhase ||\r\n              ((stateNode = getListener(target, registrationName)),\r\n              null != stateNode &&\r\n                listeners.push(\r\n                  createDispatchListener(target, stateNode, alternate)\r\n                )));\r\n        target = target.return;\r\n      }\r\n      0 !== listeners.length &&\r\n        dispatchQueue.push({ event: event, listeners: listeners });\r\n    }\r\n    function validatePropertiesInDevelopment(type, props) {\r\n      validateProperties$2(type, props);\r\n      (\"input\" !== type && \"textarea\" !== type && \"select\" !== type) ||\r\n        null == props ||\r\n        null !== props.value ||\r\n        didWarnValueNull ||\r\n        ((didWarnValueNull = !0),\r\n        \"select\" === type && props.multiple\r\n          ? console.error(\r\n              \"`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.\",\r\n              type\r\n            )\r\n          : console.error(\r\n              \"`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.\",\r\n              type\r\n            ));\r\n      var eventRegistry = {\r\n        registrationNameDependencies: registrationNameDependencies,\r\n        possibleRegistrationNames: possibleRegistrationNames\r\n      };\r\n      isCustomElement(type) ||\r\n        \"string\" === typeof props.is ||\r\n        warnUnknownProperties(type, props, eventRegistry);\r\n      props.contentEditable &&\r\n        !props.suppressContentEditableWarning &&\r\n        null != props.children &&\r\n        console.error(\r\n          \"A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.\"\r\n        );\r\n    }\r\n    function warnForPropDifference(\r\n      propName,\r\n      serverValue,\r\n      clientValue,\r\n      serverDifferences\r\n    ) {\r\n      serverValue !== clientValue &&\r\n        ((clientValue = normalizeMarkupForTextOrAttribute(clientValue)),\r\n        normalizeMarkupForTextOrAttribute(serverValue) !== clientValue &&\r\n          (serverDifferences[propName] = serverValue));\r\n    }\r\n    function warnForExtraAttributes(\r\n      domElement,\r\n      attributeNames,\r\n      serverDifferences\r\n    ) {\r\n      attributeNames.forEach(function (attributeName) {\r\n        serverDifferences[getPropNameFromAttributeName(attributeName)] =\r\n          \"style\" === attributeName\r\n            ? getStylesObjectFromElement(domElement)\r\n            : domElement.getAttribute(attributeName);\r\n      });\r\n    }\r\n    function warnForInvalidEventListener(registrationName, listener) {\r\n      !1 === listener\r\n        ? console.error(\r\n            \"Expected `%s` listener to be a function, instead got `false`.\\n\\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.\",\r\n            registrationName,\r\n            registrationName,\r\n            registrationName\r\n          )\r\n        : console.error(\r\n            \"Expected `%s` listener to be a function, instead got a value of `%s` type.\",\r\n            registrationName,\r\n            typeof listener\r\n          );\r\n    }\r\n    function normalizeHTML(parent, html) {\r\n      parent =\r\n        parent.namespaceURI === MATH_NAMESPACE ||\r\n        parent.namespaceURI === SVG_NAMESPACE\r\n          ? parent.ownerDocument.createElementNS(\r\n              parent.namespaceURI,\r\n              parent.tagName\r\n            )\r\n          : parent.ownerDocument.createElement(parent.tagName);\r\n      parent.innerHTML = html;\r\n      return parent.innerHTML;\r\n    }\r\n    function normalizeMarkupForTextOrAttribute(markup) {\r\n      willCoercionThrow(markup) &&\r\n        (console.error(\r\n          \"The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before using it here.\",\r\n          typeName(markup)\r\n        ),\r\n        testStringCoercion(markup));\r\n      return (\"string\" === typeof markup ? markup : \"\" + markup)\r\n        .replace(NORMALIZE_NEWLINES_REGEX, \"\\n\")\r\n        .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, \"\");\r\n    }\r\n    function checkForUnmatchedText(serverText, clientText) {\r\n      clientText = normalizeMarkupForTextOrAttribute(clientText);\r\n      return normalizeMarkupForTextOrAttribute(serverText) === clientText\r\n        ? !0\r\n        : !1;\r\n    }\r\n    function noop$1() {}\r\n    function setProp(domElement, tag, key, value, props, prevValue) {\r\n      switch (key) {\r\n        case \"children\":\r\n          if (\"string\" === typeof value)\r\n            validateTextNesting(value, tag, !1),\r\n              \"body\" === tag ||\r\n                (\"textarea\" === tag && \"\" === value) ||\r\n                setTextContent(domElement, value);\r\n          else if (\"number\" === typeof value || \"bigint\" === typeof value)\r\n            validateTextNesting(\"\" + value, tag, !1),\r\n              \"body\" !== tag && setTextContent(domElement, \"\" + value);\r\n          break;\r\n        case \"className\":\r\n          setValueForKnownAttribute(domElement, \"class\", value);\r\n          break;\r\n        case \"tabIndex\":\r\n          setValueForKnownAttribute(domElement, \"tabindex\", value);\r\n          break;\r\n        case \"dir\":\r\n        case \"role\":\r\n        case \"viewBox\":\r\n        case \"width\":\r\n        case \"height\":\r\n          setValueForKnownAttribute(domElement, key, value);\r\n          break;\r\n        case \"style\":\r\n          setValueForStyles(domElement, value, prevValue);\r\n          break;\r\n        case \"data\":\r\n          if (\"object\" !== tag) {\r\n            setValueForKnownAttribute(domElement, \"data\", value);\r\n            break;\r\n          }\r\n        case \"src\":\r\n        case \"href\":\r\n          if (\"\" === value && (\"a\" !== tag || \"href\" !== key)) {\r\n            \"src\" === key\r\n              ? console.error(\r\n                  'An empty string (\"\") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.',\r\n                  key,\r\n                  key\r\n                )\r\n              : console.error(\r\n                  'An empty string (\"\") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.',\r\n                  key,\r\n                  key\r\n                );\r\n            domElement.removeAttribute(key);\r\n            break;\r\n          }\r\n          if (\r\n            null == value ||\r\n            \"function\" === typeof value ||\r\n            \"symbol\" === typeof value ||\r\n            \"boolean\" === typeof value\r\n          ) {\r\n            domElement.removeAttribute(key);\r\n            break;\r\n          }\r\n          checkAttributeStringCoercion(value, key);\r\n          value = sanitizeURL(\"\" + value);\r\n          domElement.setAttribute(key, value);\r\n          break;\r\n        case \"action\":\r\n        case \"formAction\":\r\n          null != value &&\r\n            (\"form\" === tag\r\n              ? \"formAction\" === key\r\n                ? console.error(\r\n                    \"You can only pass the formAction prop to <input> or <button>. Use the action prop on <form>.\"\r\n                  )\r\n                : \"function\" === typeof value &&\r\n                  ((null == props.encType && null == props.method) ||\r\n                    didWarnFormActionMethod ||\r\n                    ((didWarnFormActionMethod = !0),\r\n                    console.error(\r\n                      \"Cannot specify a encType or method for a form that specifies a function as the action. React provides those automatically. They will get overridden.\"\r\n                    )),\r\n                  null == props.target ||\r\n                    didWarnFormActionTarget ||\r\n                    ((didWarnFormActionTarget = !0),\r\n                    console.error(\r\n                      \"Cannot specify a target for a form that specifies a function as the action. The function will always be executed in the same window.\"\r\n                    )))\r\n              : \"input\" === tag || \"button\" === tag\r\n                ? \"action\" === key\r\n                  ? console.error(\r\n                      \"You can only pass the action prop to <form>. Use the formAction prop on <input> or <button>.\"\r\n                    )\r\n                  : \"input\" !== tag ||\r\n                      \"submit\" === props.type ||\r\n                      \"image\" === props.type ||\r\n                      didWarnFormActionType\r\n                    ? \"button\" !== tag ||\r\n                      null == props.type ||\r\n                      \"submit\" === props.type ||\r\n                      didWarnFormActionType\r\n                      ? \"function\" === typeof value &&\r\n                        (null == props.name ||\r\n                          didWarnFormActionName ||\r\n                          ((didWarnFormActionName = !0),\r\n                          console.error(\r\n                            'Cannot specify a \"name\" prop for a button that specifies a function as a formAction. React needs it to encode which action should be invoked. It will get overridden.'\r\n                          )),\r\n                        (null == props.formEncType &&\r\n                          null == props.formMethod) ||\r\n                          didWarnFormActionMethod ||\r\n                          ((didWarnFormActionMethod = !0),\r\n                          console.error(\r\n                            \"Cannot specify a formEncType or formMethod for a button that specifies a function as a formAction. React provides those automatically. They will get overridden.\"\r\n                          )),\r\n                        null == props.formTarget ||\r\n                          didWarnFormActionTarget ||\r\n                          ((didWarnFormActionTarget = !0),\r\n                          console.error(\r\n                            \"Cannot specify a formTarget for a button that specifies a function as a formAction. The function will always be executed in the same window.\"\r\n                          )))\r\n                      : ((didWarnFormActionType = !0),\r\n                        console.error(\r\n                          'A button can only specify a formAction along with type=\"submit\" or no type.'\r\n                        ))\r\n                    : ((didWarnFormActionType = !0),\r\n                      console.error(\r\n                        'An input can only specify a formAction along with type=\"submit\" or type=\"image\".'\r\n                      ))\r\n                : \"action\" === key\r\n                  ? console.error(\r\n                      \"You can only pass the action prop to <form>.\"\r\n                    )\r\n                  : console.error(\r\n                      \"You can only pass the formAction prop to <input> or <button>.\"\r\n                    ));\r\n          if (\"function\" === typeof value) {\r\n            domElement.setAttribute(\r\n              key,\r\n              \"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')\"\r\n            );\r\n            break;\r\n          } else\r\n            \"function\" === typeof prevValue &&\r\n              (\"formAction\" === key\r\n                ? (\"input\" !== tag &&\r\n                    setProp(domElement, tag, \"name\", props.name, props, null),\r\n                  setProp(\r\n                    domElement,\r\n                    tag,\r\n                    \"formEncType\",\r\n                    props.formEncType,\r\n                    props,\r\n                    null\r\n                  ),\r\n                  setProp(\r\n                    domElement,\r\n                    tag,\r\n                    \"formMethod\",\r\n                    props.formMethod,\r\n                    props,\r\n                    null\r\n                  ),\r\n                  setProp(\r\n                    domElement,\r\n                    tag,\r\n                    \"formTarget\",\r\n                    props.formTarget,\r\n                    props,\r\n                    null\r\n                  ))\r\n                : (setProp(\r\n                    domElement,\r\n                    tag,\r\n                    \"encType\",\r\n                    props.encType,\r\n                    props,\r\n                    null\r\n                  ),\r\n                  setProp(domElement, tag, \"method\", props.method, props, null),\r\n                  setProp(\r\n                    domElement,\r\n                    tag,\r\n                    \"target\",\r\n                    props.target,\r\n                    props,\r\n                    null\r\n                  )));\r\n          if (\r\n            null == value ||\r\n            \"symbol\" === typeof value ||\r\n            \"boolean\" === typeof value\r\n          ) {\r\n            domElement.removeAttribute(key);\r\n            break;\r\n          }\r\n          checkAttributeStringCoercion(value, key);\r\n          value = sanitizeURL(\"\" + value);\r\n          domElement.setAttribute(key, value);\r\n          break;\r\n        case \"onClick\":\r\n          null != value &&\r\n            (\"function\" !== typeof value &&\r\n              warnForInvalidEventListener(key, value),\r\n            (domElement.onclick = noop$1));\r\n          break;\r\n        case \"onScroll\":\r\n          null != value &&\r\n            (\"function\" !== typeof value &&\r\n              warnForInvalidEventListener(key, value),\r\n            listenToNonDelegatedEvent(\"scroll\", domElement));\r\n          break;\r\n        case \"onScrollEnd\":\r\n          null != value &&\r\n            (\"function\" !== typeof value &&\r\n              warnForInvalidEventListener(key, value),\r\n            listenToNonDelegatedEvent(\"scrollend\", domElement));\r\n          break;\r\n        case \"dangerouslySetInnerHTML\":\r\n          if (null != value) {\r\n            if (\"object\" !== typeof value || !(\"__html\" in value))\r\n              throw Error(\r\n                \"`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.\"\r\n              );\r\n            key = value.__html;\r\n            if (null != key) {\r\n              if (null != props.children)\r\n                throw Error(\r\n                  \"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\"\r\n                );\r\n              domElement.innerHTML = key;\r\n            }\r\n          }\r\n          break;\r\n        case \"multiple\":\r\n          domElement.multiple =\r\n            value && \"function\" !== typeof value && \"symbol\" !== typeof value;\r\n          break;\r\n        case \"muted\":\r\n          domElement.muted =\r\n            value && \"function\" !== typeof value && \"symbol\" !== typeof value;\r\n          break;\r\n        case \"suppressContentEditableWarning\":\r\n        case \"suppressHydrationWarning\":\r\n        case \"defaultValue\":\r\n        case \"defaultChecked\":\r\n        case \"innerHTML\":\r\n        case \"ref\":\r\n          break;\r\n        case \"autoFocus\":\r\n          break;\r\n        case \"xlinkHref\":\r\n          if (\r\n            null == value ||\r\n            \"function\" === typeof value ||\r\n            \"boolean\" === typeof value ||\r\n            \"symbol\" === typeof value\r\n          ) {\r\n            domElement.removeAttribute(\"xlink:href\");\r\n            break;\r\n          }\r\n          checkAttributeStringCoercion(value, key);\r\n          key = sanitizeURL(\"\" + value);\r\n          domElement.setAttributeNS(xlinkNamespace, \"xlink:href\", key);\r\n          break;\r\n        case \"contentEditable\":\r\n        case \"spellCheck\":\r\n        case \"draggable\":\r\n        case \"value\":\r\n        case \"autoReverse\":\r\n        case \"externalResourcesRequired\":\r\n        case \"focusable\":\r\n        case \"preserveAlpha\":\r\n          null != value &&\r\n          \"function\" !== typeof value &&\r\n          \"symbol\" !== typeof value\r\n            ? (checkAttributeStringCoercion(value, key),\r\n              domElement.setAttribute(key, \"\" + value))\r\n            : domElement.removeAttribute(key);\r\n          break;\r\n        case \"inert\":\r\n          \"\" !== value ||\r\n            didWarnForNewBooleanPropsWithEmptyValue[key] ||\r\n            ((didWarnForNewBooleanPropsWithEmptyValue[key] = !0),\r\n            console.error(\r\n              \"Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.\",\r\n              key\r\n            ));\r\n        case \"allowFullScreen\":\r\n        case \"async\":\r\n        case \"autoPlay\":\r\n        case \"controls\":\r\n        case \"default\":\r\n        case \"defer\":\r\n        case \"disabled\":\r\n        case \"disablePictureInPicture\":\r\n        case \"disableRemotePlayback\":\r\n        case \"formNoValidate\":\r\n        case \"hidden\":\r\n        case \"loop\":\r\n        case \"noModule\":\r\n        case \"noValidate\":\r\n        case \"open\":\r\n        case \"playsInline\":\r\n        case \"readOnly\":\r\n        case \"required\":\r\n        case \"reversed\":\r\n        case \"scoped\":\r\n        case \"seamless\":\r\n        case \"itemScope\":\r\n          value && \"function\" !== typeof value && \"symbol\" !== typeof value\r\n            ? domElement.setAttribute(key, \"\")\r\n            : domElement.removeAttribute(key);\r\n          break;\r\n        case \"capture\":\r\n        case \"download\":\r\n          !0 === value\r\n            ? domElement.setAttribute(key, \"\")\r\n            : !1 !== value &&\r\n                null != value &&\r\n                \"function\" !== typeof value &&\r\n                \"symbol\" !== typeof value\r\n              ? (checkAttributeStringCoercion(value, key),\r\n                domElement.setAttribute(key, value))\r\n              : domElement.removeAttribute(key);\r\n          break;\r\n        case \"cols\":\r\n        case \"rows\":\r\n        case \"size\":\r\n        case \"span\":\r\n          null != value &&\r\n          \"function\" !== typeof value &&\r\n          \"symbol\" !== typeof value &&\r\n          !isNaN(value) &&\r\n          1 <= value\r\n            ? (checkAttributeStringCoercion(value, key),\r\n              domElement.setAttribute(key, value))\r\n            : domElement.removeAttribute(key);\r\n          break;\r\n        case \"rowSpan\":\r\n        case \"start\":\r\n          null == value ||\r\n          \"function\" === typeof value ||\r\n          \"symbol\" === typeof value ||\r\n          isNaN(value)\r\n            ? domElement.removeAttribute(key)\r\n            : (checkAttributeStringCoercion(value, key),\r\n              domElement.setAttribute(key, value));\r\n          break;\r\n        case \"popover\":\r\n          listenToNonDelegatedEvent(\"beforetoggle\", domElement);\r\n          listenToNonDelegatedEvent(\"toggle\", domElement);\r\n          setValueForAttribute(domElement, \"popover\", value);\r\n          break;\r\n        case \"xlinkActuate\":\r\n          setValueForNamespacedAttribute(\r\n            domElement,\r\n            xlinkNamespace,\r\n            \"xlink:actuate\",\r\n            value\r\n          );\r\n          break;\r\n        case \"xlinkArcrole\":\r\n          setValueForNamespacedAttribute(\r\n            domElement,\r\n            xlinkNamespace,\r\n            \"xlink:arcrole\",\r\n            value\r\n          );\r\n          break;\r\n        case \"xlinkRole\":\r\n          setValueForNamespacedAttribute(\r\n            domElement,\r\n            xlinkNamespace,\r\n            \"xlink:role\",\r\n            value\r\n          );\r\n          break;\r\n        case \"xlinkShow\":\r\n          setValueForNamespacedAttribute(\r\n            domElement,\r\n            xlinkNamespace,\r\n            \"xlink:show\",\r\n            value\r\n          );\r\n          break;\r\n        case \"xlinkTitle\":\r\n          setValueForNamespacedAttribute(\r\n            domElement,\r\n            xlinkNamespace,\r\n            \"xlink:title\",\r\n            value\r\n          );\r\n          break;\r\n        case \"xlinkType\":\r\n          setValueForNamespacedAttribute(\r\n            domElement,\r\n            xlinkNamespace,\r\n            \"xlink:type\",\r\n            value\r\n          );\r\n          break;\r\n        case \"xmlBase\":\r\n          setValueForNamespacedAttribute(\r\n            domElement,\r\n            xmlNamespace,\r\n            \"xml:base\",\r\n            value\r\n          );\r\n          break;\r\n        case \"xmlLang\":\r\n          setValueForNamespacedAttribute(\r\n            domElement,\r\n            xmlNamespace,\r\n            \"xml:lang\",\r\n            value\r\n          );\r\n          break;\r\n        case \"xmlSpace\":\r\n          setValueForNamespacedAttribute(\r\n            domElement,\r\n            xmlNamespace,\r\n            \"xml:space\",\r\n            value\r\n          );\r\n          break;\r\n        case \"is\":\r\n          null != prevValue &&\r\n            console.error(\r\n              'Cannot update the \"is\" prop after it has been initialized.'\r\n            );\r\n          setValueForAttribute(domElement, \"is\", value);\r\n          break;\r\n        case \"innerText\":\r\n        case \"textContent\":\r\n          break;\r\n        case \"popoverTarget\":\r\n          didWarnPopoverTargetObject ||\r\n            null == value ||\r\n            \"object\" !== typeof value ||\r\n            ((didWarnPopoverTargetObject = !0),\r\n            console.error(\r\n              \"The `popoverTarget` prop expects the ID of an Element as a string. Received %s instead.\",\r\n              value\r\n            ));\r\n        default:\r\n          !(2 < key.length) ||\r\n          (\"o\" !== key[0] && \"O\" !== key[0]) ||\r\n          (\"n\" !== key[1] && \"N\" !== key[1])\r\n            ? ((key = getAttributeAlias(key)),\r\n              setValueForAttribute(domElement, key, value))\r\n            : registrationNameDependencies.hasOwnProperty(key) &&\r\n              null != value &&\r\n              \"function\" !== typeof value &&\r\n              warnForInvalidEventListener(key, value);\r\n      }\r\n    }\r\n    function setPropOnCustomElement(\r\n      domElement,\r\n      tag,\r\n      key,\r\n      value,\r\n      props,\r\n      prevValue\r\n    ) {\r\n      switch (key) {\r\n        case \"style\":\r\n          setValueForStyles(domElement, value, prevValue);\r\n          break;\r\n        case \"dangerouslySetInnerHTML\":\r\n          if (null != value) {\r\n            if (\"object\" !== typeof value || !(\"__html\" in value))\r\n              throw Error(\r\n                \"`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.\"\r\n              );\r\n            key = value.__html;\r\n            if (null != key) {\r\n              if (null != props.children)\r\n                throw Error(\r\n                  \"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\"\r\n                );\r\n              domElement.innerHTML = key;\r\n            }\r\n          }\r\n          break;\r\n        case \"children\":\r\n          \"string\" === typeof value\r\n            ? setTextContent(domElement, value)\r\n            : (\"number\" === typeof value || \"bigint\" === typeof value) &&\r\n              setTextContent(domElement, \"\" + value);\r\n          break;\r\n        case \"onScroll\":\r\n          null != value &&\r\n            (\"function\" !== typeof value &&\r\n              warnForInvalidEventListener(key, value),\r\n            listenToNonDelegatedEvent(\"scroll\", domElement));\r\n          break;\r\n        case \"onScrollEnd\":\r\n          null != value &&\r\n            (\"function\" !== typeof value &&\r\n              warnForInvalidEventListener(key, value),\r\n            listenToNonDelegatedEvent(\"scrollend\", domElement));\r\n          break;\r\n        case \"onClick\":\r\n          null != value &&\r\n            (\"function\" !== typeof value &&\r\n              warnForInvalidEventListener(key, value),\r\n            (domElement.onclick = noop$1));\r\n          break;\r\n        case \"suppressContentEditableWarning\":\r\n        case \"suppressHydrationWarning\":\r\n        case \"innerHTML\":\r\n        case \"ref\":\r\n          break;\r\n        case \"innerText\":\r\n        case \"textContent\":\r\n          break;\r\n        default:\r\n          if (registrationNameDependencies.hasOwnProperty(key))\r\n            null != value &&\r\n              \"function\" !== typeof value &&\r\n              warnForInvalidEventListener(key, value);\r\n          else\r\n            a: {\r\n              if (\r\n                \"o\" === key[0] &&\r\n                \"n\" === key[1] &&\r\n                ((props = key.endsWith(\"Capture\")),\r\n                (tag = key.slice(2, props ? key.length - 7 : void 0)),\r\n                (prevValue = domElement[internalPropsKey] || null),\r\n                (prevValue = null != prevValue ? prevValue[key] : null),\r\n                \"function\" === typeof prevValue &&\r\n                  domElement.removeEventListener(tag, prevValue, props),\r\n                \"function\" === typeof value)\r\n              ) {\r\n                \"function\" !== typeof prevValue &&\r\n                  null !== prevValue &&\r\n                  (key in domElement\r\n                    ? (domElement[key] = null)\r\n                    : domElement.hasAttribute(key) &&\r\n                      domElement.removeAttribute(key));\r\n                domElement.addEventListener(tag, value, props);\r\n                break a;\r\n              }\r\n              key in domElement\r\n                ? (domElement[key] = value)\r\n                : !0 === value\r\n                  ? domElement.setAttribute(key, \"\")\r\n                  : setValueForAttribute(domElement, key, value);\r\n            }\r\n      }\r\n    }\r\n    function setInitialProperties(domElement, tag, props) {\r\n      validatePropertiesInDevelopment(tag, props);\r\n      switch (tag) {\r\n        case \"div\":\r\n        case \"span\":\r\n        case \"svg\":\r\n        case \"path\":\r\n        case \"a\":\r\n        case \"g\":\r\n        case \"p\":\r\n        case \"li\":\r\n          break;\r\n        case \"img\":\r\n          listenToNonDelegatedEvent(\"error\", domElement);\r\n          listenToNonDelegatedEvent(\"load\", domElement);\r\n          var hasSrc = !1,\r\n            hasSrcSet = !1,\r\n            propKey;\r\n          for (propKey in props)\r\n            if (props.hasOwnProperty(propKey)) {\r\n              var propValue = props[propKey];\r\n              if (null != propValue)\r\n                switch (propKey) {\r\n                  case \"src\":\r\n                    hasSrc = !0;\r\n                    break;\r\n                  case \"srcSet\":\r\n                    hasSrcSet = !0;\r\n                    break;\r\n                  case \"children\":\r\n                  case \"dangerouslySetInnerHTML\":\r\n                    throw Error(\r\n                      tag +\r\n                        \" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\r\n                    );\r\n                  default:\r\n                    setProp(domElement, tag, propKey, propValue, props, null);\r\n                }\r\n            }\r\n          hasSrcSet &&\r\n            setProp(domElement, tag, \"srcSet\", props.srcSet, props, null);\r\n          hasSrc && setProp(domElement, tag, \"src\", props.src, props, null);\r\n          return;\r\n        case \"input\":\r\n          checkControlledValueProps(\"input\", props);\r\n          listenToNonDelegatedEvent(\"invalid\", domElement);\r\n          var defaultValue = (propKey = propValue = hasSrcSet = null),\r\n            checked = null,\r\n            defaultChecked = null;\r\n          for (hasSrc in props)\r\n            if (props.hasOwnProperty(hasSrc)) {\r\n              var _propValue = props[hasSrc];\r\n              if (null != _propValue)\r\n                switch (hasSrc) {\r\n                  case \"name\":\r\n                    hasSrcSet = _propValue;\r\n                    break;\r\n                  case \"type\":\r\n                    propValue = _propValue;\r\n                    break;\r\n                  case \"checked\":\r\n                    checked = _propValue;\r\n                    break;\r\n                  case \"defaultChecked\":\r\n                    defaultChecked = _propValue;\r\n                    break;\r\n                  case \"value\":\r\n                    propKey = _propValue;\r\n                    break;\r\n                  case \"defaultValue\":\r\n                    defaultValue = _propValue;\r\n                    break;\r\n                  case \"children\":\r\n                  case \"dangerouslySetInnerHTML\":\r\n                    if (null != _propValue)\r\n                      throw Error(\r\n                        tag +\r\n                          \" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\r\n                      );\r\n                    break;\r\n                  default:\r\n                    setProp(domElement, tag, hasSrc, _propValue, props, null);\r\n                }\r\n            }\r\n          validateInputProps(domElement, props);\r\n          initInput(\r\n            domElement,\r\n            propKey,\r\n            defaultValue,\r\n            checked,\r\n            defaultChecked,\r\n            propValue,\r\n            hasSrcSet,\r\n            !1\r\n          );\r\n          track(domElement);\r\n          return;\r\n        case \"select\":\r\n          checkControlledValueProps(\"select\", props);\r\n          listenToNonDelegatedEvent(\"invalid\", domElement);\r\n          hasSrc = propValue = propKey = null;\r\n          for (hasSrcSet in props)\r\n            if (\r\n              props.hasOwnProperty(hasSrcSet) &&\r\n              ((defaultValue = props[hasSrcSet]), null != defaultValue)\r\n            )\r\n              switch (hasSrcSet) {\r\n                case \"value\":\r\n                  propKey = defaultValue;\r\n                  break;\r\n                case \"defaultValue\":\r\n                  propValue = defaultValue;\r\n                  break;\r\n                case \"multiple\":\r\n                  hasSrc = defaultValue;\r\n                default:\r\n                  setProp(\r\n                    domElement,\r\n                    tag,\r\n                    hasSrcSet,\r\n                    defaultValue,\r\n                    props,\r\n                    null\r\n                  );\r\n              }\r\n          validateSelectProps(domElement, props);\r\n          tag = propKey;\r\n          props = propValue;\r\n          domElement.multiple = !!hasSrc;\r\n          null != tag\r\n            ? updateOptions(domElement, !!hasSrc, tag, !1)\r\n            : null != props && updateOptions(domElement, !!hasSrc, props, !0);\r\n          return;\r\n        case \"textarea\":\r\n          checkControlledValueProps(\"textarea\", props);\r\n          listenToNonDelegatedEvent(\"invalid\", domElement);\r\n          propKey = hasSrcSet = hasSrc = null;\r\n          for (propValue in props)\r\n            if (\r\n              props.hasOwnProperty(propValue) &&\r\n              ((defaultValue = props[propValue]), null != defaultValue)\r\n            )\r\n              switch (propValue) {\r\n                case \"value\":\r\n                  hasSrc = defaultValue;\r\n                  break;\r\n                case \"defaultValue\":\r\n                  hasSrcSet = defaultValue;\r\n                  break;\r\n                case \"children\":\r\n                  propKey = defaultValue;\r\n                  break;\r\n                case \"dangerouslySetInnerHTML\":\r\n                  if (null != defaultValue)\r\n                    throw Error(\r\n                      \"`dangerouslySetInnerHTML` does not make sense on <textarea>.\"\r\n                    );\r\n                  break;\r\n                default:\r\n                  setProp(\r\n                    domElement,\r\n                    tag,\r\n                    propValue,\r\n                    defaultValue,\r\n                    props,\r\n                    null\r\n                  );\r\n              }\r\n          validateTextareaProps(domElement, props);\r\n          initTextarea(domElement, hasSrc, hasSrcSet, propKey);\r\n          track(domElement);\r\n          return;\r\n        case \"option\":\r\n          validateOptionProps(domElement, props);\r\n          for (checked in props)\r\n            if (\r\n              props.hasOwnProperty(checked) &&\r\n              ((hasSrc = props[checked]), null != hasSrc)\r\n            )\r\n              switch (checked) {\r\n                case \"selected\":\r\n                  domElement.selected =\r\n                    hasSrc &&\r\n                    \"function\" !== typeof hasSrc &&\r\n                    \"symbol\" !== typeof hasSrc;\r\n                  break;\r\n                default:\r\n                  setProp(domElement, tag, checked, hasSrc, props, null);\r\n              }\r\n          return;\r\n        case \"dialog\":\r\n          listenToNonDelegatedEvent(\"beforetoggle\", domElement);\r\n          listenToNonDelegatedEvent(\"toggle\", domElement);\r\n          listenToNonDelegatedEvent(\"cancel\", domElement);\r\n          listenToNonDelegatedEvent(\"close\", domElement);\r\n          break;\r\n        case \"iframe\":\r\n        case \"object\":\r\n          listenToNonDelegatedEvent(\"load\", domElement);\r\n          break;\r\n        case \"video\":\r\n        case \"audio\":\r\n          for (hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)\r\n            listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);\r\n          break;\r\n        case \"image\":\r\n          listenToNonDelegatedEvent(\"error\", domElement);\r\n          listenToNonDelegatedEvent(\"load\", domElement);\r\n          break;\r\n        case \"details\":\r\n          listenToNonDelegatedEvent(\"toggle\", domElement);\r\n          break;\r\n        case \"embed\":\r\n        case \"source\":\r\n        case \"link\":\r\n          listenToNonDelegatedEvent(\"error\", domElement),\r\n            listenToNonDelegatedEvent(\"load\", domElement);\r\n        case \"area\":\r\n        case \"base\":\r\n        case \"br\":\r\n        case \"col\":\r\n        case \"hr\":\r\n        case \"keygen\":\r\n        case \"meta\":\r\n        case \"param\":\r\n        case \"track\":\r\n        case \"wbr\":\r\n        case \"menuitem\":\r\n          for (defaultChecked in props)\r\n            if (\r\n              props.hasOwnProperty(defaultChecked) &&\r\n              ((hasSrc = props[defaultChecked]), null != hasSrc)\r\n            )\r\n              switch (defaultChecked) {\r\n                case \"children\":\r\n                case \"dangerouslySetInnerHTML\":\r\n                  throw Error(\r\n                    tag +\r\n                      \" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\r\n                  );\r\n                default:\r\n                  setProp(domElement, tag, defaultChecked, hasSrc, props, null);\r\n              }\r\n          return;\r\n        default:\r\n          if (isCustomElement(tag)) {\r\n            for (_propValue in props)\r\n              props.hasOwnProperty(_propValue) &&\r\n                ((hasSrc = props[_propValue]),\r\n                void 0 !== hasSrc &&\r\n                  setPropOnCustomElement(\r\n                    domElement,\r\n                    tag,\r\n                    _propValue,\r\n                    hasSrc,\r\n                    props,\r\n                    void 0\r\n                  ));\r\n            return;\r\n          }\r\n      }\r\n      for (defaultValue in props)\r\n        props.hasOwnProperty(defaultValue) &&\r\n          ((hasSrc = props[defaultValue]),\r\n          null != hasSrc &&\r\n            setProp(domElement, tag, defaultValue, hasSrc, props, null));\r\n    }\r\n    function updateProperties(domElement, tag, lastProps, nextProps) {\r\n      validatePropertiesInDevelopment(tag, nextProps);\r\n      switch (tag) {\r\n        case \"div\":\r\n        case \"span\":\r\n        case \"svg\":\r\n        case \"path\":\r\n        case \"a\":\r\n        case \"g\":\r\n        case \"p\":\r\n        case \"li\":\r\n          break;\r\n        case \"input\":\r\n          var name = null,\r\n            type = null,\r\n            value = null,\r\n            defaultValue = null,\r\n            lastDefaultValue = null,\r\n            checked = null,\r\n            defaultChecked = null;\r\n          for (propKey in lastProps) {\r\n            var lastProp = lastProps[propKey];\r\n            if (lastProps.hasOwnProperty(propKey) && null != lastProp)\r\n              switch (propKey) {\r\n                case \"checked\":\r\n                  break;\r\n                case \"value\":\r\n                  break;\r\n                case \"defaultValue\":\r\n                  lastDefaultValue = lastProp;\r\n                default:\r\n                  nextProps.hasOwnProperty(propKey) ||\r\n                    setProp(\r\n                      domElement,\r\n                      tag,\r\n                      propKey,\r\n                      null,\r\n                      nextProps,\r\n                      lastProp\r\n                    );\r\n              }\r\n          }\r\n          for (var _propKey8 in nextProps) {\r\n            var propKey = nextProps[_propKey8];\r\n            lastProp = lastProps[_propKey8];\r\n            if (\r\n              nextProps.hasOwnProperty(_propKey8) &&\r\n              (null != propKey || null != lastProp)\r\n            )\r\n              switch (_propKey8) {\r\n                case \"type\":\r\n                  type = propKey;\r\n                  break;\r\n                case \"name\":\r\n                  name = propKey;\r\n                  break;\r\n                case \"checked\":\r\n                  checked = propKey;\r\n                  break;\r\n                case \"defaultChecked\":\r\n                  defaultChecked = propKey;\r\n                  break;\r\n                case \"value\":\r\n                  value = propKey;\r\n                  break;\r\n                case \"defaultValue\":\r\n                  defaultValue = propKey;\r\n                  break;\r\n                case \"children\":\r\n                case \"dangerouslySetInnerHTML\":\r\n                  if (null != propKey)\r\n                    throw Error(\r\n                      tag +\r\n                        \" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\r\n                    );\r\n                  break;\r\n                default:\r\n                  propKey !== lastProp &&\r\n                    setProp(\r\n                      domElement,\r\n                      tag,\r\n                      _propKey8,\r\n                      propKey,\r\n                      nextProps,\r\n                      lastProp\r\n                    );\r\n              }\r\n          }\r\n          tag =\r\n            \"checkbox\" === lastProps.type || \"radio\" === lastProps.type\r\n              ? null != lastProps.checked\r\n              : null != lastProps.value;\r\n          nextProps =\r\n            \"checkbox\" === nextProps.type || \"radio\" === nextProps.type\r\n              ? null != nextProps.checked\r\n              : null != nextProps.value;\r\n          tag ||\r\n            !nextProps ||\r\n            didWarnUncontrolledToControlled ||\r\n            (console.error(\r\n              \"A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components\"\r\n            ),\r\n            (didWarnUncontrolledToControlled = !0));\r\n          !tag ||\r\n            nextProps ||\r\n            didWarnControlledToUncontrolled ||\r\n            (console.error(\r\n              \"A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components\"\r\n            ),\r\n            (didWarnControlledToUncontrolled = !0));\r\n          updateInput(\r\n            domElement,\r\n            value,\r\n            defaultValue,\r\n            lastDefaultValue,\r\n            checked,\r\n            defaultChecked,\r\n            type,\r\n            name\r\n          );\r\n          return;\r\n        case \"select\":\r\n          propKey = value = defaultValue = _propKey8 = null;\r\n          for (type in lastProps)\r\n            if (\r\n              ((lastDefaultValue = lastProps[type]),\r\n              lastProps.hasOwnProperty(type) && null != lastDefaultValue)\r\n            )\r\n              switch (type) {\r\n                case \"value\":\r\n                  break;\r\n                case \"multiple\":\r\n                  propKey = lastDefaultValue;\r\n                default:\r\n                  nextProps.hasOwnProperty(type) ||\r\n                    setProp(\r\n                      domElement,\r\n                      tag,\r\n                      type,\r\n                      null,\r\n                      nextProps,\r\n                      lastDefaultValue\r\n                    );\r\n              }\r\n          for (name in nextProps)\r\n            if (\r\n              ((type = nextProps[name]),\r\n              (lastDefaultValue = lastProps[name]),\r\n              nextProps.hasOwnProperty(name) &&\r\n                (null != type || null != lastDefaultValue))\r\n            )\r\n              switch (name) {\r\n                case \"value\":\r\n                  _propKey8 = type;\r\n                  break;\r\n                case \"defaultValue\":\r\n                  defaultValue = type;\r\n                  break;\r\n                case \"multiple\":\r\n                  value = type;\r\n                default:\r\n                  type !== lastDefaultValue &&\r\n                    setProp(\r\n                      domElement,\r\n                      tag,\r\n                      name,\r\n                      type,\r\n                      nextProps,\r\n                      lastDefaultValue\r\n                    );\r\n              }\r\n          nextProps = defaultValue;\r\n          tag = value;\r\n          lastProps = propKey;\r\n          null != _propKey8\r\n            ? updateOptions(domElement, !!tag, _propKey8, !1)\r\n            : !!lastProps !== !!tag &&\r\n              (null != nextProps\r\n                ? updateOptions(domElement, !!tag, nextProps, !0)\r\n                : updateOptions(domElement, !!tag, tag ? [] : \"\", !1));\r\n          return;\r\n        case \"textarea\":\r\n          propKey = _propKey8 = null;\r\n          for (defaultValue in lastProps)\r\n            if (\r\n              ((name = lastProps[defaultValue]),\r\n              lastProps.hasOwnProperty(defaultValue) &&\r\n                null != name &&\r\n                !nextProps.hasOwnProperty(defaultValue))\r\n            )\r\n              switch (defaultValue) {\r\n                case \"value\":\r\n                  break;\r\n                case \"children\":\r\n                  break;\r\n                default:\r\n                  setProp(domElement, tag, defaultValue, null, nextProps, name);\r\n              }\r\n          for (value in nextProps)\r\n            if (\r\n              ((name = nextProps[value]),\r\n              (type = lastProps[value]),\r\n              nextProps.hasOwnProperty(value) && (null != name || null != type))\r\n            )\r\n              switch (value) {\r\n                case \"value\":\r\n                  _propKey8 = name;\r\n                  break;\r\n                case \"defaultValue\":\r\n                  propKey = name;\r\n                  break;\r\n                case \"children\":\r\n                  break;\r\n                case \"dangerouslySetInnerHTML\":\r\n                  if (null != name)\r\n                    throw Error(\r\n                      \"`dangerouslySetInnerHTML` does not make sense on <textarea>.\"\r\n                    );\r\n                  break;\r\n                default:\r\n                  name !== type &&\r\n                    setProp(domElement, tag, value, name, nextProps, type);\r\n              }\r\n          updateTextarea(domElement, _propKey8, propKey);\r\n          return;\r\n        case \"option\":\r\n          for (var _propKey13 in lastProps)\r\n            if (\r\n              ((_propKey8 = lastProps[_propKey13]),\r\n              lastProps.hasOwnProperty(_propKey13) &&\r\n                null != _propKey8 &&\r\n                !nextProps.hasOwnProperty(_propKey13))\r\n            )\r\n              switch (_propKey13) {\r\n                case \"selected\":\r\n                  domElement.selected = !1;\r\n                  break;\r\n                default:\r\n                  setProp(\r\n                    domElement,\r\n                    tag,\r\n                    _propKey13,\r\n                    null,\r\n                    nextProps,\r\n                    _propKey8\r\n                  );\r\n              }\r\n          for (lastDefaultValue in nextProps)\r\n            if (\r\n              ((_propKey8 = nextProps[lastDefaultValue]),\r\n              (propKey = lastProps[lastDefaultValue]),\r\n              nextProps.hasOwnProperty(lastDefaultValue) &&\r\n                _propKey8 !== propKey &&\r\n                (null != _propKey8 || null != propKey))\r\n            )\r\n              switch (lastDefaultValue) {\r\n                case \"selected\":\r\n                  domElement.selected =\r\n                    _propKey8 &&\r\n                    \"function\" !== typeof _propKey8 &&\r\n                    \"symbol\" !== typeof _propKey8;\r\n                  break;\r\n                default:\r\n                  setProp(\r\n                    domElement,\r\n                    tag,\r\n                    lastDefaultValue,\r\n                    _propKey8,\r\n                    nextProps,\r\n                    propKey\r\n                  );\r\n              }\r\n          return;\r\n        case \"img\":\r\n        case \"link\":\r\n        case \"area\":\r\n        case \"base\":\r\n        case \"br\":\r\n        case \"col\":\r\n        case \"embed\":\r\n        case \"hr\":\r\n        case \"keygen\":\r\n        case \"meta\":\r\n        case \"param\":\r\n        case \"source\":\r\n        case \"track\":\r\n        case \"wbr\":\r\n        case \"menuitem\":\r\n          for (var _propKey15 in lastProps)\r\n            (_propKey8 = lastProps[_propKey15]),\r\n              lastProps.hasOwnProperty(_propKey15) &&\r\n                null != _propKey8 &&\r\n                !nextProps.hasOwnProperty(_propKey15) &&\r\n                setProp(\r\n                  domElement,\r\n                  tag,\r\n                  _propKey15,\r\n                  null,\r\n                  nextProps,\r\n                  _propKey8\r\n                );\r\n          for (checked in nextProps)\r\n            if (\r\n              ((_propKey8 = nextProps[checked]),\r\n              (propKey = lastProps[checked]),\r\n              nextProps.hasOwnProperty(checked) &&\r\n                _propKey8 !== propKey &&\r\n                (null != _propKey8 || null != propKey))\r\n            )\r\n              switch (checked) {\r\n                case \"children\":\r\n                case \"dangerouslySetInnerHTML\":\r\n                  if (null != _propKey8)\r\n                    throw Error(\r\n                      tag +\r\n                        \" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\r\n                    );\r\n                  break;\r\n                default:\r\n                  setProp(\r\n                    domElement,\r\n                    tag,\r\n                    checked,\r\n                    _propKey8,\r\n                    nextProps,\r\n                    propKey\r\n                  );\r\n              }\r\n          return;\r\n        default:\r\n          if (isCustomElement(tag)) {\r\n            for (var _propKey17 in lastProps)\r\n              (_propKey8 = lastProps[_propKey17]),\r\n                lastProps.hasOwnProperty(_propKey17) &&\r\n                  void 0 !== _propKey8 &&\r\n                  !nextProps.hasOwnProperty(_propKey17) &&\r\n                  setPropOnCustomElement(\r\n                    domElement,\r\n                    tag,\r\n                    _propKey17,\r\n                    void 0,\r\n                    nextProps,\r\n                    _propKey8\r\n                  );\r\n            for (defaultChecked in nextProps)\r\n              (_propKey8 = nextProps[defaultChecked]),\r\n                (propKey = lastProps[defaultChecked]),\r\n                !nextProps.hasOwnProperty(defaultChecked) ||\r\n                  _propKey8 === propKey ||\r\n                  (void 0 === _propKey8 && void 0 === propKey) ||\r\n                  setPropOnCustomElement(\r\n                    domElement,\r\n                    tag,\r\n                    defaultChecked,\r\n                    _propKey8,\r\n                    nextProps,\r\n                    propKey\r\n                  );\r\n            return;\r\n          }\r\n      }\r\n      for (var _propKey19 in lastProps)\r\n        (_propKey8 = lastProps[_propKey19]),\r\n          lastProps.hasOwnProperty(_propKey19) &&\r\n            null != _propKey8 &&\r\n            !nextProps.hasOwnProperty(_propKey19) &&\r\n            setProp(domElement, tag, _propKey19, null, nextProps, _propKey8);\r\n      for (lastProp in nextProps)\r\n        (_propKey8 = nextProps[lastProp]),\r\n          (propKey = lastProps[lastProp]),\r\n          !nextProps.hasOwnProperty(lastProp) ||\r\n            _propKey8 === propKey ||\r\n            (null == _propKey8 && null == propKey) ||\r\n            setProp(domElement, tag, lastProp, _propKey8, nextProps, propKey);\r\n    }\r\n    function getPropNameFromAttributeName(attrName) {\r\n      switch (attrName) {\r\n        case \"class\":\r\n          return \"className\";\r\n        case \"for\":\r\n          return \"htmlFor\";\r\n        default:\r\n          return attrName;\r\n      }\r\n    }\r\n    function getStylesObjectFromElement(domElement) {\r\n      var serverValueInObjectForm = {};\r\n      domElement = domElement.style;\r\n      for (var i = 0; i < domElement.length; i++) {\r\n        var styleName = domElement[i];\r\n        serverValueInObjectForm[styleName] =\r\n          domElement.getPropertyValue(styleName);\r\n      }\r\n      return serverValueInObjectForm;\r\n    }\r\n    function diffHydratedStyles(domElement, value$jscomp$0, serverDifferences) {\r\n      if (null != value$jscomp$0 && \"object\" !== typeof value$jscomp$0)\r\n        console.error(\r\n          \"The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.\"\r\n        );\r\n      else {\r\n        var clientValue;\r\n        var delimiter = (clientValue = \"\"),\r\n          styleName;\r\n        for (styleName in value$jscomp$0)\r\n          if (value$jscomp$0.hasOwnProperty(styleName)) {\r\n            var value = value$jscomp$0[styleName];\r\n            null != value &&\r\n              \"boolean\" !== typeof value &&\r\n              \"\" !== value &&\r\n              (0 === styleName.indexOf(\"--\")\r\n                ? (checkCSSPropertyStringCoercion(value, styleName),\r\n                  (clientValue +=\r\n                    delimiter + styleName + \":\" + (\"\" + value).trim()))\r\n                : \"number\" !== typeof value ||\r\n                    0 === value ||\r\n                    unitlessNumbers.has(styleName)\r\n                  ? (checkCSSPropertyStringCoercion(value, styleName),\r\n                    (clientValue +=\r\n                      delimiter +\r\n                      styleName\r\n                        .replace(uppercasePattern, \"-$1\")\r\n                        .toLowerCase()\r\n                        .replace(msPattern$1, \"-ms-\") +\r\n                      \":\" +\r\n                      (\"\" + value).trim()))\r\n                  : (clientValue +=\r\n                      delimiter +\r\n                      styleName\r\n                        .replace(uppercasePattern, \"-$1\")\r\n                        .toLowerCase()\r\n                        .replace(msPattern$1, \"-ms-\") +\r\n                      \":\" +\r\n                      value +\r\n                      \"px\"),\r\n              (delimiter = \";\"));\r\n          }\r\n        clientValue = clientValue || null;\r\n        value$jscomp$0 = domElement.getAttribute(\"style\");\r\n        value$jscomp$0 !== clientValue &&\r\n          ((clientValue = normalizeMarkupForTextOrAttribute(clientValue)),\r\n          normalizeMarkupForTextOrAttribute(value$jscomp$0) !== clientValue &&\r\n            (serverDifferences.style = getStylesObjectFromElement(domElement)));\r\n      }\r\n    }\r\n    function hydrateAttribute(\r\n      domElement,\r\n      propKey,\r\n      attributeName,\r\n      value,\r\n      extraAttributes,\r\n      serverDifferences\r\n    ) {\r\n      extraAttributes.delete(attributeName);\r\n      domElement = domElement.getAttribute(attributeName);\r\n      if (null === domElement)\r\n        switch (typeof value) {\r\n          case \"undefined\":\r\n          case \"function\":\r\n          case \"symbol\":\r\n          case \"boolean\":\r\n            return;\r\n        }\r\n      else if (null != value)\r\n        switch (typeof value) {\r\n          case \"function\":\r\n          case \"symbol\":\r\n          case \"boolean\":\r\n            break;\r\n          default:\r\n            if (\r\n              (checkAttributeStringCoercion(value, propKey),\r\n              domElement === \"\" + value)\r\n            )\r\n              return;\r\n        }\r\n      warnForPropDifference(propKey, domElement, value, serverDifferences);\r\n    }\r\n    function hydrateBooleanAttribute(\r\n      domElement,\r\n      propKey,\r\n      attributeName,\r\n      value,\r\n      extraAttributes,\r\n      serverDifferences\r\n    ) {\r\n      extraAttributes.delete(attributeName);\r\n      domElement = domElement.getAttribute(attributeName);\r\n      if (null === domElement) {\r\n        switch (typeof value) {\r\n          case \"function\":\r\n          case \"symbol\":\r\n            return;\r\n        }\r\n        if (!value) return;\r\n      } else\r\n        switch (typeof value) {\r\n          case \"function\":\r\n          case \"symbol\":\r\n            break;\r\n          default:\r\n            if (value) return;\r\n        }\r\n      warnForPropDifference(propKey, domElement, value, serverDifferences);\r\n    }\r\n    function hydrateBooleanishAttribute(\r\n      domElement,\r\n      propKey,\r\n      attributeName,\r\n      value,\r\n      extraAttributes,\r\n      serverDifferences\r\n    ) {\r\n      extraAttributes.delete(attributeName);\r\n      domElement = domElement.getAttribute(attributeName);\r\n      if (null === domElement)\r\n        switch (typeof value) {\r\n          case \"undefined\":\r\n          case \"function\":\r\n          case \"symbol\":\r\n            return;\r\n        }\r\n      else if (null != value)\r\n        switch (typeof value) {\r\n          case \"function\":\r\n          case \"symbol\":\r\n            break;\r\n          default:\r\n            if (\r\n              (checkAttributeStringCoercion(value, attributeName),\r\n              domElement === \"\" + value)\r\n            )\r\n              return;\r\n        }\r\n      warnForPropDifference(propKey, domElement, value, serverDifferences);\r\n    }\r\n    function hydrateNumericAttribute(\r\n      domElement,\r\n      propKey,\r\n      attributeName,\r\n      value,\r\n      extraAttributes,\r\n      serverDifferences\r\n    ) {\r\n      extraAttributes.delete(attributeName);\r\n      domElement = domElement.getAttribute(attributeName);\r\n      if (null === domElement)\r\n        switch (typeof value) {\r\n          case \"undefined\":\r\n          case \"function\":\r\n          case \"symbol\":\r\n          case \"boolean\":\r\n            return;\r\n          default:\r\n            if (isNaN(value)) return;\r\n        }\r\n      else if (null != value)\r\n        switch (typeof value) {\r\n          case \"function\":\r\n          case \"symbol\":\r\n          case \"boolean\":\r\n            break;\r\n          default:\r\n            if (\r\n              !isNaN(value) &&\r\n              (checkAttributeStringCoercion(value, propKey),\r\n              domElement === \"\" + value)\r\n            )\r\n              return;\r\n        }\r\n      warnForPropDifference(propKey, domElement, value, serverDifferences);\r\n    }\r\n    function hydrateSanitizedAttribute(\r\n      domElement,\r\n      propKey,\r\n      attributeName,\r\n      value,\r\n      extraAttributes,\r\n      serverDifferences\r\n    ) {\r\n      extraAttributes.delete(attributeName);\r\n      domElement = domElement.getAttribute(attributeName);\r\n      if (null === domElement)\r\n        switch (typeof value) {\r\n          case \"undefined\":\r\n          case \"function\":\r\n          case \"symbol\":\r\n          case \"boolean\":\r\n            return;\r\n        }\r\n      else if (null != value)\r\n        switch (typeof value) {\r\n          case \"function\":\r\n          case \"symbol\":\r\n          case \"boolean\":\r\n            break;\r\n          default:\r\n            if (\r\n              (checkAttributeStringCoercion(value, propKey),\r\n              (attributeName = sanitizeURL(\"\" + value)),\r\n              domElement === attributeName)\r\n            )\r\n              return;\r\n        }\r\n      warnForPropDifference(propKey, domElement, value, serverDifferences);\r\n    }\r\n    function diffHydratedProperties(domElement, tag, props, hostContext) {\r\n      for (\r\n        var serverDifferences = {},\r\n          extraAttributes = new Set(),\r\n          attributes = domElement.attributes,\r\n          i = 0;\r\n        i < attributes.length;\r\n        i++\r\n      )\r\n        switch (attributes[i].name.toLowerCase()) {\r\n          case \"value\":\r\n            break;\r\n          case \"checked\":\r\n            break;\r\n          case \"selected\":\r\n            break;\r\n          default:\r\n            extraAttributes.add(attributes[i].name);\r\n        }\r\n      if (isCustomElement(tag))\r\n        for (var propKey in props) {\r\n          if (props.hasOwnProperty(propKey)) {\r\n            var value = props[propKey];\r\n            if (null != value)\r\n              if (registrationNameDependencies.hasOwnProperty(propKey))\r\n                \"function\" !== typeof value &&\r\n                  warnForInvalidEventListener(propKey, value);\r\n              else if (!0 !== props.suppressHydrationWarning)\r\n                switch (propKey) {\r\n                  case \"children\":\r\n                    (\"string\" !== typeof value && \"number\" !== typeof value) ||\r\n                      warnForPropDifference(\r\n                        \"children\",\r\n                        domElement.textContent,\r\n                        value,\r\n                        serverDifferences\r\n                      );\r\n                    continue;\r\n                  case \"suppressContentEditableWarning\":\r\n                  case \"suppressHydrationWarning\":\r\n                  case \"defaultValue\":\r\n                  case \"defaultChecked\":\r\n                  case \"innerHTML\":\r\n                  case \"ref\":\r\n                    continue;\r\n                  case \"dangerouslySetInnerHTML\":\r\n                    attributes = domElement.innerHTML;\r\n                    value = value ? value.__html : void 0;\r\n                    null != value &&\r\n                      ((value = normalizeHTML(domElement, value)),\r\n                      warnForPropDifference(\r\n                        propKey,\r\n                        attributes,\r\n                        value,\r\n                        serverDifferences\r\n                      ));\r\n                    continue;\r\n                  case \"style\":\r\n                    extraAttributes.delete(propKey);\r\n                    diffHydratedStyles(domElement, value, serverDifferences);\r\n                    continue;\r\n                  case \"offsetParent\":\r\n                  case \"offsetTop\":\r\n                  case \"offsetLeft\":\r\n                  case \"offsetWidth\":\r\n                  case \"offsetHeight\":\r\n                  case \"isContentEditable\":\r\n                  case \"outerText\":\r\n                  case \"outerHTML\":\r\n                    extraAttributes.delete(propKey.toLowerCase());\r\n                    console.error(\r\n                      \"Assignment to read-only property will result in a no-op: `%s`\",\r\n                      propKey\r\n                    );\r\n                    continue;\r\n                  case \"className\":\r\n                    extraAttributes.delete(\"class\");\r\n                    attributes = getValueForAttributeOnCustomComponent(\r\n                      domElement,\r\n                      \"class\",\r\n                      value\r\n                    );\r\n                    warnForPropDifference(\r\n                      \"className\",\r\n                      attributes,\r\n                      value,\r\n                      serverDifferences\r\n                    );\r\n                    continue;\r\n                  default:\r\n                    hostContext.context === HostContextNamespaceNone &&\r\n                    \"svg\" !== tag &&\r\n                    \"math\" !== tag\r\n                      ? extraAttributes.delete(propKey.toLowerCase())\r\n                      : extraAttributes.delete(propKey),\r\n                      (attributes = getValueForAttributeOnCustomComponent(\r\n                        domElement,\r\n                        propKey,\r\n                        value\r\n                      )),\r\n                      warnForPropDifference(\r\n                        propKey,\r\n                        attributes,\r\n                        value,\r\n                        serverDifferences\r\n                      );\r\n                }\r\n          }\r\n        }\r\n      else\r\n        for (value in props)\r\n          if (\r\n            props.hasOwnProperty(value) &&\r\n            ((propKey = props[value]), null != propKey)\r\n          )\r\n            if (registrationNameDependencies.hasOwnProperty(value))\r\n              \"function\" !== typeof propKey &&\r\n                warnForInvalidEventListener(value, propKey);\r\n            else if (!0 !== props.suppressHydrationWarning)\r\n              switch (value) {\r\n                case \"children\":\r\n                  (\"string\" !== typeof propKey &&\r\n                    \"number\" !== typeof propKey) ||\r\n                    warnForPropDifference(\r\n                      \"children\",\r\n                      domElement.textContent,\r\n                      propKey,\r\n                      serverDifferences\r\n                    );\r\n                  continue;\r\n                case \"suppressContentEditableWarning\":\r\n                case \"suppressHydrationWarning\":\r\n                case \"value\":\r\n                case \"checked\":\r\n                case \"selected\":\r\n                case \"defaultValue\":\r\n                case \"defaultChecked\":\r\n                case \"innerHTML\":\r\n                case \"ref\":\r\n                  continue;\r\n                case \"dangerouslySetInnerHTML\":\r\n                  attributes = domElement.innerHTML;\r\n                  propKey = propKey ? propKey.__html : void 0;\r\n                  null != propKey &&\r\n                    ((propKey = normalizeHTML(domElement, propKey)),\r\n                    attributes !== propKey &&\r\n                      (serverDifferences[value] = { __html: attributes }));\r\n                  continue;\r\n                case \"className\":\r\n                  hydrateAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"class\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"tabIndex\":\r\n                  hydrateAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"tabindex\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"style\":\r\n                  extraAttributes.delete(value);\r\n                  diffHydratedStyles(domElement, propKey, serverDifferences);\r\n                  continue;\r\n                case \"multiple\":\r\n                  extraAttributes.delete(value);\r\n                  warnForPropDifference(\r\n                    value,\r\n                    domElement.multiple,\r\n                    propKey,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"muted\":\r\n                  extraAttributes.delete(value);\r\n                  warnForPropDifference(\r\n                    value,\r\n                    domElement.muted,\r\n                    propKey,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"autoFocus\":\r\n                  extraAttributes.delete(\"autofocus\");\r\n                  warnForPropDifference(\r\n                    value,\r\n                    domElement.autofocus,\r\n                    propKey,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"data\":\r\n                  if (\"object\" !== tag) {\r\n                    extraAttributes.delete(value);\r\n                    attributes = domElement.getAttribute(\"data\");\r\n                    warnForPropDifference(\r\n                      value,\r\n                      attributes,\r\n                      propKey,\r\n                      serverDifferences\r\n                    );\r\n                    continue;\r\n                  }\r\n                case \"src\":\r\n                case \"href\":\r\n                  if (\r\n                    !(\r\n                      \"\" !== propKey ||\r\n                      (\"a\" === tag && \"href\" === value) ||\r\n                      (\"object\" === tag && \"data\" === value)\r\n                    )\r\n                  ) {\r\n                    \"src\" === value\r\n                      ? console.error(\r\n                          'An empty string (\"\") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.',\r\n                          value,\r\n                          value\r\n                        )\r\n                      : console.error(\r\n                          'An empty string (\"\") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.',\r\n                          value,\r\n                          value\r\n                        );\r\n                    continue;\r\n                  }\r\n                  hydrateSanitizedAttribute(\r\n                    domElement,\r\n                    value,\r\n                    value,\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"action\":\r\n                case \"formAction\":\r\n                  attributes = domElement.getAttribute(value);\r\n                  if (\"function\" === typeof propKey) {\r\n                    extraAttributes.delete(value.toLowerCase());\r\n                    \"formAction\" === value\r\n                      ? (extraAttributes.delete(\"name\"),\r\n                        extraAttributes.delete(\"formenctype\"),\r\n                        extraAttributes.delete(\"formmethod\"),\r\n                        extraAttributes.delete(\"formtarget\"))\r\n                      : (extraAttributes.delete(\"enctype\"),\r\n                        extraAttributes.delete(\"method\"),\r\n                        extraAttributes.delete(\"target\"));\r\n                    continue;\r\n                  } else if (attributes === EXPECTED_FORM_ACTION_URL) {\r\n                    extraAttributes.delete(value.toLowerCase());\r\n                    warnForPropDifference(\r\n                      value,\r\n                      \"function\",\r\n                      propKey,\r\n                      serverDifferences\r\n                    );\r\n                    continue;\r\n                  }\r\n                  hydrateSanitizedAttribute(\r\n                    domElement,\r\n                    value,\r\n                    value.toLowerCase(),\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"xlinkHref\":\r\n                  hydrateSanitizedAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"xlink:href\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"contentEditable\":\r\n                  hydrateBooleanishAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"contenteditable\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"spellCheck\":\r\n                  hydrateBooleanishAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"spellcheck\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"draggable\":\r\n                case \"autoReverse\":\r\n                case \"externalResourcesRequired\":\r\n                case \"focusable\":\r\n                case \"preserveAlpha\":\r\n                  hydrateBooleanishAttribute(\r\n                    domElement,\r\n                    value,\r\n                    value,\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"allowFullScreen\":\r\n                case \"async\":\r\n                case \"autoPlay\":\r\n                case \"controls\":\r\n                case \"default\":\r\n                case \"defer\":\r\n                case \"disabled\":\r\n                case \"disablePictureInPicture\":\r\n                case \"disableRemotePlayback\":\r\n                case \"formNoValidate\":\r\n                case \"hidden\":\r\n                case \"loop\":\r\n                case \"noModule\":\r\n                case \"noValidate\":\r\n                case \"open\":\r\n                case \"playsInline\":\r\n                case \"readOnly\":\r\n                case \"required\":\r\n                case \"reversed\":\r\n                case \"scoped\":\r\n                case \"seamless\":\r\n                case \"itemScope\":\r\n                  hydrateBooleanAttribute(\r\n                    domElement,\r\n                    value,\r\n                    value.toLowerCase(),\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"capture\":\r\n                case \"download\":\r\n                  a: {\r\n                    i = domElement;\r\n                    var attributeName = (attributes = value),\r\n                      serverDifferences$jscomp$0 = serverDifferences;\r\n                    extraAttributes.delete(attributeName);\r\n                    i = i.getAttribute(attributeName);\r\n                    if (null === i)\r\n                      switch (typeof propKey) {\r\n                        case \"undefined\":\r\n                        case \"function\":\r\n                        case \"symbol\":\r\n                          break a;\r\n                        default:\r\n                          if (!1 === propKey) break a;\r\n                      }\r\n                    else if (null != propKey)\r\n                      switch (typeof propKey) {\r\n                        case \"function\":\r\n                        case \"symbol\":\r\n                          break;\r\n                        case \"boolean\":\r\n                          if (!0 === propKey && \"\" === i) break a;\r\n                          break;\r\n                        default:\r\n                          if (\r\n                            (checkAttributeStringCoercion(propKey, attributes),\r\n                            i === \"\" + propKey)\r\n                          )\r\n                            break a;\r\n                      }\r\n                    warnForPropDifference(\r\n                      attributes,\r\n                      i,\r\n                      propKey,\r\n                      serverDifferences$jscomp$0\r\n                    );\r\n                  }\r\n                  continue;\r\n                case \"cols\":\r\n                case \"rows\":\r\n                case \"size\":\r\n                case \"span\":\r\n                  a: {\r\n                    i = domElement;\r\n                    attributeName = attributes = value;\r\n                    serverDifferences$jscomp$0 = serverDifferences;\r\n                    extraAttributes.delete(attributeName);\r\n                    i = i.getAttribute(attributeName);\r\n                    if (null === i)\r\n                      switch (typeof propKey) {\r\n                        case \"undefined\":\r\n                        case \"function\":\r\n                        case \"symbol\":\r\n                        case \"boolean\":\r\n                          break a;\r\n                        default:\r\n                          if (isNaN(propKey) || 1 > propKey) break a;\r\n                      }\r\n                    else if (null != propKey)\r\n                      switch (typeof propKey) {\r\n                        case \"function\":\r\n                        case \"symbol\":\r\n                        case \"boolean\":\r\n                          break;\r\n                        default:\r\n                          if (\r\n                            !(isNaN(propKey) || 1 > propKey) &&\r\n                            (checkAttributeStringCoercion(propKey, attributes),\r\n                            i === \"\" + propKey)\r\n                          )\r\n                            break a;\r\n                      }\r\n                    warnForPropDifference(\r\n                      attributes,\r\n                      i,\r\n                      propKey,\r\n                      serverDifferences$jscomp$0\r\n                    );\r\n                  }\r\n                  continue;\r\n                case \"rowSpan\":\r\n                  hydrateNumericAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"rowspan\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"start\":\r\n                  hydrateNumericAttribute(\r\n                    domElement,\r\n                    value,\r\n                    value,\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"xHeight\":\r\n                  hydrateAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"x-height\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"xlinkActuate\":\r\n                  hydrateAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"xlink:actuate\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"xlinkArcrole\":\r\n                  hydrateAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"xlink:arcrole\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"xlinkRole\":\r\n                  hydrateAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"xlink:role\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"xlinkShow\":\r\n                  hydrateAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"xlink:show\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"xlinkTitle\":\r\n                  hydrateAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"xlink:title\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"xlinkType\":\r\n                  hydrateAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"xlink:type\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"xmlBase\":\r\n                  hydrateAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"xml:base\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"xmlLang\":\r\n                  hydrateAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"xml:lang\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"xmlSpace\":\r\n                  hydrateAttribute(\r\n                    domElement,\r\n                    value,\r\n                    \"xml:space\",\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                case \"inert\":\r\n                  \"\" !== propKey ||\r\n                    didWarnForNewBooleanPropsWithEmptyValue[value] ||\r\n                    ((didWarnForNewBooleanPropsWithEmptyValue[value] = !0),\r\n                    console.error(\r\n                      \"Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.\",\r\n                      value\r\n                    ));\r\n                  hydrateBooleanAttribute(\r\n                    domElement,\r\n                    value,\r\n                    value,\r\n                    propKey,\r\n                    extraAttributes,\r\n                    serverDifferences\r\n                  );\r\n                  continue;\r\n                default:\r\n                  if (\r\n                    !(2 < value.length) ||\r\n                    (\"o\" !== value[0] && \"O\" !== value[0]) ||\r\n                    (\"n\" !== value[1] && \"N\" !== value[1])\r\n                  ) {\r\n                    i = getAttributeAlias(value);\r\n                    attributes = !1;\r\n                    hostContext.context === HostContextNamespaceNone &&\r\n                    \"svg\" !== tag &&\r\n                    \"math\" !== tag\r\n                      ? extraAttributes.delete(i.toLowerCase())\r\n                      : ((attributeName = value.toLowerCase()),\r\n                        (attributeName = possibleStandardNames.hasOwnProperty(\r\n                          attributeName\r\n                        )\r\n                          ? possibleStandardNames[attributeName] || null\r\n                          : null),\r\n                        null !== attributeName &&\r\n                          attributeName !== value &&\r\n                          ((attributes = !0),\r\n                          extraAttributes.delete(attributeName)),\r\n                        extraAttributes.delete(i));\r\n                    a: if (\r\n                      ((attributeName = domElement),\r\n                      (serverDifferences$jscomp$0 = i),\r\n                      (i = propKey),\r\n                      isAttributeNameSafe(serverDifferences$jscomp$0))\r\n                    )\r\n                      if (\r\n                        attributeName.hasAttribute(serverDifferences$jscomp$0)\r\n                      )\r\n                        (attributeName = attributeName.getAttribute(\r\n                          serverDifferences$jscomp$0\r\n                        )),\r\n                          checkAttributeStringCoercion(\r\n                            i,\r\n                            serverDifferences$jscomp$0\r\n                          ),\r\n                          (i = attributeName === \"\" + i ? i : attributeName);\r\n                      else {\r\n                        switch (typeof i) {\r\n                          case \"function\":\r\n                          case \"symbol\":\r\n                            break a;\r\n                          case \"boolean\":\r\n                            if (\r\n                              ((attributeName = serverDifferences$jscomp$0\r\n                                .toLowerCase()\r\n                                .slice(0, 5)),\r\n                              \"data-\" !== attributeName &&\r\n                                \"aria-\" !== attributeName)\r\n                            )\r\n                              break a;\r\n                        }\r\n                        i = void 0 === i ? void 0 : null;\r\n                      }\r\n                    else i = void 0;\r\n                    attributes ||\r\n                      warnForPropDifference(\r\n                        value,\r\n                        i,\r\n                        propKey,\r\n                        serverDifferences\r\n                      );\r\n                  }\r\n              }\r\n      0 < extraAttributes.size &&\r\n        !0 !== props.suppressHydrationWarning &&\r\n        warnForExtraAttributes(domElement, extraAttributes, serverDifferences);\r\n      return 0 === Object.keys(serverDifferences).length\r\n        ? null\r\n        : serverDifferences;\r\n    }\r\n    function propNamesListJoin(list, combinator) {\r\n      switch (list.length) {\r\n        case 0:\r\n          return \"\";\r\n        case 1:\r\n          return list[0];\r\n        case 2:\r\n          return list[0] + \" \" + combinator + \" \" + list[1];\r\n        default:\r\n          return (\r\n            list.slice(0, -1).join(\", \") +\r\n            \", \" +\r\n            combinator +\r\n            \" \" +\r\n            list[list.length - 1]\r\n          );\r\n      }\r\n    }\r\n    function getOwnerDocumentFromRootContainer(rootContainerElement) {\r\n      return 9 === rootContainerElement.nodeType\r\n        ? rootContainerElement\r\n        : rootContainerElement.ownerDocument;\r\n    }\r\n    function getOwnHostContext(namespaceURI) {\r\n      switch (namespaceURI) {\r\n        case SVG_NAMESPACE:\r\n          return HostContextNamespaceSvg;\r\n        case MATH_NAMESPACE:\r\n          return HostContextNamespaceMath;\r\n        default:\r\n          return HostContextNamespaceNone;\r\n      }\r\n    }\r\n    function getChildHostContextProd(parentNamespace, type) {\r\n      if (parentNamespace === HostContextNamespaceNone)\r\n        switch (type) {\r\n          case \"svg\":\r\n            return HostContextNamespaceSvg;\r\n          case \"math\":\r\n            return HostContextNamespaceMath;\r\n          default:\r\n            return HostContextNamespaceNone;\r\n        }\r\n      return parentNamespace === HostContextNamespaceSvg &&\r\n        \"foreignObject\" === type\r\n        ? HostContextNamespaceNone\r\n        : parentNamespace;\r\n    }\r\n    function shouldSetTextContent(type, props) {\r\n      return (\r\n        \"textarea\" === type ||\r\n        \"noscript\" === type ||\r\n        \"string\" === typeof props.children ||\r\n        \"number\" === typeof props.children ||\r\n        \"bigint\" === typeof props.children ||\r\n        (\"object\" === typeof props.dangerouslySetInnerHTML &&\r\n          null !== props.dangerouslySetInnerHTML &&\r\n          null != props.dangerouslySetInnerHTML.__html)\r\n      );\r\n    }\r\n    function shouldAttemptEagerTransition() {\r\n      var event = window.event;\r\n      if (event && \"popstate\" === event.type) {\r\n        if (event === currentPopstateTransitionEvent) return !1;\r\n        currentPopstateTransitionEvent = event;\r\n        return !0;\r\n      }\r\n      currentPopstateTransitionEvent = null;\r\n      return !1;\r\n    }\r\n    function handleErrorInNextTick(error) {\r\n      setTimeout(function () {\r\n        throw error;\r\n      });\r\n    }\r\n    function commitMount(domElement, type, newProps) {\r\n      switch (type) {\r\n        case \"button\":\r\n        case \"input\":\r\n        case \"select\":\r\n        case \"textarea\":\r\n          newProps.autoFocus && domElement.focus();\r\n          break;\r\n        case \"img\":\r\n          newProps.src\r\n            ? (domElement.src = newProps.src)\r\n            : newProps.srcSet && (domElement.srcset = newProps.srcSet);\r\n      }\r\n    }\r\n    function commitUpdate(domElement, type, oldProps, newProps) {\r\n      updateProperties(domElement, type, oldProps, newProps);\r\n      domElement[internalPropsKey] = newProps;\r\n    }\r\n    function resetTextContent(domElement) {\r\n      setTextContent(domElement, \"\");\r\n    }\r\n    function commitTextUpdate(textInstance, oldText, newText) {\r\n      textInstance.nodeValue = newText;\r\n    }\r\n    function isSingletonScope(type) {\r\n      return \"head\" === type;\r\n    }\r\n    function removeChild(parentInstance, child) {\r\n      parentInstance.removeChild(child);\r\n    }\r\n    function removeChildFromContainer(container, child) {\r\n      (9 === container.nodeType\r\n        ? container.body\r\n        : \"HTML\" === container.nodeName\r\n          ? container.ownerDocument.body\r\n          : container\r\n      ).removeChild(child);\r\n    }\r\n    function clearSuspenseBoundary(parentInstance, suspenseInstance) {\r\n      var node = suspenseInstance,\r\n        possiblePreambleContribution = 0,\r\n        depth = 0;\r\n      do {\r\n        var nextNode = node.nextSibling;\r\n        parentInstance.removeChild(node);\r\n        if (nextNode && 8 === nextNode.nodeType)\r\n          if (((node = nextNode.data), node === SUSPENSE_END_DATA)) {\r\n            if (\r\n              0 < possiblePreambleContribution &&\r\n              8 > possiblePreambleContribution\r\n            ) {\r\n              node = possiblePreambleContribution;\r\n              var ownerDocument = parentInstance.ownerDocument;\r\n              node & PREAMBLE_CONTRIBUTION_HTML &&\r\n                releaseSingletonInstance(ownerDocument.documentElement);\r\n              node & PREAMBLE_CONTRIBUTION_BODY &&\r\n                releaseSingletonInstance(ownerDocument.body);\r\n              if (node & PREAMBLE_CONTRIBUTION_HEAD)\r\n                for (\r\n                  node = ownerDocument.head,\r\n                    releaseSingletonInstance(node),\r\n                    ownerDocument = node.firstChild;\r\n                  ownerDocument;\r\n\r\n                ) {\r\n                  var nextNode$jscomp$0 = ownerDocument.nextSibling,\r\n                    nodeName = ownerDocument.nodeName;\r\n                  ownerDocument[internalHoistableMarker] ||\r\n                    \"SCRIPT\" === nodeName ||\r\n                    \"STYLE\" === nodeName ||\r\n                    (\"LINK\" === nodeName &&\r\n                      \"stylesheet\" === ownerDocument.rel.toLowerCase()) ||\r\n                    node.removeChild(ownerDocument);\r\n                  ownerDocument = nextNode$jscomp$0;\r\n                }\r\n            }\r\n            if (0 === depth) {\r\n              parentInstance.removeChild(nextNode);\r\n              retryIfBlockedOn(suspenseInstance);\r\n              return;\r\n            }\r\n            depth--;\r\n          } else\r\n            node === SUSPENSE_START_DATA ||\r\n            node === SUSPENSE_PENDING_START_DATA ||\r\n            node === SUSPENSE_FALLBACK_START_DATA\r\n              ? depth++\r\n              : (possiblePreambleContribution = node.charCodeAt(0) - 48);\r\n        else possiblePreambleContribution = 0;\r\n        node = nextNode;\r\n      } while (node);\r\n      retryIfBlockedOn(suspenseInstance);\r\n    }\r\n    function hideInstance(instance) {\r\n      instance = instance.style;\r\n      \"function\" === typeof instance.setProperty\r\n        ? instance.setProperty(\"display\", \"none\", \"important\")\r\n        : (instance.display = \"none\");\r\n    }\r\n    function hideTextInstance(textInstance) {\r\n      textInstance.nodeValue = \"\";\r\n    }\r\n    function unhideInstance(instance, props) {\r\n      props = props[STYLE];\r\n      props =\r\n        void 0 !== props && null !== props && props.hasOwnProperty(\"display\")\r\n          ? props.display\r\n          : null;\r\n      instance.style.display =\r\n        null == props || \"boolean\" === typeof props ? \"\" : (\"\" + props).trim();\r\n    }\r\n    function unhideTextInstance(textInstance, text) {\r\n      textInstance.nodeValue = text;\r\n    }\r\n    function clearContainerSparingly(container) {\r\n      var nextNode = container.firstChild;\r\n      nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);\r\n      for (; nextNode; ) {\r\n        var node = nextNode;\r\n        nextNode = nextNode.nextSibling;\r\n        switch (node.nodeName) {\r\n          case \"HTML\":\r\n          case \"HEAD\":\r\n          case \"BODY\":\r\n            clearContainerSparingly(node);\r\n            detachDeletedInstance(node);\r\n            continue;\r\n          case \"SCRIPT\":\r\n          case \"STYLE\":\r\n            continue;\r\n          case \"LINK\":\r\n            if (\"stylesheet\" === node.rel.toLowerCase()) continue;\r\n        }\r\n        container.removeChild(node);\r\n      }\r\n    }\r\n    function canHydrateInstance(instance, type, props, inRootOrSingleton) {\r\n      for (; 1 === instance.nodeType; ) {\r\n        var anyProps = props;\r\n        if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {\r\n          if (\r\n            !inRootOrSingleton &&\r\n            (\"INPUT\" !== instance.nodeName || \"hidden\" !== instance.type)\r\n          )\r\n            break;\r\n        } else if (!inRootOrSingleton)\r\n          if (\"input\" === type && \"hidden\" === instance.type) {\r\n            checkAttributeStringCoercion(anyProps.name, \"name\");\r\n            var name = null == anyProps.name ? null : \"\" + anyProps.name;\r\n            if (\r\n              \"hidden\" === anyProps.type &&\r\n              instance.getAttribute(\"name\") === name\r\n            )\r\n              return instance;\r\n          } else return instance;\r\n        else if (!instance[internalHoistableMarker])\r\n          switch (type) {\r\n            case \"meta\":\r\n              if (!instance.hasAttribute(\"itemprop\")) break;\r\n              return instance;\r\n            case \"link\":\r\n              name = instance.getAttribute(\"rel\");\r\n              if (\r\n                \"stylesheet\" === name &&\r\n                instance.hasAttribute(\"data-precedence\")\r\n              )\r\n                break;\r\n              else if (\r\n                name !== anyProps.rel ||\r\n                instance.getAttribute(\"href\") !==\r\n                  (null == anyProps.href || \"\" === anyProps.href\r\n                    ? null\r\n                    : anyProps.href) ||\r\n                instance.getAttribute(\"crossorigin\") !==\r\n                  (null == anyProps.crossOrigin\r\n                    ? null\r\n                    : anyProps.crossOrigin) ||\r\n                instance.getAttribute(\"title\") !==\r\n                  (null == anyProps.title ? null : anyProps.title)\r\n              )\r\n                break;\r\n              return instance;\r\n            case \"style\":\r\n              if (instance.hasAttribute(\"data-precedence\")) break;\r\n              return instance;\r\n            case \"script\":\r\n              name = instance.getAttribute(\"src\");\r\n              if (\r\n                (name !== (null == anyProps.src ? null : anyProps.src) ||\r\n                  instance.getAttribute(\"type\") !==\r\n                    (null == anyProps.type ? null : anyProps.type) ||\r\n                  instance.getAttribute(\"crossorigin\") !==\r\n                    (null == anyProps.crossOrigin\r\n                      ? null\r\n                      : anyProps.crossOrigin)) &&\r\n                name &&\r\n                instance.hasAttribute(\"async\") &&\r\n                !instance.hasAttribute(\"itemprop\")\r\n              )\r\n                break;\r\n              return instance;\r\n            default:\r\n              return instance;\r\n          }\r\n        instance = getNextHydratable(instance.nextSibling);\r\n        if (null === instance) break;\r\n      }\r\n      return null;\r\n    }\r\n    function canHydrateTextInstance(instance, text, inRootOrSingleton) {\r\n      if (\"\" === text) return null;\r\n      for (; 3 !== instance.nodeType; ) {\r\n        if (\r\n          (1 !== instance.nodeType ||\r\n            \"INPUT\" !== instance.nodeName ||\r\n            \"hidden\" !== instance.type) &&\r\n          !inRootOrSingleton\r\n        )\r\n          return null;\r\n        instance = getNextHydratable(instance.nextSibling);\r\n        if (null === instance) return null;\r\n      }\r\n      return instance;\r\n    }\r\n    function isSuspenseInstanceFallback(instance) {\r\n      return (\r\n        instance.data === SUSPENSE_FALLBACK_START_DATA ||\r\n        (instance.data === SUSPENSE_PENDING_START_DATA &&\r\n          instance.ownerDocument.readyState === DOCUMENT_READY_STATE_COMPLETE)\r\n      );\r\n    }\r\n    function registerSuspenseInstanceRetry(instance, callback) {\r\n      var ownerDocument = instance.ownerDocument;\r\n      if (\r\n        instance.data !== SUSPENSE_PENDING_START_DATA ||\r\n        ownerDocument.readyState === DOCUMENT_READY_STATE_COMPLETE\r\n      )\r\n        callback();\r\n      else {\r\n        var listener = function () {\r\n          callback();\r\n          ownerDocument.removeEventListener(\"DOMContentLoaded\", listener);\r\n        };\r\n        ownerDocument.addEventListener(\"DOMContentLoaded\", listener);\r\n        instance._reactRetry = listener;\r\n      }\r\n    }\r\n    function getNextHydratable(node) {\r\n      for (; null != node; node = node.nextSibling) {\r\n        var nodeType = node.nodeType;\r\n        if (1 === nodeType || 3 === nodeType) break;\r\n        if (8 === nodeType) {\r\n          nodeType = node.data;\r\n          if (\r\n            nodeType === SUSPENSE_START_DATA ||\r\n            nodeType === SUSPENSE_FALLBACK_START_DATA ||\r\n            nodeType === SUSPENSE_PENDING_START_DATA ||\r\n            nodeType === FORM_STATE_IS_MATCHING ||\r\n            nodeType === FORM_STATE_IS_NOT_MATCHING\r\n          )\r\n            break;\r\n          if (nodeType === SUSPENSE_END_DATA) return null;\r\n        }\r\n      }\r\n      return node;\r\n    }\r\n    function describeHydratableInstanceForDevWarnings(instance) {\r\n      if (1 === instance.nodeType) {\r\n        for (\r\n          var JSCompiler_temp_const = instance.nodeName.toLowerCase(),\r\n            serverDifferences = {},\r\n            attributes = instance.attributes,\r\n            i = 0;\r\n          i < attributes.length;\r\n          i++\r\n        ) {\r\n          var attr = attributes[i];\r\n          serverDifferences[getPropNameFromAttributeName(attr.name)] =\r\n            \"style\" === attr.name.toLowerCase()\r\n              ? getStylesObjectFromElement(instance)\r\n              : attr.value;\r\n        }\r\n        return { type: JSCompiler_temp_const, props: serverDifferences };\r\n      }\r\n      return 8 === instance.nodeType\r\n        ? { type: \"Suspense\", props: {} }\r\n        : instance.nodeValue;\r\n    }\r\n    function diffHydratedTextForDevWarnings(textInstance, text, parentProps) {\r\n      return null === parentProps ||\r\n        !0 !== parentProps[SUPPRESS_HYDRATION_WARNING]\r\n        ? (textInstance.nodeValue === text\r\n            ? (textInstance = null)\r\n            : ((text = normalizeMarkupForTextOrAttribute(text)),\r\n              (textInstance =\r\n                normalizeMarkupForTextOrAttribute(textInstance.nodeValue) ===\r\n                text\r\n                  ? null\r\n                  : textInstance.nodeValue)),\r\n          textInstance)\r\n        : null;\r\n    }\r\n    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {\r\n      suspenseInstance = suspenseInstance.nextSibling;\r\n      for (var depth = 0; suspenseInstance; ) {\r\n        if (8 === suspenseInstance.nodeType) {\r\n          var data = suspenseInstance.data;\r\n          if (data === SUSPENSE_END_DATA) {\r\n            if (0 === depth)\r\n              return getNextHydratable(suspenseInstance.nextSibling);\r\n            depth--;\r\n          } else\r\n            (data !== SUSPENSE_START_DATA &&\r\n              data !== SUSPENSE_FALLBACK_START_DATA &&\r\n              data !== SUSPENSE_PENDING_START_DATA) ||\r\n              depth++;\r\n        }\r\n        suspenseInstance = suspenseInstance.nextSibling;\r\n      }\r\n      return null;\r\n    }\r\n    function getParentSuspenseInstance(targetInstance) {\r\n      targetInstance = targetInstance.previousSibling;\r\n      for (var depth = 0; targetInstance; ) {\r\n        if (8 === targetInstance.nodeType) {\r\n          var data = targetInstance.data;\r\n          if (\r\n            data === SUSPENSE_START_DATA ||\r\n            data === SUSPENSE_FALLBACK_START_DATA ||\r\n            data === SUSPENSE_PENDING_START_DATA\r\n          ) {\r\n            if (0 === depth) return targetInstance;\r\n            depth--;\r\n          } else data === SUSPENSE_END_DATA && depth++;\r\n        }\r\n        targetInstance = targetInstance.previousSibling;\r\n      }\r\n      return null;\r\n    }\r\n    function commitHydratedContainer(container) {\r\n      retryIfBlockedOn(container);\r\n    }\r\n    function commitHydratedSuspenseInstance(suspenseInstance) {\r\n      retryIfBlockedOn(suspenseInstance);\r\n    }\r\n    function resolveSingletonInstance(\r\n      type,\r\n      props,\r\n      rootContainerInstance,\r\n      hostContext,\r\n      validateDOMNestingDev\r\n    ) {\r\n      validateDOMNestingDev &&\r\n        validateDOMNesting(type, hostContext.ancestorInfo);\r\n      props = getOwnerDocumentFromRootContainer(rootContainerInstance);\r\n      switch (type) {\r\n        case \"html\":\r\n          type = props.documentElement;\r\n          if (!type)\r\n            throw Error(\r\n              \"React expected an <html> element (document.documentElement) to exist in the Document but one was not found. React never removes the documentElement for any Document it renders into so the cause is likely in some other script running on this page.\"\r\n            );\r\n          return type;\r\n        case \"head\":\r\n          type = props.head;\r\n          if (!type)\r\n            throw Error(\r\n              \"React expected a <head> element (document.head) to exist in the Document but one was not found. React never removes the head for any Document it renders into so the cause is likely in some other script running on this page.\"\r\n            );\r\n          return type;\r\n        case \"body\":\r\n          type = props.body;\r\n          if (!type)\r\n            throw Error(\r\n              \"React expected a <body> element (document.body) to exist in the Document but one was not found. React never removes the body for any Document it renders into so the cause is likely in some other script running on this page.\"\r\n            );\r\n          return type;\r\n        default:\r\n          throw Error(\r\n            \"resolveSingletonInstance was called with an element type that is not supported. This is a bug in React.\"\r\n          );\r\n      }\r\n    }\r\n    function acquireSingletonInstance(\r\n      type,\r\n      props,\r\n      instance,\r\n      internalInstanceHandle\r\n    ) {\r\n      if (\r\n        !instance[internalContainerInstanceKey] &&\r\n        getInstanceFromNode(instance)\r\n      ) {\r\n        var tagName = instance.tagName.toLowerCase();\r\n        console.error(\r\n          \"You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first.\",\r\n          tagName,\r\n          tagName,\r\n          tagName\r\n        );\r\n      }\r\n      switch (type) {\r\n        case \"html\":\r\n        case \"head\":\r\n        case \"body\":\r\n          break;\r\n        default:\r\n          console.error(\r\n            \"acquireSingletonInstance was called with an element type that is not supported. This is a bug in React.\"\r\n          );\r\n      }\r\n      for (tagName = instance.attributes; tagName.length; )\r\n        instance.removeAttributeNode(tagName[0]);\r\n      setInitialProperties(instance, type, props);\r\n      instance[internalInstanceKey] = internalInstanceHandle;\r\n      instance[internalPropsKey] = props;\r\n    }\r\n    function releaseSingletonInstance(instance) {\r\n      for (var attributes = instance.attributes; attributes.length; )\r\n        instance.removeAttributeNode(attributes[0]);\r\n      detachDeletedInstance(instance);\r\n    }\r\n    function getHoistableRoot(container) {\r\n      return \"function\" === typeof container.getRootNode\r\n        ? container.getRootNode()\r\n        : 9 === container.nodeType\r\n          ? container\r\n          : container.ownerDocument;\r\n    }\r\n    function preconnectAs(rel, href, crossOrigin) {\r\n      var ownerDocument = globalDocument;\r\n      if (ownerDocument && \"string\" === typeof href && href) {\r\n        var limitedEscapedHref =\r\n          escapeSelectorAttributeValueInsideDoubleQuotes(href);\r\n        limitedEscapedHref =\r\n          'link[rel=\"' + rel + '\"][href=\"' + limitedEscapedHref + '\"]';\r\n        \"string\" === typeof crossOrigin &&\r\n          (limitedEscapedHref += '[crossorigin=\"' + crossOrigin + '\"]');\r\n        preconnectsSet.has(limitedEscapedHref) ||\r\n          (preconnectsSet.add(limitedEscapedHref),\r\n          (rel = { rel: rel, crossOrigin: crossOrigin, href: href }),\r\n          null === ownerDocument.querySelector(limitedEscapedHref) &&\r\n            ((href = ownerDocument.createElement(\"link\")),\r\n            setInitialProperties(href, \"link\", rel),\r\n            markNodeAsHoistable(href),\r\n            ownerDocument.head.appendChild(href)));\r\n      }\r\n    }\r\n    function getResource(type, currentProps, pendingProps, currentResource) {\r\n      var resourceRoot = (resourceRoot = rootInstanceStackCursor.current)\r\n        ? getHoistableRoot(resourceRoot)\r\n        : null;\r\n      if (!resourceRoot)\r\n        throw Error(\r\n          '\"resourceRoot\" was expected to exist. This is a bug in React.'\r\n        );\r\n      switch (type) {\r\n        case \"meta\":\r\n        case \"title\":\r\n          return null;\r\n        case \"style\":\r\n          return \"string\" === typeof pendingProps.precedence &&\r\n            \"string\" === typeof pendingProps.href\r\n            ? ((pendingProps = getStyleKey(pendingProps.href)),\r\n              (currentProps =\r\n                getResourcesFromRoot(resourceRoot).hoistableStyles),\r\n              (currentResource = currentProps.get(pendingProps)),\r\n              currentResource ||\r\n                ((currentResource = {\r\n                  type: \"style\",\r\n                  instance: null,\r\n                  count: 0,\r\n                  state: null\r\n                }),\r\n                currentProps.set(pendingProps, currentResource)),\r\n              currentResource)\r\n            : { type: \"void\", instance: null, count: 0, state: null };\r\n        case \"link\":\r\n          if (\r\n            \"stylesheet\" === pendingProps.rel &&\r\n            \"string\" === typeof pendingProps.href &&\r\n            \"string\" === typeof pendingProps.precedence\r\n          ) {\r\n            type = getStyleKey(pendingProps.href);\r\n            var _styles = getResourcesFromRoot(resourceRoot).hoistableStyles,\r\n              _resource = _styles.get(type);\r\n            if (\r\n              !_resource &&\r\n              ((resourceRoot = resourceRoot.ownerDocument || resourceRoot),\r\n              (_resource = {\r\n                type: \"stylesheet\",\r\n                instance: null,\r\n                count: 0,\r\n                state: { loading: NotLoaded, preload: null }\r\n              }),\r\n              _styles.set(type, _resource),\r\n              (_styles = resourceRoot.querySelector(\r\n                getStylesheetSelectorFromKey(type)\r\n              )) &&\r\n                !_styles._p &&\r\n                ((_resource.instance = _styles),\r\n                (_resource.state.loading = Loaded | Inserted)),\r\n              !preloadPropsMap.has(type))\r\n            ) {\r\n              var preloadProps = {\r\n                rel: \"preload\",\r\n                as: \"style\",\r\n                href: pendingProps.href,\r\n                crossOrigin: pendingProps.crossOrigin,\r\n                integrity: pendingProps.integrity,\r\n                media: pendingProps.media,\r\n                hrefLang: pendingProps.hrefLang,\r\n                referrerPolicy: pendingProps.referrerPolicy\r\n              };\r\n              preloadPropsMap.set(type, preloadProps);\r\n              _styles ||\r\n                preloadStylesheet(\r\n                  resourceRoot,\r\n                  type,\r\n                  preloadProps,\r\n                  _resource.state\r\n                );\r\n            }\r\n            if (currentProps && null === currentResource)\r\n              throw (\r\n                ((pendingProps =\r\n                  \"\\n\\n  - \" +\r\n                  describeLinkForResourceErrorDEV(currentProps) +\r\n                  \"\\n  + \" +\r\n                  describeLinkForResourceErrorDEV(pendingProps)),\r\n                Error(\r\n                  \"Expected <link> not to update to be updated to a stylesheet with precedence. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key.\" +\r\n                    pendingProps\r\n                ))\r\n              );\r\n            return _resource;\r\n          }\r\n          if (currentProps && null !== currentResource)\r\n            throw (\r\n              ((pendingProps =\r\n                \"\\n\\n  - \" +\r\n                describeLinkForResourceErrorDEV(currentProps) +\r\n                \"\\n  + \" +\r\n                describeLinkForResourceErrorDEV(pendingProps)),\r\n              Error(\r\n                \"Expected stylesheet with precedence to not be updated to a different kind of <link>. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key.\" +\r\n                  pendingProps\r\n              ))\r\n            );\r\n          return null;\r\n        case \"script\":\r\n          return (\r\n            (currentProps = pendingProps.async),\r\n            (pendingProps = pendingProps.src),\r\n            \"string\" === typeof pendingProps &&\r\n            currentProps &&\r\n            \"function\" !== typeof currentProps &&\r\n            \"symbol\" !== typeof currentProps\r\n              ? ((pendingProps = getScriptKey(pendingProps)),\r\n                (currentProps =\r\n                  getResourcesFromRoot(resourceRoot).hoistableScripts),\r\n                (currentResource = currentProps.get(pendingProps)),\r\n                currentResource ||\r\n                  ((currentResource = {\r\n                    type: \"script\",\r\n                    instance: null,\r\n                    count: 0,\r\n                    state: null\r\n                  }),\r\n                  currentProps.set(pendingProps, currentResource)),\r\n                currentResource)\r\n              : { type: \"void\", instance: null, count: 0, state: null }\r\n          );\r\n        default:\r\n          throw Error(\r\n            'getResource encountered a type it did not expect: \"' +\r\n              type +\r\n              '\". this is a bug in React.'\r\n          );\r\n      }\r\n    }\r\n    function describeLinkForResourceErrorDEV(props) {\r\n      var describedProps = 0,\r\n        description = \"<link\";\r\n      \"string\" === typeof props.rel\r\n        ? (describedProps++, (description += ' rel=\"' + props.rel + '\"'))\r\n        : hasOwnProperty.call(props, \"rel\") &&\r\n          (describedProps++,\r\n          (description +=\r\n            ' rel=\"' +\r\n            (null === props.rel ? \"null\" : \"invalid type \" + typeof props.rel) +\r\n            '\"'));\r\n      \"string\" === typeof props.href\r\n        ? (describedProps++, (description += ' href=\"' + props.href + '\"'))\r\n        : hasOwnProperty.call(props, \"href\") &&\r\n          (describedProps++,\r\n          (description +=\r\n            ' href=\"' +\r\n            (null === props.href\r\n              ? \"null\"\r\n              : \"invalid type \" + typeof props.href) +\r\n            '\"'));\r\n      \"string\" === typeof props.precedence\r\n        ? (describedProps++,\r\n          (description += ' precedence=\"' + props.precedence + '\"'))\r\n        : hasOwnProperty.call(props, \"precedence\") &&\r\n          (describedProps++,\r\n          (description +=\r\n            \" precedence={\" +\r\n            (null === props.precedence\r\n              ? \"null\"\r\n              : \"invalid type \" + typeof props.precedence) +\r\n            \"}\"));\r\n      Object.getOwnPropertyNames(props).length > describedProps &&\r\n        (description += \" ...\");\r\n      return description + \" />\";\r\n    }\r\n    function getStyleKey(href) {\r\n      return (\r\n        'href=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '\"'\r\n      );\r\n    }\r\n    function getStylesheetSelectorFromKey(key) {\r\n      return 'link[rel=\"stylesheet\"][' + key + \"]\";\r\n    }\r\n    function stylesheetPropsFromRawProps(rawProps) {\r\n      return assign({}, rawProps, {\r\n        \"data-precedence\": rawProps.precedence,\r\n        precedence: null\r\n      });\r\n    }\r\n    function preloadStylesheet(ownerDocument, key, preloadProps, state) {\r\n      ownerDocument.querySelector(\r\n        'link[rel=\"preload\"][as=\"style\"][' + key + \"]\"\r\n      )\r\n        ? (state.loading = Loaded)\r\n        : ((key = ownerDocument.createElement(\"link\")),\r\n          (state.preload = key),\r\n          key.addEventListener(\"load\", function () {\r\n            return (state.loading |= Loaded);\r\n          }),\r\n          key.addEventListener(\"error\", function () {\r\n            return (state.loading |= Errored);\r\n          }),\r\n          setInitialProperties(key, \"link\", preloadProps),\r\n          markNodeAsHoistable(key),\r\n          ownerDocument.head.appendChild(key));\r\n    }\r\n    function getScriptKey(src) {\r\n      return (\r\n        '[src=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '\"]'\r\n      );\r\n    }\r\n    function getScriptSelectorFromKey(key) {\r\n      return \"script[async]\" + key;\r\n    }\r\n    function acquireResource(hoistableRoot, resource, props) {\r\n      resource.count++;\r\n      if (null === resource.instance)\r\n        switch (resource.type) {\r\n          case \"style\":\r\n            var instance = hoistableRoot.querySelector(\r\n              'style[data-href~=\"' +\r\n                escapeSelectorAttributeValueInsideDoubleQuotes(props.href) +\r\n                '\"]'\r\n            );\r\n            if (instance)\r\n              return (\r\n                (resource.instance = instance),\r\n                markNodeAsHoistable(instance),\r\n                instance\r\n              );\r\n            var styleProps = assign({}, props, {\r\n              \"data-href\": props.href,\r\n              \"data-precedence\": props.precedence,\r\n              href: null,\r\n              precedence: null\r\n            });\r\n            instance = (\r\n              hoistableRoot.ownerDocument || hoistableRoot\r\n            ).createElement(\"style\");\r\n            markNodeAsHoistable(instance);\r\n            setInitialProperties(instance, \"style\", styleProps);\r\n            insertStylesheet(instance, props.precedence, hoistableRoot);\r\n            return (resource.instance = instance);\r\n          case \"stylesheet\":\r\n            styleProps = getStyleKey(props.href);\r\n            var _instance = hoistableRoot.querySelector(\r\n              getStylesheetSelectorFromKey(styleProps)\r\n            );\r\n            if (_instance)\r\n              return (\r\n                (resource.state.loading |= Inserted),\r\n                (resource.instance = _instance),\r\n                markNodeAsHoistable(_instance),\r\n                _instance\r\n              );\r\n            instance = stylesheetPropsFromRawProps(props);\r\n            (styleProps = preloadPropsMap.get(styleProps)) &&\r\n              adoptPreloadPropsForStylesheet(instance, styleProps);\r\n            _instance = (\r\n              hoistableRoot.ownerDocument || hoistableRoot\r\n            ).createElement(\"link\");\r\n            markNodeAsHoistable(_instance);\r\n            var linkInstance = _instance;\r\n            linkInstance._p = new Promise(function (resolve, reject) {\r\n              linkInstance.onload = resolve;\r\n              linkInstance.onerror = reject;\r\n            });\r\n            setInitialProperties(_instance, \"link\", instance);\r\n            resource.state.loading |= Inserted;\r\n            insertStylesheet(_instance, props.precedence, hoistableRoot);\r\n            return (resource.instance = _instance);\r\n          case \"script\":\r\n            _instance = getScriptKey(props.src);\r\n            if (\r\n              (styleProps = hoistableRoot.querySelector(\r\n                getScriptSelectorFromKey(_instance)\r\n              ))\r\n            )\r\n              return (\r\n                (resource.instance = styleProps),\r\n                markNodeAsHoistable(styleProps),\r\n                styleProps\r\n              );\r\n            instance = props;\r\n            if ((styleProps = preloadPropsMap.get(_instance)))\r\n              (instance = assign({}, props)),\r\n                adoptPreloadPropsForScript(instance, styleProps);\r\n            hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\r\n            styleProps = hoistableRoot.createElement(\"script\");\r\n            markNodeAsHoistable(styleProps);\r\n            setInitialProperties(styleProps, \"link\", instance);\r\n            hoistableRoot.head.appendChild(styleProps);\r\n            return (resource.instance = styleProps);\r\n          case \"void\":\r\n            return null;\r\n          default:\r\n            throw Error(\r\n              'acquireResource encountered a resource type it did not expect: \"' +\r\n                resource.type +\r\n                '\". this is a bug in React.'\r\n            );\r\n        }\r\n      else\r\n        \"stylesheet\" === resource.type &&\r\n          (resource.state.loading & Inserted) === NotLoaded &&\r\n          ((instance = resource.instance),\r\n          (resource.state.loading |= Inserted),\r\n          insertStylesheet(instance, props.precedence, hoistableRoot));\r\n      return resource.instance;\r\n    }\r\n    function insertStylesheet(instance, precedence, root) {\r\n      for (\r\n        var nodes = root.querySelectorAll(\r\n            'link[rel=\"stylesheet\"][data-precedence],style[data-precedence]'\r\n          ),\r\n          last = nodes.length ? nodes[nodes.length - 1] : null,\r\n          prior = last,\r\n          i = 0;\r\n        i < nodes.length;\r\n        i++\r\n      ) {\r\n        var node = nodes[i];\r\n        if (node.dataset.precedence === precedence) prior = node;\r\n        else if (prior !== last) break;\r\n      }\r\n      prior\r\n        ? prior.parentNode.insertBefore(instance, prior.nextSibling)\r\n        : ((precedence = 9 === root.nodeType ? root.head : root),\r\n          precedence.insertBefore(instance, precedence.firstChild));\r\n    }\r\n    function adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {\r\n      null == stylesheetProps.crossOrigin &&\r\n        (stylesheetProps.crossOrigin = preloadProps.crossOrigin);\r\n      null == stylesheetProps.referrerPolicy &&\r\n        (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);\r\n      null == stylesheetProps.title &&\r\n        (stylesheetProps.title = preloadProps.title);\r\n    }\r\n    function adoptPreloadPropsForScript(scriptProps, preloadProps) {\r\n      null == scriptProps.crossOrigin &&\r\n        (scriptProps.crossOrigin = preloadProps.crossOrigin);\r\n      null == scriptProps.referrerPolicy &&\r\n        (scriptProps.referrerPolicy = preloadProps.referrerPolicy);\r\n      null == scriptProps.integrity &&\r\n        (scriptProps.integrity = preloadProps.integrity);\r\n    }\r\n    function getHydratableHoistableCache(type, keyAttribute, ownerDocument) {\r\n      if (null === tagCaches) {\r\n        var cache = new Map();\r\n        var caches = (tagCaches = new Map());\r\n        caches.set(ownerDocument, cache);\r\n      } else\r\n        (caches = tagCaches),\r\n          (cache = caches.get(ownerDocument)),\r\n          cache || ((cache = new Map()), caches.set(ownerDocument, cache));\r\n      if (cache.has(type)) return cache;\r\n      cache.set(type, null);\r\n      ownerDocument = ownerDocument.getElementsByTagName(type);\r\n      for (caches = 0; caches < ownerDocument.length; caches++) {\r\n        var node = ownerDocument[caches];\r\n        if (\r\n          !(\r\n            node[internalHoistableMarker] ||\r\n            node[internalInstanceKey] ||\r\n            (\"link\" === type && \"stylesheet\" === node.getAttribute(\"rel\"))\r\n          ) &&\r\n          node.namespaceURI !== SVG_NAMESPACE\r\n        ) {\r\n          var nodeKey = node.getAttribute(keyAttribute) || \"\";\r\n          nodeKey = type + nodeKey;\r\n          var existing = cache.get(nodeKey);\r\n          existing ? existing.push(node) : cache.set(nodeKey, [node]);\r\n        }\r\n      }\r\n      return cache;\r\n    }\r\n    function mountHoistable(hoistableRoot, type, instance) {\r\n      hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\r\n      hoistableRoot.head.insertBefore(\r\n        instance,\r\n        \"title\" === type ? hoistableRoot.querySelector(\"head > title\") : null\r\n      );\r\n    }\r\n    function isHostHoistableType(type, props, hostContext) {\r\n      var outsideHostContainerContext =\r\n        !hostContext.ancestorInfo.containerTagInScope;\r\n      if (\r\n        hostContext.context === HostContextNamespaceSvg ||\r\n        null != props.itemProp\r\n      )\r\n        return (\r\n          !outsideHostContainerContext ||\r\n            null == props.itemProp ||\r\n            (\"meta\" !== type &&\r\n              \"title\" !== type &&\r\n              \"style\" !== type &&\r\n              \"link\" !== type &&\r\n              \"script\" !== type) ||\r\n            console.error(\r\n              \"Cannot render a <%s> outside the main document if it has an `itemProp` prop. `itemProp` suggests the tag belongs to an `itemScope` which can appear anywhere in the DOM. If you were intending for React to hoist this <%s> remove the `itemProp` prop. Otherwise, try moving this tag into the <head> or <body> of the Document.\",\r\n              type,\r\n              type\r\n            ),\r\n          !1\r\n        );\r\n      switch (type) {\r\n        case \"meta\":\r\n        case \"title\":\r\n          return !0;\r\n        case \"style\":\r\n          if (\r\n            \"string\" !== typeof props.precedence ||\r\n            \"string\" !== typeof props.href ||\r\n            \"\" === props.href\r\n          ) {\r\n            outsideHostContainerContext &&\r\n              console.error(\r\n                'Cannot render a <style> outside the main document without knowing its precedence and a unique href key. React can hoist and deduplicate <style> tags if you provide a `precedence` prop along with an `href` prop that does not conflict with the `href` values used in any other hoisted <style> or <link rel=\"stylesheet\" ...> tags.  Note that hoisting <style> tags is considered an advanced feature that most will not use directly. Consider moving the <style> tag to the <head> or consider adding a `precedence=\"default\"` and `href=\"some unique resource identifier\"`.'\r\n              );\r\n            break;\r\n          }\r\n          return !0;\r\n        case \"link\":\r\n          if (\r\n            \"string\" !== typeof props.rel ||\r\n            \"string\" !== typeof props.href ||\r\n            \"\" === props.href ||\r\n            props.onLoad ||\r\n            props.onError\r\n          ) {\r\n            if (\r\n              \"stylesheet\" === props.rel &&\r\n              \"string\" === typeof props.precedence\r\n            ) {\r\n              type = props.href;\r\n              var onError = props.onError,\r\n                disabled = props.disabled;\r\n              hostContext = [];\r\n              props.onLoad && hostContext.push(\"`onLoad`\");\r\n              onError && hostContext.push(\"`onError`\");\r\n              null != disabled && hostContext.push(\"`disabled`\");\r\n              onError = propNamesListJoin(hostContext, \"and\");\r\n              onError += 1 === hostContext.length ? \" prop\" : \" props\";\r\n              disabled =\r\n                1 === hostContext.length ? \"an \" + onError : \"the \" + onError;\r\n              hostContext.length &&\r\n                console.error(\r\n                  'React encountered a <link rel=\"stylesheet\" href=\"%s\" ... /> with a `precedence` prop that also included %s. The presence of loading and error handlers indicates an intent to manage the stylesheet loading state from your from your Component code and React will not hoist or deduplicate this stylesheet. If your intent was to have React hoist and deduplciate this stylesheet using the `precedence` prop remove the %s, otherwise remove the `precedence` prop.',\r\n                  type,\r\n                  disabled,\r\n                  onError\r\n                );\r\n            }\r\n            outsideHostContainerContext &&\r\n              (\"string\" !== typeof props.rel ||\r\n              \"string\" !== typeof props.href ||\r\n              \"\" === props.href\r\n                ? console.error(\r\n                    \"Cannot render a <link> outside the main document without a `rel` and `href` prop. Try adding a `rel` and/or `href` prop to this <link> or moving the link into the <head> tag\"\r\n                  )\r\n                : (props.onError || props.onLoad) &&\r\n                  console.error(\r\n                    \"Cannot render a <link> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>.\"\r\n                  ));\r\n            break;\r\n          }\r\n          switch (props.rel) {\r\n            case \"stylesheet\":\r\n              return (\r\n                (type = props.precedence),\r\n                (props = props.disabled),\r\n                \"string\" !== typeof type &&\r\n                  outsideHostContainerContext &&\r\n                  console.error(\r\n                    'Cannot render a <link rel=\"stylesheet\" /> outside the main document without knowing its precedence. Consider adding precedence=\"default\" or moving it into the root <head> tag.'\r\n                  ),\r\n                \"string\" === typeof type && null == props\r\n              );\r\n            default:\r\n              return !0;\r\n          }\r\n        case \"script\":\r\n          type =\r\n            props.async &&\r\n            \"function\" !== typeof props.async &&\r\n            \"symbol\" !== typeof props.async;\r\n          if (\r\n            !type ||\r\n            props.onLoad ||\r\n            props.onError ||\r\n            !props.src ||\r\n            \"string\" !== typeof props.src\r\n          ) {\r\n            outsideHostContainerContext &&\r\n              (type\r\n                ? props.onLoad || props.onError\r\n                  ? console.error(\r\n                      \"Cannot render a <script> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>.\"\r\n                    )\r\n                  : console.error(\r\n                      \"Cannot render a <script> outside the main document without `async={true}` and a non-empty `src` prop. Ensure there is a valid `src` and either make the script async or move it into the root <head> tag or somewhere in the <body>.\"\r\n                    )\r\n                : console.error(\r\n                    'Cannot render a sync or defer <script> outside the main document without knowing its order. Try adding async=\"\" or moving it into the root <head> tag.'\r\n                  ));\r\n            break;\r\n          }\r\n          return !0;\r\n        case \"noscript\":\r\n        case \"template\":\r\n          outsideHostContainerContext &&\r\n            console.error(\r\n              \"Cannot render <%s> outside the main document. Try moving it into the root <head> tag.\",\r\n              type\r\n            );\r\n      }\r\n      return !1;\r\n    }\r\n    function preloadResource(resource) {\r\n      return \"stylesheet\" === resource.type &&\r\n        (resource.state.loading & Settled) === NotLoaded\r\n        ? !1\r\n        : !0;\r\n    }\r\n    function noop() {}\r\n    function suspendResource(hoistableRoot, resource, props) {\r\n      if (null === suspendedState)\r\n        throw Error(\r\n          \"Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug.\"\r\n        );\r\n      var state = suspendedState;\r\n      if (\r\n        \"stylesheet\" === resource.type &&\r\n        (\"string\" !== typeof props.media ||\r\n          !1 !== matchMedia(props.media).matches) &&\r\n        (resource.state.loading & Inserted) === NotLoaded\r\n      ) {\r\n        if (null === resource.instance) {\r\n          var key = getStyleKey(props.href),\r\n            instance = hoistableRoot.querySelector(\r\n              getStylesheetSelectorFromKey(key)\r\n            );\r\n          if (instance) {\r\n            hoistableRoot = instance._p;\r\n            null !== hoistableRoot &&\r\n              \"object\" === typeof hoistableRoot &&\r\n              \"function\" === typeof hoistableRoot.then &&\r\n              (state.count++,\r\n              (state = onUnsuspend.bind(state)),\r\n              hoistableRoot.then(state, state));\r\n            resource.state.loading |= Inserted;\r\n            resource.instance = instance;\r\n            markNodeAsHoistable(instance);\r\n            return;\r\n          }\r\n          instance = hoistableRoot.ownerDocument || hoistableRoot;\r\n          props = stylesheetPropsFromRawProps(props);\r\n          (key = preloadPropsMap.get(key)) &&\r\n            adoptPreloadPropsForStylesheet(props, key);\r\n          instance = instance.createElement(\"link\");\r\n          markNodeAsHoistable(instance);\r\n          var linkInstance = instance;\r\n          linkInstance._p = new Promise(function (resolve, reject) {\r\n            linkInstance.onload = resolve;\r\n            linkInstance.onerror = reject;\r\n          });\r\n          setInitialProperties(instance, \"link\", props);\r\n          resource.instance = instance;\r\n        }\r\n        null === state.stylesheets && (state.stylesheets = new Map());\r\n        state.stylesheets.set(resource, hoistableRoot);\r\n        (hoistableRoot = resource.state.preload) &&\r\n          (resource.state.loading & Settled) === NotLoaded &&\r\n          (state.count++,\r\n          (resource = onUnsuspend.bind(state)),\r\n          hoistableRoot.addEventListener(\"load\", resource),\r\n          hoistableRoot.addEventListener(\"error\", resource));\r\n      }\r\n    }\r\n    function waitForCommitToBeReady() {\r\n      if (null === suspendedState)\r\n        throw Error(\r\n          \"Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug.\"\r\n        );\r\n      var state = suspendedState;\r\n      state.stylesheets &&\r\n        0 === state.count &&\r\n        insertSuspendedStylesheets(state, state.stylesheets);\r\n      return 0 < state.count\r\n        ? function (commit) {\r\n            var stylesheetTimer = setTimeout(function () {\r\n              state.stylesheets &&\r\n                insertSuspendedStylesheets(state, state.stylesheets);\r\n              if (state.unsuspend) {\r\n                var unsuspend = state.unsuspend;\r\n                state.unsuspend = null;\r\n                unsuspend();\r\n              }\r\n            }, 6e4);\r\n            state.unsuspend = commit;\r\n            return function () {\r\n              state.unsuspend = null;\r\n              clearTimeout(stylesheetTimer);\r\n            };\r\n          }\r\n        : null;\r\n    }\r\n    function onUnsuspend() {\r\n      this.count--;\r\n      if (0 === this.count)\r\n        if (this.stylesheets)\r\n          insertSuspendedStylesheets(this, this.stylesheets);\r\n        else if (this.unsuspend) {\r\n          var unsuspend = this.unsuspend;\r\n          this.unsuspend = null;\r\n          unsuspend();\r\n        }\r\n    }\r\n    function insertSuspendedStylesheets(state, resources) {\r\n      state.stylesheets = null;\r\n      null !== state.unsuspend &&\r\n        (state.count++,\r\n        (precedencesByRoot = new Map()),\r\n        resources.forEach(insertStylesheetIntoRoot, state),\r\n        (precedencesByRoot = null),\r\n        onUnsuspend.call(state));\r\n    }\r\n    function insertStylesheetIntoRoot(root, resource) {\r\n      if (!(resource.state.loading & Inserted)) {\r\n        var precedences = precedencesByRoot.get(root);\r\n        if (precedences) var last = precedences.get(LAST_PRECEDENCE);\r\n        else {\r\n          precedences = new Map();\r\n          precedencesByRoot.set(root, precedences);\r\n          for (\r\n            var nodes = root.querySelectorAll(\r\n                \"link[data-precedence],style[data-precedence]\"\r\n              ),\r\n              i = 0;\r\n            i < nodes.length;\r\n            i++\r\n          ) {\r\n            var node = nodes[i];\r\n            if (\r\n              \"LINK\" === node.nodeName ||\r\n              \"not all\" !== node.getAttribute(\"media\")\r\n            )\r\n              precedences.set(node.dataset.precedence, node), (last = node);\r\n          }\r\n          last && precedences.set(LAST_PRECEDENCE, last);\r\n        }\r\n        nodes = resource.instance;\r\n        node = nodes.getAttribute(\"data-precedence\");\r\n        i = precedences.get(node) || last;\r\n        i === last && precedences.set(LAST_PRECEDENCE, nodes);\r\n        precedences.set(node, nodes);\r\n        this.count++;\r\n        last = onUnsuspend.bind(this);\r\n        nodes.addEventListener(\"load\", last);\r\n        nodes.addEventListener(\"error\", last);\r\n        i\r\n          ? i.parentNode.insertBefore(nodes, i.nextSibling)\r\n          : ((root = 9 === root.nodeType ? root.head : root),\r\n            root.insertBefore(nodes, root.firstChild));\r\n        resource.state.loading |= Inserted;\r\n      }\r\n    }\r\n    function FiberRootNode(\r\n      containerInfo,\r\n      tag,\r\n      hydrate,\r\n      identifierPrefix,\r\n      onUncaughtError,\r\n      onCaughtError,\r\n      onRecoverableError,\r\n      formState\r\n    ) {\r\n      this.tag = 1;\r\n      this.containerInfo = containerInfo;\r\n      this.pingCache = this.current = this.pendingChildren = null;\r\n      this.timeoutHandle = noTimeout;\r\n      this.callbackNode =\r\n        this.next =\r\n        this.pendingContext =\r\n        this.context =\r\n        this.cancelPendingCommit =\r\n          null;\r\n      this.callbackPriority = 0;\r\n      this.expirationTimes = createLaneMap(-1);\r\n      this.entangledLanes =\r\n        this.shellSuspendCounter =\r\n        this.errorRecoveryDisabledLanes =\r\n        this.expiredLanes =\r\n        this.warmLanes =\r\n        this.pingedLanes =\r\n        this.suspendedLanes =\r\n        this.pendingLanes =\r\n          0;\r\n      this.entanglements = createLaneMap(0);\r\n      this.hiddenUpdates = createLaneMap(null);\r\n      this.identifierPrefix = identifierPrefix;\r\n      this.onUncaughtError = onUncaughtError;\r\n      this.onCaughtError = onCaughtError;\r\n      this.onRecoverableError = onRecoverableError;\r\n      this.pooledCache = null;\r\n      this.pooledCacheLanes = 0;\r\n      this.formState = formState;\r\n      this.incompleteTransitions = new Map();\r\n      this.passiveEffectDuration = this.effectDuration = -0;\r\n      this.memoizedUpdaters = new Set();\r\n      containerInfo = this.pendingUpdatersLaneMap = [];\r\n      for (tag = 0; 31 > tag; tag++) containerInfo.push(new Set());\r\n      this._debugRootType = hydrate ? \"hydrateRoot()\" : \"createRoot()\";\r\n    }\r\n    function createFiberRoot(\r\n      containerInfo,\r\n      tag,\r\n      hydrate,\r\n      initialChildren,\r\n      hydrationCallbacks,\r\n      isStrictMode,\r\n      identifierPrefix,\r\n      onUncaughtError,\r\n      onCaughtError,\r\n      onRecoverableError,\r\n      transitionCallbacks,\r\n      formState\r\n    ) {\r\n      containerInfo = new FiberRootNode(\r\n        containerInfo,\r\n        tag,\r\n        hydrate,\r\n        identifierPrefix,\r\n        onUncaughtError,\r\n        onCaughtError,\r\n        onRecoverableError,\r\n        formState\r\n      );\r\n      tag = ConcurrentMode;\r\n      !0 === isStrictMode && (tag |= StrictLegacyMode | StrictEffectsMode);\r\n      isDevToolsPresent && (tag |= ProfileMode);\r\n      isStrictMode = createFiber(3, null, null, tag);\r\n      containerInfo.current = isStrictMode;\r\n      isStrictMode.stateNode = containerInfo;\r\n      tag = createCache();\r\n      retainCache(tag);\r\n      containerInfo.pooledCache = tag;\r\n      retainCache(tag);\r\n      isStrictMode.memoizedState = {\r\n        element: initialChildren,\r\n        isDehydrated: hydrate,\r\n        cache: tag\r\n      };\r\n      initializeUpdateQueue(isStrictMode);\r\n      return containerInfo;\r\n    }\r\n    function getContextForSubtree(parentComponent) {\r\n      if (!parentComponent) return emptyContextObject;\r\n      parentComponent = emptyContextObject;\r\n      return parentComponent;\r\n    }\r\n    function updateContainerImpl(\r\n      rootFiber,\r\n      lane,\r\n      element,\r\n      container,\r\n      parentComponent,\r\n      callback\r\n    ) {\r\n      if (\r\n        injectedHook &&\r\n        \"function\" === typeof injectedHook.onScheduleFiberRoot\r\n      )\r\n        try {\r\n          injectedHook.onScheduleFiberRoot(rendererID, container, element);\r\n        } catch (err) {\r\n          hasLoggedError ||\r\n            ((hasLoggedError = !0),\r\n            console.error(\r\n              \"React instrumentation encountered an error: %s\",\r\n              err\r\n            ));\r\n        }\r\n      null !== injectedProfilingHooks &&\r\n        \"function\" === typeof injectedProfilingHooks.markRenderScheduled &&\r\n        injectedProfilingHooks.markRenderScheduled(lane);\r\n      parentComponent = getContextForSubtree(parentComponent);\r\n      null === container.context\r\n        ? (container.context = parentComponent)\r\n        : (container.pendingContext = parentComponent);\r\n      isRendering &&\r\n        null !== current &&\r\n        !didWarnAboutNestedUpdates &&\r\n        ((didWarnAboutNestedUpdates = !0),\r\n        console.error(\r\n          \"Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\\n\\nCheck the render method of %s.\",\r\n          getComponentNameFromFiber(current) || \"Unknown\"\r\n        ));\r\n      container = createUpdate(lane);\r\n      container.payload = { element: element };\r\n      callback = void 0 === callback ? null : callback;\r\n      null !== callback &&\r\n        (\"function\" !== typeof callback &&\r\n          console.error(\r\n            \"Expected the last optional `callback` argument to be a function. Instead received: %s.\",\r\n            callback\r\n          ),\r\n        (container.callback = callback));\r\n      element = enqueueUpdate(rootFiber, container, lane);\r\n      null !== element &&\r\n        (scheduleUpdateOnFiber(element, rootFiber, lane),\r\n        entangleTransitions(element, rootFiber, lane));\r\n    }\r\n    function markRetryLaneImpl(fiber, retryLane) {\r\n      fiber = fiber.memoizedState;\r\n      if (null !== fiber && null !== fiber.dehydrated) {\r\n        var a = fiber.retryLane;\r\n        fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;\r\n      }\r\n    }\r\n    function markRetryLaneIfNotHydrated(fiber, retryLane) {\r\n      markRetryLaneImpl(fiber, retryLane);\r\n      (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);\r\n    }\r\n    function attemptContinuousHydration(fiber) {\r\n      if (13 === fiber.tag) {\r\n        var root = enqueueConcurrentRenderForLane(fiber, 67108864);\r\n        null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);\r\n        markRetryLaneIfNotHydrated(fiber, 67108864);\r\n      }\r\n    }\r\n    function getCurrentFiberForDevTools() {\r\n      return current;\r\n    }\r\n    function getLaneLabelMap() {\r\n      for (var map = new Map(), lane = 1, index = 0; 31 > index; index++) {\r\n        var label = getLabelForLane(lane);\r\n        map.set(lane, label);\r\n        lane *= 2;\r\n      }\r\n      return map;\r\n    }\r\n    function dispatchDiscreteEvent(\r\n      domEventName,\r\n      eventSystemFlags,\r\n      container,\r\n      nativeEvent\r\n    ) {\r\n      var prevTransition = ReactSharedInternals.T;\r\n      ReactSharedInternals.T = null;\r\n      var previousPriority = ReactDOMSharedInternals.p;\r\n      try {\r\n        (ReactDOMSharedInternals.p = DiscreteEventPriority),\r\n          dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\r\n      } finally {\r\n        (ReactDOMSharedInternals.p = previousPriority),\r\n          (ReactSharedInternals.T = prevTransition);\r\n      }\r\n    }\r\n    function dispatchContinuousEvent(\r\n      domEventName,\r\n      eventSystemFlags,\r\n      container,\r\n      nativeEvent\r\n    ) {\r\n      var prevTransition = ReactSharedInternals.T;\r\n      ReactSharedInternals.T = null;\r\n      var previousPriority = ReactDOMSharedInternals.p;\r\n      try {\r\n        (ReactDOMSharedInternals.p = ContinuousEventPriority),\r\n          dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\r\n      } finally {\r\n        (ReactDOMSharedInternals.p = previousPriority),\r\n          (ReactSharedInternals.T = prevTransition);\r\n      }\r\n    }\r\n    function dispatchEvent(\r\n      domEventName,\r\n      eventSystemFlags,\r\n      targetContainer,\r\n      nativeEvent\r\n    ) {\r\n      if (_enabled) {\r\n        var blockedOn = findInstanceBlockingEvent(nativeEvent);\r\n        if (null === blockedOn)\r\n          dispatchEventForPluginEventSystem(\r\n            domEventName,\r\n            eventSystemFlags,\r\n            nativeEvent,\r\n            return_targetInst,\r\n            targetContainer\r\n          ),\r\n            clearIfContinuousEvent(domEventName, nativeEvent);\r\n        else if (\r\n          queueIfContinuousEvent(\r\n            blockedOn,\r\n            domEventName,\r\n            eventSystemFlags,\r\n            targetContainer,\r\n            nativeEvent\r\n          )\r\n        )\r\n          nativeEvent.stopPropagation();\r\n        else if (\r\n          (clearIfContinuousEvent(domEventName, nativeEvent),\r\n          eventSystemFlags & 4 &&\r\n            -1 < discreteReplayableEvents.indexOf(domEventName))\r\n        ) {\r\n          for (; null !== blockedOn; ) {\r\n            var fiber = getInstanceFromNode(blockedOn);\r\n            if (null !== fiber)\r\n              switch (fiber.tag) {\r\n                case 3:\r\n                  fiber = fiber.stateNode;\r\n                  if (fiber.current.memoizedState.isDehydrated) {\r\n                    var lanes = getHighestPriorityLanes(fiber.pendingLanes);\r\n                    if (0 !== lanes) {\r\n                      var root = fiber;\r\n                      root.pendingLanes |= 2;\r\n                      for (root.entangledLanes |= 2; lanes; ) {\r\n                        var lane = 1 << (31 - clz32(lanes));\r\n                        root.entanglements[1] |= lane;\r\n                        lanes &= ~lane;\r\n                      }\r\n                      ensureRootIsScheduled(fiber);\r\n                      (executionContext & (RenderContext | CommitContext)) ===\r\n                        NoContext &&\r\n                        ((workInProgressRootRenderTargetTime =\r\n                          now$1() + RENDER_TIMEOUT_MS),\r\n                        flushSyncWorkAcrossRoots_impl(0, !1));\r\n                    }\r\n                  }\r\n                  break;\r\n                case 13:\r\n                  (root = enqueueConcurrentRenderForLane(fiber, 2)),\r\n                    null !== root && scheduleUpdateOnFiber(root, fiber, 2),\r\n                    flushSyncWork$1(),\r\n                    markRetryLaneIfNotHydrated(fiber, 2);\r\n              }\r\n            fiber = findInstanceBlockingEvent(nativeEvent);\r\n            null === fiber &&\r\n              dispatchEventForPluginEventSystem(\r\n                domEventName,\r\n                eventSystemFlags,\r\n                nativeEvent,\r\n                return_targetInst,\r\n                targetContainer\r\n              );\r\n            if (fiber === blockedOn) break;\r\n            blockedOn = fiber;\r\n          }\r\n          null !== blockedOn && nativeEvent.stopPropagation();\r\n        } else\r\n          dispatchEventForPluginEventSystem(\r\n            domEventName,\r\n            eventSystemFlags,\r\n            nativeEvent,\r\n            null,\r\n            targetContainer\r\n          );\r\n      }\r\n    }\r\n    function findInstanceBlockingEvent(nativeEvent) {\r\n      nativeEvent = getEventTarget(nativeEvent);\r\n      return findInstanceBlockingTarget(nativeEvent);\r\n    }\r\n    function findInstanceBlockingTarget(targetNode) {\r\n      return_targetInst = null;\r\n      targetNode = getClosestInstanceFromNode(targetNode);\r\n      if (null !== targetNode) {\r\n        var nearestMounted = getNearestMountedFiber(targetNode);\r\n        if (null === nearestMounted) targetNode = null;\r\n        else {\r\n          var tag = nearestMounted.tag;\r\n          if (13 === tag) {\r\n            targetNode = getSuspenseInstanceFromFiber(nearestMounted);\r\n            if (null !== targetNode) return targetNode;\r\n            targetNode = null;\r\n          } else if (3 === tag) {\r\n            if (nearestMounted.stateNode.current.memoizedState.isDehydrated)\r\n              return 3 === nearestMounted.tag\r\n                ? nearestMounted.stateNode.containerInfo\r\n                : null;\r\n            targetNode = null;\r\n          } else nearestMounted !== targetNode && (targetNode = null);\r\n        }\r\n      }\r\n      return_targetInst = targetNode;\r\n      return null;\r\n    }\r\n    function getEventPriority(domEventName) {\r\n      switch (domEventName) {\r\n        case \"beforetoggle\":\r\n        case \"cancel\":\r\n        case \"click\":\r\n        case \"close\":\r\n        case \"contextmenu\":\r\n        case \"copy\":\r\n        case \"cut\":\r\n        case \"auxclick\":\r\n        case \"dblclick\":\r\n        case \"dragend\":\r\n        case \"dragstart\":\r\n        case \"drop\":\r\n        case \"focusin\":\r\n        case \"focusout\":\r\n        case \"input\":\r\n        case \"invalid\":\r\n        case \"keydown\":\r\n        case \"keypress\":\r\n        case \"keyup\":\r\n        case \"mousedown\":\r\n        case \"mouseup\":\r\n        case \"paste\":\r\n        case \"pause\":\r\n        case \"play\":\r\n        case \"pointercancel\":\r\n        case \"pointerdown\":\r\n        case \"pointerup\":\r\n        case \"ratechange\":\r\n        case \"reset\":\r\n        case \"resize\":\r\n        case \"seeked\":\r\n        case \"submit\":\r\n        case \"toggle\":\r\n        case \"touchcancel\":\r\n        case \"touchend\":\r\n        case \"touchstart\":\r\n        case \"volumechange\":\r\n        case \"change\":\r\n        case \"selectionchange\":\r\n        case \"textInput\":\r\n        case \"compositionstart\":\r\n        case \"compositionend\":\r\n        case \"compositionupdate\":\r\n        case \"beforeblur\":\r\n        case \"afterblur\":\r\n        case \"beforeinput\":\r\n        case \"blur\":\r\n        case \"fullscreenchange\":\r\n        case \"focus\":\r\n        case \"hashchange\":\r\n        case \"popstate\":\r\n        case \"select\":\r\n        case \"selectstart\":\r\n          return DiscreteEventPriority;\r\n        case \"drag\":\r\n        case \"dragenter\":\r\n        case \"dragexit\":\r\n        case \"dragleave\":\r\n        case \"dragover\":\r\n        case \"mousemove\":\r\n        case \"mouseout\":\r\n        case \"mouseover\":\r\n        case \"pointermove\":\r\n        case \"pointerout\":\r\n        case \"pointerover\":\r\n        case \"scroll\":\r\n        case \"touchmove\":\r\n        case \"wheel\":\r\n        case \"mouseenter\":\r\n        case \"mouseleave\":\r\n        case \"pointerenter\":\r\n        case \"pointerleave\":\r\n          return ContinuousEventPriority;\r\n        case \"message\":\r\n          switch (getCurrentPriorityLevel()) {\r\n            case ImmediatePriority:\r\n              return DiscreteEventPriority;\r\n            case UserBlockingPriority:\r\n              return ContinuousEventPriority;\r\n            case NormalPriority$1:\r\n            case LowPriority:\r\n              return DefaultEventPriority;\r\n            case IdlePriority:\r\n              return IdleEventPriority;\r\n            default:\r\n              return DefaultEventPriority;\r\n          }\r\n        default:\r\n          return DefaultEventPriority;\r\n      }\r\n    }\r\n    function clearIfContinuousEvent(domEventName, nativeEvent) {\r\n      switch (domEventName) {\r\n        case \"focusin\":\r\n        case \"focusout\":\r\n          queuedFocus = null;\r\n          break;\r\n        case \"dragenter\":\r\n        case \"dragleave\":\r\n          queuedDrag = null;\r\n          break;\r\n        case \"mouseover\":\r\n        case \"mouseout\":\r\n          queuedMouse = null;\r\n          break;\r\n        case \"pointerover\":\r\n        case \"pointerout\":\r\n          queuedPointers.delete(nativeEvent.pointerId);\r\n          break;\r\n        case \"gotpointercapture\":\r\n        case \"lostpointercapture\":\r\n          queuedPointerCaptures.delete(nativeEvent.pointerId);\r\n      }\r\n    }\r\n    function accumulateOrCreateContinuousQueuedReplayableEvent(\r\n      existingQueuedEvent,\r\n      blockedOn,\r\n      domEventName,\r\n      eventSystemFlags,\r\n      targetContainer,\r\n      nativeEvent\r\n    ) {\r\n      if (\r\n        null === existingQueuedEvent ||\r\n        existingQueuedEvent.nativeEvent !== nativeEvent\r\n      )\r\n        return (\r\n          (existingQueuedEvent = {\r\n            blockedOn: blockedOn,\r\n            domEventName: domEventName,\r\n            eventSystemFlags: eventSystemFlags,\r\n            nativeEvent: nativeEvent,\r\n            targetContainers: [targetContainer]\r\n          }),\r\n          null !== blockedOn &&\r\n            ((blockedOn = getInstanceFromNode(blockedOn)),\r\n            null !== blockedOn && attemptContinuousHydration(blockedOn)),\r\n          existingQueuedEvent\r\n        );\r\n      existingQueuedEvent.eventSystemFlags |= eventSystemFlags;\r\n      blockedOn = existingQueuedEvent.targetContainers;\r\n      null !== targetContainer &&\r\n        -1 === blockedOn.indexOf(targetContainer) &&\r\n        blockedOn.push(targetContainer);\r\n      return existingQueuedEvent;\r\n    }\r\n    function queueIfContinuousEvent(\r\n      blockedOn,\r\n      domEventName,\r\n      eventSystemFlags,\r\n      targetContainer,\r\n      nativeEvent\r\n    ) {\r\n      switch (domEventName) {\r\n        case \"focusin\":\r\n          return (\r\n            (queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(\r\n              queuedFocus,\r\n              blockedOn,\r\n              domEventName,\r\n              eventSystemFlags,\r\n              targetContainer,\r\n              nativeEvent\r\n            )),\r\n            !0\r\n          );\r\n        case \"dragenter\":\r\n          return (\r\n            (queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(\r\n              queuedDrag,\r\n              blockedOn,\r\n              domEventName,\r\n              eventSystemFlags,\r\n              targetContainer,\r\n              nativeEvent\r\n            )),\r\n            !0\r\n          );\r\n        case \"mouseover\":\r\n          return (\r\n            (queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(\r\n              queuedMouse,\r\n              blockedOn,\r\n              domEventName,\r\n              eventSystemFlags,\r\n              targetContainer,\r\n              nativeEvent\r\n            )),\r\n            !0\r\n          );\r\n        case \"pointerover\":\r\n          var pointerId = nativeEvent.pointerId;\r\n          queuedPointers.set(\r\n            pointerId,\r\n            accumulateOrCreateContinuousQueuedReplayableEvent(\r\n              queuedPointers.get(pointerId) || null,\r\n              blockedOn,\r\n              domEventName,\r\n              eventSystemFlags,\r\n              targetContainer,\r\n              nativeEvent\r\n            )\r\n          );\r\n          return !0;\r\n        case \"gotpointercapture\":\r\n          return (\r\n            (pointerId = nativeEvent.pointerId),\r\n            queuedPointerCaptures.set(\r\n              pointerId,\r\n              accumulateOrCreateContinuousQueuedReplayableEvent(\r\n                queuedPointerCaptures.get(pointerId) || null,\r\n                blockedOn,\r\n                domEventName,\r\n                eventSystemFlags,\r\n                targetContainer,\r\n                nativeEvent\r\n              )\r\n            ),\r\n            !0\r\n          );\r\n      }\r\n      return !1;\r\n    }\r\n    function attemptExplicitHydrationTarget(queuedTarget) {\r\n      var targetInst = getClosestInstanceFromNode(queuedTarget.target);\r\n      if (null !== targetInst) {\r\n        var nearestMounted = getNearestMountedFiber(targetInst);\r\n        if (null !== nearestMounted)\r\n          if (((targetInst = nearestMounted.tag), 13 === targetInst)) {\r\n            if (\r\n              ((targetInst = getSuspenseInstanceFromFiber(nearestMounted)),\r\n              null !== targetInst)\r\n            ) {\r\n              queuedTarget.blockedOn = targetInst;\r\n              runWithPriority(queuedTarget.priority, function () {\r\n                if (13 === nearestMounted.tag) {\r\n                  var lane = requestUpdateLane(nearestMounted);\r\n                  lane = getBumpedLaneForHydrationByLane(lane);\r\n                  var root = enqueueConcurrentRenderForLane(\r\n                    nearestMounted,\r\n                    lane\r\n                  );\r\n                  null !== root &&\r\n                    scheduleUpdateOnFiber(root, nearestMounted, lane);\r\n                  markRetryLaneIfNotHydrated(nearestMounted, lane);\r\n                }\r\n              });\r\n              return;\r\n            }\r\n          } else if (\r\n            3 === targetInst &&\r\n            nearestMounted.stateNode.current.memoizedState.isDehydrated\r\n          ) {\r\n            queuedTarget.blockedOn =\r\n              3 === nearestMounted.tag\r\n                ? nearestMounted.stateNode.containerInfo\r\n                : null;\r\n            return;\r\n          }\r\n      }\r\n      queuedTarget.blockedOn = null;\r\n    }\r\n    function attemptReplayContinuousQueuedEvent(queuedEvent) {\r\n      if (null !== queuedEvent.blockedOn) return !1;\r\n      for (\r\n        var targetContainers = queuedEvent.targetContainers;\r\n        0 < targetContainers.length;\r\n\r\n      ) {\r\n        var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);\r\n        if (null === nextBlockedOn) {\r\n          nextBlockedOn = queuedEvent.nativeEvent;\r\n          var nativeEventClone = new nextBlockedOn.constructor(\r\n              nextBlockedOn.type,\r\n              nextBlockedOn\r\n            ),\r\n            event = nativeEventClone;\r\n          null !== currentReplayingEvent &&\r\n            console.error(\r\n              \"Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.\"\r\n            );\r\n          currentReplayingEvent = event;\r\n          nextBlockedOn.target.dispatchEvent(nativeEventClone);\r\n          null === currentReplayingEvent &&\r\n            console.error(\r\n              \"Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.\"\r\n            );\r\n          currentReplayingEvent = null;\r\n        } else\r\n          return (\r\n            (targetContainers = getInstanceFromNode(nextBlockedOn)),\r\n            null !== targetContainers &&\r\n              attemptContinuousHydration(targetContainers),\r\n            (queuedEvent.blockedOn = nextBlockedOn),\r\n            !1\r\n          );\r\n        targetContainers.shift();\r\n      }\r\n      return !0;\r\n    }\r\n    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {\r\n      attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);\r\n    }\r\n    function replayUnblockedEvents() {\r\n      hasScheduledReplayAttempt = !1;\r\n      null !== queuedFocus &&\r\n        attemptReplayContinuousQueuedEvent(queuedFocus) &&\r\n        (queuedFocus = null);\r\n      null !== queuedDrag &&\r\n        attemptReplayContinuousQueuedEvent(queuedDrag) &&\r\n        (queuedDrag = null);\r\n      null !== queuedMouse &&\r\n        attemptReplayContinuousQueuedEvent(queuedMouse) &&\r\n        (queuedMouse = null);\r\n      queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);\r\n      queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);\r\n    }\r\n    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {\r\n      queuedEvent.blockedOn === unblocked &&\r\n        ((queuedEvent.blockedOn = null),\r\n        hasScheduledReplayAttempt ||\r\n          ((hasScheduledReplayAttempt = !0),\r\n          Scheduler.unstable_scheduleCallback(\r\n            Scheduler.unstable_NormalPriority,\r\n            replayUnblockedEvents\r\n          )));\r\n    }\r\n    function scheduleReplayQueueIfNeeded(formReplayingQueue) {\r\n      lastScheduledReplayQueue !== formReplayingQueue &&\r\n        ((lastScheduledReplayQueue = formReplayingQueue),\r\n        Scheduler.unstable_scheduleCallback(\r\n          Scheduler.unstable_NormalPriority,\r\n          function () {\r\n            lastScheduledReplayQueue === formReplayingQueue &&\r\n              (lastScheduledReplayQueue = null);\r\n            for (var i = 0; i < formReplayingQueue.length; i += 3) {\r\n              var form = formReplayingQueue[i],\r\n                submitterOrAction = formReplayingQueue[i + 1],\r\n                formData = formReplayingQueue[i + 2];\r\n              if (\"function\" !== typeof submitterOrAction)\r\n                if (\r\n                  null === findInstanceBlockingTarget(submitterOrAction || form)\r\n                )\r\n                  continue;\r\n                else break;\r\n              var formInst = getInstanceFromNode(form);\r\n              null !== formInst &&\r\n                (formReplayingQueue.splice(i, 3),\r\n                (i -= 3),\r\n                (form = {\r\n                  pending: !0,\r\n                  data: formData,\r\n                  method: form.method,\r\n                  action: submitterOrAction\r\n                }),\r\n                Object.freeze(form),\r\n                startHostTransition(\r\n                  formInst,\r\n                  form,\r\n                  submitterOrAction,\r\n                  formData\r\n                ));\r\n            }\r\n          }\r\n        ));\r\n    }\r\n    function retryIfBlockedOn(unblocked) {\r\n      function unblock(queuedEvent) {\r\n        return scheduleCallbackIfUnblocked(queuedEvent, unblocked);\r\n      }\r\n      null !== queuedFocus &&\r\n        scheduleCallbackIfUnblocked(queuedFocus, unblocked);\r\n      null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);\r\n      null !== queuedMouse &&\r\n        scheduleCallbackIfUnblocked(queuedMouse, unblocked);\r\n      queuedPointers.forEach(unblock);\r\n      queuedPointerCaptures.forEach(unblock);\r\n      for (var i = 0; i < queuedExplicitHydrationTargets.length; i++) {\r\n        var queuedTarget = queuedExplicitHydrationTargets[i];\r\n        queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);\r\n      }\r\n      for (\r\n        ;\r\n        0 < queuedExplicitHydrationTargets.length &&\r\n        ((i = queuedExplicitHydrationTargets[0]), null === i.blockedOn);\r\n\r\n      )\r\n        attemptExplicitHydrationTarget(i),\r\n          null === i.blockedOn && queuedExplicitHydrationTargets.shift();\r\n      i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;\r\n      if (null != i)\r\n        for (queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3) {\r\n          var form = i[queuedTarget],\r\n            submitterOrAction = i[queuedTarget + 1],\r\n            formProps = form[internalPropsKey] || null;\r\n          if (\"function\" === typeof submitterOrAction)\r\n            formProps || scheduleReplayQueueIfNeeded(i);\r\n          else if (formProps) {\r\n            var action = null;\r\n            if (\r\n              submitterOrAction &&\r\n              submitterOrAction.hasAttribute(\"formAction\")\r\n            )\r\n              if (\r\n                ((form = submitterOrAction),\r\n                (formProps = submitterOrAction[internalPropsKey] || null))\r\n              )\r\n                action = formProps.formAction;\r\n              else {\r\n                if (null !== findInstanceBlockingTarget(form)) continue;\r\n              }\r\n            else action = formProps.action;\r\n            \"function\" === typeof action\r\n              ? (i[queuedTarget + 1] = action)\r\n              : (i.splice(queuedTarget, 3), (queuedTarget -= 3));\r\n            scheduleReplayQueueIfNeeded(i);\r\n          }\r\n        }\r\n    }\r\n    function ReactDOMRoot(internalRoot) {\r\n      this._internalRoot = internalRoot;\r\n    }\r\n    function ReactDOMHydrationRoot(internalRoot) {\r\n      this._internalRoot = internalRoot;\r\n    }\r\n    function warnIfReactDOMContainerInDEV(container) {\r\n      container[internalContainerInstanceKey] &&\r\n        (container._reactRootContainer\r\n          ? console.error(\r\n              \"You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.\"\r\n            )\r\n          : console.error(\r\n              \"You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.\"\r\n            ));\r\n    }\r\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\r\n      \"function\" ===\r\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\r\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\r\n    var Scheduler = __webpack_require__(/*! scheduler */ \"./node_modules/scheduler/index.js\"),\r\n      React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\r\n      ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\"),\r\n      assign = Object.assign,\r\n      REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\r\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\r\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\r\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\r\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\r\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\r\n      REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\"),\r\n      REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\r\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\r\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\r\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\r\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\r\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\r\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\r\n    Symbol.for(\"react.scope\");\r\n    var REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\");\r\n    Symbol.for(\"react.legacy_hidden\");\r\n    Symbol.for(\"react.tracing_marker\");\r\n    var REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\");\r\n    Symbol.for(\"react.view_transition\");\r\n    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator,\r\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\r\n      isArrayImpl = Array.isArray,\r\n      ReactSharedInternals =\r\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\r\n      ReactDOMSharedInternals =\r\n        ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\r\n      NotPending = Object.freeze({\r\n        pending: !1,\r\n        data: null,\r\n        method: null,\r\n        action: null\r\n      }),\r\n      valueStack = [];\r\n    var fiberStack = [];\r\n    var index$jscomp$0 = -1,\r\n      contextStackCursor = createCursor(null),\r\n      contextFiberStackCursor = createCursor(null),\r\n      rootInstanceStackCursor = createCursor(null),\r\n      hostTransitionProviderCursor = createCursor(null),\r\n      hasOwnProperty = Object.prototype.hasOwnProperty,\r\n      scheduleCallback$3 = Scheduler.unstable_scheduleCallback,\r\n      cancelCallback$1 = Scheduler.unstable_cancelCallback,\r\n      shouldYield = Scheduler.unstable_shouldYield,\r\n      requestPaint = Scheduler.unstable_requestPaint,\r\n      now$1 = Scheduler.unstable_now,\r\n      getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,\r\n      ImmediatePriority = Scheduler.unstable_ImmediatePriority,\r\n      UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,\r\n      NormalPriority$1 = Scheduler.unstable_NormalPriority,\r\n      LowPriority = Scheduler.unstable_LowPriority,\r\n      IdlePriority = Scheduler.unstable_IdlePriority,\r\n      log$1 = Scheduler.log,\r\n      unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue,\r\n      rendererID = null,\r\n      injectedHook = null,\r\n      injectedProfilingHooks = null,\r\n      hasLoggedError = !1,\r\n      isDevToolsPresent = \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__,\r\n      clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,\r\n      log = Math.log,\r\n      LN2 = Math.LN2,\r\n      nextTransitionLane = 256,\r\n      nextRetryLane = 4194304,\r\n      DiscreteEventPriority = 2,\r\n      ContinuousEventPriority = 8,\r\n      DefaultEventPriority = 32,\r\n      IdleEventPriority = 268435456,\r\n      randomKey = Math.random().toString(36).slice(2),\r\n      internalInstanceKey = \"__reactFiber$\" + randomKey,\r\n      internalPropsKey = \"__reactProps$\" + randomKey,\r\n      internalContainerInstanceKey = \"__reactContainer$\" + randomKey,\r\n      internalEventHandlersKey = \"__reactEvents$\" + randomKey,\r\n      internalEventHandlerListenersKey = \"__reactListeners$\" + randomKey,\r\n      internalEventHandlesSetKey = \"__reactHandles$\" + randomKey,\r\n      internalRootNodeResourcesKey = \"__reactResources$\" + randomKey,\r\n      internalHoistableMarker = \"__reactMarker$\" + randomKey,\r\n      allNativeEvents = new Set(),\r\n      registrationNameDependencies = {},\r\n      possibleRegistrationNames = {},\r\n      hasReadOnlyValue = {\r\n        button: !0,\r\n        checkbox: !0,\r\n        image: !0,\r\n        hidden: !0,\r\n        radio: !0,\r\n        reset: !0,\r\n        submit: !0\r\n      },\r\n      VALID_ATTRIBUTE_NAME_REGEX = RegExp(\r\n        \"^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\r\n      ),\r\n      illegalAttributeNameCache = {},\r\n      validatedAttributeNameCache = {},\r\n      disabledDepth = 0,\r\n      prevLog,\r\n      prevInfo,\r\n      prevWarn,\r\n      prevError,\r\n      prevGroup,\r\n      prevGroupCollapsed,\r\n      prevGroupEnd;\r\n    disabledLog.__reactDisabledLog = !0;\r\n    var prefix,\r\n      suffix,\r\n      reentry = !1;\r\n    var componentFrameCache = new (\r\n      \"function\" === typeof WeakMap ? WeakMap : Map\r\n    )();\r\n    var current = null,\r\n      isRendering = !1,\r\n      escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\\n\"\\\\]/g,\r\n      didWarnValueDefaultValue$1 = !1,\r\n      didWarnCheckedDefaultChecked = !1,\r\n      didWarnSelectedSetOnOption = !1,\r\n      didWarnInvalidChild = !1,\r\n      didWarnInvalidInnerHTML = !1;\r\n    var didWarnValueDefaultValue = !1;\r\n    var valuePropNames = [\"value\", \"defaultValue\"],\r\n      didWarnValDefaultVal = !1,\r\n      needsEscaping = /[\"'&<>\\n\\t]|^\\s|\\s$/,\r\n      specialTags =\r\n        \"address applet area article aside base basefont bgsound blockquote body br button caption center col colgroup dd details dir div dl dt embed fieldset figcaption figure footer form frame frameset h1 h2 h3 h4 h5 h6 head header hgroup hr html iframe img input isindex li link listing main marquee menu menuitem meta nav noembed noframes noscript object ol p param plaintext pre script section select source style summary table tbody td template textarea tfoot th thead title tr track ul wbr xmp\".split(\r\n          \" \"\r\n        ),\r\n      inScopeTags =\r\n        \"applet caption html table td th marquee object template foreignObject desc title\".split(\r\n          \" \"\r\n        ),\r\n      buttonScopeTags = inScopeTags.concat([\"button\"]),\r\n      impliedEndTags = \"dd dt li option optgroup p rp rt\".split(\" \"),\r\n      emptyAncestorInfoDev = {\r\n        current: null,\r\n        formTag: null,\r\n        aTagInScope: null,\r\n        buttonTagInScope: null,\r\n        nobrTagInScope: null,\r\n        pTagInButtonScope: null,\r\n        listItemTagAutoclosing: null,\r\n        dlItemTagAutoclosing: null,\r\n        containerTagInScope: null,\r\n        implicitRootScope: !1\r\n      },\r\n      didWarn = {},\r\n      shorthandToLonghand = {\r\n        animation:\r\n          \"animationDelay animationDirection animationDuration animationFillMode animationIterationCount animationName animationPlayState animationTimingFunction\".split(\r\n            \" \"\r\n          ),\r\n        background:\r\n          \"backgroundAttachment backgroundClip backgroundColor backgroundImage backgroundOrigin backgroundPositionX backgroundPositionY backgroundRepeat backgroundSize\".split(\r\n            \" \"\r\n          ),\r\n        backgroundPosition: [\"backgroundPositionX\", \"backgroundPositionY\"],\r\n        border:\r\n          \"borderBottomColor borderBottomStyle borderBottomWidth borderImageOutset borderImageRepeat borderImageSlice borderImageSource borderImageWidth borderLeftColor borderLeftStyle borderLeftWidth borderRightColor borderRightStyle borderRightWidth borderTopColor borderTopStyle borderTopWidth\".split(\r\n            \" \"\r\n          ),\r\n        borderBlockEnd: [\r\n          \"borderBlockEndColor\",\r\n          \"borderBlockEndStyle\",\r\n          \"borderBlockEndWidth\"\r\n        ],\r\n        borderBlockStart: [\r\n          \"borderBlockStartColor\",\r\n          \"borderBlockStartStyle\",\r\n          \"borderBlockStartWidth\"\r\n        ],\r\n        borderBottom: [\r\n          \"borderBottomColor\",\r\n          \"borderBottomStyle\",\r\n          \"borderBottomWidth\"\r\n        ],\r\n        borderColor: [\r\n          \"borderBottomColor\",\r\n          \"borderLeftColor\",\r\n          \"borderRightColor\",\r\n          \"borderTopColor\"\r\n        ],\r\n        borderImage: [\r\n          \"borderImageOutset\",\r\n          \"borderImageRepeat\",\r\n          \"borderImageSlice\",\r\n          \"borderImageSource\",\r\n          \"borderImageWidth\"\r\n        ],\r\n        borderInlineEnd: [\r\n          \"borderInlineEndColor\",\r\n          \"borderInlineEndStyle\",\r\n          \"borderInlineEndWidth\"\r\n        ],\r\n        borderInlineStart: [\r\n          \"borderInlineStartColor\",\r\n          \"borderInlineStartStyle\",\r\n          \"borderInlineStartWidth\"\r\n        ],\r\n        borderLeft: [\"borderLeftColor\", \"borderLeftStyle\", \"borderLeftWidth\"],\r\n        borderRadius: [\r\n          \"borderBottomLeftRadius\",\r\n          \"borderBottomRightRadius\",\r\n          \"borderTopLeftRadius\",\r\n          \"borderTopRightRadius\"\r\n        ],\r\n        borderRight: [\r\n          \"borderRightColor\",\r\n          \"borderRightStyle\",\r\n          \"borderRightWidth\"\r\n        ],\r\n        borderStyle: [\r\n          \"borderBottomStyle\",\r\n          \"borderLeftStyle\",\r\n          \"borderRightStyle\",\r\n          \"borderTopStyle\"\r\n        ],\r\n        borderTop: [\"borderTopColor\", \"borderTopStyle\", \"borderTopWidth\"],\r\n        borderWidth: [\r\n          \"borderBottomWidth\",\r\n          \"borderLeftWidth\",\r\n          \"borderRightWidth\",\r\n          \"borderTopWidth\"\r\n        ],\r\n        columnRule: [\"columnRuleColor\", \"columnRuleStyle\", \"columnRuleWidth\"],\r\n        columns: [\"columnCount\", \"columnWidth\"],\r\n        flex: [\"flexBasis\", \"flexGrow\", \"flexShrink\"],\r\n        flexFlow: [\"flexDirection\", \"flexWrap\"],\r\n        font: \"fontFamily fontFeatureSettings fontKerning fontLanguageOverride fontSize fontSizeAdjust fontStretch fontStyle fontVariant fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition fontWeight lineHeight\".split(\r\n          \" \"\r\n        ),\r\n        fontVariant:\r\n          \"fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition\".split(\r\n            \" \"\r\n          ),\r\n        gap: [\"columnGap\", \"rowGap\"],\r\n        grid: \"gridAutoColumns gridAutoFlow gridAutoRows gridTemplateAreas gridTemplateColumns gridTemplateRows\".split(\r\n          \" \"\r\n        ),\r\n        gridArea: [\r\n          \"gridColumnEnd\",\r\n          \"gridColumnStart\",\r\n          \"gridRowEnd\",\r\n          \"gridRowStart\"\r\n        ],\r\n        gridColumn: [\"gridColumnEnd\", \"gridColumnStart\"],\r\n        gridColumnGap: [\"columnGap\"],\r\n        gridGap: [\"columnGap\", \"rowGap\"],\r\n        gridRow: [\"gridRowEnd\", \"gridRowStart\"],\r\n        gridRowGap: [\"rowGap\"],\r\n        gridTemplate: [\r\n          \"gridTemplateAreas\",\r\n          \"gridTemplateColumns\",\r\n          \"gridTemplateRows\"\r\n        ],\r\n        listStyle: [\"listStyleImage\", \"listStylePosition\", \"listStyleType\"],\r\n        margin: [\"marginBottom\", \"marginLeft\", \"marginRight\", \"marginTop\"],\r\n        marker: [\"markerEnd\", \"markerMid\", \"markerStart\"],\r\n        mask: \"maskClip maskComposite maskImage maskMode maskOrigin maskPositionX maskPositionY maskRepeat maskSize\".split(\r\n          \" \"\r\n        ),\r\n        maskPosition: [\"maskPositionX\", \"maskPositionY\"],\r\n        outline: [\"outlineColor\", \"outlineStyle\", \"outlineWidth\"],\r\n        overflow: [\"overflowX\", \"overflowY\"],\r\n        padding: [\"paddingBottom\", \"paddingLeft\", \"paddingRight\", \"paddingTop\"],\r\n        placeContent: [\"alignContent\", \"justifyContent\"],\r\n        placeItems: [\"alignItems\", \"justifyItems\"],\r\n        placeSelf: [\"alignSelf\", \"justifySelf\"],\r\n        textDecoration: [\r\n          \"textDecorationColor\",\r\n          \"textDecorationLine\",\r\n          \"textDecorationStyle\"\r\n        ],\r\n        textEmphasis: [\"textEmphasisColor\", \"textEmphasisStyle\"],\r\n        transition: [\r\n          \"transitionDelay\",\r\n          \"transitionDuration\",\r\n          \"transitionProperty\",\r\n          \"transitionTimingFunction\"\r\n        ],\r\n        wordWrap: [\"overflowWrap\"]\r\n      },\r\n      uppercasePattern = /([A-Z])/g,\r\n      msPattern$1 = /^ms-/,\r\n      badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/,\r\n      msPattern = /^-ms-/,\r\n      hyphenPattern = /-(.)/g,\r\n      badStyleValueWithSemicolonPattern = /;\\s*$/,\r\n      warnedStyleNames = {},\r\n      warnedStyleValues = {},\r\n      warnedForNaNValue = !1,\r\n      warnedForInfinityValue = !1,\r\n      unitlessNumbers = new Set(\r\n        \"animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp\".split(\r\n          \" \"\r\n        )\r\n      ),\r\n      MATH_NAMESPACE = \"http://www.w3.org/1998/Math/MathML\",\r\n      SVG_NAMESPACE = \"http://www.w3.org/2000/svg\",\r\n      aliases = new Map([\r\n        [\"acceptCharset\", \"accept-charset\"],\r\n        [\"htmlFor\", \"for\"],\r\n        [\"httpEquiv\", \"http-equiv\"],\r\n        [\"crossOrigin\", \"crossorigin\"],\r\n        [\"accentHeight\", \"accent-height\"],\r\n        [\"alignmentBaseline\", \"alignment-baseline\"],\r\n        [\"arabicForm\", \"arabic-form\"],\r\n        [\"baselineShift\", \"baseline-shift\"],\r\n        [\"capHeight\", \"cap-height\"],\r\n        [\"clipPath\", \"clip-path\"],\r\n        [\"clipRule\", \"clip-rule\"],\r\n        [\"colorInterpolation\", \"color-interpolation\"],\r\n        [\"colorInterpolationFilters\", \"color-interpolation-filters\"],\r\n        [\"colorProfile\", \"color-profile\"],\r\n        [\"colorRendering\", \"color-rendering\"],\r\n        [\"dominantBaseline\", \"dominant-baseline\"],\r\n        [\"enableBackground\", \"enable-background\"],\r\n        [\"fillOpacity\", \"fill-opacity\"],\r\n        [\"fillRule\", \"fill-rule\"],\r\n        [\"floodColor\", \"flood-color\"],\r\n        [\"floodOpacity\", \"flood-opacity\"],\r\n        [\"fontFamily\", \"font-family\"],\r\n        [\"fontSize\", \"font-size\"],\r\n        [\"fontSizeAdjust\", \"font-size-adjust\"],\r\n        [\"fontStretch\", \"font-stretch\"],\r\n        [\"fontStyle\", \"font-style\"],\r\n        [\"fontVariant\", \"font-variant\"],\r\n        [\"fontWeight\", \"font-weight\"],\r\n        [\"glyphName\", \"glyph-name\"],\r\n        [\"glyphOrientationHorizontal\", \"glyph-orientation-horizontal\"],\r\n        [\"glyphOrientationVertical\", \"glyph-orientation-vertical\"],\r\n        [\"horizAdvX\", \"horiz-adv-x\"],\r\n        [\"horizOriginX\", \"horiz-origin-x\"],\r\n        [\"imageRendering\", \"image-rendering\"],\r\n        [\"letterSpacing\", \"letter-spacing\"],\r\n        [\"lightingColor\", \"lighting-color\"],\r\n        [\"markerEnd\", \"marker-end\"],\r\n        [\"markerMid\", \"marker-mid\"],\r\n        [\"markerStart\", \"marker-start\"],\r\n        [\"overlinePosition\", \"overline-position\"],\r\n        [\"overlineThickness\", \"overline-thickness\"],\r\n        [\"paintOrder\", \"paint-order\"],\r\n        [\"panose-1\", \"panose-1\"],\r\n        [\"pointerEvents\", \"pointer-events\"],\r\n        [\"renderingIntent\", \"rendering-intent\"],\r\n        [\"shapeRendering\", \"shape-rendering\"],\r\n        [\"stopColor\", \"stop-color\"],\r\n        [\"stopOpacity\", \"stop-opacity\"],\r\n        [\"strikethroughPosition\", \"strikethrough-position\"],\r\n        [\"strikethroughThickness\", \"strikethrough-thickness\"],\r\n        [\"strokeDasharray\", \"stroke-dasharray\"],\r\n        [\"strokeDashoffset\", \"stroke-dashoffset\"],\r\n        [\"strokeLinecap\", \"stroke-linecap\"],\r\n        [\"strokeLinejoin\", \"stroke-linejoin\"],\r\n        [\"strokeMiterlimit\", \"stroke-miterlimit\"],\r\n        [\"strokeOpacity\", \"stroke-opacity\"],\r\n        [\"strokeWidth\", \"stroke-width\"],\r\n        [\"textAnchor\", \"text-anchor\"],\r\n        [\"textDecoration\", \"text-decoration\"],\r\n        [\"textRendering\", \"text-rendering\"],\r\n        [\"transformOrigin\", \"transform-origin\"],\r\n        [\"underlinePosition\", \"underline-position\"],\r\n        [\"underlineThickness\", \"underline-thickness\"],\r\n        [\"unicodeBidi\", \"unicode-bidi\"],\r\n        [\"unicodeRange\", \"unicode-range\"],\r\n        [\"unitsPerEm\", \"units-per-em\"],\r\n        [\"vAlphabetic\", \"v-alphabetic\"],\r\n        [\"vHanging\", \"v-hanging\"],\r\n        [\"vIdeographic\", \"v-ideographic\"],\r\n        [\"vMathematical\", \"v-mathematical\"],\r\n        [\"vectorEffect\", \"vector-effect\"],\r\n        [\"vertAdvY\", \"vert-adv-y\"],\r\n        [\"vertOriginX\", \"vert-origin-x\"],\r\n        [\"vertOriginY\", \"vert-origin-y\"],\r\n        [\"wordSpacing\", \"word-spacing\"],\r\n        [\"writingMode\", \"writing-mode\"],\r\n        [\"xmlnsXlink\", \"xmlns:xlink\"],\r\n        [\"xHeight\", \"x-height\"]\r\n      ]),\r\n      possibleStandardNames = {\r\n        accept: \"accept\",\r\n        acceptcharset: \"acceptCharset\",\r\n        \"accept-charset\": \"acceptCharset\",\r\n        accesskey: \"accessKey\",\r\n        action: \"action\",\r\n        allowfullscreen: \"allowFullScreen\",\r\n        alt: \"alt\",\r\n        as: \"as\",\r\n        async: \"async\",\r\n        autocapitalize: \"autoCapitalize\",\r\n        autocomplete: \"autoComplete\",\r\n        autocorrect: \"autoCorrect\",\r\n        autofocus: \"autoFocus\",\r\n        autoplay: \"autoPlay\",\r\n        autosave: \"autoSave\",\r\n        capture: \"capture\",\r\n        cellpadding: \"cellPadding\",\r\n        cellspacing: \"cellSpacing\",\r\n        challenge: \"challenge\",\r\n        charset: \"charSet\",\r\n        checked: \"checked\",\r\n        children: \"children\",\r\n        cite: \"cite\",\r\n        class: \"className\",\r\n        classid: \"classID\",\r\n        classname: \"className\",\r\n        cols: \"cols\",\r\n        colspan: \"colSpan\",\r\n        content: \"content\",\r\n        contenteditable: \"contentEditable\",\r\n        contextmenu: \"contextMenu\",\r\n        controls: \"controls\",\r\n        controlslist: \"controlsList\",\r\n        coords: \"coords\",\r\n        crossorigin: \"crossOrigin\",\r\n        dangerouslysetinnerhtml: \"dangerouslySetInnerHTML\",\r\n        data: \"data\",\r\n        datetime: \"dateTime\",\r\n        default: \"default\",\r\n        defaultchecked: \"defaultChecked\",\r\n        defaultvalue: \"defaultValue\",\r\n        defer: \"defer\",\r\n        dir: \"dir\",\r\n        disabled: \"disabled\",\r\n        disablepictureinpicture: \"disablePictureInPicture\",\r\n        disableremoteplayback: \"disableRemotePlayback\",\r\n        download: \"download\",\r\n        draggable: \"draggable\",\r\n        enctype: \"encType\",\r\n        enterkeyhint: \"enterKeyHint\",\r\n        fetchpriority: \"fetchPriority\",\r\n        for: \"htmlFor\",\r\n        form: \"form\",\r\n        formmethod: \"formMethod\",\r\n        formaction: \"formAction\",\r\n        formenctype: \"formEncType\",\r\n        formnovalidate: \"formNoValidate\",\r\n        formtarget: \"formTarget\",\r\n        frameborder: \"frameBorder\",\r\n        headers: \"headers\",\r\n        height: \"height\",\r\n        hidden: \"hidden\",\r\n        high: \"high\",\r\n        href: \"href\",\r\n        hreflang: \"hrefLang\",\r\n        htmlfor: \"htmlFor\",\r\n        httpequiv: \"httpEquiv\",\r\n        \"http-equiv\": \"httpEquiv\",\r\n        icon: \"icon\",\r\n        id: \"id\",\r\n        imagesizes: \"imageSizes\",\r\n        imagesrcset: \"imageSrcSet\",\r\n        inert: \"inert\",\r\n        innerhtml: \"innerHTML\",\r\n        inputmode: \"inputMode\",\r\n        integrity: \"integrity\",\r\n        is: \"is\",\r\n        itemid: \"itemID\",\r\n        itemprop: \"itemProp\",\r\n        itemref: \"itemRef\",\r\n        itemscope: \"itemScope\",\r\n        itemtype: \"itemType\",\r\n        keyparams: \"keyParams\",\r\n        keytype: \"keyType\",\r\n        kind: \"kind\",\r\n        label: \"label\",\r\n        lang: \"lang\",\r\n        list: \"list\",\r\n        loop: \"loop\",\r\n        low: \"low\",\r\n        manifest: \"manifest\",\r\n        marginwidth: \"marginWidth\",\r\n        marginheight: \"marginHeight\",\r\n        max: \"max\",\r\n        maxlength: \"maxLength\",\r\n        media: \"media\",\r\n        mediagroup: \"mediaGroup\",\r\n        method: \"method\",\r\n        min: \"min\",\r\n        minlength: \"minLength\",\r\n        multiple: \"multiple\",\r\n        muted: \"muted\",\r\n        name: \"name\",\r\n        nomodule: \"noModule\",\r\n        nonce: \"nonce\",\r\n        novalidate: \"noValidate\",\r\n        open: \"open\",\r\n        optimum: \"optimum\",\r\n        pattern: \"pattern\",\r\n        placeholder: \"placeholder\",\r\n        playsinline: \"playsInline\",\r\n        poster: \"poster\",\r\n        preload: \"preload\",\r\n        profile: \"profile\",\r\n        radiogroup: \"radioGroup\",\r\n        readonly: \"readOnly\",\r\n        referrerpolicy: \"referrerPolicy\",\r\n        rel: \"rel\",\r\n        required: \"required\",\r\n        reversed: \"reversed\",\r\n        role: \"role\",\r\n        rows: \"rows\",\r\n        rowspan: \"rowSpan\",\r\n        sandbox: \"sandbox\",\r\n        scope: \"scope\",\r\n        scoped: \"scoped\",\r\n        scrolling: \"scrolling\",\r\n        seamless: \"seamless\",\r\n        selected: \"selected\",\r\n        shape: \"shape\",\r\n        size: \"size\",\r\n        sizes: \"sizes\",\r\n        span: \"span\",\r\n        spellcheck: \"spellCheck\",\r\n        src: \"src\",\r\n        srcdoc: \"srcDoc\",\r\n        srclang: \"srcLang\",\r\n        srcset: \"srcSet\",\r\n        start: \"start\",\r\n        step: \"step\",\r\n        style: \"style\",\r\n        summary: \"summary\",\r\n        tabindex: \"tabIndex\",\r\n        target: \"target\",\r\n        title: \"title\",\r\n        type: \"type\",\r\n        usemap: \"useMap\",\r\n        value: \"value\",\r\n        width: \"width\",\r\n        wmode: \"wmode\",\r\n        wrap: \"wrap\",\r\n        about: \"about\",\r\n        accentheight: \"accentHeight\",\r\n        \"accent-height\": \"accentHeight\",\r\n        accumulate: \"accumulate\",\r\n        additive: \"additive\",\r\n        alignmentbaseline: \"alignmentBaseline\",\r\n        \"alignment-baseline\": \"alignmentBaseline\",\r\n        allowreorder: \"allowReorder\",\r\n        alphabetic: \"alphabetic\",\r\n        amplitude: \"amplitude\",\r\n        arabicform: \"arabicForm\",\r\n        \"arabic-form\": \"arabicForm\",\r\n        ascent: \"ascent\",\r\n        attributename: \"attributeName\",\r\n        attributetype: \"attributeType\",\r\n        autoreverse: \"autoReverse\",\r\n        azimuth: \"azimuth\",\r\n        basefrequency: \"baseFrequency\",\r\n        baselineshift: \"baselineShift\",\r\n        \"baseline-shift\": \"baselineShift\",\r\n        baseprofile: \"baseProfile\",\r\n        bbox: \"bbox\",\r\n        begin: \"begin\",\r\n        bias: \"bias\",\r\n        by: \"by\",\r\n        calcmode: \"calcMode\",\r\n        capheight: \"capHeight\",\r\n        \"cap-height\": \"capHeight\",\r\n        clip: \"clip\",\r\n        clippath: \"clipPath\",\r\n        \"clip-path\": \"clipPath\",\r\n        clippathunits: \"clipPathUnits\",\r\n        cliprule: \"clipRule\",\r\n        \"clip-rule\": \"clipRule\",\r\n        color: \"color\",\r\n        colorinterpolation: \"colorInterpolation\",\r\n        \"color-interpolation\": \"colorInterpolation\",\r\n        colorinterpolationfilters: \"colorInterpolationFilters\",\r\n        \"color-interpolation-filters\": \"colorInterpolationFilters\",\r\n        colorprofile: \"colorProfile\",\r\n        \"color-profile\": \"colorProfile\",\r\n        colorrendering: \"colorRendering\",\r\n        \"color-rendering\": \"colorRendering\",\r\n        contentscripttype: \"contentScriptType\",\r\n        contentstyletype: \"contentStyleType\",\r\n        cursor: \"cursor\",\r\n        cx: \"cx\",\r\n        cy: \"cy\",\r\n        d: \"d\",\r\n        datatype: \"datatype\",\r\n        decelerate: \"decelerate\",\r\n        descent: \"descent\",\r\n        diffuseconstant: \"diffuseConstant\",\r\n        direction: \"direction\",\r\n        display: \"display\",\r\n        divisor: \"divisor\",\r\n        dominantbaseline: \"dominantBaseline\",\r\n        \"dominant-baseline\": \"dominantBaseline\",\r\n        dur: \"dur\",\r\n        dx: \"dx\",\r\n        dy: \"dy\",\r\n        edgemode: \"edgeMode\",\r\n        elevation: \"elevation\",\r\n        enablebackground: \"enableBackground\",\r\n        \"enable-background\": \"enableBackground\",\r\n        end: \"end\",\r\n        exponent: \"exponent\",\r\n        externalresourcesrequired: \"externalResourcesRequired\",\r\n        fill: \"fill\",\r\n        fillopacity: \"fillOpacity\",\r\n        \"fill-opacity\": \"fillOpacity\",\r\n        fillrule: \"fillRule\",\r\n        \"fill-rule\": \"fillRule\",\r\n        filter: \"filter\",\r\n        filterres: \"filterRes\",\r\n        filterunits: \"filterUnits\",\r\n        floodopacity: \"floodOpacity\",\r\n        \"flood-opacity\": \"floodOpacity\",\r\n        floodcolor: \"floodColor\",\r\n        \"flood-color\": \"floodColor\",\r\n        focusable: \"focusable\",\r\n        fontfamily: \"fontFamily\",\r\n        \"font-family\": \"fontFamily\",\r\n        fontsize: \"fontSize\",\r\n        \"font-size\": \"fontSize\",\r\n        fontsizeadjust: \"fontSizeAdjust\",\r\n        \"font-size-adjust\": \"fontSizeAdjust\",\r\n        fontstretch: \"fontStretch\",\r\n        \"font-stretch\": \"fontStretch\",\r\n        fontstyle: \"fontStyle\",\r\n        \"font-style\": \"fontStyle\",\r\n        fontvariant: \"fontVariant\",\r\n        \"font-variant\": \"fontVariant\",\r\n        fontweight: \"fontWeight\",\r\n        \"font-weight\": \"fontWeight\",\r\n        format: \"format\",\r\n        from: \"from\",\r\n        fx: \"fx\",\r\n        fy: \"fy\",\r\n        g1: \"g1\",\r\n        g2: \"g2\",\r\n        glyphname: \"glyphName\",\r\n        \"glyph-name\": \"glyphName\",\r\n        glyphorientationhorizontal: \"glyphOrientationHorizontal\",\r\n        \"glyph-orientation-horizontal\": \"glyphOrientationHorizontal\",\r\n        glyphorientationvertical: \"glyphOrientationVertical\",\r\n        \"glyph-orientation-vertical\": \"glyphOrientationVertical\",\r\n        glyphref: \"glyphRef\",\r\n        gradienttransform: \"gradientTransform\",\r\n        gradientunits: \"gradientUnits\",\r\n        hanging: \"hanging\",\r\n        horizadvx: \"horizAdvX\",\r\n        \"horiz-adv-x\": \"horizAdvX\",\r\n        horizoriginx: \"horizOriginX\",\r\n        \"horiz-origin-x\": \"horizOriginX\",\r\n        ideographic: \"ideographic\",\r\n        imagerendering: \"imageRendering\",\r\n        \"image-rendering\": \"imageRendering\",\r\n        in2: \"in2\",\r\n        in: \"in\",\r\n        inlist: \"inlist\",\r\n        intercept: \"intercept\",\r\n        k1: \"k1\",\r\n        k2: \"k2\",\r\n        k3: \"k3\",\r\n        k4: \"k4\",\r\n        k: \"k\",\r\n        kernelmatrix: \"kernelMatrix\",\r\n        kernelunitlength: \"kernelUnitLength\",\r\n        kerning: \"kerning\",\r\n        keypoints: \"keyPoints\",\r\n        keysplines: \"keySplines\",\r\n        keytimes: \"keyTimes\",\r\n        lengthadjust: \"lengthAdjust\",\r\n        letterspacing: \"letterSpacing\",\r\n        \"letter-spacing\": \"letterSpacing\",\r\n        lightingcolor: \"lightingColor\",\r\n        \"lighting-color\": \"lightingColor\",\r\n        limitingconeangle: \"limitingConeAngle\",\r\n        local: \"local\",\r\n        markerend: \"markerEnd\",\r\n        \"marker-end\": \"markerEnd\",\r\n        markerheight: \"markerHeight\",\r\n        markermid: \"markerMid\",\r\n        \"marker-mid\": \"markerMid\",\r\n        markerstart: \"markerStart\",\r\n        \"marker-start\": \"markerStart\",\r\n        markerunits: \"markerUnits\",\r\n        markerwidth: \"markerWidth\",\r\n        mask: \"mask\",\r\n        maskcontentunits: \"maskContentUnits\",\r\n        maskunits: \"maskUnits\",\r\n        mathematical: \"mathematical\",\r\n        mode: \"mode\",\r\n        numoctaves: \"numOctaves\",\r\n        offset: \"offset\",\r\n        opacity: \"opacity\",\r\n        operator: \"operator\",\r\n        order: \"order\",\r\n        orient: \"orient\",\r\n        orientation: \"orientation\",\r\n        origin: \"origin\",\r\n        overflow: \"overflow\",\r\n        overlineposition: \"overlinePosition\",\r\n        \"overline-position\": \"overlinePosition\",\r\n        overlinethickness: \"overlineThickness\",\r\n        \"overline-thickness\": \"overlineThickness\",\r\n        paintorder: \"paintOrder\",\r\n        \"paint-order\": \"paintOrder\",\r\n        panose1: \"panose1\",\r\n        \"panose-1\": \"panose1\",\r\n        pathlength: \"pathLength\",\r\n        patterncontentunits: \"patternContentUnits\",\r\n        patterntransform: \"patternTransform\",\r\n        patternunits: \"patternUnits\",\r\n        pointerevents: \"pointerEvents\",\r\n        \"pointer-events\": \"pointerEvents\",\r\n        points: \"points\",\r\n        pointsatx: \"pointsAtX\",\r\n        pointsaty: \"pointsAtY\",\r\n        pointsatz: \"pointsAtZ\",\r\n        popover: \"popover\",\r\n        popovertarget: \"popoverTarget\",\r\n        popovertargetaction: \"popoverTargetAction\",\r\n        prefix: \"prefix\",\r\n        preservealpha: \"preserveAlpha\",\r\n        preserveaspectratio: \"preserveAspectRatio\",\r\n        primitiveunits: \"primitiveUnits\",\r\n        property: \"property\",\r\n        r: \"r\",\r\n        radius: \"radius\",\r\n        refx: \"refX\",\r\n        refy: \"refY\",\r\n        renderingintent: \"renderingIntent\",\r\n        \"rendering-intent\": \"renderingIntent\",\r\n        repeatcount: \"repeatCount\",\r\n        repeatdur: \"repeatDur\",\r\n        requiredextensions: \"requiredExtensions\",\r\n        requiredfeatures: \"requiredFeatures\",\r\n        resource: \"resource\",\r\n        restart: \"restart\",\r\n        result: \"result\",\r\n        results: \"results\",\r\n        rotate: \"rotate\",\r\n        rx: \"rx\",\r\n        ry: \"ry\",\r\n        scale: \"scale\",\r\n        security: \"security\",\r\n        seed: \"seed\",\r\n        shaperendering: \"shapeRendering\",\r\n        \"shape-rendering\": \"shapeRendering\",\r\n        slope: \"slope\",\r\n        spacing: \"spacing\",\r\n        specularconstant: \"specularConstant\",\r\n        specularexponent: \"specularExponent\",\r\n        speed: \"speed\",\r\n        spreadmethod: \"spreadMethod\",\r\n        startoffset: \"startOffset\",\r\n        stddeviation: \"stdDeviation\",\r\n        stemh: \"stemh\",\r\n        stemv: \"stemv\",\r\n        stitchtiles: \"stitchTiles\",\r\n        stopcolor: \"stopColor\",\r\n        \"stop-color\": \"stopColor\",\r\n        stopopacity: \"stopOpacity\",\r\n        \"stop-opacity\": \"stopOpacity\",\r\n        strikethroughposition: \"strikethroughPosition\",\r\n        \"strikethrough-position\": \"strikethroughPosition\",\r\n        strikethroughthickness: \"strikethroughThickness\",\r\n        \"strikethrough-thickness\": \"strikethroughThickness\",\r\n        string: \"string\",\r\n        stroke: \"stroke\",\r\n        strokedasharray: \"strokeDasharray\",\r\n        \"stroke-dasharray\": \"strokeDasharray\",\r\n        strokedashoffset: \"strokeDashoffset\",\r\n        \"stroke-dashoffset\": \"strokeDashoffset\",\r\n        strokelinecap: \"strokeLinecap\",\r\n        \"stroke-linecap\": \"strokeLinecap\",\r\n        strokelinejoin: \"strokeLinejoin\",\r\n        \"stroke-linejoin\": \"strokeLinejoin\",\r\n        strokemiterlimit: \"strokeMiterlimit\",\r\n        \"stroke-miterlimit\": \"strokeMiterlimit\",\r\n        strokewidth: \"strokeWidth\",\r\n        \"stroke-width\": \"strokeWidth\",\r\n        strokeopacity: \"strokeOpacity\",\r\n        \"stroke-opacity\": \"strokeOpacity\",\r\n        suppresscontenteditablewarning: \"suppressContentEditableWarning\",\r\n        suppresshydrationwarning: \"suppressHydrationWarning\",\r\n        surfacescale: \"surfaceScale\",\r\n        systemlanguage: \"systemLanguage\",\r\n        tablevalues: \"tableValues\",\r\n        targetx: \"targetX\",\r\n        targety: \"targetY\",\r\n        textanchor: \"textAnchor\",\r\n        \"text-anchor\": \"textAnchor\",\r\n        textdecoration: \"textDecoration\",\r\n        \"text-decoration\": \"textDecoration\",\r\n        textlength: \"textLength\",\r\n        textrendering: \"textRendering\",\r\n        \"text-rendering\": \"textRendering\",\r\n        to: \"to\",\r\n        transform: \"transform\",\r\n        transformorigin: \"transformOrigin\",\r\n        \"transform-origin\": \"transformOrigin\",\r\n        typeof: \"typeof\",\r\n        u1: \"u1\",\r\n        u2: \"u2\",\r\n        underlineposition: \"underlinePosition\",\r\n        \"underline-position\": \"underlinePosition\",\r\n        underlinethickness: \"underlineThickness\",\r\n        \"underline-thickness\": \"underlineThickness\",\r\n        unicode: \"unicode\",\r\n        unicodebidi: \"unicodeBidi\",\r\n        \"unicode-bidi\": \"unicodeBidi\",\r\n        unicoderange: \"unicodeRange\",\r\n        \"unicode-range\": \"unicodeRange\",\r\n        unitsperem: \"unitsPerEm\",\r\n        \"units-per-em\": \"unitsPerEm\",\r\n        unselectable: \"unselectable\",\r\n        valphabetic: \"vAlphabetic\",\r\n        \"v-alphabetic\": \"vAlphabetic\",\r\n        values: \"values\",\r\n        vectoreffect: \"vectorEffect\",\r\n        \"vector-effect\": \"vectorEffect\",\r\n        version: \"version\",\r\n        vertadvy: \"vertAdvY\",\r\n        \"vert-adv-y\": \"vertAdvY\",\r\n        vertoriginx: \"vertOriginX\",\r\n        \"vert-origin-x\": \"vertOriginX\",\r\n        vertoriginy: \"vertOriginY\",\r\n        \"vert-origin-y\": \"vertOriginY\",\r\n        vhanging: \"vHanging\",\r\n        \"v-hanging\": \"vHanging\",\r\n        videographic: \"vIdeographic\",\r\n        \"v-ideographic\": \"vIdeographic\",\r\n        viewbox: \"viewBox\",\r\n        viewtarget: \"viewTarget\",\r\n        visibility: \"visibility\",\r\n        vmathematical: \"vMathematical\",\r\n        \"v-mathematical\": \"vMathematical\",\r\n        vocab: \"vocab\",\r\n        widths: \"widths\",\r\n        wordspacing: \"wordSpacing\",\r\n        \"word-spacing\": \"wordSpacing\",\r\n        writingmode: \"writingMode\",\r\n        \"writing-mode\": \"writingMode\",\r\n        x1: \"x1\",\r\n        x2: \"x2\",\r\n        x: \"x\",\r\n        xchannelselector: \"xChannelSelector\",\r\n        xheight: \"xHeight\",\r\n        \"x-height\": \"xHeight\",\r\n        xlinkactuate: \"xlinkActuate\",\r\n        \"xlink:actuate\": \"xlinkActuate\",\r\n        xlinkarcrole: \"xlinkArcrole\",\r\n        \"xlink:arcrole\": \"xlinkArcrole\",\r\n        xlinkhref: \"xlinkHref\",\r\n        \"xlink:href\": \"xlinkHref\",\r\n        xlinkrole: \"xlinkRole\",\r\n        \"xlink:role\": \"xlinkRole\",\r\n        xlinkshow: \"xlinkShow\",\r\n        \"xlink:show\": \"xlinkShow\",\r\n        xlinktitle: \"xlinkTitle\",\r\n        \"xlink:title\": \"xlinkTitle\",\r\n        xlinktype: \"xlinkType\",\r\n        \"xlink:type\": \"xlinkType\",\r\n        xmlbase: \"xmlBase\",\r\n        \"xml:base\": \"xmlBase\",\r\n        xmllang: \"xmlLang\",\r\n        \"xml:lang\": \"xmlLang\",\r\n        xmlns: \"xmlns\",\r\n        \"xml:space\": \"xmlSpace\",\r\n        xmlnsxlink: \"xmlnsXlink\",\r\n        \"xmlns:xlink\": \"xmlnsXlink\",\r\n        xmlspace: \"xmlSpace\",\r\n        y1: \"y1\",\r\n        y2: \"y2\",\r\n        y: \"y\",\r\n        ychannelselector: \"yChannelSelector\",\r\n        z: \"z\",\r\n        zoomandpan: \"zoomAndPan\"\r\n      },\r\n      ariaProperties = {\r\n        \"aria-current\": 0,\r\n        \"aria-description\": 0,\r\n        \"aria-details\": 0,\r\n        \"aria-disabled\": 0,\r\n        \"aria-hidden\": 0,\r\n        \"aria-invalid\": 0,\r\n        \"aria-keyshortcuts\": 0,\r\n        \"aria-label\": 0,\r\n        \"aria-roledescription\": 0,\r\n        \"aria-autocomplete\": 0,\r\n        \"aria-checked\": 0,\r\n        \"aria-expanded\": 0,\r\n        \"aria-haspopup\": 0,\r\n        \"aria-level\": 0,\r\n        \"aria-modal\": 0,\r\n        \"aria-multiline\": 0,\r\n        \"aria-multiselectable\": 0,\r\n        \"aria-orientation\": 0,\r\n        \"aria-placeholder\": 0,\r\n        \"aria-pressed\": 0,\r\n        \"aria-readonly\": 0,\r\n        \"aria-required\": 0,\r\n        \"aria-selected\": 0,\r\n        \"aria-sort\": 0,\r\n        \"aria-valuemax\": 0,\r\n        \"aria-valuemin\": 0,\r\n        \"aria-valuenow\": 0,\r\n        \"aria-valuetext\": 0,\r\n        \"aria-atomic\": 0,\r\n        \"aria-busy\": 0,\r\n        \"aria-live\": 0,\r\n        \"aria-relevant\": 0,\r\n        \"aria-dropeffect\": 0,\r\n        \"aria-grabbed\": 0,\r\n        \"aria-activedescendant\": 0,\r\n        \"aria-colcount\": 0,\r\n        \"aria-colindex\": 0,\r\n        \"aria-colspan\": 0,\r\n        \"aria-controls\": 0,\r\n        \"aria-describedby\": 0,\r\n        \"aria-errormessage\": 0,\r\n        \"aria-flowto\": 0,\r\n        \"aria-labelledby\": 0,\r\n        \"aria-owns\": 0,\r\n        \"aria-posinset\": 0,\r\n        \"aria-rowcount\": 0,\r\n        \"aria-rowindex\": 0,\r\n        \"aria-rowspan\": 0,\r\n        \"aria-setsize\": 0\r\n      },\r\n      warnedProperties$1 = {},\r\n      rARIA$1 = RegExp(\r\n        \"^(aria)-[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\r\n      ),\r\n      rARIACamel$1 = RegExp(\r\n        \"^(aria)[A-Z][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\r\n      ),\r\n      didWarnValueNull = !1,\r\n      warnedProperties = {},\r\n      EVENT_NAME_REGEX = /^on./,\r\n      INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/,\r\n      rARIA = RegExp(\r\n        \"^(aria)-[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\r\n      ),\r\n      rARIACamel = RegExp(\r\n        \"^(aria)[A-Z][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\r\n      ),\r\n      isJavaScriptProtocol =\r\n        /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i,\r\n      currentReplayingEvent = null,\r\n      restoreTarget = null,\r\n      restoreQueue = null,\r\n      isInsideEventHandler = !1,\r\n      canUseDOM = !(\r\n        \"undefined\" === typeof window ||\r\n        \"undefined\" === typeof window.document ||\r\n        \"undefined\" === typeof window.document.createElement\r\n      ),\r\n      passiveBrowserEventsSupported = !1;\r\n    if (canUseDOM)\r\n      try {\r\n        var options$jscomp$0 = {};\r\n        Object.defineProperty(options$jscomp$0, \"passive\", {\r\n          get: function () {\r\n            passiveBrowserEventsSupported = !0;\r\n          }\r\n        });\r\n        window.addEventListener(\"test\", options$jscomp$0, options$jscomp$0);\r\n        window.removeEventListener(\"test\", options$jscomp$0, options$jscomp$0);\r\n      } catch (e) {\r\n        passiveBrowserEventsSupported = !1;\r\n      }\r\n    var root = null,\r\n      startText = null,\r\n      fallbackText = null,\r\n      EventInterface = {\r\n        eventPhase: 0,\r\n        bubbles: 0,\r\n        cancelable: 0,\r\n        timeStamp: function (event) {\r\n          return event.timeStamp || Date.now();\r\n        },\r\n        defaultPrevented: 0,\r\n        isTrusted: 0\r\n      },\r\n      SyntheticEvent = createSyntheticEvent(EventInterface),\r\n      UIEventInterface = assign({}, EventInterface, { view: 0, detail: 0 }),\r\n      SyntheticUIEvent = createSyntheticEvent(UIEventInterface),\r\n      lastMovementX,\r\n      lastMovementY,\r\n      lastMouseEvent,\r\n      MouseEventInterface = assign({}, UIEventInterface, {\r\n        screenX: 0,\r\n        screenY: 0,\r\n        clientX: 0,\r\n        clientY: 0,\r\n        pageX: 0,\r\n        pageY: 0,\r\n        ctrlKey: 0,\r\n        shiftKey: 0,\r\n        altKey: 0,\r\n        metaKey: 0,\r\n        getModifierState: getEventModifierState,\r\n        button: 0,\r\n        buttons: 0,\r\n        relatedTarget: function (event) {\r\n          return void 0 === event.relatedTarget\r\n            ? event.fromElement === event.srcElement\r\n              ? event.toElement\r\n              : event.fromElement\r\n            : event.relatedTarget;\r\n        },\r\n        movementX: function (event) {\r\n          if (\"movementX\" in event) return event.movementX;\r\n          event !== lastMouseEvent &&\r\n            (lastMouseEvent && \"mousemove\" === event.type\r\n              ? ((lastMovementX = event.screenX - lastMouseEvent.screenX),\r\n                (lastMovementY = event.screenY - lastMouseEvent.screenY))\r\n              : (lastMovementY = lastMovementX = 0),\r\n            (lastMouseEvent = event));\r\n          return lastMovementX;\r\n        },\r\n        movementY: function (event) {\r\n          return \"movementY\" in event ? event.movementY : lastMovementY;\r\n        }\r\n      }),\r\n      SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface),\r\n      DragEventInterface = assign({}, MouseEventInterface, { dataTransfer: 0 }),\r\n      SyntheticDragEvent = createSyntheticEvent(DragEventInterface),\r\n      FocusEventInterface = assign({}, UIEventInterface, { relatedTarget: 0 }),\r\n      SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface),\r\n      AnimationEventInterface = assign({}, EventInterface, {\r\n        animationName: 0,\r\n        elapsedTime: 0,\r\n        pseudoElement: 0\r\n      }),\r\n      SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface),\r\n      ClipboardEventInterface = assign({}, EventInterface, {\r\n        clipboardData: function (event) {\r\n          return \"clipboardData\" in event\r\n            ? event.clipboardData\r\n            : window.clipboardData;\r\n        }\r\n      }),\r\n      SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface),\r\n      CompositionEventInterface = assign({}, EventInterface, { data: 0 }),\r\n      SyntheticCompositionEvent = createSyntheticEvent(\r\n        CompositionEventInterface\r\n      ),\r\n      SyntheticInputEvent = SyntheticCompositionEvent,\r\n      normalizeKey = {\r\n        Esc: \"Escape\",\r\n        Spacebar: \" \",\r\n        Left: \"ArrowLeft\",\r\n        Up: \"ArrowUp\",\r\n        Right: \"ArrowRight\",\r\n        Down: \"ArrowDown\",\r\n        Del: \"Delete\",\r\n        Win: \"OS\",\r\n        Menu: \"ContextMenu\",\r\n        Apps: \"ContextMenu\",\r\n        Scroll: \"ScrollLock\",\r\n        MozPrintableKey: \"Unidentified\"\r\n      },\r\n      translateToKey = {\r\n        8: \"Backspace\",\r\n        9: \"Tab\",\r\n        12: \"Clear\",\r\n        13: \"Enter\",\r\n        16: \"Shift\",\r\n        17: \"Control\",\r\n        18: \"Alt\",\r\n        19: \"Pause\",\r\n        20: \"CapsLock\",\r\n        27: \"Escape\",\r\n        32: \" \",\r\n        33: \"PageUp\",\r\n        34: \"PageDown\",\r\n        35: \"End\",\r\n        36: \"Home\",\r\n        37: \"ArrowLeft\",\r\n        38: \"ArrowUp\",\r\n        39: \"ArrowRight\",\r\n        40: \"ArrowDown\",\r\n        45: \"Insert\",\r\n        46: \"Delete\",\r\n        112: \"F1\",\r\n        113: \"F2\",\r\n        114: \"F3\",\r\n        115: \"F4\",\r\n        116: \"F5\",\r\n        117: \"F6\",\r\n        118: \"F7\",\r\n        119: \"F8\",\r\n        120: \"F9\",\r\n        121: \"F10\",\r\n        122: \"F11\",\r\n        123: \"F12\",\r\n        144: \"NumLock\",\r\n        145: \"ScrollLock\",\r\n        224: \"Meta\"\r\n      },\r\n      modifierKeyToProp = {\r\n        Alt: \"altKey\",\r\n        Control: \"ctrlKey\",\r\n        Meta: \"metaKey\",\r\n        Shift: \"shiftKey\"\r\n      },\r\n      KeyboardEventInterface = assign({}, UIEventInterface, {\r\n        key: function (nativeEvent) {\r\n          if (nativeEvent.key) {\r\n            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\r\n            if (\"Unidentified\" !== key) return key;\r\n          }\r\n          return \"keypress\" === nativeEvent.type\r\n            ? ((nativeEvent = getEventCharCode(nativeEvent)),\r\n              13 === nativeEvent ? \"Enter\" : String.fromCharCode(nativeEvent))\r\n            : \"keydown\" === nativeEvent.type || \"keyup\" === nativeEvent.type\r\n              ? translateToKey[nativeEvent.keyCode] || \"Unidentified\"\r\n              : \"\";\r\n        },\r\n        code: 0,\r\n        location: 0,\r\n        ctrlKey: 0,\r\n        shiftKey: 0,\r\n        altKey: 0,\r\n        metaKey: 0,\r\n        repeat: 0,\r\n        locale: 0,\r\n        getModifierState: getEventModifierState,\r\n        charCode: function (event) {\r\n          return \"keypress\" === event.type ? getEventCharCode(event) : 0;\r\n        },\r\n        keyCode: function (event) {\r\n          return \"keydown\" === event.type || \"keyup\" === event.type\r\n            ? event.keyCode\r\n            : 0;\r\n        },\r\n        which: function (event) {\r\n          return \"keypress\" === event.type\r\n            ? getEventCharCode(event)\r\n            : \"keydown\" === event.type || \"keyup\" === event.type\r\n              ? event.keyCode\r\n              : 0;\r\n        }\r\n      }),\r\n      SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface),\r\n      PointerEventInterface = assign({}, MouseEventInterface, {\r\n        pointerId: 0,\r\n        width: 0,\r\n        height: 0,\r\n        pressure: 0,\r\n        tangentialPressure: 0,\r\n        tiltX: 0,\r\n        tiltY: 0,\r\n        twist: 0,\r\n        pointerType: 0,\r\n        isPrimary: 0\r\n      }),\r\n      SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface),\r\n      TouchEventInterface = assign({}, UIEventInterface, {\r\n        touches: 0,\r\n        targetTouches: 0,\r\n        changedTouches: 0,\r\n        altKey: 0,\r\n        metaKey: 0,\r\n        ctrlKey: 0,\r\n        shiftKey: 0,\r\n        getModifierState: getEventModifierState\r\n      }),\r\n      SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface),\r\n      TransitionEventInterface = assign({}, EventInterface, {\r\n        propertyName: 0,\r\n        elapsedTime: 0,\r\n        pseudoElement: 0\r\n      }),\r\n      SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface),\r\n      WheelEventInterface = assign({}, MouseEventInterface, {\r\n        deltaX: function (event) {\r\n          return \"deltaX\" in event\r\n            ? event.deltaX\r\n            : \"wheelDeltaX\" in event\r\n              ? -event.wheelDeltaX\r\n              : 0;\r\n        },\r\n        deltaY: function (event) {\r\n          return \"deltaY\" in event\r\n            ? event.deltaY\r\n            : \"wheelDeltaY\" in event\r\n              ? -event.wheelDeltaY\r\n              : \"wheelDelta\" in event\r\n                ? -event.wheelDelta\r\n                : 0;\r\n        },\r\n        deltaZ: 0,\r\n        deltaMode: 0\r\n      }),\r\n      SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface),\r\n      ToggleEventInterface = assign({}, EventInterface, {\r\n        newState: 0,\r\n        oldState: 0\r\n      }),\r\n      SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface),\r\n      END_KEYCODES = [9, 13, 27, 32],\r\n      START_KEYCODE = 229,\r\n      canUseCompositionEvent = canUseDOM && \"CompositionEvent\" in window,\r\n      documentMode = null;\r\n    canUseDOM &&\r\n      \"documentMode\" in document &&\r\n      (documentMode = document.documentMode);\r\n    var canUseTextInputEvent =\r\n        canUseDOM && \"TextEvent\" in window && !documentMode,\r\n      useFallbackCompositionData =\r\n        canUseDOM &&\r\n        (!canUseCompositionEvent ||\r\n          (documentMode && 8 < documentMode && 11 >= documentMode)),\r\n      SPACEBAR_CODE = 32,\r\n      SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE),\r\n      hasSpaceKeypress = !1,\r\n      isComposing = !1,\r\n      supportedInputTypes = {\r\n        color: !0,\r\n        date: !0,\r\n        datetime: !0,\r\n        \"datetime-local\": !0,\r\n        email: !0,\r\n        month: !0,\r\n        number: !0,\r\n        password: !0,\r\n        range: !0,\r\n        search: !0,\r\n        tel: !0,\r\n        text: !0,\r\n        time: !0,\r\n        url: !0,\r\n        week: !0\r\n      },\r\n      activeElement$1 = null,\r\n      activeElementInst$1 = null,\r\n      isInputEventSupported = !1;\r\n    canUseDOM &&\r\n      (isInputEventSupported =\r\n        isEventSupported(\"input\") &&\r\n        (!document.documentMode || 9 < document.documentMode));\r\n    var objectIs = \"function\" === typeof Object.is ? Object.is : is,\r\n      skipSelectionChangeEvent =\r\n        canUseDOM && \"documentMode\" in document && 11 >= document.documentMode,\r\n      activeElement = null,\r\n      activeElementInst = null,\r\n      lastSelection = null,\r\n      mouseDown = !1,\r\n      vendorPrefixes = {\r\n        animationend: makePrefixMap(\"Animation\", \"AnimationEnd\"),\r\n        animationiteration: makePrefixMap(\"Animation\", \"AnimationIteration\"),\r\n        animationstart: makePrefixMap(\"Animation\", \"AnimationStart\"),\r\n        transitionrun: makePrefixMap(\"Transition\", \"TransitionRun\"),\r\n        transitionstart: makePrefixMap(\"Transition\", \"TransitionStart\"),\r\n        transitioncancel: makePrefixMap(\"Transition\", \"TransitionCancel\"),\r\n        transitionend: makePrefixMap(\"Transition\", \"TransitionEnd\")\r\n      },\r\n      prefixedEventNames = {},\r\n      style = {};\r\n    canUseDOM &&\r\n      ((style = document.createElement(\"div\").style),\r\n      \"AnimationEvent\" in window ||\r\n        (delete vendorPrefixes.animationend.animation,\r\n        delete vendorPrefixes.animationiteration.animation,\r\n        delete vendorPrefixes.animationstart.animation),\r\n      \"TransitionEvent\" in window ||\r\n        delete vendorPrefixes.transitionend.transition);\r\n    var ANIMATION_END = getVendorPrefixedEventName(\"animationend\"),\r\n      ANIMATION_ITERATION = getVendorPrefixedEventName(\"animationiteration\"),\r\n      ANIMATION_START = getVendorPrefixedEventName(\"animationstart\"),\r\n      TRANSITION_RUN = getVendorPrefixedEventName(\"transitionrun\"),\r\n      TRANSITION_START = getVendorPrefixedEventName(\"transitionstart\"),\r\n      TRANSITION_CANCEL = getVendorPrefixedEventName(\"transitioncancel\"),\r\n      TRANSITION_END = getVendorPrefixedEventName(\"transitionend\"),\r\n      topLevelEventsToReactNames = new Map(),\r\n      simpleEventPluginEvents =\r\n        \"abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\r\n          \" \"\r\n        );\r\n    simpleEventPluginEvents.push(\"scrollEnd\");\r\n    var CapturedStacks = new WeakMap(),\r\n      OffscreenVisible = 1,\r\n      OffscreenPassiveEffectsConnected = 2,\r\n      concurrentQueues = [],\r\n      concurrentQueuesIndex = 0,\r\n      concurrentlyUpdatedLanes = 0,\r\n      emptyContextObject = {};\r\n    Object.freeze(emptyContextObject);\r\n    var resolveFamily = null,\r\n      failedBoundaries = null,\r\n      NoMode = 0,\r\n      ConcurrentMode = 1,\r\n      ProfileMode = 2,\r\n      StrictLegacyMode = 8,\r\n      StrictEffectsMode = 16,\r\n      NoStrictPassiveEffectsMode = 64;\r\n    var hasBadMapPolyfill = !1;\r\n    try {\r\n      var nonExtensibleObject = Object.preventExtensions({});\r\n      new Map([[nonExtensibleObject, null]]);\r\n      new Set([nonExtensibleObject]);\r\n    } catch (e$3) {\r\n      hasBadMapPolyfill = !0;\r\n    }\r\n    var forkStack = [],\r\n      forkStackIndex = 0,\r\n      treeForkProvider = null,\r\n      treeForkCount = 0,\r\n      idStack = [],\r\n      idStackIndex = 0,\r\n      treeContextProvider = null,\r\n      treeContextId = 1,\r\n      treeContextOverflow = \"\",\r\n      hydrationParentFiber = null,\r\n      nextHydratableInstance = null,\r\n      isHydrating = !1,\r\n      didSuspendOrErrorDEV = !1,\r\n      hydrationDiffRootDEV = null,\r\n      hydrationErrors = null,\r\n      rootOrSingletonContext = !1,\r\n      HydrationMismatchException = Error(\r\n        \"Hydration Mismatch Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React.\"\r\n      ),\r\n      lastResetTime = 0;\r\n    if (\r\n      \"object\" === typeof performance &&\r\n      \"function\" === typeof performance.now\r\n    ) {\r\n      var localPerformance = performance;\r\n      var getCurrentTime = function () {\r\n        return localPerformance.now();\r\n      };\r\n    } else {\r\n      var localDate = Date;\r\n      getCurrentTime = function () {\r\n        return localDate.now();\r\n      };\r\n    }\r\n    var valueCursor = createCursor(null);\r\n    var rendererCursorDEV = createCursor(null);\r\n    var rendererSigil = {};\r\n    var currentlyRenderingFiber$1 = null,\r\n      lastContextDependency = null,\r\n      isDisallowedContextReadInDEV = !1,\r\n      AbortControllerLocal =\r\n        \"undefined\" !== typeof AbortController\r\n          ? AbortController\r\n          : function () {\r\n              var listeners = [],\r\n                signal = (this.signal = {\r\n                  aborted: !1,\r\n                  addEventListener: function (type, listener) {\r\n                    listeners.push(listener);\r\n                  }\r\n                });\r\n              this.abort = function () {\r\n                signal.aborted = !0;\r\n                listeners.forEach(function (listener) {\r\n                  return listener();\r\n                });\r\n              };\r\n            },\r\n      scheduleCallback$2 = Scheduler.unstable_scheduleCallback,\r\n      NormalPriority = Scheduler.unstable_NormalPriority,\r\n      CacheContext = {\r\n        $$typeof: REACT_CONTEXT_TYPE,\r\n        Consumer: null,\r\n        Provider: null,\r\n        _currentValue: null,\r\n        _currentValue2: null,\r\n        _threadCount: 0,\r\n        _currentRenderer: null,\r\n        _currentRenderer2: null\r\n      },\r\n      now = Scheduler.unstable_now,\r\n      renderStartTime = -0,\r\n      commitStartTime = -0,\r\n      profilerStartTime = -1.1,\r\n      profilerEffectDuration = -0,\r\n      currentUpdateIsNested = !1,\r\n      nestedUpdateScheduled = !1,\r\n      currentEntangledListeners = null,\r\n      currentEntangledPendingCount = 0,\r\n      currentEntangledLane = 0,\r\n      currentEntangledActionThenable = null,\r\n      prevOnStartTransitionFinish = ReactSharedInternals.S;\r\n    ReactSharedInternals.S = function (transition, returnValue) {\r\n      \"object\" === typeof returnValue &&\r\n        null !== returnValue &&\r\n        \"function\" === typeof returnValue.then &&\r\n        entangleAsyncAction(transition, returnValue);\r\n      null !== prevOnStartTransitionFinish &&\r\n        prevOnStartTransitionFinish(transition, returnValue);\r\n    };\r\n    var resumedCache = createCursor(null),\r\n      ReactStrictModeWarnings = {\r\n        recordUnsafeLifecycleWarnings: function () {},\r\n        flushPendingUnsafeLifecycleWarnings: function () {},\r\n        recordLegacyContextWarning: function () {},\r\n        flushLegacyContextWarning: function () {},\r\n        discardPendingWarnings: function () {}\r\n      },\r\n      pendingComponentWillMountWarnings = [],\r\n      pendingUNSAFE_ComponentWillMountWarnings = [],\r\n      pendingComponentWillReceivePropsWarnings = [],\r\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [],\r\n      pendingComponentWillUpdateWarnings = [],\r\n      pendingUNSAFE_ComponentWillUpdateWarnings = [],\r\n      didWarnAboutUnsafeLifecycles = new Set();\r\n    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (\r\n      fiber,\r\n      instance\r\n    ) {\r\n      didWarnAboutUnsafeLifecycles.has(fiber.type) ||\r\n        (\"function\" === typeof instance.componentWillMount &&\r\n          !0 !== instance.componentWillMount.__suppressDeprecationWarning &&\r\n          pendingComponentWillMountWarnings.push(fiber),\r\n        fiber.mode & StrictLegacyMode &&\r\n          \"function\" === typeof instance.UNSAFE_componentWillMount &&\r\n          pendingUNSAFE_ComponentWillMountWarnings.push(fiber),\r\n        \"function\" === typeof instance.componentWillReceiveProps &&\r\n          !0 !==\r\n            instance.componentWillReceiveProps.__suppressDeprecationWarning &&\r\n          pendingComponentWillReceivePropsWarnings.push(fiber),\r\n        fiber.mode & StrictLegacyMode &&\r\n          \"function\" === typeof instance.UNSAFE_componentWillReceiveProps &&\r\n          pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber),\r\n        \"function\" === typeof instance.componentWillUpdate &&\r\n          !0 !== instance.componentWillUpdate.__suppressDeprecationWarning &&\r\n          pendingComponentWillUpdateWarnings.push(fiber),\r\n        fiber.mode & StrictLegacyMode &&\r\n          \"function\" === typeof instance.UNSAFE_componentWillUpdate &&\r\n          pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber));\r\n    };\r\n    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {\r\n      var componentWillMountUniqueNames = new Set();\r\n      0 < pendingComponentWillMountWarnings.length &&\r\n        (pendingComponentWillMountWarnings.forEach(function (fiber) {\r\n          componentWillMountUniqueNames.add(\r\n            getComponentNameFromFiber(fiber) || \"Component\"\r\n          );\r\n          didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n        }),\r\n        (pendingComponentWillMountWarnings = []));\r\n      var UNSAFE_componentWillMountUniqueNames = new Set();\r\n      0 < pendingUNSAFE_ComponentWillMountWarnings.length &&\r\n        (pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {\r\n          UNSAFE_componentWillMountUniqueNames.add(\r\n            getComponentNameFromFiber(fiber) || \"Component\"\r\n          );\r\n          didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n        }),\r\n        (pendingUNSAFE_ComponentWillMountWarnings = []));\r\n      var componentWillReceivePropsUniqueNames = new Set();\r\n      0 < pendingComponentWillReceivePropsWarnings.length &&\r\n        (pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {\r\n          componentWillReceivePropsUniqueNames.add(\r\n            getComponentNameFromFiber(fiber) || \"Component\"\r\n          );\r\n          didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n        }),\r\n        (pendingComponentWillReceivePropsWarnings = []));\r\n      var UNSAFE_componentWillReceivePropsUniqueNames = new Set();\r\n      0 < pendingUNSAFE_ComponentWillReceivePropsWarnings.length &&\r\n        (pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(\r\n          function (fiber) {\r\n            UNSAFE_componentWillReceivePropsUniqueNames.add(\r\n              getComponentNameFromFiber(fiber) || \"Component\"\r\n            );\r\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n          }\r\n        ),\r\n        (pendingUNSAFE_ComponentWillReceivePropsWarnings = []));\r\n      var componentWillUpdateUniqueNames = new Set();\r\n      0 < pendingComponentWillUpdateWarnings.length &&\r\n        (pendingComponentWillUpdateWarnings.forEach(function (fiber) {\r\n          componentWillUpdateUniqueNames.add(\r\n            getComponentNameFromFiber(fiber) || \"Component\"\r\n          );\r\n          didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n        }),\r\n        (pendingComponentWillUpdateWarnings = []));\r\n      var UNSAFE_componentWillUpdateUniqueNames = new Set();\r\n      0 < pendingUNSAFE_ComponentWillUpdateWarnings.length &&\r\n        (pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {\r\n          UNSAFE_componentWillUpdateUniqueNames.add(\r\n            getComponentNameFromFiber(fiber) || \"Component\"\r\n          );\r\n          didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n        }),\r\n        (pendingUNSAFE_ComponentWillUpdateWarnings = []));\r\n      if (0 < UNSAFE_componentWillMountUniqueNames.size) {\r\n        var sortedNames = setToSortedString(\r\n          UNSAFE_componentWillMountUniqueNames\r\n        );\r\n        console.error(\r\n          \"Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\\nPlease update the following components: %s\",\r\n          sortedNames\r\n        );\r\n      }\r\n      0 < UNSAFE_componentWillReceivePropsUniqueNames.size &&\r\n        ((sortedNames = setToSortedString(\r\n          UNSAFE_componentWillReceivePropsUniqueNames\r\n        )),\r\n        console.error(\r\n          \"Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move data fetching code or side effects to componentDidUpdate.\\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\\n\\nPlease update the following components: %s\",\r\n          sortedNames\r\n        ));\r\n      0 < UNSAFE_componentWillUpdateUniqueNames.size &&\r\n        ((sortedNames = setToSortedString(\r\n          UNSAFE_componentWillUpdateUniqueNames\r\n        )),\r\n        console.error(\r\n          \"Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move data fetching code or side effects to componentDidUpdate.\\n\\nPlease update the following components: %s\",\r\n          sortedNames\r\n        ));\r\n      0 < componentWillMountUniqueNames.size &&\r\n        ((sortedNames = setToSortedString(componentWillMountUniqueNames)),\r\n        console.warn(\r\n          \"componentWillMount has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\\nPlease update the following components: %s\",\r\n          sortedNames\r\n        ));\r\n      0 < componentWillReceivePropsUniqueNames.size &&\r\n        ((sortedNames = setToSortedString(\r\n          componentWillReceivePropsUniqueNames\r\n        )),\r\n        console.warn(\r\n          \"componentWillReceiveProps has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move data fetching code or side effects to componentDidUpdate.\\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\\nPlease update the following components: %s\",\r\n          sortedNames\r\n        ));\r\n      0 < componentWillUpdateUniqueNames.size &&\r\n        ((sortedNames = setToSortedString(componentWillUpdateUniqueNames)),\r\n        console.warn(\r\n          \"componentWillUpdate has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\\n\\n* Move data fetching code or side effects to componentDidUpdate.\\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\\nPlease update the following components: %s\",\r\n          sortedNames\r\n        ));\r\n    };\r\n    var pendingLegacyContextWarning = new Map(),\r\n      didWarnAboutLegacyContext = new Set();\r\n    ReactStrictModeWarnings.recordLegacyContextWarning = function (\r\n      fiber,\r\n      instance\r\n    ) {\r\n      var strictRoot = null;\r\n      for (var node = fiber; null !== node; )\r\n        node.mode & StrictLegacyMode && (strictRoot = node),\r\n          (node = node.return);\r\n      null === strictRoot\r\n        ? console.error(\r\n            \"Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.\"\r\n          )\r\n        : !didWarnAboutLegacyContext.has(fiber.type) &&\r\n          ((node = pendingLegacyContextWarning.get(strictRoot)),\r\n          null != fiber.type.contextTypes ||\r\n            null != fiber.type.childContextTypes ||\r\n            (null !== instance &&\r\n              \"function\" === typeof instance.getChildContext)) &&\r\n          (void 0 === node &&\r\n            ((node = []), pendingLegacyContextWarning.set(strictRoot, node)),\r\n          node.push(fiber));\r\n    };\r\n    ReactStrictModeWarnings.flushLegacyContextWarning = function () {\r\n      pendingLegacyContextWarning.forEach(function (fiberArray) {\r\n        if (0 !== fiberArray.length) {\r\n          var firstFiber = fiberArray[0],\r\n            uniqueNames = new Set();\r\n          fiberArray.forEach(function (fiber) {\r\n            uniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\r\n            didWarnAboutLegacyContext.add(fiber.type);\r\n          });\r\n          var sortedNames = setToSortedString(uniqueNames);\r\n          runWithFiberInDEV(firstFiber, function () {\r\n            console.error(\r\n              \"Legacy context API has been detected within a strict-mode tree.\\n\\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\\n\\nPlease update the following components: %s\\n\\nLearn more about this warning here: https://react.dev/link/legacy-context\",\r\n              sortedNames\r\n            );\r\n          });\r\n        }\r\n      });\r\n    };\r\n    ReactStrictModeWarnings.discardPendingWarnings = function () {\r\n      pendingComponentWillMountWarnings = [];\r\n      pendingUNSAFE_ComponentWillMountWarnings = [];\r\n      pendingComponentWillReceivePropsWarnings = [];\r\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\r\n      pendingComponentWillUpdateWarnings = [];\r\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\r\n      pendingLegacyContextWarning = new Map();\r\n    };\r\n    var SuspenseException = Error(\r\n        \"Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`.\"\r\n      ),\r\n      SuspenseyCommitException = Error(\r\n        \"Suspense Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React.\"\r\n      ),\r\n      SuspenseActionException = Error(\r\n        \"Suspense Exception: This is not a real error! It's an implementation detail of `useActionState` to interrupt the current render. You must either rethrow it immediately, or move the `useActionState` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary.\"\r\n      ),\r\n      noopSuspenseyCommitThenable = {\r\n        then: function () {\r\n          console.error(\r\n            'Internal React error: A listener was unexpectedly attached to a \"noop\" thenable. This is a bug in React. Please file an issue.'\r\n          );\r\n        }\r\n      },\r\n      suspendedThenable = null,\r\n      needsToResetSuspendedThenableDEV = !1,\r\n      NoFlags = 0,\r\n      HasEffect = 1,\r\n      Insertion = 2,\r\n      Layout = 4,\r\n      Passive = 8,\r\n      UpdateState = 0,\r\n      ReplaceState = 1,\r\n      ForceUpdate = 2,\r\n      CaptureUpdate = 3,\r\n      hasForceUpdate = !1;\r\n    var didWarnUpdateInsideUpdate = !1;\r\n    var currentlyProcessingQueue = null;\r\n    var didReadFromEntangledAsyncAction = !1,\r\n      currentTreeHiddenStackCursor = createCursor(null),\r\n      prevEntangledRenderLanesCursor = createCursor(0),\r\n      didWarnUncachedGetSnapshot;\r\n    var didWarnAboutMismatchedHooksForComponent = new Set();\r\n    var didWarnAboutUseWrappedInTryCatch = new Set();\r\n    var didWarnAboutAsyncClientComponent = new Set();\r\n    var didWarnAboutUseFormState = new Set();\r\n    var renderLanes = 0,\r\n      currentlyRenderingFiber = null,\r\n      currentHook = null,\r\n      workInProgressHook = null,\r\n      didScheduleRenderPhaseUpdate = !1,\r\n      didScheduleRenderPhaseUpdateDuringThisPass = !1,\r\n      shouldDoubleInvokeUserFnsInHooksDEV = !1,\r\n      localIdCounter = 0,\r\n      thenableIndexCounter$1 = 0,\r\n      thenableState$1 = null,\r\n      globalClientIdCounter = 0,\r\n      RE_RENDER_LIMIT = 25,\r\n      currentHookNameInDev = null,\r\n      hookTypesDev = null,\r\n      hookTypesUpdateIndexDev = -1,\r\n      ignorePreviousDependencies = !1,\r\n      ContextOnlyDispatcher = {\r\n        readContext: readContext,\r\n        use: use,\r\n        useCallback: throwInvalidHookError,\r\n        useContext: throwInvalidHookError,\r\n        useEffect: throwInvalidHookError,\r\n        useImperativeHandle: throwInvalidHookError,\r\n        useLayoutEffect: throwInvalidHookError,\r\n        useInsertionEffect: throwInvalidHookError,\r\n        useMemo: throwInvalidHookError,\r\n        useReducer: throwInvalidHookError,\r\n        useRef: throwInvalidHookError,\r\n        useState: throwInvalidHookError,\r\n        useDebugValue: throwInvalidHookError,\r\n        useDeferredValue: throwInvalidHookError,\r\n        useTransition: throwInvalidHookError,\r\n        useSyncExternalStore: throwInvalidHookError,\r\n        useId: throwInvalidHookError,\r\n        useHostTransitionStatus: throwInvalidHookError,\r\n        useFormState: throwInvalidHookError,\r\n        useActionState: throwInvalidHookError,\r\n        useOptimistic: throwInvalidHookError,\r\n        useMemoCache: throwInvalidHookError,\r\n        useCacheRefresh: throwInvalidHookError\r\n      },\r\n      HooksDispatcherOnMountInDEV = null,\r\n      HooksDispatcherOnMountWithHookTypesInDEV = null,\r\n      HooksDispatcherOnUpdateInDEV = null,\r\n      HooksDispatcherOnRerenderInDEV = null,\r\n      InvalidNestedHooksDispatcherOnMountInDEV = null,\r\n      InvalidNestedHooksDispatcherOnUpdateInDEV = null,\r\n      InvalidNestedHooksDispatcherOnRerenderInDEV = null;\r\n    HooksDispatcherOnMountInDEV = {\r\n      readContext: function (context) {\r\n        return readContext(context);\r\n      },\r\n      use: use,\r\n      useCallback: function (callback, deps) {\r\n        currentHookNameInDev = \"useCallback\";\r\n        mountHookTypesDev();\r\n        checkDepsAreArrayDev(deps);\r\n        return mountCallback(callback, deps);\r\n      },\r\n      useContext: function (context) {\r\n        currentHookNameInDev = \"useContext\";\r\n        mountHookTypesDev();\r\n        return readContext(context);\r\n      },\r\n      useEffect: function (create, createDeps) {\r\n        currentHookNameInDev = \"useEffect\";\r\n        mountHookTypesDev();\r\n        checkDepsAreArrayDev(createDeps);\r\n        return mountEffect(create, createDeps);\r\n      },\r\n      useImperativeHandle: function (ref, create, deps) {\r\n        currentHookNameInDev = \"useImperativeHandle\";\r\n        mountHookTypesDev();\r\n        checkDepsAreArrayDev(deps);\r\n        return mountImperativeHandle(ref, create, deps);\r\n      },\r\n      useInsertionEffect: function (create, deps) {\r\n        currentHookNameInDev = \"useInsertionEffect\";\r\n        mountHookTypesDev();\r\n        checkDepsAreArrayDev(deps);\r\n        mountEffectImpl(4, Insertion, create, deps);\r\n      },\r\n      useLayoutEffect: function (create, deps) {\r\n        currentHookNameInDev = \"useLayoutEffect\";\r\n        mountHookTypesDev();\r\n        checkDepsAreArrayDev(deps);\r\n        return mountLayoutEffect(create, deps);\r\n      },\r\n      useMemo: function (create, deps) {\r\n        currentHookNameInDev = \"useMemo\";\r\n        mountHookTypesDev();\r\n        checkDepsAreArrayDev(deps);\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\r\n        try {\r\n          return mountMemo(create, deps);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useReducer: function (reducer, initialArg, init) {\r\n        currentHookNameInDev = \"useReducer\";\r\n        mountHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\r\n        try {\r\n          return mountReducer(reducer, initialArg, init);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useRef: function (initialValue) {\r\n        currentHookNameInDev = \"useRef\";\r\n        mountHookTypesDev();\r\n        return mountRef(initialValue);\r\n      },\r\n      useState: function (initialState) {\r\n        currentHookNameInDev = \"useState\";\r\n        mountHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\r\n        try {\r\n          return mountState(initialState);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useDebugValue: function () {\r\n        currentHookNameInDev = \"useDebugValue\";\r\n        mountHookTypesDev();\r\n      },\r\n      useDeferredValue: function (value, initialValue) {\r\n        currentHookNameInDev = \"useDeferredValue\";\r\n        mountHookTypesDev();\r\n        return mountDeferredValue(value, initialValue);\r\n      },\r\n      useTransition: function () {\r\n        currentHookNameInDev = \"useTransition\";\r\n        mountHookTypesDev();\r\n        return mountTransition();\r\n      },\r\n      useSyncExternalStore: function (\r\n        subscribe,\r\n        getSnapshot,\r\n        getServerSnapshot\r\n      ) {\r\n        currentHookNameInDev = \"useSyncExternalStore\";\r\n        mountHookTypesDev();\r\n        return mountSyncExternalStore(\r\n          subscribe,\r\n          getSnapshot,\r\n          getServerSnapshot\r\n        );\r\n      },\r\n      useId: function () {\r\n        currentHookNameInDev = \"useId\";\r\n        mountHookTypesDev();\r\n        return mountId();\r\n      },\r\n      useFormState: function (action, initialState) {\r\n        currentHookNameInDev = \"useFormState\";\r\n        mountHookTypesDev();\r\n        warnOnUseFormStateInDev();\r\n        return mountActionState(action, initialState);\r\n      },\r\n      useActionState: function (action, initialState) {\r\n        currentHookNameInDev = \"useActionState\";\r\n        mountHookTypesDev();\r\n        return mountActionState(action, initialState);\r\n      },\r\n      useOptimistic: function (passthrough) {\r\n        currentHookNameInDev = \"useOptimistic\";\r\n        mountHookTypesDev();\r\n        return mountOptimistic(passthrough);\r\n      },\r\n      useHostTransitionStatus: useHostTransitionStatus,\r\n      useMemoCache: useMemoCache,\r\n      useCacheRefresh: function () {\r\n        currentHookNameInDev = \"useCacheRefresh\";\r\n        mountHookTypesDev();\r\n        return mountRefresh();\r\n      }\r\n    };\r\n    HooksDispatcherOnMountWithHookTypesInDEV = {\r\n      readContext: function (context) {\r\n        return readContext(context);\r\n      },\r\n      use: use,\r\n      useCallback: function (callback, deps) {\r\n        currentHookNameInDev = \"useCallback\";\r\n        updateHookTypesDev();\r\n        return mountCallback(callback, deps);\r\n      },\r\n      useContext: function (context) {\r\n        currentHookNameInDev = \"useContext\";\r\n        updateHookTypesDev();\r\n        return readContext(context);\r\n      },\r\n      useEffect: function (create, createDeps) {\r\n        currentHookNameInDev = \"useEffect\";\r\n        updateHookTypesDev();\r\n        return mountEffect(create, createDeps);\r\n      },\r\n      useImperativeHandle: function (ref, create, deps) {\r\n        currentHookNameInDev = \"useImperativeHandle\";\r\n        updateHookTypesDev();\r\n        return mountImperativeHandle(ref, create, deps);\r\n      },\r\n      useInsertionEffect: function (create, deps) {\r\n        currentHookNameInDev = \"useInsertionEffect\";\r\n        updateHookTypesDev();\r\n        mountEffectImpl(4, Insertion, create, deps);\r\n      },\r\n      useLayoutEffect: function (create, deps) {\r\n        currentHookNameInDev = \"useLayoutEffect\";\r\n        updateHookTypesDev();\r\n        return mountLayoutEffect(create, deps);\r\n      },\r\n      useMemo: function (create, deps) {\r\n        currentHookNameInDev = \"useMemo\";\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\r\n        try {\r\n          return mountMemo(create, deps);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useReducer: function (reducer, initialArg, init) {\r\n        currentHookNameInDev = \"useReducer\";\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\r\n        try {\r\n          return mountReducer(reducer, initialArg, init);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useRef: function (initialValue) {\r\n        currentHookNameInDev = \"useRef\";\r\n        updateHookTypesDev();\r\n        return mountRef(initialValue);\r\n      },\r\n      useState: function (initialState) {\r\n        currentHookNameInDev = \"useState\";\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\r\n        try {\r\n          return mountState(initialState);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useDebugValue: function () {\r\n        currentHookNameInDev = \"useDebugValue\";\r\n        updateHookTypesDev();\r\n      },\r\n      useDeferredValue: function (value, initialValue) {\r\n        currentHookNameInDev = \"useDeferredValue\";\r\n        updateHookTypesDev();\r\n        return mountDeferredValue(value, initialValue);\r\n      },\r\n      useTransition: function () {\r\n        currentHookNameInDev = \"useTransition\";\r\n        updateHookTypesDev();\r\n        return mountTransition();\r\n      },\r\n      useSyncExternalStore: function (\r\n        subscribe,\r\n        getSnapshot,\r\n        getServerSnapshot\r\n      ) {\r\n        currentHookNameInDev = \"useSyncExternalStore\";\r\n        updateHookTypesDev();\r\n        return mountSyncExternalStore(\r\n          subscribe,\r\n          getSnapshot,\r\n          getServerSnapshot\r\n        );\r\n      },\r\n      useId: function () {\r\n        currentHookNameInDev = \"useId\";\r\n        updateHookTypesDev();\r\n        return mountId();\r\n      },\r\n      useActionState: function (action, initialState) {\r\n        currentHookNameInDev = \"useActionState\";\r\n        updateHookTypesDev();\r\n        return mountActionState(action, initialState);\r\n      },\r\n      useFormState: function (action, initialState) {\r\n        currentHookNameInDev = \"useFormState\";\r\n        updateHookTypesDev();\r\n        warnOnUseFormStateInDev();\r\n        return mountActionState(action, initialState);\r\n      },\r\n      useOptimistic: function (passthrough) {\r\n        currentHookNameInDev = \"useOptimistic\";\r\n        updateHookTypesDev();\r\n        return mountOptimistic(passthrough);\r\n      },\r\n      useHostTransitionStatus: useHostTransitionStatus,\r\n      useMemoCache: useMemoCache,\r\n      useCacheRefresh: function () {\r\n        currentHookNameInDev = \"useCacheRefresh\";\r\n        updateHookTypesDev();\r\n        return mountRefresh();\r\n      }\r\n    };\r\n    HooksDispatcherOnUpdateInDEV = {\r\n      readContext: function (context) {\r\n        return readContext(context);\r\n      },\r\n      use: use,\r\n      useCallback: function (callback, deps) {\r\n        currentHookNameInDev = \"useCallback\";\r\n        updateHookTypesDev();\r\n        return updateCallback(callback, deps);\r\n      },\r\n      useContext: function (context) {\r\n        currentHookNameInDev = \"useContext\";\r\n        updateHookTypesDev();\r\n        return readContext(context);\r\n      },\r\n      useEffect: function (create, createDeps) {\r\n        currentHookNameInDev = \"useEffect\";\r\n        updateHookTypesDev();\r\n        updateEffectImpl(2048, Passive, create, createDeps);\r\n      },\r\n      useImperativeHandle: function (ref, create, deps) {\r\n        currentHookNameInDev = \"useImperativeHandle\";\r\n        updateHookTypesDev();\r\n        return updateImperativeHandle(ref, create, deps);\r\n      },\r\n      useInsertionEffect: function (create, deps) {\r\n        currentHookNameInDev = \"useInsertionEffect\";\r\n        updateHookTypesDev();\r\n        return updateEffectImpl(4, Insertion, create, deps);\r\n      },\r\n      useLayoutEffect: function (create, deps) {\r\n        currentHookNameInDev = \"useLayoutEffect\";\r\n        updateHookTypesDev();\r\n        return updateEffectImpl(4, Layout, create, deps);\r\n      },\r\n      useMemo: function (create, deps) {\r\n        currentHookNameInDev = \"useMemo\";\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n        try {\r\n          return updateMemo(create, deps);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useReducer: function (reducer, initialArg, init) {\r\n        currentHookNameInDev = \"useReducer\";\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n        try {\r\n          return updateReducer(reducer, initialArg, init);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useRef: function () {\r\n        currentHookNameInDev = \"useRef\";\r\n        updateHookTypesDev();\r\n        return updateWorkInProgressHook().memoizedState;\r\n      },\r\n      useState: function () {\r\n        currentHookNameInDev = \"useState\";\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n        try {\r\n          return updateReducer(basicStateReducer);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useDebugValue: function () {\r\n        currentHookNameInDev = \"useDebugValue\";\r\n        updateHookTypesDev();\r\n      },\r\n      useDeferredValue: function (value, initialValue) {\r\n        currentHookNameInDev = \"useDeferredValue\";\r\n        updateHookTypesDev();\r\n        return updateDeferredValue(value, initialValue);\r\n      },\r\n      useTransition: function () {\r\n        currentHookNameInDev = \"useTransition\";\r\n        updateHookTypesDev();\r\n        return updateTransition();\r\n      },\r\n      useSyncExternalStore: function (\r\n        subscribe,\r\n        getSnapshot,\r\n        getServerSnapshot\r\n      ) {\r\n        currentHookNameInDev = \"useSyncExternalStore\";\r\n        updateHookTypesDev();\r\n        return updateSyncExternalStore(\r\n          subscribe,\r\n          getSnapshot,\r\n          getServerSnapshot\r\n        );\r\n      },\r\n      useId: function () {\r\n        currentHookNameInDev = \"useId\";\r\n        updateHookTypesDev();\r\n        return updateWorkInProgressHook().memoizedState;\r\n      },\r\n      useFormState: function (action) {\r\n        currentHookNameInDev = \"useFormState\";\r\n        updateHookTypesDev();\r\n        warnOnUseFormStateInDev();\r\n        return updateActionState(action);\r\n      },\r\n      useActionState: function (action) {\r\n        currentHookNameInDev = \"useActionState\";\r\n        updateHookTypesDev();\r\n        return updateActionState(action);\r\n      },\r\n      useOptimistic: function (passthrough, reducer) {\r\n        currentHookNameInDev = \"useOptimistic\";\r\n        updateHookTypesDev();\r\n        return updateOptimistic(passthrough, reducer);\r\n      },\r\n      useHostTransitionStatus: useHostTransitionStatus,\r\n      useMemoCache: useMemoCache,\r\n      useCacheRefresh: function () {\r\n        currentHookNameInDev = \"useCacheRefresh\";\r\n        updateHookTypesDev();\r\n        return updateWorkInProgressHook().memoizedState;\r\n      }\r\n    };\r\n    HooksDispatcherOnRerenderInDEV = {\r\n      readContext: function (context) {\r\n        return readContext(context);\r\n      },\r\n      use: use,\r\n      useCallback: function (callback, deps) {\r\n        currentHookNameInDev = \"useCallback\";\r\n        updateHookTypesDev();\r\n        return updateCallback(callback, deps);\r\n      },\r\n      useContext: function (context) {\r\n        currentHookNameInDev = \"useContext\";\r\n        updateHookTypesDev();\r\n        return readContext(context);\r\n      },\r\n      useEffect: function (create, createDeps) {\r\n        currentHookNameInDev = \"useEffect\";\r\n        updateHookTypesDev();\r\n        updateEffectImpl(2048, Passive, create, createDeps);\r\n      },\r\n      useImperativeHandle: function (ref, create, deps) {\r\n        currentHookNameInDev = \"useImperativeHandle\";\r\n        updateHookTypesDev();\r\n        return updateImperativeHandle(ref, create, deps);\r\n      },\r\n      useInsertionEffect: function (create, deps) {\r\n        currentHookNameInDev = \"useInsertionEffect\";\r\n        updateHookTypesDev();\r\n        return updateEffectImpl(4, Insertion, create, deps);\r\n      },\r\n      useLayoutEffect: function (create, deps) {\r\n        currentHookNameInDev = \"useLayoutEffect\";\r\n        updateHookTypesDev();\r\n        return updateEffectImpl(4, Layout, create, deps);\r\n      },\r\n      useMemo: function (create, deps) {\r\n        currentHookNameInDev = \"useMemo\";\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;\r\n        try {\r\n          return updateMemo(create, deps);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useReducer: function (reducer, initialArg, init) {\r\n        currentHookNameInDev = \"useReducer\";\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;\r\n        try {\r\n          return rerenderReducer(reducer, initialArg, init);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useRef: function () {\r\n        currentHookNameInDev = \"useRef\";\r\n        updateHookTypesDev();\r\n        return updateWorkInProgressHook().memoizedState;\r\n      },\r\n      useState: function () {\r\n        currentHookNameInDev = \"useState\";\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;\r\n        try {\r\n          return rerenderReducer(basicStateReducer);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useDebugValue: function () {\r\n        currentHookNameInDev = \"useDebugValue\";\r\n        updateHookTypesDev();\r\n      },\r\n      useDeferredValue: function (value, initialValue) {\r\n        currentHookNameInDev = \"useDeferredValue\";\r\n        updateHookTypesDev();\r\n        return rerenderDeferredValue(value, initialValue);\r\n      },\r\n      useTransition: function () {\r\n        currentHookNameInDev = \"useTransition\";\r\n        updateHookTypesDev();\r\n        return rerenderTransition();\r\n      },\r\n      useSyncExternalStore: function (\r\n        subscribe,\r\n        getSnapshot,\r\n        getServerSnapshot\r\n      ) {\r\n        currentHookNameInDev = \"useSyncExternalStore\";\r\n        updateHookTypesDev();\r\n        return updateSyncExternalStore(\r\n          subscribe,\r\n          getSnapshot,\r\n          getServerSnapshot\r\n        );\r\n      },\r\n      useId: function () {\r\n        currentHookNameInDev = \"useId\";\r\n        updateHookTypesDev();\r\n        return updateWorkInProgressHook().memoizedState;\r\n      },\r\n      useFormState: function (action) {\r\n        currentHookNameInDev = \"useFormState\";\r\n        updateHookTypesDev();\r\n        warnOnUseFormStateInDev();\r\n        return rerenderActionState(action);\r\n      },\r\n      useActionState: function (action) {\r\n        currentHookNameInDev = \"useActionState\";\r\n        updateHookTypesDev();\r\n        return rerenderActionState(action);\r\n      },\r\n      useOptimistic: function (passthrough, reducer) {\r\n        currentHookNameInDev = \"useOptimistic\";\r\n        updateHookTypesDev();\r\n        return rerenderOptimistic(passthrough, reducer);\r\n      },\r\n      useHostTransitionStatus: useHostTransitionStatus,\r\n      useMemoCache: useMemoCache,\r\n      useCacheRefresh: function () {\r\n        currentHookNameInDev = \"useCacheRefresh\";\r\n        updateHookTypesDev();\r\n        return updateWorkInProgressHook().memoizedState;\r\n      }\r\n    };\r\n    InvalidNestedHooksDispatcherOnMountInDEV = {\r\n      readContext: function (context) {\r\n        warnInvalidContextAccess();\r\n        return readContext(context);\r\n      },\r\n      use: function (usable) {\r\n        warnInvalidHookAccess();\r\n        return use(usable);\r\n      },\r\n      useCallback: function (callback, deps) {\r\n        currentHookNameInDev = \"useCallback\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        return mountCallback(callback, deps);\r\n      },\r\n      useContext: function (context) {\r\n        currentHookNameInDev = \"useContext\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        return readContext(context);\r\n      },\r\n      useEffect: function (create, createDeps) {\r\n        currentHookNameInDev = \"useEffect\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        return mountEffect(create, createDeps);\r\n      },\r\n      useImperativeHandle: function (ref, create, deps) {\r\n        currentHookNameInDev = \"useImperativeHandle\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        return mountImperativeHandle(ref, create, deps);\r\n      },\r\n      useInsertionEffect: function (create, deps) {\r\n        currentHookNameInDev = \"useInsertionEffect\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        mountEffectImpl(4, Insertion, create, deps);\r\n      },\r\n      useLayoutEffect: function (create, deps) {\r\n        currentHookNameInDev = \"useLayoutEffect\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        return mountLayoutEffect(create, deps);\r\n      },\r\n      useMemo: function (create, deps) {\r\n        currentHookNameInDev = \"useMemo\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\r\n        try {\r\n          return mountMemo(create, deps);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useReducer: function (reducer, initialArg, init) {\r\n        currentHookNameInDev = \"useReducer\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\r\n        try {\r\n          return mountReducer(reducer, initialArg, init);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useRef: function (initialValue) {\r\n        currentHookNameInDev = \"useRef\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        return mountRef(initialValue);\r\n      },\r\n      useState: function (initialState) {\r\n        currentHookNameInDev = \"useState\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;\r\n        try {\r\n          return mountState(initialState);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useDebugValue: function () {\r\n        currentHookNameInDev = \"useDebugValue\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n      },\r\n      useDeferredValue: function (value, initialValue) {\r\n        currentHookNameInDev = \"useDeferredValue\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        return mountDeferredValue(value, initialValue);\r\n      },\r\n      useTransition: function () {\r\n        currentHookNameInDev = \"useTransition\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        return mountTransition();\r\n      },\r\n      useSyncExternalStore: function (\r\n        subscribe,\r\n        getSnapshot,\r\n        getServerSnapshot\r\n      ) {\r\n        currentHookNameInDev = \"useSyncExternalStore\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        return mountSyncExternalStore(\r\n          subscribe,\r\n          getSnapshot,\r\n          getServerSnapshot\r\n        );\r\n      },\r\n      useId: function () {\r\n        currentHookNameInDev = \"useId\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        return mountId();\r\n      },\r\n      useFormState: function (action, initialState) {\r\n        currentHookNameInDev = \"useFormState\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        return mountActionState(action, initialState);\r\n      },\r\n      useActionState: function (action, initialState) {\r\n        currentHookNameInDev = \"useActionState\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        return mountActionState(action, initialState);\r\n      },\r\n      useOptimistic: function (passthrough) {\r\n        currentHookNameInDev = \"useOptimistic\";\r\n        warnInvalidHookAccess();\r\n        mountHookTypesDev();\r\n        return mountOptimistic(passthrough);\r\n      },\r\n      useMemoCache: function (size) {\r\n        warnInvalidHookAccess();\r\n        return useMemoCache(size);\r\n      },\r\n      useHostTransitionStatus: useHostTransitionStatus,\r\n      useCacheRefresh: function () {\r\n        currentHookNameInDev = \"useCacheRefresh\";\r\n        mountHookTypesDev();\r\n        return mountRefresh();\r\n      }\r\n    };\r\n    InvalidNestedHooksDispatcherOnUpdateInDEV = {\r\n      readContext: function (context) {\r\n        warnInvalidContextAccess();\r\n        return readContext(context);\r\n      },\r\n      use: function (usable) {\r\n        warnInvalidHookAccess();\r\n        return use(usable);\r\n      },\r\n      useCallback: function (callback, deps) {\r\n        currentHookNameInDev = \"useCallback\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateCallback(callback, deps);\r\n      },\r\n      useContext: function (context) {\r\n        currentHookNameInDev = \"useContext\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return readContext(context);\r\n      },\r\n      useEffect: function (create, createDeps) {\r\n        currentHookNameInDev = \"useEffect\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        updateEffectImpl(2048, Passive, create, createDeps);\r\n      },\r\n      useImperativeHandle: function (ref, create, deps) {\r\n        currentHookNameInDev = \"useImperativeHandle\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateImperativeHandle(ref, create, deps);\r\n      },\r\n      useInsertionEffect: function (create, deps) {\r\n        currentHookNameInDev = \"useInsertionEffect\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateEffectImpl(4, Insertion, create, deps);\r\n      },\r\n      useLayoutEffect: function (create, deps) {\r\n        currentHookNameInDev = \"useLayoutEffect\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateEffectImpl(4, Layout, create, deps);\r\n      },\r\n      useMemo: function (create, deps) {\r\n        currentHookNameInDev = \"useMemo\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n        try {\r\n          return updateMemo(create, deps);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useReducer: function (reducer, initialArg, init) {\r\n        currentHookNameInDev = \"useReducer\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n        try {\r\n          return updateReducer(reducer, initialArg, init);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useRef: function () {\r\n        currentHookNameInDev = \"useRef\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateWorkInProgressHook().memoizedState;\r\n      },\r\n      useState: function () {\r\n        currentHookNameInDev = \"useState\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n        try {\r\n          return updateReducer(basicStateReducer);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useDebugValue: function () {\r\n        currentHookNameInDev = \"useDebugValue\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n      },\r\n      useDeferredValue: function (value, initialValue) {\r\n        currentHookNameInDev = \"useDeferredValue\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateDeferredValue(value, initialValue);\r\n      },\r\n      useTransition: function () {\r\n        currentHookNameInDev = \"useTransition\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateTransition();\r\n      },\r\n      useSyncExternalStore: function (\r\n        subscribe,\r\n        getSnapshot,\r\n        getServerSnapshot\r\n      ) {\r\n        currentHookNameInDev = \"useSyncExternalStore\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateSyncExternalStore(\r\n          subscribe,\r\n          getSnapshot,\r\n          getServerSnapshot\r\n        );\r\n      },\r\n      useId: function () {\r\n        currentHookNameInDev = \"useId\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateWorkInProgressHook().memoizedState;\r\n      },\r\n      useFormState: function (action) {\r\n        currentHookNameInDev = \"useFormState\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateActionState(action);\r\n      },\r\n      useActionState: function (action) {\r\n        currentHookNameInDev = \"useActionState\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateActionState(action);\r\n      },\r\n      useOptimistic: function (passthrough, reducer) {\r\n        currentHookNameInDev = \"useOptimistic\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateOptimistic(passthrough, reducer);\r\n      },\r\n      useMemoCache: function (size) {\r\n        warnInvalidHookAccess();\r\n        return useMemoCache(size);\r\n      },\r\n      useHostTransitionStatus: useHostTransitionStatus,\r\n      useCacheRefresh: function () {\r\n        currentHookNameInDev = \"useCacheRefresh\";\r\n        updateHookTypesDev();\r\n        return updateWorkInProgressHook().memoizedState;\r\n      }\r\n    };\r\n    InvalidNestedHooksDispatcherOnRerenderInDEV = {\r\n      readContext: function (context) {\r\n        warnInvalidContextAccess();\r\n        return readContext(context);\r\n      },\r\n      use: function (usable) {\r\n        warnInvalidHookAccess();\r\n        return use(usable);\r\n      },\r\n      useCallback: function (callback, deps) {\r\n        currentHookNameInDev = \"useCallback\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateCallback(callback, deps);\r\n      },\r\n      useContext: function (context) {\r\n        currentHookNameInDev = \"useContext\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return readContext(context);\r\n      },\r\n      useEffect: function (create, createDeps) {\r\n        currentHookNameInDev = \"useEffect\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        updateEffectImpl(2048, Passive, create, createDeps);\r\n      },\r\n      useImperativeHandle: function (ref, create, deps) {\r\n        currentHookNameInDev = \"useImperativeHandle\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateImperativeHandle(ref, create, deps);\r\n      },\r\n      useInsertionEffect: function (create, deps) {\r\n        currentHookNameInDev = \"useInsertionEffect\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateEffectImpl(4, Insertion, create, deps);\r\n      },\r\n      useLayoutEffect: function (create, deps) {\r\n        currentHookNameInDev = \"useLayoutEffect\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateEffectImpl(4, Layout, create, deps);\r\n      },\r\n      useMemo: function (create, deps) {\r\n        currentHookNameInDev = \"useMemo\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n        try {\r\n          return updateMemo(create, deps);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useReducer: function (reducer, initialArg, init) {\r\n        currentHookNameInDev = \"useReducer\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n        try {\r\n          return rerenderReducer(reducer, initialArg, init);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useRef: function () {\r\n        currentHookNameInDev = \"useRef\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateWorkInProgressHook().memoizedState;\r\n      },\r\n      useState: function () {\r\n        currentHookNameInDev = \"useState\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        var prevDispatcher = ReactSharedInternals.H;\r\n        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n        try {\r\n          return rerenderReducer(basicStateReducer);\r\n        } finally {\r\n          ReactSharedInternals.H = prevDispatcher;\r\n        }\r\n      },\r\n      useDebugValue: function () {\r\n        currentHookNameInDev = \"useDebugValue\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n      },\r\n      useDeferredValue: function (value, initialValue) {\r\n        currentHookNameInDev = \"useDeferredValue\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return rerenderDeferredValue(value, initialValue);\r\n      },\r\n      useTransition: function () {\r\n        currentHookNameInDev = \"useTransition\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return rerenderTransition();\r\n      },\r\n      useSyncExternalStore: function (\r\n        subscribe,\r\n        getSnapshot,\r\n        getServerSnapshot\r\n      ) {\r\n        currentHookNameInDev = \"useSyncExternalStore\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateSyncExternalStore(\r\n          subscribe,\r\n          getSnapshot,\r\n          getServerSnapshot\r\n        );\r\n      },\r\n      useId: function () {\r\n        currentHookNameInDev = \"useId\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return updateWorkInProgressHook().memoizedState;\r\n      },\r\n      useFormState: function (action) {\r\n        currentHookNameInDev = \"useFormState\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return rerenderActionState(action);\r\n      },\r\n      useActionState: function (action) {\r\n        currentHookNameInDev = \"useActionState\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return rerenderActionState(action);\r\n      },\r\n      useOptimistic: function (passthrough, reducer) {\r\n        currentHookNameInDev = \"useOptimistic\";\r\n        warnInvalidHookAccess();\r\n        updateHookTypesDev();\r\n        return rerenderOptimistic(passthrough, reducer);\r\n      },\r\n      useMemoCache: function (size) {\r\n        warnInvalidHookAccess();\r\n        return useMemoCache(size);\r\n      },\r\n      useHostTransitionStatus: useHostTransitionStatus,\r\n      useCacheRefresh: function () {\r\n        currentHookNameInDev = \"useCacheRefresh\";\r\n        updateHookTypesDev();\r\n        return updateWorkInProgressHook().memoizedState;\r\n      }\r\n    };\r\n    var callComponent = {\r\n        \"react-stack-bottom-frame\": function (Component, props, secondArg) {\r\n          var wasRendering = isRendering;\r\n          isRendering = !0;\r\n          try {\r\n            return Component(props, secondArg);\r\n          } finally {\r\n            isRendering = wasRendering;\r\n          }\r\n        }\r\n      },\r\n      callComponentInDEV =\r\n        callComponent[\"react-stack-bottom-frame\"].bind(callComponent),\r\n      callRender = {\r\n        \"react-stack-bottom-frame\": function (instance) {\r\n          var wasRendering = isRendering;\r\n          isRendering = !0;\r\n          try {\r\n            return instance.render();\r\n          } finally {\r\n            isRendering = wasRendering;\r\n          }\r\n        }\r\n      },\r\n      callRenderInDEV = callRender[\"react-stack-bottom-frame\"].bind(callRender),\r\n      callComponentDidMount = {\r\n        \"react-stack-bottom-frame\": function (finishedWork, instance) {\r\n          try {\r\n            instance.componentDidMount();\r\n          } catch (error) {\r\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n          }\r\n        }\r\n      },\r\n      callComponentDidMountInDEV = callComponentDidMount[\r\n        \"react-stack-bottom-frame\"\r\n      ].bind(callComponentDidMount),\r\n      callComponentDidUpdate = {\r\n        \"react-stack-bottom-frame\": function (\r\n          finishedWork,\r\n          instance,\r\n          prevProps,\r\n          prevState,\r\n          snapshot\r\n        ) {\r\n          try {\r\n            instance.componentDidUpdate(prevProps, prevState, snapshot);\r\n          } catch (error) {\r\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n          }\r\n        }\r\n      },\r\n      callComponentDidUpdateInDEV = callComponentDidUpdate[\r\n        \"react-stack-bottom-frame\"\r\n      ].bind(callComponentDidUpdate),\r\n      callComponentDidCatch = {\r\n        \"react-stack-bottom-frame\": function (instance, errorInfo) {\r\n          var stack = errorInfo.stack;\r\n          instance.componentDidCatch(errorInfo.value, {\r\n            componentStack: null !== stack ? stack : \"\"\r\n          });\r\n        }\r\n      },\r\n      callComponentDidCatchInDEV = callComponentDidCatch[\r\n        \"react-stack-bottom-frame\"\r\n      ].bind(callComponentDidCatch),\r\n      callComponentWillUnmount = {\r\n        \"react-stack-bottom-frame\": function (\r\n          current,\r\n          nearestMountedAncestor,\r\n          instance\r\n        ) {\r\n          try {\r\n            instance.componentWillUnmount();\r\n          } catch (error) {\r\n            captureCommitPhaseError(current, nearestMountedAncestor, error);\r\n          }\r\n        }\r\n      },\r\n      callComponentWillUnmountInDEV = callComponentWillUnmount[\r\n        \"react-stack-bottom-frame\"\r\n      ].bind(callComponentWillUnmount),\r\n      callCreate = {\r\n        \"react-stack-bottom-frame\": function (effect) {\r\n          null != effect.resourceKind &&\r\n            console.error(\r\n              \"Expected only SimpleEffects when enableUseEffectCRUDOverload is disabled, got %s\",\r\n              effect.resourceKind\r\n            );\r\n          var create = effect.create;\r\n          effect = effect.inst;\r\n          create = create();\r\n          return (effect.destroy = create);\r\n        }\r\n      },\r\n      callCreateInDEV = callCreate[\"react-stack-bottom-frame\"].bind(callCreate),\r\n      callDestroy = {\r\n        \"react-stack-bottom-frame\": function (\r\n          current,\r\n          nearestMountedAncestor,\r\n          destroy\r\n        ) {\r\n          try {\r\n            destroy();\r\n          } catch (error) {\r\n            captureCommitPhaseError(current, nearestMountedAncestor, error);\r\n          }\r\n        }\r\n      },\r\n      callDestroyInDEV =\r\n        callDestroy[\"react-stack-bottom-frame\"].bind(callDestroy),\r\n      callLazyInit = {\r\n        \"react-stack-bottom-frame\": function (lazy) {\r\n          var init = lazy._init;\r\n          return init(lazy._payload);\r\n        }\r\n      },\r\n      callLazyInitInDEV =\r\n        callLazyInit[\"react-stack-bottom-frame\"].bind(callLazyInit),\r\n      thenableState = null,\r\n      thenableIndexCounter = 0,\r\n      currentDebugInfo = null,\r\n      didWarnAboutMaps;\r\n    var didWarnAboutGenerators = (didWarnAboutMaps = !1);\r\n    var ownerHasKeyUseWarning = {};\r\n    var ownerHasFunctionTypeWarning = {};\r\n    var ownerHasSymbolTypeWarning = {};\r\n    warnForMissingKey = function (returnFiber, workInProgress, child) {\r\n      if (\r\n        null !== child &&\r\n        \"object\" === typeof child &&\r\n        child._store &&\r\n        ((!child._store.validated && null == child.key) ||\r\n          2 === child._store.validated)\r\n      ) {\r\n        if (\"object\" !== typeof child._store)\r\n          throw Error(\r\n            \"React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.\"\r\n          );\r\n        child._store.validated = 1;\r\n        var componentName = getComponentNameFromFiber(returnFiber),\r\n          componentKey = componentName || \"null\";\r\n        if (!ownerHasKeyUseWarning[componentKey]) {\r\n          ownerHasKeyUseWarning[componentKey] = !0;\r\n          child = child._owner;\r\n          returnFiber = returnFiber._debugOwner;\r\n          var currentComponentErrorInfo = \"\";\r\n          returnFiber &&\r\n            \"number\" === typeof returnFiber.tag &&\r\n            (componentKey = getComponentNameFromFiber(returnFiber)) &&\r\n            (currentComponentErrorInfo =\r\n              \"\\n\\nCheck the render method of `\" + componentKey + \"`.\");\r\n          currentComponentErrorInfo ||\r\n            (componentName &&\r\n              (currentComponentErrorInfo =\r\n                \"\\n\\nCheck the top-level render call using <\" +\r\n                componentName +\r\n                \">.\"));\r\n          var childOwnerAppendix = \"\";\r\n          null != child &&\r\n            returnFiber !== child &&\r\n            ((componentName = null),\r\n            \"number\" === typeof child.tag\r\n              ? (componentName = getComponentNameFromFiber(child))\r\n              : \"string\" === typeof child.name && (componentName = child.name),\r\n            componentName &&\r\n              (childOwnerAppendix =\r\n                \" It was passed a child from \" + componentName + \".\"));\r\n          runWithFiberInDEV(workInProgress, function () {\r\n            console.error(\r\n              'Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information.',\r\n              currentComponentErrorInfo,\r\n              childOwnerAppendix\r\n            );\r\n          });\r\n        }\r\n      }\r\n    };\r\n    var reconcileChildFibers = createChildReconciler(!0),\r\n      mountChildFibers = createChildReconciler(!1),\r\n      suspenseHandlerStackCursor = createCursor(null),\r\n      shellBoundary = null,\r\n      SubtreeSuspenseContextMask = 1,\r\n      ForceSuspenseFallback = 2,\r\n      suspenseStackCursor = createCursor(0),\r\n      fakeInternalInstance = {};\r\n    var didWarnAboutStateAssignmentForComponent = new Set();\r\n    var didWarnAboutUninitializedState = new Set();\r\n    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\r\n    var didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\r\n    var didWarnAboutDirectlyAssigningPropsToState = new Set();\r\n    var didWarnAboutUndefinedDerivedState = new Set();\r\n    var didWarnAboutContextTypes$1 = new Set();\r\n    var didWarnAboutChildContextTypes = new Set();\r\n    var didWarnAboutInvalidateContextType = new Set();\r\n    var didWarnOnInvalidCallback = new Set();\r\n    Object.freeze(fakeInternalInstance);\r\n    var classComponentUpdater = {\r\n        enqueueSetState: function (inst, payload, callback) {\r\n          inst = inst._reactInternals;\r\n          var lane = requestUpdateLane(inst),\r\n            update = createUpdate(lane);\r\n          update.payload = payload;\r\n          void 0 !== callback &&\r\n            null !== callback &&\r\n            (warnOnInvalidCallback(callback), (update.callback = callback));\r\n          payload = enqueueUpdate(inst, update, lane);\r\n          null !== payload &&\r\n            (scheduleUpdateOnFiber(payload, inst, lane),\r\n            entangleTransitions(payload, inst, lane));\r\n          markStateUpdateScheduled(inst, lane);\r\n        },\r\n        enqueueReplaceState: function (inst, payload, callback) {\r\n          inst = inst._reactInternals;\r\n          var lane = requestUpdateLane(inst),\r\n            update = createUpdate(lane);\r\n          update.tag = ReplaceState;\r\n          update.payload = payload;\r\n          void 0 !== callback &&\r\n            null !== callback &&\r\n            (warnOnInvalidCallback(callback), (update.callback = callback));\r\n          payload = enqueueUpdate(inst, update, lane);\r\n          null !== payload &&\r\n            (scheduleUpdateOnFiber(payload, inst, lane),\r\n            entangleTransitions(payload, inst, lane));\r\n          markStateUpdateScheduled(inst, lane);\r\n        },\r\n        enqueueForceUpdate: function (inst, callback) {\r\n          inst = inst._reactInternals;\r\n          var lane = requestUpdateLane(inst),\r\n            update = createUpdate(lane);\r\n          update.tag = ForceUpdate;\r\n          void 0 !== callback &&\r\n            null !== callback &&\r\n            (warnOnInvalidCallback(callback), (update.callback = callback));\r\n          callback = enqueueUpdate(inst, update, lane);\r\n          null !== callback &&\r\n            (scheduleUpdateOnFiber(callback, inst, lane),\r\n            entangleTransitions(callback, inst, lane));\r\n          null !== injectedProfilingHooks &&\r\n            \"function\" ===\r\n              typeof injectedProfilingHooks.markForceUpdateScheduled &&\r\n            injectedProfilingHooks.markForceUpdateScheduled(inst, lane);\r\n        }\r\n      },\r\n      reportGlobalError =\r\n        \"function\" === typeof reportError\r\n          ? reportError\r\n          : function (error) {\r\n              if (\r\n                \"object\" === typeof window &&\r\n                \"function\" === typeof window.ErrorEvent\r\n              ) {\r\n                var event = new window.ErrorEvent(\"error\", {\r\n                  bubbles: !0,\r\n                  cancelable: !0,\r\n                  message:\r\n                    \"object\" === typeof error &&\r\n                    null !== error &&\r\n                    \"string\" === typeof error.message\r\n                      ? String(error.message)\r\n                      : String(error),\r\n                  error: error\r\n                });\r\n                if (!window.dispatchEvent(event)) return;\r\n              } else if (\r\n                \"object\" === typeof process &&\r\n                \"function\" === typeof process.emit\r\n              ) {\r\n                process.emit(\"uncaughtException\", error);\r\n                return;\r\n              }\r\n              console.error(error);\r\n            },\r\n      componentName = null,\r\n      errorBoundaryName = null,\r\n      SelectiveHydrationException = Error(\r\n        \"This is not a real error. It's an implementation detail of React's selective hydration feature. If this leaks into userspace, it's a bug in React. Please file an issue.\"\r\n      ),\r\n      didReceiveUpdate = !1;\r\n    var didWarnAboutBadClass = {};\r\n    var didWarnAboutContextTypeOnFunctionComponent = {};\r\n    var didWarnAboutContextTypes = {};\r\n    var didWarnAboutGetDerivedStateOnFunctionComponent = {};\r\n    var didWarnAboutReassigningProps = !1;\r\n    var didWarnAboutRevealOrder = {};\r\n    var didWarnAboutTailOptions = {};\r\n    var SUSPENDED_MARKER = {\r\n        dehydrated: null,\r\n        treeContext: null,\r\n        retryLane: 0,\r\n        hydrationErrors: null\r\n      },\r\n      hasWarnedAboutUsingNoValuePropOnContextProvider = !1,\r\n      didWarnAboutUndefinedSnapshotBeforeUpdate = null;\r\n    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\r\n    var offscreenSubtreeIsHidden = !1,\r\n      offscreenSubtreeWasHidden = !1,\r\n      needsFormReset = !1,\r\n      PossiblyWeakSet = \"function\" === typeof WeakSet ? WeakSet : Set,\r\n      nextEffect = null,\r\n      inProgressLanes = null,\r\n      inProgressRoot = null,\r\n      hostParent = null,\r\n      hostParentIsContainer = !1,\r\n      currentHoistableRoot = null,\r\n      suspenseyCommitFlag = 8192,\r\n      DefaultAsyncDispatcher = {\r\n        getCacheForType: function (resourceType) {\r\n          var cache = readContext(CacheContext),\r\n            cacheForType = cache.data.get(resourceType);\r\n          void 0 === cacheForType &&\r\n            ((cacheForType = resourceType()),\r\n            cache.data.set(resourceType, cacheForType));\r\n          return cacheForType;\r\n        },\r\n        getOwner: function () {\r\n          return current;\r\n        }\r\n      };\r\n    if (\"function\" === typeof Symbol && Symbol.for) {\r\n      var symbolFor = Symbol.for;\r\n      symbolFor(\"selector.component\");\r\n      symbolFor(\"selector.has_pseudo_class\");\r\n      symbolFor(\"selector.role\");\r\n      symbolFor(\"selector.test_id\");\r\n      symbolFor(\"selector.text\");\r\n    }\r\n    var commitHooks = [],\r\n      PossiblyWeakMap = \"function\" === typeof WeakMap ? WeakMap : Map,\r\n      NoContext = 0,\r\n      RenderContext = 2,\r\n      CommitContext = 4,\r\n      RootInProgress = 0,\r\n      RootFatalErrored = 1,\r\n      RootErrored = 2,\r\n      RootSuspended = 3,\r\n      RootSuspendedWithDelay = 4,\r\n      RootSuspendedAtTheShell = 6,\r\n      RootCompleted = 5,\r\n      executionContext = NoContext,\r\n      workInProgressRoot = null,\r\n      workInProgress = null,\r\n      workInProgressRootRenderLanes = 0,\r\n      NotSuspended = 0,\r\n      SuspendedOnError = 1,\r\n      SuspendedOnData = 2,\r\n      SuspendedOnImmediate = 3,\r\n      SuspendedOnInstance = 4,\r\n      SuspendedOnInstanceAndReadyToContinue = 5,\r\n      SuspendedOnDeprecatedThrowPromise = 6,\r\n      SuspendedAndReadyToContinue = 7,\r\n      SuspendedOnHydration = 8,\r\n      SuspendedOnAction = 9,\r\n      workInProgressSuspendedReason = NotSuspended,\r\n      workInProgressThrownValue = null,\r\n      workInProgressRootDidSkipSuspendedSiblings = !1,\r\n      workInProgressRootIsPrerendering = !1,\r\n      workInProgressRootDidAttachPingListener = !1,\r\n      entangledRenderLanes = 0,\r\n      workInProgressRootExitStatus = RootInProgress,\r\n      workInProgressRootSkippedLanes = 0,\r\n      workInProgressRootInterleavedUpdatedLanes = 0,\r\n      workInProgressRootPingedLanes = 0,\r\n      workInProgressDeferredLane = 0,\r\n      workInProgressSuspendedRetryLanes = 0,\r\n      workInProgressRootConcurrentErrors = null,\r\n      workInProgressRootRecoverableErrors = null,\r\n      workInProgressRootDidIncludeRecursiveRenderUpdate = !1,\r\n      globalMostRecentFallbackTime = 0,\r\n      FALLBACK_THROTTLE_MS = 300,\r\n      workInProgressRootRenderTargetTime = Infinity,\r\n      RENDER_TIMEOUT_MS = 500,\r\n      workInProgressTransitions = null,\r\n      legacyErrorBoundariesThatAlreadyFailed = null,\r\n      IMMEDIATE_COMMIT = 0,\r\n      SUSPENDED_COMMIT = 1,\r\n      THROTTLED_COMMIT = 2,\r\n      NO_PENDING_EFFECTS = 0,\r\n      PENDING_MUTATION_PHASE = 1,\r\n      PENDING_LAYOUT_PHASE = 2,\r\n      PENDING_AFTER_MUTATION_PHASE = 3,\r\n      PENDING_SPAWNED_WORK = 4,\r\n      PENDING_PASSIVE_PHASE = 5,\r\n      pendingEffectsStatus = 0,\r\n      pendingEffectsRoot = null,\r\n      pendingFinishedWork = null,\r\n      pendingEffectsLanes = 0,\r\n      pendingEffectsRemainingLanes = 0,\r\n      pendingPassiveTransitions = null,\r\n      pendingRecoverableErrors = null,\r\n      NESTED_UPDATE_LIMIT = 50,\r\n      nestedUpdateCount = 0,\r\n      rootWithNestedUpdates = null,\r\n      isFlushingPassiveEffects = !1,\r\n      didScheduleUpdateDuringPassiveEffects = !1,\r\n      NESTED_PASSIVE_UPDATE_LIMIT = 50,\r\n      nestedPassiveUpdateCount = 0,\r\n      rootWithPassiveNestedUpdates = null,\r\n      isRunningInsertionEffect = !1,\r\n      didWarnStateUpdateForNotYetMountedComponent = null,\r\n      didWarnAboutUpdateInRender = !1;\r\n    var didWarnAboutUpdateInRenderForAnotherComponent = new Set();\r\n    var fakeActCallbackNode$1 = {},\r\n      firstScheduledRoot = null,\r\n      lastScheduledRoot = null,\r\n      didScheduleMicrotask = !1,\r\n      didScheduleMicrotask_act = !1,\r\n      mightHavePendingSyncWork = !1,\r\n      isFlushingWork = !1,\r\n      currentEventTransitionLane = 0,\r\n      fakeActCallbackNode = {};\r\n    (function () {\r\n      for (var i = 0; i < simpleEventPluginEvents.length; i++) {\r\n        var eventName = simpleEventPluginEvents[i],\r\n          domEventName = eventName.toLowerCase();\r\n        eventName = eventName[0].toUpperCase() + eventName.slice(1);\r\n        registerSimpleEvent(domEventName, \"on\" + eventName);\r\n      }\r\n      registerSimpleEvent(ANIMATION_END, \"onAnimationEnd\");\r\n      registerSimpleEvent(ANIMATION_ITERATION, \"onAnimationIteration\");\r\n      registerSimpleEvent(ANIMATION_START, \"onAnimationStart\");\r\n      registerSimpleEvent(\"dblclick\", \"onDoubleClick\");\r\n      registerSimpleEvent(\"focusin\", \"onFocus\");\r\n      registerSimpleEvent(\"focusout\", \"onBlur\");\r\n      registerSimpleEvent(TRANSITION_RUN, \"onTransitionRun\");\r\n      registerSimpleEvent(TRANSITION_START, \"onTransitionStart\");\r\n      registerSimpleEvent(TRANSITION_CANCEL, \"onTransitionCancel\");\r\n      registerSimpleEvent(TRANSITION_END, \"onTransitionEnd\");\r\n    })();\r\n    registerDirectEvent(\"onMouseEnter\", [\"mouseout\", \"mouseover\"]);\r\n    registerDirectEvent(\"onMouseLeave\", [\"mouseout\", \"mouseover\"]);\r\n    registerDirectEvent(\"onPointerEnter\", [\"pointerout\", \"pointerover\"]);\r\n    registerDirectEvent(\"onPointerLeave\", [\"pointerout\", \"pointerover\"]);\r\n    registerTwoPhaseEvent(\r\n      \"onChange\",\r\n      \"change click focusin focusout input keydown keyup selectionchange\".split(\r\n        \" \"\r\n      )\r\n    );\r\n    registerTwoPhaseEvent(\r\n      \"onSelect\",\r\n      \"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\r\n        \" \"\r\n      )\r\n    );\r\n    registerTwoPhaseEvent(\"onBeforeInput\", [\r\n      \"compositionend\",\r\n      \"keypress\",\r\n      \"textInput\",\r\n      \"paste\"\r\n    ]);\r\n    registerTwoPhaseEvent(\r\n      \"onCompositionEnd\",\r\n      \"compositionend focusout keydown keypress keyup mousedown\".split(\" \")\r\n    );\r\n    registerTwoPhaseEvent(\r\n      \"onCompositionStart\",\r\n      \"compositionstart focusout keydown keypress keyup mousedown\".split(\" \")\r\n    );\r\n    registerTwoPhaseEvent(\r\n      \"onCompositionUpdate\",\r\n      \"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \")\r\n    );\r\n    var mediaEventTypes =\r\n        \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\r\n          \" \"\r\n        ),\r\n      nonDelegatedEvents = new Set(\r\n        \"beforetoggle cancel close invalid load scroll scrollend toggle\"\r\n          .split(\" \")\r\n          .concat(mediaEventTypes)\r\n      ),\r\n      listeningMarker = \"_reactListening\" + Math.random().toString(36).slice(2),\r\n      didWarnControlledToUncontrolled = !1,\r\n      didWarnUncontrolledToControlled = !1,\r\n      didWarnFormActionType = !1,\r\n      didWarnFormActionName = !1,\r\n      didWarnFormActionTarget = !1,\r\n      didWarnFormActionMethod = !1,\r\n      didWarnPopoverTargetObject = !1;\r\n    var didWarnForNewBooleanPropsWithEmptyValue = {};\r\n    var NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g,\r\n      NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g,\r\n      xlinkNamespace = \"http://www.w3.org/1999/xlink\",\r\n      xmlNamespace = \"http://www.w3.org/XML/1998/namespace\",\r\n      EXPECTED_FORM_ACTION_URL =\r\n        \"javascript:throw new Error('React form unexpectedly submitted.')\",\r\n      SUPPRESS_HYDRATION_WARNING = \"suppressHydrationWarning\",\r\n      SUSPENSE_START_DATA = \"$\",\r\n      SUSPENSE_END_DATA = \"/$\",\r\n      SUSPENSE_PENDING_START_DATA = \"$?\",\r\n      SUSPENSE_FALLBACK_START_DATA = \"$!\",\r\n      PREAMBLE_CONTRIBUTION_HTML = 1,\r\n      PREAMBLE_CONTRIBUTION_BODY = 2,\r\n      PREAMBLE_CONTRIBUTION_HEAD = 4,\r\n      FORM_STATE_IS_MATCHING = \"F!\",\r\n      FORM_STATE_IS_NOT_MATCHING = \"F\",\r\n      DOCUMENT_READY_STATE_COMPLETE = \"complete\",\r\n      STYLE = \"style\",\r\n      HostContextNamespaceNone = 0,\r\n      HostContextNamespaceSvg = 1,\r\n      HostContextNamespaceMath = 2,\r\n      eventsEnabled = null,\r\n      selectionInformation = null,\r\n      warnedUnknownTags = { dialog: !0, webview: !0 },\r\n      currentPopstateTransitionEvent = null,\r\n      scheduleTimeout = \"function\" === typeof setTimeout ? setTimeout : void 0,\r\n      cancelTimeout =\r\n        \"function\" === typeof clearTimeout ? clearTimeout : void 0,\r\n      noTimeout = -1,\r\n      localPromise = \"function\" === typeof Promise ? Promise : void 0,\r\n      scheduleMicrotask =\r\n        \"function\" === typeof queueMicrotask\r\n          ? queueMicrotask\r\n          : \"undefined\" !== typeof localPromise\r\n            ? function (callback) {\r\n                return localPromise\r\n                  .resolve(null)\r\n                  .then(callback)\r\n                  .catch(handleErrorInNextTick);\r\n              }\r\n            : scheduleTimeout,\r\n      previousHydratableOnEnteringScopedSingleton = null,\r\n      NotLoaded = 0,\r\n      Loaded = 1,\r\n      Errored = 2,\r\n      Settled = 3,\r\n      Inserted = 4,\r\n      preloadPropsMap = new Map(),\r\n      preconnectsSet = new Set(),\r\n      previousDispatcher = ReactDOMSharedInternals.d;\r\n    ReactDOMSharedInternals.d = {\r\n      f: function () {\r\n        var previousWasRendering = previousDispatcher.f(),\r\n          wasRendering = flushSyncWork$1();\r\n        return previousWasRendering || wasRendering;\r\n      },\r\n      r: function (form) {\r\n        var formInst = getInstanceFromNode(form);\r\n        null !== formInst && 5 === formInst.tag && \"form\" === formInst.type\r\n          ? requestFormReset$1(formInst)\r\n          : previousDispatcher.r(form);\r\n      },\r\n      D: function (href) {\r\n        previousDispatcher.D(href);\r\n        preconnectAs(\"dns-prefetch\", href, null);\r\n      },\r\n      C: function (href, crossOrigin) {\r\n        previousDispatcher.C(href, crossOrigin);\r\n        preconnectAs(\"preconnect\", href, crossOrigin);\r\n      },\r\n      L: function (href, as, options) {\r\n        previousDispatcher.L(href, as, options);\r\n        var ownerDocument = globalDocument;\r\n        if (ownerDocument && href && as) {\r\n          var preloadSelector =\r\n            'link[rel=\"preload\"][as=\"' +\r\n            escapeSelectorAttributeValueInsideDoubleQuotes(as) +\r\n            '\"]';\r\n          \"image\" === as\r\n            ? options && options.imageSrcSet\r\n              ? ((preloadSelector +=\r\n                  '[imagesrcset=\"' +\r\n                  escapeSelectorAttributeValueInsideDoubleQuotes(\r\n                    options.imageSrcSet\r\n                  ) +\r\n                  '\"]'),\r\n                \"string\" === typeof options.imageSizes &&\r\n                  (preloadSelector +=\r\n                    '[imagesizes=\"' +\r\n                    escapeSelectorAttributeValueInsideDoubleQuotes(\r\n                      options.imageSizes\r\n                    ) +\r\n                    '\"]'))\r\n              : (preloadSelector +=\r\n                  '[href=\"' +\r\n                  escapeSelectorAttributeValueInsideDoubleQuotes(href) +\r\n                  '\"]')\r\n            : (preloadSelector +=\r\n                '[href=\"' +\r\n                escapeSelectorAttributeValueInsideDoubleQuotes(href) +\r\n                '\"]');\r\n          var key = preloadSelector;\r\n          switch (as) {\r\n            case \"style\":\r\n              key = getStyleKey(href);\r\n              break;\r\n            case \"script\":\r\n              key = getScriptKey(href);\r\n          }\r\n          preloadPropsMap.has(key) ||\r\n            ((href = assign(\r\n              {\r\n                rel: \"preload\",\r\n                href:\r\n                  \"image\" === as && options && options.imageSrcSet\r\n                    ? void 0\r\n                    : href,\r\n                as: as\r\n              },\r\n              options\r\n            )),\r\n            preloadPropsMap.set(key, href),\r\n            null !== ownerDocument.querySelector(preloadSelector) ||\r\n              (\"style\" === as &&\r\n                ownerDocument.querySelector(\r\n                  getStylesheetSelectorFromKey(key)\r\n                )) ||\r\n              (\"script\" === as &&\r\n                ownerDocument.querySelector(getScriptSelectorFromKey(key))) ||\r\n              ((as = ownerDocument.createElement(\"link\")),\r\n              setInitialProperties(as, \"link\", href),\r\n              markNodeAsHoistable(as),\r\n              ownerDocument.head.appendChild(as)));\r\n        }\r\n      },\r\n      m: function (href, options) {\r\n        previousDispatcher.m(href, options);\r\n        var ownerDocument = globalDocument;\r\n        if (ownerDocument && href) {\r\n          var as =\r\n              options && \"string\" === typeof options.as ? options.as : \"script\",\r\n            preloadSelector =\r\n              'link[rel=\"modulepreload\"][as=\"' +\r\n              escapeSelectorAttributeValueInsideDoubleQuotes(as) +\r\n              '\"][href=\"' +\r\n              escapeSelectorAttributeValueInsideDoubleQuotes(href) +\r\n              '\"]',\r\n            key = preloadSelector;\r\n          switch (as) {\r\n            case \"audioworklet\":\r\n            case \"paintworklet\":\r\n            case \"serviceworker\":\r\n            case \"sharedworker\":\r\n            case \"worker\":\r\n            case \"script\":\r\n              key = getScriptKey(href);\r\n          }\r\n          if (\r\n            !preloadPropsMap.has(key) &&\r\n            ((href = assign({ rel: \"modulepreload\", href: href }, options)),\r\n            preloadPropsMap.set(key, href),\r\n            null === ownerDocument.querySelector(preloadSelector))\r\n          ) {\r\n            switch (as) {\r\n              case \"audioworklet\":\r\n              case \"paintworklet\":\r\n              case \"serviceworker\":\r\n              case \"sharedworker\":\r\n              case \"worker\":\r\n              case \"script\":\r\n                if (ownerDocument.querySelector(getScriptSelectorFromKey(key)))\r\n                  return;\r\n            }\r\n            as = ownerDocument.createElement(\"link\");\r\n            setInitialProperties(as, \"link\", href);\r\n            markNodeAsHoistable(as);\r\n            ownerDocument.head.appendChild(as);\r\n          }\r\n        }\r\n      },\r\n      X: function (src, options) {\r\n        previousDispatcher.X(src, options);\r\n        var ownerDocument = globalDocument;\r\n        if (ownerDocument && src) {\r\n          var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\r\n            key = getScriptKey(src),\r\n            resource = scripts.get(key);\r\n          resource ||\r\n            ((resource = ownerDocument.querySelector(\r\n              getScriptSelectorFromKey(key)\r\n            )),\r\n            resource ||\r\n              ((src = assign({ src: src, async: !0 }, options)),\r\n              (options = preloadPropsMap.get(key)) &&\r\n                adoptPreloadPropsForScript(src, options),\r\n              (resource = ownerDocument.createElement(\"script\")),\r\n              markNodeAsHoistable(resource),\r\n              setInitialProperties(resource, \"link\", src),\r\n              ownerDocument.head.appendChild(resource)),\r\n            (resource = {\r\n              type: \"script\",\r\n              instance: resource,\r\n              count: 1,\r\n              state: null\r\n            }),\r\n            scripts.set(key, resource));\r\n        }\r\n      },\r\n      S: function (href, precedence, options) {\r\n        previousDispatcher.S(href, precedence, options);\r\n        var ownerDocument = globalDocument;\r\n        if (ownerDocument && href) {\r\n          var styles = getResourcesFromRoot(ownerDocument).hoistableStyles,\r\n            key = getStyleKey(href);\r\n          precedence = precedence || \"default\";\r\n          var resource = styles.get(key);\r\n          if (!resource) {\r\n            var state = { loading: NotLoaded, preload: null };\r\n            if (\r\n              (resource = ownerDocument.querySelector(\r\n                getStylesheetSelectorFromKey(key)\r\n              ))\r\n            )\r\n              state.loading = Loaded | Inserted;\r\n            else {\r\n              href = assign(\r\n                {\r\n                  rel: \"stylesheet\",\r\n                  href: href,\r\n                  \"data-precedence\": precedence\r\n                },\r\n                options\r\n              );\r\n              (options = preloadPropsMap.get(key)) &&\r\n                adoptPreloadPropsForStylesheet(href, options);\r\n              var link = (resource = ownerDocument.createElement(\"link\"));\r\n              markNodeAsHoistable(link);\r\n              setInitialProperties(link, \"link\", href);\r\n              link._p = new Promise(function (resolve, reject) {\r\n                link.onload = resolve;\r\n                link.onerror = reject;\r\n              });\r\n              link.addEventListener(\"load\", function () {\r\n                state.loading |= Loaded;\r\n              });\r\n              link.addEventListener(\"error\", function () {\r\n                state.loading |= Errored;\r\n              });\r\n              state.loading |= Inserted;\r\n              insertStylesheet(resource, precedence, ownerDocument);\r\n            }\r\n            resource = {\r\n              type: \"stylesheet\",\r\n              instance: resource,\r\n              count: 1,\r\n              state: state\r\n            };\r\n            styles.set(key, resource);\r\n          }\r\n        }\r\n      },\r\n      M: function (src, options) {\r\n        previousDispatcher.M(src, options);\r\n        var ownerDocument = globalDocument;\r\n        if (ownerDocument && src) {\r\n          var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\r\n            key = getScriptKey(src),\r\n            resource = scripts.get(key);\r\n          resource ||\r\n            ((resource = ownerDocument.querySelector(\r\n              getScriptSelectorFromKey(key)\r\n            )),\r\n            resource ||\r\n              ((src = assign({ src: src, async: !0, type: \"module\" }, options)),\r\n              (options = preloadPropsMap.get(key)) &&\r\n                adoptPreloadPropsForScript(src, options),\r\n              (resource = ownerDocument.createElement(\"script\")),\r\n              markNodeAsHoistable(resource),\r\n              setInitialProperties(resource, \"link\", src),\r\n              ownerDocument.head.appendChild(resource)),\r\n            (resource = {\r\n              type: \"script\",\r\n              instance: resource,\r\n              count: 1,\r\n              state: null\r\n            }),\r\n            scripts.set(key, resource));\r\n        }\r\n      }\r\n    };\r\n    var globalDocument = \"undefined\" === typeof document ? null : document,\r\n      tagCaches = null,\r\n      suspendedState = null,\r\n      LAST_PRECEDENCE = null,\r\n      precedencesByRoot = null,\r\n      NotPendingTransition = NotPending,\r\n      HostTransitionContext = {\r\n        $$typeof: REACT_CONTEXT_TYPE,\r\n        Provider: null,\r\n        Consumer: null,\r\n        _currentValue: NotPendingTransition,\r\n        _currentValue2: NotPendingTransition,\r\n        _threadCount: 0\r\n      },\r\n      badgeFormat = \"%c%s%c \",\r\n      badgeStyle =\r\n        \"background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px\",\r\n      resetStyle = \"\",\r\n      pad = \" \",\r\n      bind = Function.prototype.bind;\r\n    var didWarnAboutNestedUpdates = !1;\r\n    var overrideHookState = null,\r\n      overrideHookStateDeletePath = null,\r\n      overrideHookStateRenamePath = null,\r\n      overrideProps = null,\r\n      overridePropsDeletePath = null,\r\n      overridePropsRenamePath = null,\r\n      scheduleUpdate = null,\r\n      setErrorHandler = null,\r\n      setSuspenseHandler = null;\r\n    overrideHookState = function (fiber, id, path, value) {\r\n      id = findHook(fiber, id);\r\n      null !== id &&\r\n        ((path = copyWithSetImpl(id.memoizedState, path, 0, value)),\r\n        (id.memoizedState = path),\r\n        (id.baseState = path),\r\n        (fiber.memoizedProps = assign({}, fiber.memoizedProps)),\r\n        (path = enqueueConcurrentRenderForLane(fiber, 2)),\r\n        null !== path && scheduleUpdateOnFiber(path, fiber, 2));\r\n    };\r\n    overrideHookStateDeletePath = function (fiber, id, path) {\r\n      id = findHook(fiber, id);\r\n      null !== id &&\r\n        ((path = copyWithDeleteImpl(id.memoizedState, path, 0)),\r\n        (id.memoizedState = path),\r\n        (id.baseState = path),\r\n        (fiber.memoizedProps = assign({}, fiber.memoizedProps)),\r\n        (path = enqueueConcurrentRenderForLane(fiber, 2)),\r\n        null !== path && scheduleUpdateOnFiber(path, fiber, 2));\r\n    };\r\n    overrideHookStateRenamePath = function (fiber, id, oldPath, newPath) {\r\n      id = findHook(fiber, id);\r\n      null !== id &&\r\n        ((oldPath = copyWithRename(id.memoizedState, oldPath, newPath)),\r\n        (id.memoizedState = oldPath),\r\n        (id.baseState = oldPath),\r\n        (fiber.memoizedProps = assign({}, fiber.memoizedProps)),\r\n        (oldPath = enqueueConcurrentRenderForLane(fiber, 2)),\r\n        null !== oldPath && scheduleUpdateOnFiber(oldPath, fiber, 2));\r\n    };\r\n    overrideProps = function (fiber, path, value) {\r\n      fiber.pendingProps = copyWithSetImpl(fiber.memoizedProps, path, 0, value);\r\n      fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);\r\n      path = enqueueConcurrentRenderForLane(fiber, 2);\r\n      null !== path && scheduleUpdateOnFiber(path, fiber, 2);\r\n    };\r\n    overridePropsDeletePath = function (fiber, path) {\r\n      fiber.pendingProps = copyWithDeleteImpl(fiber.memoizedProps, path, 0);\r\n      fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);\r\n      path = enqueueConcurrentRenderForLane(fiber, 2);\r\n      null !== path && scheduleUpdateOnFiber(path, fiber, 2);\r\n    };\r\n    overridePropsRenamePath = function (fiber, oldPath, newPath) {\r\n      fiber.pendingProps = copyWithRename(\r\n        fiber.memoizedProps,\r\n        oldPath,\r\n        newPath\r\n      );\r\n      fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);\r\n      oldPath = enqueueConcurrentRenderForLane(fiber, 2);\r\n      null !== oldPath && scheduleUpdateOnFiber(oldPath, fiber, 2);\r\n    };\r\n    scheduleUpdate = function (fiber) {\r\n      var root = enqueueConcurrentRenderForLane(fiber, 2);\r\n      null !== root && scheduleUpdateOnFiber(root, fiber, 2);\r\n    };\r\n    setErrorHandler = function (newShouldErrorImpl) {\r\n      shouldErrorImpl = newShouldErrorImpl;\r\n    };\r\n    setSuspenseHandler = function (newShouldSuspendImpl) {\r\n      shouldSuspendImpl = newShouldSuspendImpl;\r\n    };\r\n    var _enabled = !0,\r\n      return_targetInst = null,\r\n      hasScheduledReplayAttempt = !1,\r\n      queuedFocus = null,\r\n      queuedDrag = null,\r\n      queuedMouse = null,\r\n      queuedPointers = new Map(),\r\n      queuedPointerCaptures = new Map(),\r\n      queuedExplicitHydrationTargets = [],\r\n      discreteReplayableEvents =\r\n        \"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset\".split(\r\n          \" \"\r\n        ),\r\n      lastScheduledReplayQueue = null;\r\n    ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render =\r\n      function (children) {\r\n        var root = this._internalRoot;\r\n        if (null === root) throw Error(\"Cannot update an unmounted root.\");\r\n        var args = arguments;\r\n        \"function\" === typeof args[1]\r\n          ? console.error(\r\n              \"does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().\"\r\n            )\r\n          : isValidContainer(args[1])\r\n            ? console.error(\r\n                \"You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.\"\r\n              )\r\n            : \"undefined\" !== typeof args[1] &&\r\n              console.error(\r\n                \"You passed a second argument to root.render(...) but it only accepts one argument.\"\r\n              );\r\n        args = children;\r\n        var current = root.current,\r\n          lane = requestUpdateLane(current);\r\n        updateContainerImpl(current, lane, args, root, null, null);\r\n      };\r\n    ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount =\r\n      function () {\r\n        var args = arguments;\r\n        \"function\" === typeof args[0] &&\r\n          console.error(\r\n            \"does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().\"\r\n          );\r\n        args = this._internalRoot;\r\n        if (null !== args) {\r\n          this._internalRoot = null;\r\n          var container = args.containerInfo;\r\n          (executionContext & (RenderContext | CommitContext)) !== NoContext &&\r\n            console.error(\r\n              \"Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.\"\r\n            );\r\n          updateContainerImpl(args.current, 2, null, args, null, null);\r\n          flushSyncWork$1();\r\n          container[internalContainerInstanceKey] = null;\r\n        }\r\n      };\r\n    ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (\r\n      target\r\n    ) {\r\n      if (target) {\r\n        var updatePriority = resolveUpdatePriority();\r\n        target = { blockedOn: null, target: target, priority: updatePriority };\r\n        for (\r\n          var i = 0;\r\n          i < queuedExplicitHydrationTargets.length &&\r\n          0 !== updatePriority &&\r\n          updatePriority < queuedExplicitHydrationTargets[i].priority;\r\n          i++\r\n        );\r\n        queuedExplicitHydrationTargets.splice(i, 0, target);\r\n        0 === i && attemptExplicitHydrationTarget(target);\r\n      }\r\n    };\r\n    (function () {\r\n      var isomorphicReactPackageVersion = React.version;\r\n      if (\"19.1.0\" !== isomorphicReactPackageVersion)\r\n        throw Error(\r\n          'Incompatible React versions: The \"react\" and \"react-dom\" packages must have the exact same version. Instead got:\\n  - react:      ' +\r\n            (isomorphicReactPackageVersion +\r\n              \"\\n  - react-dom:  19.1.0\\nLearn more: https://react.dev/warnings/version-mismatch\")\r\n        );\r\n    })();\r\n    (\"function\" === typeof Map &&\r\n      null != Map.prototype &&\r\n      \"function\" === typeof Map.prototype.forEach &&\r\n      \"function\" === typeof Set &&\r\n      null != Set.prototype &&\r\n      \"function\" === typeof Set.prototype.clear &&\r\n      \"function\" === typeof Set.prototype.forEach) ||\r\n      console.error(\r\n        \"React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://react.dev/link/react-polyfills\"\r\n      );\r\n    ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {\r\n      var fiber = componentOrElement._reactInternals;\r\n      if (void 0 === fiber) {\r\n        if (\"function\" === typeof componentOrElement.render)\r\n          throw Error(\"Unable to find node on an unmounted component.\");\r\n        componentOrElement = Object.keys(componentOrElement).join(\",\");\r\n        throw Error(\r\n          \"Argument appears to not be a ReactComponent. Keys: \" +\r\n            componentOrElement\r\n        );\r\n      }\r\n      componentOrElement = findCurrentFiberUsingSlowPath(fiber);\r\n      componentOrElement =\r\n        null !== componentOrElement\r\n          ? findCurrentHostFiberImpl(componentOrElement)\r\n          : null;\r\n      componentOrElement =\r\n        null === componentOrElement ? null : componentOrElement.stateNode;\r\n      return componentOrElement;\r\n    };\r\n    if (\r\n      !(function () {\r\n        var internals = {\r\n          bundleType: 1,\r\n          version: \"19.1.0\",\r\n          rendererPackageName: \"react-dom\",\r\n          currentDispatcherRef: ReactSharedInternals,\r\n          reconcilerVersion: \"19.1.0\"\r\n        };\r\n        internals.overrideHookState = overrideHookState;\r\n        internals.overrideHookStateDeletePath = overrideHookStateDeletePath;\r\n        internals.overrideHookStateRenamePath = overrideHookStateRenamePath;\r\n        internals.overrideProps = overrideProps;\r\n        internals.overridePropsDeletePath = overridePropsDeletePath;\r\n        internals.overridePropsRenamePath = overridePropsRenamePath;\r\n        internals.scheduleUpdate = scheduleUpdate;\r\n        internals.setErrorHandler = setErrorHandler;\r\n        internals.setSuspenseHandler = setSuspenseHandler;\r\n        internals.scheduleRefresh = scheduleRefresh;\r\n        internals.scheduleRoot = scheduleRoot;\r\n        internals.setRefreshHandler = setRefreshHandler;\r\n        internals.getCurrentFiber = getCurrentFiberForDevTools;\r\n        internals.getLaneLabelMap = getLaneLabelMap;\r\n        internals.injectProfilingHooks = injectProfilingHooks;\r\n        return injectInternals(internals);\r\n      })() &&\r\n      canUseDOM &&\r\n      window.top === window.self &&\r\n      ((-1 < navigator.userAgent.indexOf(\"Chrome\") &&\r\n        -1 === navigator.userAgent.indexOf(\"Edge\")) ||\r\n        -1 < navigator.userAgent.indexOf(\"Firefox\"))\r\n    ) {\r\n      var protocol = window.location.protocol;\r\n      /^(https?|file):$/.test(protocol) &&\r\n        console.info(\r\n          \"%cDownload the React DevTools for a better development experience: https://react.dev/link/react-devtools\" +\r\n            (\"file:\" === protocol\r\n              ? \"\\nYou might need to use a local HTTP server (instead of file://): https://react.dev/link/react-devtools-faq\"\r\n              : \"\"),\r\n          \"font-weight:bold\"\r\n        );\r\n    }\r\n    exports.createRoot = function (container, options) {\r\n      if (!isValidContainer(container))\r\n        throw Error(\"Target container is not a DOM element.\");\r\n      warnIfReactDOMContainerInDEV(container);\r\n      var isStrictMode = !1,\r\n        identifierPrefix = \"\",\r\n        onUncaughtError = defaultOnUncaughtError,\r\n        onCaughtError = defaultOnCaughtError,\r\n        onRecoverableError = defaultOnRecoverableError,\r\n        transitionCallbacks = null;\r\n      null !== options &&\r\n        void 0 !== options &&\r\n        (options.hydrate\r\n          ? console.warn(\r\n              \"hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.\"\r\n            )\r\n          : \"object\" === typeof options &&\r\n            null !== options &&\r\n            options.$$typeof === REACT_ELEMENT_TYPE &&\r\n            console.error(\r\n              \"You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\\n\\n  let root = createRoot(domContainer);\\n  root.render(<App />);\"\r\n            ),\r\n        !0 === options.unstable_strictMode && (isStrictMode = !0),\r\n        void 0 !== options.identifierPrefix &&\r\n          (identifierPrefix = options.identifierPrefix),\r\n        void 0 !== options.onUncaughtError &&\r\n          (onUncaughtError = options.onUncaughtError),\r\n        void 0 !== options.onCaughtError &&\r\n          (onCaughtError = options.onCaughtError),\r\n        void 0 !== options.onRecoverableError &&\r\n          (onRecoverableError = options.onRecoverableError),\r\n        void 0 !== options.unstable_transitionCallbacks &&\r\n          (transitionCallbacks = options.unstable_transitionCallbacks));\r\n      options = createFiberRoot(\r\n        container,\r\n        1,\r\n        !1,\r\n        null,\r\n        null,\r\n        isStrictMode,\r\n        identifierPrefix,\r\n        onUncaughtError,\r\n        onCaughtError,\r\n        onRecoverableError,\r\n        transitionCallbacks,\r\n        null\r\n      );\r\n      container[internalContainerInstanceKey] = options.current;\r\n      listenToAllSupportedEvents(container);\r\n      return new ReactDOMRoot(options);\r\n    };\r\n    exports.hydrateRoot = function (container, initialChildren, options) {\r\n      if (!isValidContainer(container))\r\n        throw Error(\"Target container is not a DOM element.\");\r\n      warnIfReactDOMContainerInDEV(container);\r\n      void 0 === initialChildren &&\r\n        console.error(\r\n          \"Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)\"\r\n        );\r\n      var isStrictMode = !1,\r\n        identifierPrefix = \"\",\r\n        onUncaughtError = defaultOnUncaughtError,\r\n        onCaughtError = defaultOnCaughtError,\r\n        onRecoverableError = defaultOnRecoverableError,\r\n        transitionCallbacks = null,\r\n        formState = null;\r\n      null !== options &&\r\n        void 0 !== options &&\r\n        (!0 === options.unstable_strictMode && (isStrictMode = !0),\r\n        void 0 !== options.identifierPrefix &&\r\n          (identifierPrefix = options.identifierPrefix),\r\n        void 0 !== options.onUncaughtError &&\r\n          (onUncaughtError = options.onUncaughtError),\r\n        void 0 !== options.onCaughtError &&\r\n          (onCaughtError = options.onCaughtError),\r\n        void 0 !== options.onRecoverableError &&\r\n          (onRecoverableError = options.onRecoverableError),\r\n        void 0 !== options.unstable_transitionCallbacks &&\r\n          (transitionCallbacks = options.unstable_transitionCallbacks),\r\n        void 0 !== options.formState && (formState = options.formState));\r\n      initialChildren = createFiberRoot(\r\n        container,\r\n        1,\r\n        !0,\r\n        initialChildren,\r\n        null != options ? options : null,\r\n        isStrictMode,\r\n        identifierPrefix,\r\n        onUncaughtError,\r\n        onCaughtError,\r\n        onRecoverableError,\r\n        transitionCallbacks,\r\n        formState\r\n      );\r\n      initialChildren.context = getContextForSubtree(null);\r\n      options = initialChildren.current;\r\n      isStrictMode = requestUpdateLane(options);\r\n      isStrictMode = getBumpedLaneForHydrationByLane(isStrictMode);\r\n      identifierPrefix = createUpdate(isStrictMode);\r\n      identifierPrefix.callback = null;\r\n      enqueueUpdate(options, identifierPrefix, isStrictMode);\r\n      options = isStrictMode;\r\n      initialChildren.current.lanes = options;\r\n      markRootUpdated$1(initialChildren, options);\r\n      ensureRootIsScheduled(initialChildren);\r\n      container[internalContainerInstanceKey] = initialChildren.current;\r\n      listenToAllSupportedEvents(container);\r\n      return new ReactDOMHydrationRoot(initialChildren);\r\n    };\r\n    exports.version = \"19.1.0\";\r\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\r\n      \"function\" ===\r\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\r\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\r\n  })();\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/react-dom/cjs/react-dom-client.development.js?");

/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.development.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\r\n * @license React\r\n * react-dom.development.js\r\n *\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\r\n true &&\r\n  (function () {\r\n    function noop() {}\r\n    function testStringCoercion(value) {\r\n      return \"\" + value;\r\n    }\r\n    function createPortal$1(children, containerInfo, implementation) {\r\n      var key =\r\n        3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\r\n      try {\r\n        testStringCoercion(key);\r\n        var JSCompiler_inline_result = !1;\r\n      } catch (e) {\r\n        JSCompiler_inline_result = !0;\r\n      }\r\n      JSCompiler_inline_result &&\r\n        (console.error(\r\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\r\n          (\"function\" === typeof Symbol &&\r\n            Symbol.toStringTag &&\r\n            key[Symbol.toStringTag]) ||\r\n            key.constructor.name ||\r\n            \"Object\"\r\n        ),\r\n        testStringCoercion(key));\r\n      return {\r\n        $$typeof: REACT_PORTAL_TYPE,\r\n        key: null == key ? null : \"\" + key,\r\n        children: children,\r\n        containerInfo: containerInfo,\r\n        implementation: implementation\r\n      };\r\n    }\r\n    function getCrossOriginStringAs(as, input) {\r\n      if (\"font\" === as) return \"\";\r\n      if (\"string\" === typeof input)\r\n        return \"use-credentials\" === input ? input : \"\";\r\n    }\r\n    function getValueDescriptorExpectingObjectForWarning(thing) {\r\n      return null === thing\r\n        ? \"`null`\"\r\n        : void 0 === thing\r\n          ? \"`undefined`\"\r\n          : \"\" === thing\r\n            ? \"an empty string\"\r\n            : 'something with type \"' + typeof thing + '\"';\r\n    }\r\n    function getValueDescriptorExpectingEnumForWarning(thing) {\r\n      return null === thing\r\n        ? \"`null`\"\r\n        : void 0 === thing\r\n          ? \"`undefined`\"\r\n          : \"\" === thing\r\n            ? \"an empty string\"\r\n            : \"string\" === typeof thing\r\n              ? JSON.stringify(thing)\r\n              : \"number\" === typeof thing\r\n                ? \"`\" + thing + \"`\"\r\n                : 'something with type \"' + typeof thing + '\"';\r\n    }\r\n    function resolveDispatcher() {\r\n      var dispatcher = ReactSharedInternals.H;\r\n      null === dispatcher &&\r\n        console.error(\r\n          \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.\"\r\n        );\r\n      return dispatcher;\r\n    }\r\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\r\n      \"function\" ===\r\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\r\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\r\n    var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\r\n      Internals = {\r\n        d: {\r\n          f: noop,\r\n          r: function () {\r\n            throw Error(\r\n              \"Invalid form element. requestFormReset must be passed a form that was rendered by React.\"\r\n            );\r\n          },\r\n          D: noop,\r\n          C: noop,\r\n          L: noop,\r\n          m: noop,\r\n          X: noop,\r\n          S: noop,\r\n          M: noop\r\n        },\r\n        p: 0,\r\n        findDOMNode: null\r\n      },\r\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\r\n      ReactSharedInternals =\r\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\r\n    (\"function\" === typeof Map &&\r\n      null != Map.prototype &&\r\n      \"function\" === typeof Map.prototype.forEach &&\r\n      \"function\" === typeof Set &&\r\n      null != Set.prototype &&\r\n      \"function\" === typeof Set.prototype.clear &&\r\n      \"function\" === typeof Set.prototype.forEach) ||\r\n      console.error(\r\n        \"React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\"\r\n      );\r\n    exports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\r\n      Internals;\r\n    exports.createPortal = function (children, container) {\r\n      var key =\r\n        2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\r\n      if (\r\n        !container ||\r\n        (1 !== container.nodeType &&\r\n          9 !== container.nodeType &&\r\n          11 !== container.nodeType)\r\n      )\r\n        throw Error(\"Target container is not a DOM element.\");\r\n      return createPortal$1(children, container, null, key);\r\n    };\r\n    exports.flushSync = function (fn) {\r\n      var previousTransition = ReactSharedInternals.T,\r\n        previousUpdatePriority = Internals.p;\r\n      try {\r\n        if (((ReactSharedInternals.T = null), (Internals.p = 2), fn))\r\n          return fn();\r\n      } finally {\r\n        (ReactSharedInternals.T = previousTransition),\r\n          (Internals.p = previousUpdatePriority),\r\n          Internals.d.f() &&\r\n            console.error(\r\n              \"flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.\"\r\n            );\r\n      }\r\n    };\r\n    exports.preconnect = function (href, options) {\r\n      \"string\" === typeof href && href\r\n        ? null != options && \"object\" !== typeof options\r\n          ? console.error(\r\n              \"ReactDOM.preconnect(): Expected the `options` argument (second) to be an object but encountered %s instead. The only supported option at this time is `crossOrigin` which accepts a string.\",\r\n              getValueDescriptorExpectingEnumForWarning(options)\r\n            )\r\n          : null != options &&\r\n            \"string\" !== typeof options.crossOrigin &&\r\n            console.error(\r\n              \"ReactDOM.preconnect(): Expected the `crossOrigin` option (second argument) to be a string but encountered %s instead. Try removing this option or passing a string value instead.\",\r\n              getValueDescriptorExpectingObjectForWarning(options.crossOrigin)\r\n            )\r\n        : console.error(\r\n            \"ReactDOM.preconnect(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.\",\r\n            getValueDescriptorExpectingObjectForWarning(href)\r\n          );\r\n      \"string\" === typeof href &&\r\n        (options\r\n          ? ((options = options.crossOrigin),\r\n            (options =\r\n              \"string\" === typeof options\r\n                ? \"use-credentials\" === options\r\n                  ? options\r\n                  : \"\"\r\n                : void 0))\r\n          : (options = null),\r\n        Internals.d.C(href, options));\r\n    };\r\n    exports.prefetchDNS = function (href) {\r\n      if (\"string\" !== typeof href || !href)\r\n        console.error(\r\n          \"ReactDOM.prefetchDNS(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.\",\r\n          getValueDescriptorExpectingObjectForWarning(href)\r\n        );\r\n      else if (1 < arguments.length) {\r\n        var options = arguments[1];\r\n        \"object\" === typeof options && options.hasOwnProperty(\"crossOrigin\")\r\n          ? console.error(\r\n              \"ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. It looks like the you are attempting to set a crossOrigin property for this DNS lookup hint. Browsers do not perform DNS queries using CORS and setting this attribute on the resource hint has no effect. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.\",\r\n              getValueDescriptorExpectingEnumForWarning(options)\r\n            )\r\n          : console.error(\r\n              \"ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.\",\r\n              getValueDescriptorExpectingEnumForWarning(options)\r\n            );\r\n      }\r\n      \"string\" === typeof href && Internals.d.D(href);\r\n    };\r\n    exports.preinit = function (href, options) {\r\n      \"string\" === typeof href && href\r\n        ? null == options || \"object\" !== typeof options\r\n          ? console.error(\r\n              \"ReactDOM.preinit(): Expected the `options` argument (second) to be an object with an `as` property describing the type of resource to be preinitialized but encountered %s instead.\",\r\n              getValueDescriptorExpectingEnumForWarning(options)\r\n            )\r\n          : \"style\" !== options.as &&\r\n            \"script\" !== options.as &&\r\n            console.error(\r\n              'ReactDOM.preinit(): Expected the `as` property in the `options` argument (second) to contain a valid value describing the type of resource to be preinitialized but encountered %s instead. Valid values for `as` are \"style\" and \"script\".',\r\n              getValueDescriptorExpectingEnumForWarning(options.as)\r\n            )\r\n        : console.error(\r\n            \"ReactDOM.preinit(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.\",\r\n            getValueDescriptorExpectingObjectForWarning(href)\r\n          );\r\n      if (\r\n        \"string\" === typeof href &&\r\n        options &&\r\n        \"string\" === typeof options.as\r\n      ) {\r\n        var as = options.as,\r\n          crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\r\n          integrity =\r\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\r\n          fetchPriority =\r\n            \"string\" === typeof options.fetchPriority\r\n              ? options.fetchPriority\r\n              : void 0;\r\n        \"style\" === as\r\n          ? Internals.d.S(\r\n              href,\r\n              \"string\" === typeof options.precedence\r\n                ? options.precedence\r\n                : void 0,\r\n              {\r\n                crossOrigin: crossOrigin,\r\n                integrity: integrity,\r\n                fetchPriority: fetchPriority\r\n              }\r\n            )\r\n          : \"script\" === as &&\r\n            Internals.d.X(href, {\r\n              crossOrigin: crossOrigin,\r\n              integrity: integrity,\r\n              fetchPriority: fetchPriority,\r\n              nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\r\n            });\r\n      }\r\n    };\r\n    exports.preinitModule = function (href, options) {\r\n      var encountered = \"\";\r\n      (\"string\" === typeof href && href) ||\r\n        (encountered +=\r\n          \" The `href` argument encountered was \" +\r\n          getValueDescriptorExpectingObjectForWarning(href) +\r\n          \".\");\r\n      void 0 !== options && \"object\" !== typeof options\r\n        ? (encountered +=\r\n            \" The `options` argument encountered was \" +\r\n            getValueDescriptorExpectingObjectForWarning(options) +\r\n            \".\")\r\n        : options &&\r\n          \"as\" in options &&\r\n          \"script\" !== options.as &&\r\n          (encountered +=\r\n            \" The `as` option encountered was \" +\r\n            getValueDescriptorExpectingEnumForWarning(options.as) +\r\n            \".\");\r\n      if (encountered)\r\n        console.error(\r\n          \"ReactDOM.preinitModule(): Expected up to two arguments, a non-empty `href` string and, optionally, an `options` object with a valid `as` property.%s\",\r\n          encountered\r\n        );\r\n      else\r\n        switch (\r\n          ((encountered =\r\n            options && \"string\" === typeof options.as ? options.as : \"script\"),\r\n          encountered)\r\n        ) {\r\n          case \"script\":\r\n            break;\r\n          default:\r\n            (encountered =\r\n              getValueDescriptorExpectingEnumForWarning(encountered)),\r\n              console.error(\r\n                'ReactDOM.preinitModule(): Currently the only supported \"as\" type for this function is \"script\" but received \"%s\" instead. This warning was generated for `href` \"%s\". In the future other module types will be supported, aligning with the import-attributes proposal. Learn more here: (https://github.com/tc39/proposal-import-attributes)',\r\n                encountered,\r\n                href\r\n              );\r\n        }\r\n      if (\"string\" === typeof href)\r\n        if (\"object\" === typeof options && null !== options) {\r\n          if (null == options.as || \"script\" === options.as)\r\n            (encountered = getCrossOriginStringAs(\r\n              options.as,\r\n              options.crossOrigin\r\n            )),\r\n              Internals.d.M(href, {\r\n                crossOrigin: encountered,\r\n                integrity:\r\n                  \"string\" === typeof options.integrity\r\n                    ? options.integrity\r\n                    : void 0,\r\n                nonce:\r\n                  \"string\" === typeof options.nonce ? options.nonce : void 0\r\n              });\r\n        } else null == options && Internals.d.M(href);\r\n    };\r\n    exports.preload = function (href, options) {\r\n      var encountered = \"\";\r\n      (\"string\" === typeof href && href) ||\r\n        (encountered +=\r\n          \" The `href` argument encountered was \" +\r\n          getValueDescriptorExpectingObjectForWarning(href) +\r\n          \".\");\r\n      null == options || \"object\" !== typeof options\r\n        ? (encountered +=\r\n            \" The `options` argument encountered was \" +\r\n            getValueDescriptorExpectingObjectForWarning(options) +\r\n            \".\")\r\n        : (\"string\" === typeof options.as && options.as) ||\r\n          (encountered +=\r\n            \" The `as` option encountered was \" +\r\n            getValueDescriptorExpectingObjectForWarning(options.as) +\r\n            \".\");\r\n      encountered &&\r\n        console.error(\r\n          'ReactDOM.preload(): Expected two arguments, a non-empty `href` string and an `options` object with an `as` property valid for a `<link rel=\"preload\" as=\"...\" />` tag.%s',\r\n          encountered\r\n        );\r\n      if (\r\n        \"string\" === typeof href &&\r\n        \"object\" === typeof options &&\r\n        null !== options &&\r\n        \"string\" === typeof options.as\r\n      ) {\r\n        encountered = options.as;\r\n        var crossOrigin = getCrossOriginStringAs(\r\n          encountered,\r\n          options.crossOrigin\r\n        );\r\n        Internals.d.L(href, encountered, {\r\n          crossOrigin: crossOrigin,\r\n          integrity:\r\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\r\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\r\n          type: \"string\" === typeof options.type ? options.type : void 0,\r\n          fetchPriority:\r\n            \"string\" === typeof options.fetchPriority\r\n              ? options.fetchPriority\r\n              : void 0,\r\n          referrerPolicy:\r\n            \"string\" === typeof options.referrerPolicy\r\n              ? options.referrerPolicy\r\n              : void 0,\r\n          imageSrcSet:\r\n            \"string\" === typeof options.imageSrcSet\r\n              ? options.imageSrcSet\r\n              : void 0,\r\n          imageSizes:\r\n            \"string\" === typeof options.imageSizes\r\n              ? options.imageSizes\r\n              : void 0,\r\n          media: \"string\" === typeof options.media ? options.media : void 0\r\n        });\r\n      }\r\n    };\r\n    exports.preloadModule = function (href, options) {\r\n      var encountered = \"\";\r\n      (\"string\" === typeof href && href) ||\r\n        (encountered +=\r\n          \" The `href` argument encountered was \" +\r\n          getValueDescriptorExpectingObjectForWarning(href) +\r\n          \".\");\r\n      void 0 !== options && \"object\" !== typeof options\r\n        ? (encountered +=\r\n            \" The `options` argument encountered was \" +\r\n            getValueDescriptorExpectingObjectForWarning(options) +\r\n            \".\")\r\n        : options &&\r\n          \"as\" in options &&\r\n          \"string\" !== typeof options.as &&\r\n          (encountered +=\r\n            \" The `as` option encountered was \" +\r\n            getValueDescriptorExpectingObjectForWarning(options.as) +\r\n            \".\");\r\n      encountered &&\r\n        console.error(\r\n          'ReactDOM.preloadModule(): Expected two arguments, a non-empty `href` string and, optionally, an `options` object with an `as` property valid for a `<link rel=\"modulepreload\" as=\"...\" />` tag.%s',\r\n          encountered\r\n        );\r\n      \"string\" === typeof href &&\r\n        (options\r\n          ? ((encountered = getCrossOriginStringAs(\r\n              options.as,\r\n              options.crossOrigin\r\n            )),\r\n            Internals.d.m(href, {\r\n              as:\r\n                \"string\" === typeof options.as && \"script\" !== options.as\r\n                  ? options.as\r\n                  : void 0,\r\n              crossOrigin: encountered,\r\n              integrity:\r\n                \"string\" === typeof options.integrity\r\n                  ? options.integrity\r\n                  : void 0\r\n            }))\r\n          : Internals.d.m(href));\r\n    };\r\n    exports.requestFormReset = function (form) {\r\n      Internals.d.r(form);\r\n    };\r\n    exports.unstable_batchedUpdates = function (fn, a) {\r\n      return fn(a);\r\n    };\r\n    exports.useFormState = function (action, initialState, permalink) {\r\n      return resolveDispatcher().useFormState(action, initialState, permalink);\r\n    };\r\n    exports.useFormStatus = function () {\r\n      return resolveDispatcher().useHostTransitionStatus();\r\n    };\r\n    exports.version = \"19.1.0\";\r\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\r\n      \"function\" ===\r\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\r\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\r\n  })();\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/react-dom/cjs/react-dom.development.js?");

/***/ }),

/***/ "./node_modules/react-dom/client.js":
/*!******************************************!*\
  !*** ./node_modules/react-dom/client.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\r\n\r\nfunction checkDCE() {\r\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\r\n  if (\r\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\r\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\r\n  ) {\r\n    return;\r\n  }\r\n  if (true) {\r\n    // This branch is unreachable because this function is only called\r\n    // in production, but the condition is true only in development.\r\n    // Therefore if the branch is still here, dead code elimination wasn't\r\n    // properly applied.\r\n    // Don't change the message. React DevTools relies on it. Also make sure\r\n    // this message doesn't occur elsewhere in this function, or it will cause\r\n    // a false positive.\r\n    throw new Error('^_^');\r\n  }\r\n  // removed by dead control flow\n{}\r\n}\r\n\r\nif (false) // removed by dead control flow\n{} else {\r\n  module.exports = __webpack_require__(/*! ./cjs/react-dom-client.development.js */ \"./node_modules/react-dom/cjs/react-dom-client.development.js\");\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/react-dom/client.js?");

/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!*****************************************!*\
  !*** ./node_modules/react-dom/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\r\n\r\nfunction checkDCE() {\r\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\r\n  if (\r\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\r\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\r\n  ) {\r\n    return;\r\n  }\r\n  if (true) {\r\n    // This branch is unreachable because this function is only called\r\n    // in production, but the condition is true only in development.\r\n    // Therefore if the branch is still here, dead code elimination wasn't\r\n    // properly applied.\r\n    // Don't change the message. React DevTools relies on it. Also make sure\r\n    // this message doesn't occur elsewhere in this function, or it will cause\r\n    // a false positive.\r\n    throw new Error('^_^');\r\n  }\r\n  // removed by dead control flow\n{}\r\n}\r\n\r\nif (false) // removed by dead control flow\n{} else {\r\n  module.exports = __webpack_require__(/*! ./cjs/react-dom.development.js */ \"./node_modules/react-dom/cjs/react-dom.development.js\");\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/react-dom/index.js?");

/***/ }),

/***/ "./node_modules/react-router/dist/development/chunk-NL6KNZEE.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/react-router/dist/development/chunk-NL6KNZEE.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Action: () => (/* binding */ Action),\n/* harmony export */   Await: () => (/* binding */ Await),\n/* harmony export */   BrowserRouter: () => (/* binding */ BrowserRouter),\n/* harmony export */   DataRouterContext: () => (/* binding */ DataRouterContext),\n/* harmony export */   DataRouterStateContext: () => (/* binding */ DataRouterStateContext),\n/* harmony export */   ErrorResponseImpl: () => (/* binding */ ErrorResponseImpl),\n/* harmony export */   FetchersContext: () => (/* binding */ FetchersContext),\n/* harmony export */   Form: () => (/* binding */ Form),\n/* harmony export */   FrameworkContext: () => (/* binding */ FrameworkContext),\n/* harmony export */   HashRouter: () => (/* binding */ HashRouter),\n/* harmony export */   HistoryRouter: () => (/* binding */ HistoryRouter),\n/* harmony export */   IDLE_BLOCKER: () => (/* binding */ IDLE_BLOCKER),\n/* harmony export */   IDLE_FETCHER: () => (/* binding */ IDLE_FETCHER),\n/* harmony export */   IDLE_NAVIGATION: () => (/* binding */ IDLE_NAVIGATION),\n/* harmony export */   Link: () => (/* binding */ Link),\n/* harmony export */   Links: () => (/* binding */ Links),\n/* harmony export */   LocationContext: () => (/* binding */ LocationContext),\n/* harmony export */   MemoryRouter: () => (/* binding */ MemoryRouter),\n/* harmony export */   Meta: () => (/* binding */ Meta),\n/* harmony export */   NavLink: () => (/* binding */ NavLink),\n/* harmony export */   Navigate: () => (/* binding */ Navigate),\n/* harmony export */   NavigationContext: () => (/* binding */ NavigationContext),\n/* harmony export */   Outlet: () => (/* binding */ Outlet),\n/* harmony export */   PrefetchPageLinks: () => (/* binding */ PrefetchPageLinks),\n/* harmony export */   RemixErrorBoundary: () => (/* binding */ RemixErrorBoundary),\n/* harmony export */   Route: () => (/* binding */ Route),\n/* harmony export */   RouteContext: () => (/* binding */ RouteContext),\n/* harmony export */   Router: () => (/* binding */ Router),\n/* harmony export */   RouterProvider: () => (/* binding */ RouterProvider),\n/* harmony export */   Routes: () => (/* binding */ Routes),\n/* harmony export */   Scripts: () => (/* binding */ Scripts),\n/* harmony export */   ScrollRestoration: () => (/* binding */ ScrollRestoration),\n/* harmony export */   ServerMode: () => (/* binding */ ServerMode),\n/* harmony export */   ServerRouter: () => (/* binding */ ServerRouter),\n/* harmony export */   SingleFetchRedirectSymbol: () => (/* binding */ SingleFetchRedirectSymbol),\n/* harmony export */   StaticRouter: () => (/* binding */ StaticRouter),\n/* harmony export */   StaticRouterProvider: () => (/* binding */ StaticRouterProvider),\n/* harmony export */   ViewTransitionContext: () => (/* binding */ ViewTransitionContext),\n/* harmony export */   createBrowserHistory: () => (/* binding */ createBrowserHistory),\n/* harmony export */   createBrowserRouter: () => (/* binding */ createBrowserRouter),\n/* harmony export */   createClientRoutes: () => (/* binding */ createClientRoutes),\n/* harmony export */   createClientRoutesWithHMRRevalidationOptOut: () => (/* binding */ createClientRoutesWithHMRRevalidationOptOut),\n/* harmony export */   createCookie: () => (/* binding */ createCookie),\n/* harmony export */   createCookieSessionStorage: () => (/* binding */ createCookieSessionStorage),\n/* harmony export */   createHashRouter: () => (/* binding */ createHashRouter),\n/* harmony export */   createMemoryRouter: () => (/* binding */ createMemoryRouter),\n/* harmony export */   createMemorySessionStorage: () => (/* binding */ createMemorySessionStorage),\n/* harmony export */   createPath: () => (/* binding */ createPath),\n/* harmony export */   createRequestHandler: () => (/* binding */ createRequestHandler),\n/* harmony export */   createRouter: () => (/* binding */ createRouter),\n/* harmony export */   createRoutesFromChildren: () => (/* binding */ createRoutesFromChildren),\n/* harmony export */   createRoutesFromElements: () => (/* binding */ createRoutesFromElements),\n/* harmony export */   createRoutesStub: () => (/* binding */ createRoutesStub),\n/* harmony export */   createSearchParams: () => (/* binding */ createSearchParams),\n/* harmony export */   createSession: () => (/* binding */ createSession),\n/* harmony export */   createSessionStorage: () => (/* binding */ createSessionStorage),\n/* harmony export */   createStaticHandler: () => (/* binding */ createStaticHandler2),\n/* harmony export */   createStaticRouter: () => (/* binding */ createStaticRouter),\n/* harmony export */   data: () => (/* binding */ data),\n/* harmony export */   decodeViaTurboStream: () => (/* binding */ decodeViaTurboStream),\n/* harmony export */   deserializeErrors: () => (/* binding */ deserializeErrors2),\n/* harmony export */   generatePath: () => (/* binding */ generatePath),\n/* harmony export */   getHydrationData: () => (/* binding */ getHydrationData),\n/* harmony export */   getPatchRoutesOnNavigationFunction: () => (/* binding */ getPatchRoutesOnNavigationFunction),\n/* harmony export */   getTurboStreamSingleFetchDataStrategy: () => (/* binding */ getTurboStreamSingleFetchDataStrategy),\n/* harmony export */   href: () => (/* binding */ href),\n/* harmony export */   hydrationRouteProperties: () => (/* binding */ hydrationRouteProperties),\n/* harmony export */   invariant: () => (/* binding */ invariant),\n/* harmony export */   isCookie: () => (/* binding */ isCookie),\n/* harmony export */   isRouteErrorResponse: () => (/* binding */ isRouteErrorResponse),\n/* harmony export */   isSession: () => (/* binding */ isSession),\n/* harmony export */   mapRouteProperties: () => (/* binding */ mapRouteProperties),\n/* harmony export */   matchPath: () => (/* binding */ matchPath),\n/* harmony export */   matchRoutes: () => (/* binding */ matchRoutes),\n/* harmony export */   parsePath: () => (/* binding */ parsePath),\n/* harmony export */   redirect: () => (/* binding */ redirect),\n/* harmony export */   redirectDocument: () => (/* binding */ redirectDocument),\n/* harmony export */   renderMatches: () => (/* binding */ renderMatches),\n/* harmony export */   replace: () => (/* binding */ replace),\n/* harmony export */   resolvePath: () => (/* binding */ resolvePath),\n/* harmony export */   setDevServerHooks: () => (/* binding */ setDevServerHooks),\n/* harmony export */   shouldHydrateRouteLoader: () => (/* binding */ shouldHydrateRouteLoader),\n/* harmony export */   unstable_RouterContextProvider: () => (/* binding */ unstable_RouterContextProvider),\n/* harmony export */   unstable_createContext: () => (/* binding */ unstable_createContext),\n/* harmony export */   useActionData: () => (/* binding */ useActionData),\n/* harmony export */   useAsyncError: () => (/* binding */ useAsyncError),\n/* harmony export */   useAsyncValue: () => (/* binding */ useAsyncValue),\n/* harmony export */   useBeforeUnload: () => (/* binding */ useBeforeUnload),\n/* harmony export */   useBlocker: () => (/* binding */ useBlocker),\n/* harmony export */   useFetcher: () => (/* binding */ useFetcher),\n/* harmony export */   useFetchers: () => (/* binding */ useFetchers),\n/* harmony export */   useFogOFWarDiscovery: () => (/* binding */ useFogOFWarDiscovery),\n/* harmony export */   useFormAction: () => (/* binding */ useFormAction),\n/* harmony export */   useHref: () => (/* binding */ useHref),\n/* harmony export */   useInRouterContext: () => (/* binding */ useInRouterContext),\n/* harmony export */   useLinkClickHandler: () => (/* binding */ useLinkClickHandler),\n/* harmony export */   useLoaderData: () => (/* binding */ useLoaderData),\n/* harmony export */   useLocation: () => (/* binding */ useLocation),\n/* harmony export */   useMatch: () => (/* binding */ useMatch),\n/* harmony export */   useMatches: () => (/* binding */ useMatches),\n/* harmony export */   useNavigate: () => (/* binding */ useNavigate),\n/* harmony export */   useNavigation: () => (/* binding */ useNavigation),\n/* harmony export */   useNavigationType: () => (/* binding */ useNavigationType),\n/* harmony export */   useOutlet: () => (/* binding */ useOutlet),\n/* harmony export */   useOutletContext: () => (/* binding */ useOutletContext),\n/* harmony export */   useParams: () => (/* binding */ useParams),\n/* harmony export */   usePrompt: () => (/* binding */ usePrompt),\n/* harmony export */   useResolvedPath: () => (/* binding */ useResolvedPath),\n/* harmony export */   useRevalidator: () => (/* binding */ useRevalidator),\n/* harmony export */   useRouteError: () => (/* binding */ useRouteError),\n/* harmony export */   useRouteLoaderData: () => (/* binding */ useRouteLoaderData),\n/* harmony export */   useRoutes: () => (/* binding */ useRoutes),\n/* harmony export */   useScrollRestoration: () => (/* binding */ useScrollRestoration),\n/* harmony export */   useSearchParams: () => (/* binding */ useSearchParams),\n/* harmony export */   useSubmit: () => (/* binding */ useSubmit),\n/* harmony export */   useViewTransitionState: () => (/* binding */ useViewTransitionState),\n/* harmony export */   withComponentProps: () => (/* binding */ withComponentProps),\n/* harmony export */   withErrorBoundaryProps: () => (/* binding */ withErrorBoundaryProps),\n/* harmony export */   withHydrateFallbackProps: () => (/* binding */ withHydrateFallbackProps)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cookie */ \"./node_modules/cookie/dist/index.js\");\n/* harmony import */ var set_cookie_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! set-cookie-parser */ \"./node_modules/set-cookie-parser/lib/set-cookie.js\");\n/**\r\n * react-router v7.6.2\r\n *\r\n * Copyright (c) Remix Software Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.md file in the root directory of this source tree.\r\n *\r\n * @license MIT\r\n */\r\nvar __typeError = (msg) => {\r\n  throw TypeError(msg);\r\n};\r\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\r\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\r\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\r\n\r\n// lib/router/history.ts\r\nvar Action = /* @__PURE__ */ ((Action2) => {\r\n  Action2[\"Pop\"] = \"POP\";\r\n  Action2[\"Push\"] = \"PUSH\";\r\n  Action2[\"Replace\"] = \"REPLACE\";\r\n  return Action2;\r\n})(Action || {});\r\nvar PopStateEventType = \"popstate\";\r\nfunction createMemoryHistory(options = {}) {\r\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\r\n  let entries;\r\n  entries = initialEntries.map(\r\n    (entry, index2) => createMemoryLocation(\r\n      entry,\r\n      typeof entry === \"string\" ? null : entry.state,\r\n      index2 === 0 ? \"default\" : void 0\r\n    )\r\n  );\r\n  let index = clampIndex(\r\n    initialIndex == null ? entries.length - 1 : initialIndex\r\n  );\r\n  let action = \"POP\" /* Pop */;\r\n  let listener = null;\r\n  function clampIndex(n) {\r\n    return Math.min(Math.max(n, 0), entries.length - 1);\r\n  }\r\n  function getCurrentLocation() {\r\n    return entries[index];\r\n  }\r\n  function createMemoryLocation(to, state = null, key) {\r\n    let location = createLocation(\r\n      entries ? getCurrentLocation().pathname : \"/\",\r\n      to,\r\n      state,\r\n      key\r\n    );\r\n    warning(\r\n      location.pathname.charAt(0) === \"/\",\r\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\r\n        to\r\n      )}`\r\n    );\r\n    return location;\r\n  }\r\n  function createHref2(to) {\r\n    return typeof to === \"string\" ? to : createPath(to);\r\n  }\r\n  let history = {\r\n    get index() {\r\n      return index;\r\n    },\r\n    get action() {\r\n      return action;\r\n    },\r\n    get location() {\r\n      return getCurrentLocation();\r\n    },\r\n    createHref: createHref2,\r\n    createURL(to) {\r\n      return new URL(createHref2(to), \"http://localhost\");\r\n    },\r\n    encodeLocation(to) {\r\n      let path = typeof to === \"string\" ? parsePath(to) : to;\r\n      return {\r\n        pathname: path.pathname || \"\",\r\n        search: path.search || \"\",\r\n        hash: path.hash || \"\"\r\n      };\r\n    },\r\n    push(to, state) {\r\n      action = \"PUSH\" /* Push */;\r\n      let nextLocation = createMemoryLocation(to, state);\r\n      index += 1;\r\n      entries.splice(index, entries.length, nextLocation);\r\n      if (v5Compat && listener) {\r\n        listener({ action, location: nextLocation, delta: 1 });\r\n      }\r\n    },\r\n    replace(to, state) {\r\n      action = \"REPLACE\" /* Replace */;\r\n      let nextLocation = createMemoryLocation(to, state);\r\n      entries[index] = nextLocation;\r\n      if (v5Compat && listener) {\r\n        listener({ action, location: nextLocation, delta: 0 });\r\n      }\r\n    },\r\n    go(delta) {\r\n      action = \"POP\" /* Pop */;\r\n      let nextIndex = clampIndex(index + delta);\r\n      let nextLocation = entries[nextIndex];\r\n      index = nextIndex;\r\n      if (listener) {\r\n        listener({ action, location: nextLocation, delta });\r\n      }\r\n    },\r\n    listen(fn) {\r\n      listener = fn;\r\n      return () => {\r\n        listener = null;\r\n      };\r\n    }\r\n  };\r\n  return history;\r\n}\r\nfunction createBrowserHistory(options = {}) {\r\n  function createBrowserLocation(window2, globalHistory) {\r\n    let { pathname, search, hash } = window2.location;\r\n    return createLocation(\r\n      \"\",\r\n      { pathname, search, hash },\r\n      // state defaults to `null` because `window.history.state` does\r\n      globalHistory.state && globalHistory.state.usr || null,\r\n      globalHistory.state && globalHistory.state.key || \"default\"\r\n    );\r\n  }\r\n  function createBrowserHref(window2, to) {\r\n    return typeof to === \"string\" ? to : createPath(to);\r\n  }\r\n  return getUrlBasedHistory(\r\n    createBrowserLocation,\r\n    createBrowserHref,\r\n    null,\r\n    options\r\n  );\r\n}\r\nfunction createHashHistory(options = {}) {\r\n  function createHashLocation(window2, globalHistory) {\r\n    let {\r\n      pathname = \"/\",\r\n      search = \"\",\r\n      hash = \"\"\r\n    } = parsePath(window2.location.hash.substring(1));\r\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\r\n      pathname = \"/\" + pathname;\r\n    }\r\n    return createLocation(\r\n      \"\",\r\n      { pathname, search, hash },\r\n      // state defaults to `null` because `window.history.state` does\r\n      globalHistory.state && globalHistory.state.usr || null,\r\n      globalHistory.state && globalHistory.state.key || \"default\"\r\n    );\r\n  }\r\n  function createHashHref(window2, to) {\r\n    let base = window2.document.querySelector(\"base\");\r\n    let href2 = \"\";\r\n    if (base && base.getAttribute(\"href\")) {\r\n      let url = window2.location.href;\r\n      let hashIndex = url.indexOf(\"#\");\r\n      href2 = hashIndex === -1 ? url : url.slice(0, hashIndex);\r\n    }\r\n    return href2 + \"#\" + (typeof to === \"string\" ? to : createPath(to));\r\n  }\r\n  function validateHashLocation(location, to) {\r\n    warning(\r\n      location.pathname.charAt(0) === \"/\",\r\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\r\n        to\r\n      )})`\r\n    );\r\n  }\r\n  return getUrlBasedHistory(\r\n    createHashLocation,\r\n    createHashHref,\r\n    validateHashLocation,\r\n    options\r\n  );\r\n}\r\nfunction invariant(value, message) {\r\n  if (value === false || value === null || typeof value === \"undefined\") {\r\n    throw new Error(message);\r\n  }\r\n}\r\nfunction warning(cond, message) {\r\n  if (!cond) {\r\n    if (typeof console !== \"undefined\") console.warn(message);\r\n    try {\r\n      throw new Error(message);\r\n    } catch (e) {\r\n    }\r\n  }\r\n}\r\nfunction createKey() {\r\n  return Math.random().toString(36).substring(2, 10);\r\n}\r\nfunction getHistoryState(location, index) {\r\n  return {\r\n    usr: location.state,\r\n    key: location.key,\r\n    idx: index\r\n  };\r\n}\r\nfunction createLocation(current, to, state = null, key) {\r\n  let location = {\r\n    pathname: typeof current === \"string\" ? current : current.pathname,\r\n    search: \"\",\r\n    hash: \"\",\r\n    ...typeof to === \"string\" ? parsePath(to) : to,\r\n    state,\r\n    // TODO: This could be cleaned up.  push/replace should probably just take\r\n    // full Locations now and avoid the need to run through this flow at all\r\n    // But that's a pretty big refactor to the current test suite so going to\r\n    // keep as is for the time being and just let any incoming keys take precedence\r\n    key: to && to.key || key || createKey()\r\n  };\r\n  return location;\r\n}\r\nfunction createPath({\r\n  pathname = \"/\",\r\n  search = \"\",\r\n  hash = \"\"\r\n}) {\r\n  if (search && search !== \"?\")\r\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\r\n  if (hash && hash !== \"#\")\r\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\r\n  return pathname;\r\n}\r\nfunction parsePath(path) {\r\n  let parsedPath = {};\r\n  if (path) {\r\n    let hashIndex = path.indexOf(\"#\");\r\n    if (hashIndex >= 0) {\r\n      parsedPath.hash = path.substring(hashIndex);\r\n      path = path.substring(0, hashIndex);\r\n    }\r\n    let searchIndex = path.indexOf(\"?\");\r\n    if (searchIndex >= 0) {\r\n      parsedPath.search = path.substring(searchIndex);\r\n      path = path.substring(0, searchIndex);\r\n    }\r\n    if (path) {\r\n      parsedPath.pathname = path;\r\n    }\r\n  }\r\n  return parsedPath;\r\n}\r\nfunction getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {\r\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\r\n  let globalHistory = window2.history;\r\n  let action = \"POP\" /* Pop */;\r\n  let listener = null;\r\n  let index = getIndex();\r\n  if (index == null) {\r\n    index = 0;\r\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\r\n  }\r\n  function getIndex() {\r\n    let state = globalHistory.state || { idx: null };\r\n    return state.idx;\r\n  }\r\n  function handlePop() {\r\n    action = \"POP\" /* Pop */;\r\n    let nextIndex = getIndex();\r\n    let delta = nextIndex == null ? null : nextIndex - index;\r\n    index = nextIndex;\r\n    if (listener) {\r\n      listener({ action, location: history.location, delta });\r\n    }\r\n  }\r\n  function push(to, state) {\r\n    action = \"PUSH\" /* Push */;\r\n    let location = createLocation(history.location, to, state);\r\n    if (validateLocation) validateLocation(location, to);\r\n    index = getIndex() + 1;\r\n    let historyState = getHistoryState(location, index);\r\n    let url = history.createHref(location);\r\n    try {\r\n      globalHistory.pushState(historyState, \"\", url);\r\n    } catch (error) {\r\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\r\n        throw error;\r\n      }\r\n      window2.location.assign(url);\r\n    }\r\n    if (v5Compat && listener) {\r\n      listener({ action, location: history.location, delta: 1 });\r\n    }\r\n  }\r\n  function replace2(to, state) {\r\n    action = \"REPLACE\" /* Replace */;\r\n    let location = createLocation(history.location, to, state);\r\n    if (validateLocation) validateLocation(location, to);\r\n    index = getIndex();\r\n    let historyState = getHistoryState(location, index);\r\n    let url = history.createHref(location);\r\n    globalHistory.replaceState(historyState, \"\", url);\r\n    if (v5Compat && listener) {\r\n      listener({ action, location: history.location, delta: 0 });\r\n    }\r\n  }\r\n  function createURL(to) {\r\n    return createBrowserURLImpl(to);\r\n  }\r\n  let history = {\r\n    get action() {\r\n      return action;\r\n    },\r\n    get location() {\r\n      return getLocation(window2, globalHistory);\r\n    },\r\n    listen(fn) {\r\n      if (listener) {\r\n        throw new Error(\"A history only accepts one active listener\");\r\n      }\r\n      window2.addEventListener(PopStateEventType, handlePop);\r\n      listener = fn;\r\n      return () => {\r\n        window2.removeEventListener(PopStateEventType, handlePop);\r\n        listener = null;\r\n      };\r\n    },\r\n    createHref(to) {\r\n      return createHref2(window2, to);\r\n    },\r\n    createURL,\r\n    encodeLocation(to) {\r\n      let url = createURL(to);\r\n      return {\r\n        pathname: url.pathname,\r\n        search: url.search,\r\n        hash: url.hash\r\n      };\r\n    },\r\n    push,\r\n    replace: replace2,\r\n    go(n) {\r\n      return globalHistory.go(n);\r\n    }\r\n  };\r\n  return history;\r\n}\r\nfunction createBrowserURLImpl(to, isAbsolute = false) {\r\n  let base = \"http://localhost\";\r\n  if (typeof window !== \"undefined\") {\r\n    base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\r\n  }\r\n  invariant(base, \"No window.location.(origin|href) available to create URL\");\r\n  let href2 = typeof to === \"string\" ? to : createPath(to);\r\n  href2 = href2.replace(/ $/, \"%20\");\r\n  if (!isAbsolute && href2.startsWith(\"//\")) {\r\n    href2 = base + href2;\r\n  }\r\n  return new URL(href2, base);\r\n}\r\n\r\n// lib/router/utils.ts\r\nfunction unstable_createContext(defaultValue) {\r\n  return { defaultValue };\r\n}\r\nvar _map;\r\nvar unstable_RouterContextProvider = class {\r\n  constructor(init) {\r\n    __privateAdd(this, _map, /* @__PURE__ */ new Map());\r\n    if (init) {\r\n      for (let [context, value] of init) {\r\n        this.set(context, value);\r\n      }\r\n    }\r\n  }\r\n  get(context) {\r\n    if (__privateGet(this, _map).has(context)) {\r\n      return __privateGet(this, _map).get(context);\r\n    }\r\n    if (context.defaultValue !== void 0) {\r\n      return context.defaultValue;\r\n    }\r\n    throw new Error(\"No value found for context\");\r\n  }\r\n  set(context, value) {\r\n    __privateGet(this, _map).set(context, value);\r\n  }\r\n};\r\n_map = new WeakMap();\r\nvar unsupportedLazyRouteObjectKeys = /* @__PURE__ */ new Set([\r\n  \"lazy\",\r\n  \"caseSensitive\",\r\n  \"path\",\r\n  \"id\",\r\n  \"index\",\r\n  \"children\"\r\n]);\r\nfunction isUnsupportedLazyRouteObjectKey(key) {\r\n  return unsupportedLazyRouteObjectKeys.has(\r\n    key\r\n  );\r\n}\r\nvar unsupportedLazyRouteFunctionKeys = /* @__PURE__ */ new Set([\r\n  \"lazy\",\r\n  \"caseSensitive\",\r\n  \"path\",\r\n  \"id\",\r\n  \"index\",\r\n  \"unstable_middleware\",\r\n  \"children\"\r\n]);\r\nfunction isUnsupportedLazyRouteFunctionKey(key) {\r\n  return unsupportedLazyRouteFunctionKeys.has(\r\n    key\r\n  );\r\n}\r\nfunction isIndexRoute(route) {\r\n  return route.index === true;\r\n}\r\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\r\n  return routes.map((route, index) => {\r\n    let treePath = [...parentPath, String(index)];\r\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\r\n    invariant(\r\n      route.index !== true || !route.children,\r\n      `Cannot specify children on an index route`\r\n    );\r\n    invariant(\r\n      !manifest[id],\r\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\r\n    );\r\n    if (isIndexRoute(route)) {\r\n      let indexRoute = {\r\n        ...route,\r\n        ...mapRouteProperties2(route),\r\n        id\r\n      };\r\n      manifest[id] = indexRoute;\r\n      return indexRoute;\r\n    } else {\r\n      let pathOrLayoutRoute = {\r\n        ...route,\r\n        ...mapRouteProperties2(route),\r\n        id,\r\n        children: void 0\r\n      };\r\n      manifest[id] = pathOrLayoutRoute;\r\n      if (route.children) {\r\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\r\n          route.children,\r\n          mapRouteProperties2,\r\n          treePath,\r\n          manifest\r\n        );\r\n      }\r\n      return pathOrLayoutRoute;\r\n    }\r\n  });\r\n}\r\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\r\n  return matchRoutesImpl(routes, locationArg, basename, false);\r\n}\r\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\r\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\r\n  let pathname = stripBasename(location.pathname || \"/\", basename);\r\n  if (pathname == null) {\r\n    return null;\r\n  }\r\n  let branches = flattenRoutes(routes);\r\n  rankRouteBranches(branches);\r\n  let matches = null;\r\n  for (let i = 0; matches == null && i < branches.length; ++i) {\r\n    let decoded = decodePath(pathname);\r\n    matches = matchRouteBranch(\r\n      branches[i],\r\n      decoded,\r\n      allowPartial\r\n    );\r\n  }\r\n  return matches;\r\n}\r\nfunction convertRouteMatchToUiMatch(match, loaderData) {\r\n  let { route, pathname, params } = match;\r\n  return {\r\n    id: route.id,\r\n    pathname,\r\n    params,\r\n    data: loaderData[route.id],\r\n    handle: route.handle\r\n  };\r\n}\r\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\") {\r\n  let flattenRoute = (route, index, relativePath) => {\r\n    let meta = {\r\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\r\n      caseSensitive: route.caseSensitive === true,\r\n      childrenIndex: index,\r\n      route\r\n    };\r\n    if (meta.relativePath.startsWith(\"/\")) {\r\n      invariant(\r\n        meta.relativePath.startsWith(parentPath),\r\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\r\n      );\r\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\r\n    }\r\n    let path = joinPaths([parentPath, meta.relativePath]);\r\n    let routesMeta = parentsMeta.concat(meta);\r\n    if (route.children && route.children.length > 0) {\r\n      invariant(\r\n        // Our types know better, but runtime JS may not!\r\n        // @ts-expect-error\r\n        route.index !== true,\r\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\r\n      );\r\n      flattenRoutes(route.children, branches, routesMeta, path);\r\n    }\r\n    if (route.path == null && !route.index) {\r\n      return;\r\n    }\r\n    branches.push({\r\n      path,\r\n      score: computeScore(path, route.index),\r\n      routesMeta\r\n    });\r\n  };\r\n  routes.forEach((route, index) => {\r\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\r\n      flattenRoute(route, index);\r\n    } else {\r\n      for (let exploded of explodeOptionalSegments(route.path)) {\r\n        flattenRoute(route, index, exploded);\r\n      }\r\n    }\r\n  });\r\n  return branches;\r\n}\r\nfunction explodeOptionalSegments(path) {\r\n  let segments = path.split(\"/\");\r\n  if (segments.length === 0) return [];\r\n  let [first, ...rest] = segments;\r\n  let isOptional = first.endsWith(\"?\");\r\n  let required = first.replace(/\\?$/, \"\");\r\n  if (rest.length === 0) {\r\n    return isOptional ? [required, \"\"] : [required];\r\n  }\r\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\r\n  let result = [];\r\n  result.push(\r\n    ...restExploded.map(\r\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\r\n    )\r\n  );\r\n  if (isOptional) {\r\n    result.push(...restExploded);\r\n  }\r\n  return result.map(\r\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\r\n  );\r\n}\r\nfunction rankRouteBranches(branches) {\r\n  branches.sort(\r\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\r\n      a.routesMeta.map((meta) => meta.childrenIndex),\r\n      b.routesMeta.map((meta) => meta.childrenIndex)\r\n    )\r\n  );\r\n}\r\nvar paramRe = /^:[\\w-]+$/;\r\nvar dynamicSegmentValue = 3;\r\nvar indexRouteValue = 2;\r\nvar emptySegmentValue = 1;\r\nvar staticSegmentValue = 10;\r\nvar splatPenalty = -2;\r\nvar isSplat = (s) => s === \"*\";\r\nfunction computeScore(path, index) {\r\n  let segments = path.split(\"/\");\r\n  let initialScore = segments.length;\r\n  if (segments.some(isSplat)) {\r\n    initialScore += splatPenalty;\r\n  }\r\n  if (index) {\r\n    initialScore += indexRouteValue;\r\n  }\r\n  return segments.filter((s) => !isSplat(s)).reduce(\r\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\r\n    initialScore\r\n  );\r\n}\r\nfunction compareIndexes(a, b) {\r\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\r\n  return siblings ? (\r\n    // If two routes are siblings, we should try to match the earlier sibling\r\n    // first. This allows people to have fine-grained control over the matching\r\n    // behavior by simply putting routes with identical paths in the order they\r\n    // want them tried.\r\n    a[a.length - 1] - b[b.length - 1]\r\n  ) : (\r\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\r\n    // so they sort equally.\r\n    0\r\n  );\r\n}\r\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\r\n  let { routesMeta } = branch;\r\n  let matchedParams = {};\r\n  let matchedPathname = \"/\";\r\n  let matches = [];\r\n  for (let i = 0; i < routesMeta.length; ++i) {\r\n    let meta = routesMeta[i];\r\n    let end = i === routesMeta.length - 1;\r\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\r\n    let match = matchPath(\r\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\r\n      remainingPathname\r\n    );\r\n    let route = meta.route;\r\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\r\n      match = matchPath(\r\n        {\r\n          path: meta.relativePath,\r\n          caseSensitive: meta.caseSensitive,\r\n          end: false\r\n        },\r\n        remainingPathname\r\n      );\r\n    }\r\n    if (!match) {\r\n      return null;\r\n    }\r\n    Object.assign(matchedParams, match.params);\r\n    matches.push({\r\n      // TODO: Can this as be avoided?\r\n      params: matchedParams,\r\n      pathname: joinPaths([matchedPathname, match.pathname]),\r\n      pathnameBase: normalizePathname(\r\n        joinPaths([matchedPathname, match.pathnameBase])\r\n      ),\r\n      route\r\n    });\r\n    if (match.pathnameBase !== \"/\") {\r\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\r\n    }\r\n  }\r\n  return matches;\r\n}\r\nfunction generatePath(originalPath, params = {}) {\r\n  let path = originalPath;\r\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\r\n    warning(\r\n      false,\r\n      `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\r\n    );\r\n    path = path.replace(/\\*$/, \"/*\");\r\n  }\r\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\r\n  const stringify2 = (p) => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\r\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\r\n    const isLastSegment = index === array.length - 1;\r\n    if (isLastSegment && segment === \"*\") {\r\n      const star = \"*\";\r\n      return stringify2(params[star]);\r\n    }\r\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\r\n    if (keyMatch) {\r\n      const [, key, optional] = keyMatch;\r\n      let param = params[key];\r\n      invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\r\n      return stringify2(param);\r\n    }\r\n    return segment.replace(/\\?$/g, \"\");\r\n  }).filter((segment) => !!segment);\r\n  return prefix + segments.join(\"/\");\r\n}\r\nfunction matchPath(pattern, pathname) {\r\n  if (typeof pattern === \"string\") {\r\n    pattern = { path: pattern, caseSensitive: false, end: true };\r\n  }\r\n  let [matcher, compiledParams] = compilePath(\r\n    pattern.path,\r\n    pattern.caseSensitive,\r\n    pattern.end\r\n  );\r\n  let match = pathname.match(matcher);\r\n  if (!match) return null;\r\n  let matchedPathname = match[0];\r\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\r\n  let captureGroups = match.slice(1);\r\n  let params = compiledParams.reduce(\r\n    (memo2, { paramName, isOptional }, index) => {\r\n      if (paramName === \"*\") {\r\n        let splatValue = captureGroups[index] || \"\";\r\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\r\n      }\r\n      const value = captureGroups[index];\r\n      if (isOptional && !value) {\r\n        memo2[paramName] = void 0;\r\n      } else {\r\n        memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\r\n      }\r\n      return memo2;\r\n    },\r\n    {}\r\n  );\r\n  return {\r\n    params,\r\n    pathname: matchedPathname,\r\n    pathnameBase,\r\n    pattern\r\n  };\r\n}\r\nfunction compilePath(path, caseSensitive = false, end = true) {\r\n  warning(\r\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\r\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\r\n  );\r\n  let params = [];\r\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\r\n    /\\/:([\\w-]+)(\\?)?/g,\r\n    (_, paramName, isOptional) => {\r\n      params.push({ paramName, isOptional: isOptional != null });\r\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\r\n    }\r\n  );\r\n  if (path.endsWith(\"*\")) {\r\n    params.push({ paramName: \"*\" });\r\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\r\n  } else if (end) {\r\n    regexpSource += \"\\\\/*$\";\r\n  } else if (path !== \"\" && path !== \"/\") {\r\n    regexpSource += \"(?:(?=\\\\/|$))\";\r\n  } else {\r\n  }\r\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\r\n  return [matcher, params];\r\n}\r\nfunction decodePath(value) {\r\n  try {\r\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\r\n  } catch (error) {\r\n    warning(\r\n      false,\r\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\r\n    );\r\n    return value;\r\n  }\r\n}\r\nfunction stripBasename(pathname, basename) {\r\n  if (basename === \"/\") return pathname;\r\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\r\n    return null;\r\n  }\r\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\r\n  let nextChar = pathname.charAt(startIndex);\r\n  if (nextChar && nextChar !== \"/\") {\r\n    return null;\r\n  }\r\n  return pathname.slice(startIndex) || \"/\";\r\n}\r\nfunction resolvePath(to, fromPathname = \"/\") {\r\n  let {\r\n    pathname: toPathname,\r\n    search = \"\",\r\n    hash = \"\"\r\n  } = typeof to === \"string\" ? parsePath(to) : to;\r\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\r\n  return {\r\n    pathname,\r\n    search: normalizeSearch(search),\r\n    hash: normalizeHash(hash)\r\n  };\r\n}\r\nfunction resolvePathname(relativePath, fromPathname) {\r\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\r\n  let relativeSegments = relativePath.split(\"/\");\r\n  relativeSegments.forEach((segment) => {\r\n    if (segment === \"..\") {\r\n      if (segments.length > 1) segments.pop();\r\n    } else if (segment !== \".\") {\r\n      segments.push(segment);\r\n    }\r\n  });\r\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\r\n}\r\nfunction getInvalidPathError(char, field, dest, path) {\r\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\r\n    path\r\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\r\n}\r\nfunction getPathContributingMatches(matches) {\r\n  return matches.filter(\r\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\r\n  );\r\n}\r\nfunction getResolveToMatches(matches) {\r\n  let pathMatches = getPathContributingMatches(matches);\r\n  return pathMatches.map(\r\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\r\n  );\r\n}\r\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\r\n  let to;\r\n  if (typeof toArg === \"string\") {\r\n    to = parsePath(toArg);\r\n  } else {\r\n    to = { ...toArg };\r\n    invariant(\r\n      !to.pathname || !to.pathname.includes(\"?\"),\r\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\r\n    );\r\n    invariant(\r\n      !to.pathname || !to.pathname.includes(\"#\"),\r\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\r\n    );\r\n    invariant(\r\n      !to.search || !to.search.includes(\"#\"),\r\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\r\n    );\r\n  }\r\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\r\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\r\n  let from;\r\n  if (toPathname == null) {\r\n    from = locationPathname;\r\n  } else {\r\n    let routePathnameIndex = routePathnames.length - 1;\r\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\r\n      let toSegments = toPathname.split(\"/\");\r\n      while (toSegments[0] === \"..\") {\r\n        toSegments.shift();\r\n        routePathnameIndex -= 1;\r\n      }\r\n      to.pathname = toSegments.join(\"/\");\r\n    }\r\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\r\n  }\r\n  let path = resolvePath(to, from);\r\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\r\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\r\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\r\n    path.pathname += \"/\";\r\n  }\r\n  return path;\r\n}\r\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\r\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\r\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\r\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\r\nvar DataWithResponseInit = class {\r\n  constructor(data2, init) {\r\n    this.type = \"DataWithResponseInit\";\r\n    this.data = data2;\r\n    this.init = init || null;\r\n  }\r\n};\r\nfunction data(data2, init) {\r\n  return new DataWithResponseInit(\r\n    data2,\r\n    typeof init === \"number\" ? { status: init } : init\r\n  );\r\n}\r\nvar redirect = (url, init = 302) => {\r\n  let responseInit = init;\r\n  if (typeof responseInit === \"number\") {\r\n    responseInit = { status: responseInit };\r\n  } else if (typeof responseInit.status === \"undefined\") {\r\n    responseInit.status = 302;\r\n  }\r\n  let headers = new Headers(responseInit.headers);\r\n  headers.set(\"Location\", url);\r\n  return new Response(null, { ...responseInit, headers });\r\n};\r\nvar redirectDocument = (url, init) => {\r\n  let response = redirect(url, init);\r\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\r\n  return response;\r\n};\r\nvar replace = (url, init) => {\r\n  let response = redirect(url, init);\r\n  response.headers.set(\"X-Remix-Replace\", \"true\");\r\n  return response;\r\n};\r\nvar ErrorResponseImpl = class {\r\n  constructor(status, statusText, data2, internal = false) {\r\n    this.status = status;\r\n    this.statusText = statusText || \"\";\r\n    this.internal = internal;\r\n    if (data2 instanceof Error) {\r\n      this.data = data2.toString();\r\n      this.error = data2;\r\n    } else {\r\n      this.data = data2;\r\n    }\r\n  }\r\n};\r\nfunction isRouteErrorResponse(error) {\r\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\r\n}\r\n\r\n// lib/router/router.ts\r\nvar validMutationMethodsArr = [\r\n  \"POST\",\r\n  \"PUT\",\r\n  \"PATCH\",\r\n  \"DELETE\"\r\n];\r\nvar validMutationMethods = new Set(\r\n  validMutationMethodsArr\r\n);\r\nvar validRequestMethodsArr = [\r\n  \"GET\",\r\n  ...validMutationMethodsArr\r\n];\r\nvar validRequestMethods = new Set(validRequestMethodsArr);\r\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\r\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\r\nvar IDLE_NAVIGATION = {\r\n  state: \"idle\",\r\n  location: void 0,\r\n  formMethod: void 0,\r\n  formAction: void 0,\r\n  formEncType: void 0,\r\n  formData: void 0,\r\n  json: void 0,\r\n  text: void 0\r\n};\r\nvar IDLE_FETCHER = {\r\n  state: \"idle\",\r\n  data: void 0,\r\n  formMethod: void 0,\r\n  formAction: void 0,\r\n  formEncType: void 0,\r\n  formData: void 0,\r\n  json: void 0,\r\n  text: void 0\r\n};\r\nvar IDLE_BLOCKER = {\r\n  state: \"unblocked\",\r\n  proceed: void 0,\r\n  reset: void 0,\r\n  location: void 0\r\n};\r\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\r\nvar defaultMapRouteProperties = (route) => ({\r\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\r\n});\r\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\r\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\r\nfunction createRouter(init) {\r\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\r\n  const isBrowser2 = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\r\n  invariant(\r\n    init.routes.length > 0,\r\n    \"You must provide a non-empty routes array to createRouter\"\r\n  );\r\n  let hydrationRouteProperties2 = init.hydrationRouteProperties || [];\r\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\r\n  let manifest = {};\r\n  let dataRoutes = convertRoutesToDataRoutes(\r\n    init.routes,\r\n    mapRouteProperties2,\r\n    void 0,\r\n    manifest\r\n  );\r\n  let inFlightDataRoutes;\r\n  let basename = init.basename || \"/\";\r\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\r\n  let future = {\r\n    unstable_middleware: false,\r\n    ...init.future\r\n  };\r\n  let unlistenHistory = null;\r\n  let subscribers = /* @__PURE__ */ new Set();\r\n  let savedScrollPositions2 = null;\r\n  let getScrollRestorationKey2 = null;\r\n  let getScrollPosition = null;\r\n  let initialScrollRestored = init.hydrationData != null;\r\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\r\n  let initialMatchesIsFOW = false;\r\n  let initialErrors = null;\r\n  let initialized;\r\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\r\n    let error = getInternalRouterError(404, {\r\n      pathname: init.history.location.pathname\r\n    });\r\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\r\n    initialized = true;\r\n    initialMatches = matches;\r\n    initialErrors = { [route.id]: error };\r\n  } else {\r\n    if (initialMatches && !init.hydrationData) {\r\n      let fogOfWar = checkFogOfWar(\r\n        initialMatches,\r\n        dataRoutes,\r\n        init.history.location.pathname\r\n      );\r\n      if (fogOfWar.active) {\r\n        initialMatches = null;\r\n      }\r\n    }\r\n    if (!initialMatches) {\r\n      initialized = false;\r\n      initialMatches = [];\r\n      let fogOfWar = checkFogOfWar(\r\n        null,\r\n        dataRoutes,\r\n        init.history.location.pathname\r\n      );\r\n      if (fogOfWar.active && fogOfWar.matches) {\r\n        initialMatchesIsFOW = true;\r\n        initialMatches = fogOfWar.matches;\r\n      }\r\n    } else if (initialMatches.some((m) => m.route.lazy)) {\r\n      initialized = false;\r\n    } else if (!initialMatches.some((m) => m.route.loader)) {\r\n      initialized = true;\r\n    } else {\r\n      let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\r\n      let errors = init.hydrationData ? init.hydrationData.errors : null;\r\n      if (errors) {\r\n        let idx = initialMatches.findIndex(\r\n          (m) => errors[m.route.id] !== void 0\r\n        );\r\n        initialized = initialMatches.slice(0, idx + 1).every(\r\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\r\n        );\r\n      } else {\r\n        initialized = initialMatches.every(\r\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\r\n        );\r\n      }\r\n    }\r\n  }\r\n  let router;\r\n  let state = {\r\n    historyAction: init.history.action,\r\n    location: init.history.location,\r\n    matches: initialMatches,\r\n    initialized,\r\n    navigation: IDLE_NAVIGATION,\r\n    // Don't restore on initial updateState() if we were SSR'd\r\n    restoreScrollPosition: init.hydrationData != null ? false : null,\r\n    preventScrollReset: false,\r\n    revalidation: \"idle\",\r\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\r\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\r\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\r\n    fetchers: /* @__PURE__ */ new Map(),\r\n    blockers: /* @__PURE__ */ new Map()\r\n  };\r\n  let pendingAction = \"POP\" /* Pop */;\r\n  let pendingPreventScrollReset = false;\r\n  let pendingNavigationController;\r\n  let pendingViewTransitionEnabled = false;\r\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\r\n  let removePageHideEventListener = null;\r\n  let isUninterruptedRevalidation = false;\r\n  let isRevalidationRequired = false;\r\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\r\n  let fetchControllers = /* @__PURE__ */ new Map();\r\n  let incrementingLoadId = 0;\r\n  let pendingNavigationLoadId = -1;\r\n  let fetchReloadIds = /* @__PURE__ */ new Map();\r\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\r\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\r\n  let activeFetchers = /* @__PURE__ */ new Map();\r\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\r\n  let blockerFunctions = /* @__PURE__ */ new Map();\r\n  let unblockBlockerHistoryUpdate = void 0;\r\n  let pendingRevalidationDfd = null;\r\n  function initialize() {\r\n    unlistenHistory = init.history.listen(\r\n      ({ action: historyAction, location, delta }) => {\r\n        if (unblockBlockerHistoryUpdate) {\r\n          unblockBlockerHistoryUpdate();\r\n          unblockBlockerHistoryUpdate = void 0;\r\n          return;\r\n        }\r\n        warning(\r\n          blockerFunctions.size === 0 || delta != null,\r\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\r\n        );\r\n        let blockerKey = shouldBlockNavigation({\r\n          currentLocation: state.location,\r\n          nextLocation: location,\r\n          historyAction\r\n        });\r\n        if (blockerKey && delta != null) {\r\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\r\n            unblockBlockerHistoryUpdate = resolve;\r\n          });\r\n          init.history.go(delta * -1);\r\n          updateBlocker(blockerKey, {\r\n            state: \"blocked\",\r\n            location,\r\n            proceed() {\r\n              updateBlocker(blockerKey, {\r\n                state: \"proceeding\",\r\n                proceed: void 0,\r\n                reset: void 0,\r\n                location\r\n              });\r\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\r\n            },\r\n            reset() {\r\n              let blockers = new Map(state.blockers);\r\n              blockers.set(blockerKey, IDLE_BLOCKER);\r\n              updateState({ blockers });\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        return startNavigation(historyAction, location);\r\n      }\r\n    );\r\n    if (isBrowser2) {\r\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\r\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\r\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\r\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\r\n    }\r\n    if (!state.initialized) {\r\n      startNavigation(\"POP\" /* Pop */, state.location, {\r\n        initialHydration: true\r\n      });\r\n    }\r\n    return router;\r\n  }\r\n  function dispose() {\r\n    if (unlistenHistory) {\r\n      unlistenHistory();\r\n    }\r\n    if (removePageHideEventListener) {\r\n      removePageHideEventListener();\r\n    }\r\n    subscribers.clear();\r\n    pendingNavigationController && pendingNavigationController.abort();\r\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\r\n    state.blockers.forEach((_, key) => deleteBlocker(key));\r\n  }\r\n  function subscribe(fn) {\r\n    subscribers.add(fn);\r\n    return () => subscribers.delete(fn);\r\n  }\r\n  function updateState(newState, opts = {}) {\r\n    state = {\r\n      ...state,\r\n      ...newState\r\n    };\r\n    let unmountedFetchers = [];\r\n    let mountedFetchers = [];\r\n    state.fetchers.forEach((fetcher, key) => {\r\n      if (fetcher.state === \"idle\") {\r\n        if (fetchersQueuedForDeletion.has(key)) {\r\n          unmountedFetchers.push(key);\r\n        } else {\r\n          mountedFetchers.push(key);\r\n        }\r\n      }\r\n    });\r\n    fetchersQueuedForDeletion.forEach((key) => {\r\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\r\n        unmountedFetchers.push(key);\r\n      }\r\n    });\r\n    [...subscribers].forEach(\r\n      (subscriber) => subscriber(state, {\r\n        deletedFetchers: unmountedFetchers,\r\n        viewTransitionOpts: opts.viewTransitionOpts,\r\n        flushSync: opts.flushSync === true\r\n      })\r\n    );\r\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\r\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\r\n  }\r\n  function completeNavigation(location, newState, { flushSync } = {}) {\r\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\r\n    let actionData;\r\n    if (newState.actionData) {\r\n      if (Object.keys(newState.actionData).length > 0) {\r\n        actionData = newState.actionData;\r\n      } else {\r\n        actionData = null;\r\n      }\r\n    } else if (isActionReload) {\r\n      actionData = state.actionData;\r\n    } else {\r\n      actionData = null;\r\n    }\r\n    let loaderData = newState.loaderData ? mergeLoaderData(\r\n      state.loaderData,\r\n      newState.loaderData,\r\n      newState.matches || [],\r\n      newState.errors\r\n    ) : state.loaderData;\r\n    let blockers = state.blockers;\r\n    if (blockers.size > 0) {\r\n      blockers = new Map(blockers);\r\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\r\n    }\r\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\r\n    if (inFlightDataRoutes) {\r\n      dataRoutes = inFlightDataRoutes;\r\n      inFlightDataRoutes = void 0;\r\n    }\r\n    if (isUninterruptedRevalidation) {\r\n    } else if (pendingAction === \"POP\" /* Pop */) {\r\n    } else if (pendingAction === \"PUSH\" /* Push */) {\r\n      init.history.push(location, location.state);\r\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\r\n      init.history.replace(location, location.state);\r\n    }\r\n    let viewTransitionOpts;\r\n    if (pendingAction === \"POP\" /* Pop */) {\r\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\r\n      if (priorPaths && priorPaths.has(location.pathname)) {\r\n        viewTransitionOpts = {\r\n          currentLocation: state.location,\r\n          nextLocation: location\r\n        };\r\n      } else if (appliedViewTransitions.has(location.pathname)) {\r\n        viewTransitionOpts = {\r\n          currentLocation: location,\r\n          nextLocation: state.location\r\n        };\r\n      }\r\n    } else if (pendingViewTransitionEnabled) {\r\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\r\n      if (toPaths) {\r\n        toPaths.add(location.pathname);\r\n      } else {\r\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\r\n        appliedViewTransitions.set(state.location.pathname, toPaths);\r\n      }\r\n      viewTransitionOpts = {\r\n        currentLocation: state.location,\r\n        nextLocation: location\r\n      };\r\n    }\r\n    updateState(\r\n      {\r\n        ...newState,\r\n        // matches, errors, fetchers go through as-is\r\n        actionData,\r\n        loaderData,\r\n        historyAction: pendingAction,\r\n        location,\r\n        initialized: true,\r\n        navigation: IDLE_NAVIGATION,\r\n        revalidation: \"idle\",\r\n        restoreScrollPosition: getSavedScrollPosition(\r\n          location,\r\n          newState.matches || state.matches\r\n        ),\r\n        preventScrollReset,\r\n        blockers\r\n      },\r\n      {\r\n        viewTransitionOpts,\r\n        flushSync: flushSync === true\r\n      }\r\n    );\r\n    pendingAction = \"POP\" /* Pop */;\r\n    pendingPreventScrollReset = false;\r\n    pendingViewTransitionEnabled = false;\r\n    isUninterruptedRevalidation = false;\r\n    isRevalidationRequired = false;\r\n    pendingRevalidationDfd?.resolve();\r\n    pendingRevalidationDfd = null;\r\n  }\r\n  async function navigate(to, opts) {\r\n    if (typeof to === \"number\") {\r\n      init.history.go(to);\r\n      return;\r\n    }\r\n    let normalizedPath = normalizeTo(\r\n      state.location,\r\n      state.matches,\r\n      basename,\r\n      to,\r\n      opts?.fromRouteId,\r\n      opts?.relative\r\n    );\r\n    let { path, submission, error } = normalizeNavigateOptions(\r\n      false,\r\n      normalizedPath,\r\n      opts\r\n    );\r\n    let currentLocation = state.location;\r\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\r\n    nextLocation = {\r\n      ...nextLocation,\r\n      ...init.history.encodeLocation(nextLocation)\r\n    };\r\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\r\n    let historyAction = \"PUSH\" /* Push */;\r\n    if (userReplace === true) {\r\n      historyAction = \"REPLACE\" /* Replace */;\r\n    } else if (userReplace === false) {\r\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\r\n      historyAction = \"REPLACE\" /* Replace */;\r\n    }\r\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\r\n    let flushSync = (opts && opts.flushSync) === true;\r\n    let blockerKey = shouldBlockNavigation({\r\n      currentLocation,\r\n      nextLocation,\r\n      historyAction\r\n    });\r\n    if (blockerKey) {\r\n      updateBlocker(blockerKey, {\r\n        state: \"blocked\",\r\n        location: nextLocation,\r\n        proceed() {\r\n          updateBlocker(blockerKey, {\r\n            state: \"proceeding\",\r\n            proceed: void 0,\r\n            reset: void 0,\r\n            location: nextLocation\r\n          });\r\n          navigate(to, opts);\r\n        },\r\n        reset() {\r\n          let blockers = new Map(state.blockers);\r\n          blockers.set(blockerKey, IDLE_BLOCKER);\r\n          updateState({ blockers });\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    await startNavigation(historyAction, nextLocation, {\r\n      submission,\r\n      // Send through the formData serialization error if we have one so we can\r\n      // render at the right error boundary after we match routes\r\n      pendingError: error,\r\n      preventScrollReset,\r\n      replace: opts && opts.replace,\r\n      enableViewTransition: opts && opts.viewTransition,\r\n      flushSync\r\n    });\r\n  }\r\n  function revalidate() {\r\n    if (!pendingRevalidationDfd) {\r\n      pendingRevalidationDfd = createDeferred();\r\n    }\r\n    interruptActiveLoads();\r\n    updateState({ revalidation: \"loading\" });\r\n    let promise = pendingRevalidationDfd.promise;\r\n    if (state.navigation.state === \"submitting\") {\r\n      return promise;\r\n    }\r\n    if (state.navigation.state === \"idle\") {\r\n      startNavigation(state.historyAction, state.location, {\r\n        startUninterruptedRevalidation: true\r\n      });\r\n      return promise;\r\n    }\r\n    startNavigation(\r\n      pendingAction || state.historyAction,\r\n      state.navigation.location,\r\n      {\r\n        overrideNavigation: state.navigation,\r\n        // Proxy through any rending view transition\r\n        enableViewTransition: pendingViewTransitionEnabled === true\r\n      }\r\n    );\r\n    return promise;\r\n  }\r\n  async function startNavigation(historyAction, location, opts) {\r\n    pendingNavigationController && pendingNavigationController.abort();\r\n    pendingNavigationController = null;\r\n    pendingAction = historyAction;\r\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\r\n    saveScrollPosition(state.location, state.matches);\r\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\r\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let loadingNavigation = opts && opts.overrideNavigation;\r\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\r\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\r\n      state.matches\r\n    ) : matchRoutes(routesToUse, location, basename);\r\n    let flushSync = (opts && opts.flushSync) === true;\r\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\r\n      completeNavigation(location, { matches }, { flushSync });\r\n      return;\r\n    }\r\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\r\n    if (fogOfWar.active && fogOfWar.matches) {\r\n      matches = fogOfWar.matches;\r\n    }\r\n    if (!matches) {\r\n      let { error, notFoundMatches, route } = handleNavigational404(\r\n        location.pathname\r\n      );\r\n      completeNavigation(\r\n        location,\r\n        {\r\n          matches: notFoundMatches,\r\n          loaderData: {},\r\n          errors: {\r\n            [route.id]: error\r\n          }\r\n        },\r\n        { flushSync }\r\n      );\r\n      return;\r\n    }\r\n    pendingNavigationController = new AbortController();\r\n    let request = createClientSideRequest(\r\n      init.history,\r\n      location,\r\n      pendingNavigationController.signal,\r\n      opts && opts.submission\r\n    );\r\n    let scopedContext = new unstable_RouterContextProvider(\r\n      init.unstable_getContext ? await init.unstable_getContext() : void 0\r\n    );\r\n    let pendingActionResult;\r\n    if (opts && opts.pendingError) {\r\n      pendingActionResult = [\r\n        findNearestBoundary(matches).route.id,\r\n        { type: \"error\" /* error */, error: opts.pendingError }\r\n      ];\r\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\r\n      let actionResult = await handleAction(\r\n        request,\r\n        location,\r\n        opts.submission,\r\n        matches,\r\n        scopedContext,\r\n        fogOfWar.active,\r\n        opts && opts.initialHydration === true,\r\n        { replace: opts.replace, flushSync }\r\n      );\r\n      if (actionResult.shortCircuited) {\r\n        return;\r\n      }\r\n      if (actionResult.pendingActionResult) {\r\n        let [routeId, result] = actionResult.pendingActionResult;\r\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\r\n          pendingNavigationController = null;\r\n          completeNavigation(location, {\r\n            matches: actionResult.matches,\r\n            loaderData: {},\r\n            errors: {\r\n              [routeId]: result.error\r\n            }\r\n          });\r\n          return;\r\n        }\r\n      }\r\n      matches = actionResult.matches || matches;\r\n      pendingActionResult = actionResult.pendingActionResult;\r\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\r\n      flushSync = false;\r\n      fogOfWar.active = false;\r\n      request = createClientSideRequest(\r\n        init.history,\r\n        request.url,\r\n        request.signal\r\n      );\r\n    }\r\n    let {\r\n      shortCircuited,\r\n      matches: updatedMatches,\r\n      loaderData,\r\n      errors\r\n    } = await handleLoaders(\r\n      request,\r\n      location,\r\n      matches,\r\n      scopedContext,\r\n      fogOfWar.active,\r\n      loadingNavigation,\r\n      opts && opts.submission,\r\n      opts && opts.fetcherSubmission,\r\n      opts && opts.replace,\r\n      opts && opts.initialHydration === true,\r\n      flushSync,\r\n      pendingActionResult\r\n    );\r\n    if (shortCircuited) {\r\n      return;\r\n    }\r\n    pendingNavigationController = null;\r\n    completeNavigation(location, {\r\n      matches: updatedMatches || matches,\r\n      ...getActionDataForCommit(pendingActionResult),\r\n      loaderData,\r\n      errors\r\n    });\r\n  }\r\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {\r\n    interruptActiveLoads();\r\n    let navigation = getSubmittingNavigation(location, submission);\r\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(\r\n        matches,\r\n        location.pathname,\r\n        request.signal\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return { shortCircuited: true };\r\n      } else if (discoverResult.type === \"error\") {\r\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\r\n        return {\r\n          matches: discoverResult.partialMatches,\r\n          pendingActionResult: [\r\n            boundaryId,\r\n            {\r\n              type: \"error\" /* error */,\r\n              error: discoverResult.error\r\n            }\r\n          ]\r\n        };\r\n      } else if (!discoverResult.matches) {\r\n        let { notFoundMatches, error, route } = handleNavigational404(\r\n          location.pathname\r\n        );\r\n        return {\r\n          matches: notFoundMatches,\r\n          pendingActionResult: [\r\n            route.id,\r\n            {\r\n              type: \"error\" /* error */,\r\n              error\r\n            }\r\n          ]\r\n        };\r\n      } else {\r\n        matches = discoverResult.matches;\r\n      }\r\n    }\r\n    let result;\r\n    let actionMatch = getTargetMatch(matches, location);\r\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\r\n      result = {\r\n        type: \"error\" /* error */,\r\n        error: getInternalRouterError(405, {\r\n          method: request.method,\r\n          pathname: location.pathname,\r\n          routeId: actionMatch.route.id\r\n        })\r\n      };\r\n    } else {\r\n      let dsMatches = getTargetedDataStrategyMatches(\r\n        mapRouteProperties2,\r\n        manifest,\r\n        request,\r\n        matches,\r\n        actionMatch,\r\n        initialHydration ? [] : hydrationRouteProperties2,\r\n        scopedContext\r\n      );\r\n      let results = await callDataStrategy(\r\n        request,\r\n        dsMatches,\r\n        scopedContext,\r\n        null\r\n      );\r\n      result = results[actionMatch.route.id];\r\n      if (!result) {\r\n        for (let match of matches) {\r\n          if (results[match.route.id]) {\r\n            result = results[match.route.id];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (request.signal.aborted) {\r\n        return { shortCircuited: true };\r\n      }\r\n    }\r\n    if (isRedirectResult(result)) {\r\n      let replace2;\r\n      if (opts && opts.replace != null) {\r\n        replace2 = opts.replace;\r\n      } else {\r\n        let location2 = normalizeRedirectLocation(\r\n          result.response.headers.get(\"Location\"),\r\n          new URL(request.url),\r\n          basename\r\n        );\r\n        replace2 = location2 === state.location.pathname + state.location.search;\r\n      }\r\n      await startRedirectNavigation(request, result, true, {\r\n        submission,\r\n        replace: replace2\r\n      });\r\n      return { shortCircuited: true };\r\n    }\r\n    if (isErrorResult(result)) {\r\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\r\n      if ((opts && opts.replace) !== true) {\r\n        pendingAction = \"PUSH\" /* Push */;\r\n      }\r\n      return {\r\n        matches,\r\n        pendingActionResult: [\r\n          boundaryMatch.route.id,\r\n          result,\r\n          actionMatch.route.id\r\n        ]\r\n      };\r\n    }\r\n    return {\r\n      matches,\r\n      pendingActionResult: [actionMatch.route.id, result]\r\n    };\r\n  }\r\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\r\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\r\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\r\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\r\n    if (isFogOfWar) {\r\n      if (shouldUpdateNavigationState) {\r\n        let actionData = getUpdatedActionData(pendingActionResult);\r\n        updateState(\r\n          {\r\n            navigation: loadingNavigation,\r\n            ...actionData !== void 0 ? { actionData } : {}\r\n          },\r\n          {\r\n            flushSync\r\n          }\r\n        );\r\n      }\r\n      let discoverResult = await discoverRoutes(\r\n        matches,\r\n        location.pathname,\r\n        request.signal\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return { shortCircuited: true };\r\n      } else if (discoverResult.type === \"error\") {\r\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\r\n        return {\r\n          matches: discoverResult.partialMatches,\r\n          loaderData: {},\r\n          errors: {\r\n            [boundaryId]: discoverResult.error\r\n          }\r\n        };\r\n      } else if (!discoverResult.matches) {\r\n        let { error, notFoundMatches, route } = handleNavigational404(\r\n          location.pathname\r\n        );\r\n        return {\r\n          matches: notFoundMatches,\r\n          loaderData: {},\r\n          errors: {\r\n            [route.id]: error\r\n          }\r\n        };\r\n      } else {\r\n        matches = discoverResult.matches;\r\n      }\r\n    }\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\r\n      request,\r\n      scopedContext,\r\n      mapRouteProperties2,\r\n      manifest,\r\n      init.history,\r\n      state,\r\n      matches,\r\n      activeSubmission,\r\n      location,\r\n      initialHydration ? [] : hydrationRouteProperties2,\r\n      initialHydration === true,\r\n      isRevalidationRequired,\r\n      cancelledFetcherLoads,\r\n      fetchersQueuedForDeletion,\r\n      fetchLoadMatches,\r\n      fetchRedirectIds,\r\n      routesToUse,\r\n      basename,\r\n      init.patchRoutesOnNavigation != null,\r\n      pendingActionResult\r\n    );\r\n    pendingNavigationLoadId = ++incrementingLoadId;\r\n    if (!init.dataStrategy && !dsMatches.some((m) => m.shouldLoad) && revalidatingFetchers.length === 0) {\r\n      let updatedFetchers2 = markFetchRedirectsDone();\r\n      completeNavigation(\r\n        location,\r\n        {\r\n          matches,\r\n          loaderData: {},\r\n          // Commit pending error if we're short circuiting\r\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\r\n          ...getActionDataForCommit(pendingActionResult),\r\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\r\n        },\r\n        { flushSync }\r\n      );\r\n      return { shortCircuited: true };\r\n    }\r\n    if (shouldUpdateNavigationState) {\r\n      let updates = {};\r\n      if (!isFogOfWar) {\r\n        updates.navigation = loadingNavigation;\r\n        let actionData = getUpdatedActionData(pendingActionResult);\r\n        if (actionData !== void 0) {\r\n          updates.actionData = actionData;\r\n        }\r\n      }\r\n      if (revalidatingFetchers.length > 0) {\r\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\r\n      }\r\n      updateState(updates, { flushSync });\r\n    }\r\n    revalidatingFetchers.forEach((rf) => {\r\n      abortFetcher(rf.key);\r\n      if (rf.controller) {\r\n        fetchControllers.set(rf.key, rf.controller);\r\n      }\r\n    });\r\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\r\n    if (pendingNavigationController) {\r\n      pendingNavigationController.signal.addEventListener(\r\n        \"abort\",\r\n        abortPendingFetchRevalidations\r\n      );\r\n    }\r\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\r\n      dsMatches,\r\n      revalidatingFetchers,\r\n      request,\r\n      scopedContext\r\n    );\r\n    if (request.signal.aborted) {\r\n      return { shortCircuited: true };\r\n    }\r\n    if (pendingNavigationController) {\r\n      pendingNavigationController.signal.removeEventListener(\r\n        \"abort\",\r\n        abortPendingFetchRevalidations\r\n      );\r\n    }\r\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\r\n    let redirect2 = findRedirect(loaderResults);\r\n    if (redirect2) {\r\n      await startRedirectNavigation(request, redirect2.result, true, {\r\n        replace: replace2\r\n      });\r\n      return { shortCircuited: true };\r\n    }\r\n    redirect2 = findRedirect(fetcherResults);\r\n    if (redirect2) {\r\n      fetchRedirectIds.add(redirect2.key);\r\n      await startRedirectNavigation(request, redirect2.result, true, {\r\n        replace: replace2\r\n      });\r\n      return { shortCircuited: true };\r\n    }\r\n    let { loaderData, errors } = processLoaderData(\r\n      state,\r\n      matches,\r\n      loaderResults,\r\n      pendingActionResult,\r\n      revalidatingFetchers,\r\n      fetcherResults\r\n    );\r\n    if (initialHydration && state.errors) {\r\n      errors = { ...state.errors, ...errors };\r\n    }\r\n    let updatedFetchers = markFetchRedirectsDone();\r\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\r\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\r\n    return {\r\n      matches,\r\n      loaderData,\r\n      errors,\r\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\r\n    };\r\n  }\r\n  function getUpdatedActionData(pendingActionResult) {\r\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\r\n      return {\r\n        [pendingActionResult[0]]: pendingActionResult[1].data\r\n      };\r\n    } else if (state.actionData) {\r\n      if (Object.keys(state.actionData).length === 0) {\r\n        return null;\r\n      } else {\r\n        return state.actionData;\r\n      }\r\n    }\r\n  }\r\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\r\n    revalidatingFetchers.forEach((rf) => {\r\n      let fetcher = state.fetchers.get(rf.key);\r\n      let revalidatingFetcher = getLoadingFetcher(\r\n        void 0,\r\n        fetcher ? fetcher.data : void 0\r\n      );\r\n      state.fetchers.set(rf.key, revalidatingFetcher);\r\n    });\r\n    return new Map(state.fetchers);\r\n  }\r\n  async function fetch2(key, routeId, href2, opts) {\r\n    abortFetcher(key);\r\n    let flushSync = (opts && opts.flushSync) === true;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let normalizedPath = normalizeTo(\r\n      state.location,\r\n      state.matches,\r\n      basename,\r\n      href2,\r\n      routeId,\r\n      opts?.relative\r\n    );\r\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\r\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\r\n    if (fogOfWar.active && fogOfWar.matches) {\r\n      matches = fogOfWar.matches;\r\n    }\r\n    if (!matches) {\r\n      setFetcherError(\r\n        key,\r\n        routeId,\r\n        getInternalRouterError(404, { pathname: normalizedPath }),\r\n        { flushSync }\r\n      );\r\n      return;\r\n    }\r\n    let { path, submission, error } = normalizeNavigateOptions(\r\n      true,\r\n      normalizedPath,\r\n      opts\r\n    );\r\n    if (error) {\r\n      setFetcherError(key, routeId, error, { flushSync });\r\n      return;\r\n    }\r\n    let match = getTargetMatch(matches, path);\r\n    let scopedContext = new unstable_RouterContextProvider(\r\n      init.unstable_getContext ? await init.unstable_getContext() : void 0\r\n    );\r\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\r\n    if (submission && isMutationMethod(submission.formMethod)) {\r\n      await handleFetcherAction(\r\n        key,\r\n        routeId,\r\n        path,\r\n        match,\r\n        matches,\r\n        scopedContext,\r\n        fogOfWar.active,\r\n        flushSync,\r\n        preventScrollReset,\r\n        submission\r\n      );\r\n      return;\r\n    }\r\n    fetchLoadMatches.set(key, { routeId, path });\r\n    await handleFetcherLoader(\r\n      key,\r\n      routeId,\r\n      path,\r\n      match,\r\n      matches,\r\n      scopedContext,\r\n      fogOfWar.active,\r\n      flushSync,\r\n      preventScrollReset,\r\n      submission\r\n    );\r\n  }\r\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\r\n    interruptActiveLoads();\r\n    fetchLoadMatches.delete(key);\r\n    function detectAndHandle405Error(m) {\r\n      if (!m.route.action && !m.route.lazy) {\r\n        let error = getInternalRouterError(405, {\r\n          method: submission.formMethod,\r\n          pathname: path,\r\n          routeId\r\n        });\r\n        setFetcherError(key, routeId, error, { flushSync });\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\r\n      return;\r\n    }\r\n    let existingFetcher = state.fetchers.get(key);\r\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\r\n      flushSync\r\n    });\r\n    let abortController = new AbortController();\r\n    let fetchRequest = createClientSideRequest(\r\n      init.history,\r\n      path,\r\n      abortController.signal,\r\n      submission\r\n    );\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(\r\n        requestMatches,\r\n        path,\r\n        fetchRequest.signal,\r\n        key\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return;\r\n      } else if (discoverResult.type === \"error\") {\r\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\r\n        return;\r\n      } else if (!discoverResult.matches) {\r\n        setFetcherError(\r\n          key,\r\n          routeId,\r\n          getInternalRouterError(404, { pathname: path }),\r\n          { flushSync }\r\n        );\r\n        return;\r\n      } else {\r\n        requestMatches = discoverResult.matches;\r\n        match = getTargetMatch(requestMatches, path);\r\n        if (detectAndHandle405Error(match)) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    fetchControllers.set(key, abortController);\r\n    let originatingLoadId = incrementingLoadId;\r\n    let fetchMatches = getTargetedDataStrategyMatches(\r\n      mapRouteProperties2,\r\n      manifest,\r\n      fetchRequest,\r\n      requestMatches,\r\n      match,\r\n      hydrationRouteProperties2,\r\n      scopedContext\r\n    );\r\n    let actionResults = await callDataStrategy(\r\n      fetchRequest,\r\n      fetchMatches,\r\n      scopedContext,\r\n      key\r\n    );\r\n    let actionResult = actionResults[match.route.id];\r\n    if (fetchRequest.signal.aborted) {\r\n      if (fetchControllers.get(key) === abortController) {\r\n        fetchControllers.delete(key);\r\n      }\r\n      return;\r\n    }\r\n    if (fetchersQueuedForDeletion.has(key)) {\r\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\r\n        updateFetcherState(key, getDoneFetcher(void 0));\r\n        return;\r\n      }\r\n    } else {\r\n      if (isRedirectResult(actionResult)) {\r\n        fetchControllers.delete(key);\r\n        if (pendingNavigationLoadId > originatingLoadId) {\r\n          updateFetcherState(key, getDoneFetcher(void 0));\r\n          return;\r\n        } else {\r\n          fetchRedirectIds.add(key);\r\n          updateFetcherState(key, getLoadingFetcher(submission));\r\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\r\n            fetcherSubmission: submission,\r\n            preventScrollReset\r\n          });\r\n        }\r\n      }\r\n      if (isErrorResult(actionResult)) {\r\n        setFetcherError(key, routeId, actionResult.error);\r\n        return;\r\n      }\r\n    }\r\n    let nextLocation = state.navigation.location || state.location;\r\n    let revalidationRequest = createClientSideRequest(\r\n      init.history,\r\n      nextLocation,\r\n      abortController.signal\r\n    );\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\r\n    invariant(matches, \"Didn't find any matches after fetcher action\");\r\n    let loadId = ++incrementingLoadId;\r\n    fetchReloadIds.set(key, loadId);\r\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\r\n    state.fetchers.set(key, loadFetcher);\r\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\r\n      revalidationRequest,\r\n      scopedContext,\r\n      mapRouteProperties2,\r\n      manifest,\r\n      init.history,\r\n      state,\r\n      matches,\r\n      submission,\r\n      nextLocation,\r\n      hydrationRouteProperties2,\r\n      false,\r\n      isRevalidationRequired,\r\n      cancelledFetcherLoads,\r\n      fetchersQueuedForDeletion,\r\n      fetchLoadMatches,\r\n      fetchRedirectIds,\r\n      routesToUse,\r\n      basename,\r\n      init.patchRoutesOnNavigation != null,\r\n      [match.route.id, actionResult]\r\n    );\r\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\r\n      let staleKey = rf.key;\r\n      let existingFetcher2 = state.fetchers.get(staleKey);\r\n      let revalidatingFetcher = getLoadingFetcher(\r\n        void 0,\r\n        existingFetcher2 ? existingFetcher2.data : void 0\r\n      );\r\n      state.fetchers.set(staleKey, revalidatingFetcher);\r\n      abortFetcher(staleKey);\r\n      if (rf.controller) {\r\n        fetchControllers.set(staleKey, rf.controller);\r\n      }\r\n    });\r\n    updateState({ fetchers: new Map(state.fetchers) });\r\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\r\n    abortController.signal.addEventListener(\r\n      \"abort\",\r\n      abortPendingFetchRevalidations\r\n    );\r\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\r\n      dsMatches,\r\n      revalidatingFetchers,\r\n      revalidationRequest,\r\n      scopedContext\r\n    );\r\n    if (abortController.signal.aborted) {\r\n      return;\r\n    }\r\n    abortController.signal.removeEventListener(\r\n      \"abort\",\r\n      abortPendingFetchRevalidations\r\n    );\r\n    fetchReloadIds.delete(key);\r\n    fetchControllers.delete(key);\r\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\r\n    if (state.fetchers.has(key)) {\r\n      let doneFetcher = getDoneFetcher(actionResult.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n    let redirect2 = findRedirect(loaderResults);\r\n    if (redirect2) {\r\n      return startRedirectNavigation(\r\n        revalidationRequest,\r\n        redirect2.result,\r\n        false,\r\n        { preventScrollReset }\r\n      );\r\n    }\r\n    redirect2 = findRedirect(fetcherResults);\r\n    if (redirect2) {\r\n      fetchRedirectIds.add(redirect2.key);\r\n      return startRedirectNavigation(\r\n        revalidationRequest,\r\n        redirect2.result,\r\n        false,\r\n        { preventScrollReset }\r\n      );\r\n    }\r\n    let { loaderData, errors } = processLoaderData(\r\n      state,\r\n      matches,\r\n      loaderResults,\r\n      void 0,\r\n      revalidatingFetchers,\r\n      fetcherResults\r\n    );\r\n    abortStaleFetchLoads(loadId);\r\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\r\n      invariant(pendingAction, \"Expected pending action\");\r\n      pendingNavigationController && pendingNavigationController.abort();\r\n      completeNavigation(state.navigation.location, {\r\n        matches,\r\n        loaderData,\r\n        errors,\r\n        fetchers: new Map(state.fetchers)\r\n      });\r\n    } else {\r\n      updateState({\r\n        errors,\r\n        loaderData: mergeLoaderData(\r\n          state.loaderData,\r\n          loaderData,\r\n          matches,\r\n          errors\r\n        ),\r\n        fetchers: new Map(state.fetchers)\r\n      });\r\n      isRevalidationRequired = false;\r\n    }\r\n  }\r\n  async function handleFetcherLoader(key, routeId, path, match, matches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\r\n    let existingFetcher = state.fetchers.get(key);\r\n    updateFetcherState(\r\n      key,\r\n      getLoadingFetcher(\r\n        submission,\r\n        existingFetcher ? existingFetcher.data : void 0\r\n      ),\r\n      { flushSync }\r\n    );\r\n    let abortController = new AbortController();\r\n    let fetchRequest = createClientSideRequest(\r\n      init.history,\r\n      path,\r\n      abortController.signal\r\n    );\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(\r\n        matches,\r\n        path,\r\n        fetchRequest.signal,\r\n        key\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return;\r\n      } else if (discoverResult.type === \"error\") {\r\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\r\n        return;\r\n      } else if (!discoverResult.matches) {\r\n        setFetcherError(\r\n          key,\r\n          routeId,\r\n          getInternalRouterError(404, { pathname: path }),\r\n          { flushSync }\r\n        );\r\n        return;\r\n      } else {\r\n        matches = discoverResult.matches;\r\n        match = getTargetMatch(matches, path);\r\n      }\r\n    }\r\n    fetchControllers.set(key, abortController);\r\n    let originatingLoadId = incrementingLoadId;\r\n    let dsMatches = getTargetedDataStrategyMatches(\r\n      mapRouteProperties2,\r\n      manifest,\r\n      fetchRequest,\r\n      matches,\r\n      match,\r\n      hydrationRouteProperties2,\r\n      scopedContext\r\n    );\r\n    let results = await callDataStrategy(\r\n      fetchRequest,\r\n      dsMatches,\r\n      scopedContext,\r\n      key\r\n    );\r\n    let result = results[match.route.id];\r\n    if (fetchControllers.get(key) === abortController) {\r\n      fetchControllers.delete(key);\r\n    }\r\n    if (fetchRequest.signal.aborted) {\r\n      return;\r\n    }\r\n    if (fetchersQueuedForDeletion.has(key)) {\r\n      updateFetcherState(key, getDoneFetcher(void 0));\r\n      return;\r\n    }\r\n    if (isRedirectResult(result)) {\r\n      if (pendingNavigationLoadId > originatingLoadId) {\r\n        updateFetcherState(key, getDoneFetcher(void 0));\r\n        return;\r\n      } else {\r\n        fetchRedirectIds.add(key);\r\n        await startRedirectNavigation(fetchRequest, result, false, {\r\n          preventScrollReset\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    if (isErrorResult(result)) {\r\n      setFetcherError(key, routeId, result.error);\r\n      return;\r\n    }\r\n    updateFetcherState(key, getDoneFetcher(result.data));\r\n  }\r\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\r\n    submission,\r\n    fetcherSubmission,\r\n    preventScrollReset,\r\n    replace: replace2\r\n  } = {}) {\r\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\r\n      isRevalidationRequired = true;\r\n    }\r\n    let location = redirect2.response.headers.get(\"Location\");\r\n    invariant(location, \"Expected a Location header on the redirect Response\");\r\n    location = normalizeRedirectLocation(\r\n      location,\r\n      new URL(request.url),\r\n      basename\r\n    );\r\n    let redirectLocation = createLocation(state.location, location, {\r\n      _isRedirect: true\r\n    });\r\n    if (isBrowser2) {\r\n      let isDocumentReload = false;\r\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\r\n        isDocumentReload = true;\r\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\r\n        const url = createBrowserURLImpl(location, true);\r\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\r\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\r\n        stripBasename(url.pathname, basename) == null;\r\n      }\r\n      if (isDocumentReload) {\r\n        if (replace2) {\r\n          routerWindow.location.replace(location);\r\n        } else {\r\n          routerWindow.location.assign(location);\r\n        }\r\n        return;\r\n      }\r\n    }\r\n    pendingNavigationController = null;\r\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\r\n    let { formMethod, formAction, formEncType } = state.navigation;\r\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\r\n      submission = getSubmissionFromNavigation(state.navigation);\r\n    }\r\n    let activeSubmission = submission || fetcherSubmission;\r\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\r\n      await startNavigation(redirectNavigationType, redirectLocation, {\r\n        submission: {\r\n          ...activeSubmission,\r\n          formAction: location\r\n        },\r\n        // Preserve these flags across redirects\r\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\r\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\r\n      });\r\n    } else {\r\n      let overrideNavigation = getLoadingNavigation(\r\n        redirectLocation,\r\n        submission\r\n      );\r\n      await startNavigation(redirectNavigationType, redirectLocation, {\r\n        overrideNavigation,\r\n        // Send fetcher submissions through for shouldRevalidate\r\n        fetcherSubmission,\r\n        // Preserve these flags across redirects\r\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\r\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\r\n      });\r\n    }\r\n  }\r\n  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {\r\n    let results;\r\n    let dataResults = {};\r\n    try {\r\n      results = await callDataStrategyImpl(\r\n        dataStrategyImpl,\r\n        request,\r\n        matches,\r\n        fetcherKey,\r\n        scopedContext,\r\n        false\r\n      );\r\n    } catch (e) {\r\n      matches.filter((m) => m.shouldLoad).forEach((m) => {\r\n        dataResults[m.route.id] = {\r\n          type: \"error\" /* error */,\r\n          error: e\r\n        };\r\n      });\r\n      return dataResults;\r\n    }\r\n    if (request.signal.aborted) {\r\n      return dataResults;\r\n    }\r\n    for (let [routeId, result] of Object.entries(results)) {\r\n      if (isRedirectDataStrategyResult(result)) {\r\n        let response = result.result;\r\n        dataResults[routeId] = {\r\n          type: \"redirect\" /* redirect */,\r\n          response: normalizeRelativeRoutingRedirectResponse(\r\n            response,\r\n            request,\r\n            routeId,\r\n            matches,\r\n            basename\r\n          )\r\n        };\r\n      } else {\r\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\r\n          result\r\n        );\r\n      }\r\n    }\r\n    return dataResults;\r\n  }\r\n  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {\r\n    let loaderResultsPromise = callDataStrategy(\r\n      request,\r\n      matches,\r\n      scopedContext,\r\n      null\r\n    );\r\n    let fetcherResultsPromise = Promise.all(\r\n      fetchersToLoad.map(async (f) => {\r\n        if (f.matches && f.match && f.request && f.controller) {\r\n          let results = await callDataStrategy(\r\n            f.request,\r\n            f.matches,\r\n            scopedContext,\r\n            f.key\r\n          );\r\n          let result = results[f.match.route.id];\r\n          return { [f.key]: result };\r\n        } else {\r\n          return Promise.resolve({\r\n            [f.key]: {\r\n              type: \"error\" /* error */,\r\n              error: getInternalRouterError(404, {\r\n                pathname: f.path\r\n              })\r\n            }\r\n          });\r\n        }\r\n      })\r\n    );\r\n    let loaderResults = await loaderResultsPromise;\r\n    let fetcherResults = (await fetcherResultsPromise).reduce(\r\n      (acc, r) => Object.assign(acc, r),\r\n      {}\r\n    );\r\n    return {\r\n      loaderResults,\r\n      fetcherResults\r\n    };\r\n  }\r\n  function interruptActiveLoads() {\r\n    isRevalidationRequired = true;\r\n    fetchLoadMatches.forEach((_, key) => {\r\n      if (fetchControllers.has(key)) {\r\n        cancelledFetcherLoads.add(key);\r\n      }\r\n      abortFetcher(key);\r\n    });\r\n  }\r\n  function updateFetcherState(key, fetcher, opts = {}) {\r\n    state.fetchers.set(key, fetcher);\r\n    updateState(\r\n      { fetchers: new Map(state.fetchers) },\r\n      { flushSync: (opts && opts.flushSync) === true }\r\n    );\r\n  }\r\n  function setFetcherError(key, routeId, error, opts = {}) {\r\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\r\n    deleteFetcher(key);\r\n    updateState(\r\n      {\r\n        errors: {\r\n          [boundaryMatch.route.id]: error\r\n        },\r\n        fetchers: new Map(state.fetchers)\r\n      },\r\n      { flushSync: (opts && opts.flushSync) === true }\r\n    );\r\n  }\r\n  function getFetcher(key) {\r\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\r\n    if (fetchersQueuedForDeletion.has(key)) {\r\n      fetchersQueuedForDeletion.delete(key);\r\n    }\r\n    return state.fetchers.get(key) || IDLE_FETCHER;\r\n  }\r\n  function deleteFetcher(key) {\r\n    let fetcher = state.fetchers.get(key);\r\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\r\n      abortFetcher(key);\r\n    }\r\n    fetchLoadMatches.delete(key);\r\n    fetchReloadIds.delete(key);\r\n    fetchRedirectIds.delete(key);\r\n    fetchersQueuedForDeletion.delete(key);\r\n    cancelledFetcherLoads.delete(key);\r\n    state.fetchers.delete(key);\r\n  }\r\n  function queueFetcherForDeletion(key) {\r\n    let count = (activeFetchers.get(key) || 0) - 1;\r\n    if (count <= 0) {\r\n      activeFetchers.delete(key);\r\n      fetchersQueuedForDeletion.add(key);\r\n    } else {\r\n      activeFetchers.set(key, count);\r\n    }\r\n    updateState({ fetchers: new Map(state.fetchers) });\r\n  }\r\n  function abortFetcher(key) {\r\n    let controller = fetchControllers.get(key);\r\n    if (controller) {\r\n      controller.abort();\r\n      fetchControllers.delete(key);\r\n    }\r\n  }\r\n  function markFetchersDone(keys) {\r\n    for (let key of keys) {\r\n      let fetcher = getFetcher(key);\r\n      let doneFetcher = getDoneFetcher(fetcher.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n  }\r\n  function markFetchRedirectsDone() {\r\n    let doneKeys = [];\r\n    let updatedFetchers = false;\r\n    for (let key of fetchRedirectIds) {\r\n      let fetcher = state.fetchers.get(key);\r\n      invariant(fetcher, `Expected fetcher: ${key}`);\r\n      if (fetcher.state === \"loading\") {\r\n        fetchRedirectIds.delete(key);\r\n        doneKeys.push(key);\r\n        updatedFetchers = true;\r\n      }\r\n    }\r\n    markFetchersDone(doneKeys);\r\n    return updatedFetchers;\r\n  }\r\n  function abortStaleFetchLoads(landedId) {\r\n    let yeetedKeys = [];\r\n    for (let [key, id] of fetchReloadIds) {\r\n      if (id < landedId) {\r\n        let fetcher = state.fetchers.get(key);\r\n        invariant(fetcher, `Expected fetcher: ${key}`);\r\n        if (fetcher.state === \"loading\") {\r\n          abortFetcher(key);\r\n          fetchReloadIds.delete(key);\r\n          yeetedKeys.push(key);\r\n        }\r\n      }\r\n    }\r\n    markFetchersDone(yeetedKeys);\r\n    return yeetedKeys.length > 0;\r\n  }\r\n  function getBlocker(key, fn) {\r\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\r\n    if (blockerFunctions.get(key) !== fn) {\r\n      blockerFunctions.set(key, fn);\r\n    }\r\n    return blocker;\r\n  }\r\n  function deleteBlocker(key) {\r\n    state.blockers.delete(key);\r\n    blockerFunctions.delete(key);\r\n  }\r\n  function updateBlocker(key, newBlocker) {\r\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\r\n    invariant(\r\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\r\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\r\n    );\r\n    let blockers = new Map(state.blockers);\r\n    blockers.set(key, newBlocker);\r\n    updateState({ blockers });\r\n  }\r\n  function shouldBlockNavigation({\r\n    currentLocation,\r\n    nextLocation,\r\n    historyAction\r\n  }) {\r\n    if (blockerFunctions.size === 0) {\r\n      return;\r\n    }\r\n    if (blockerFunctions.size > 1) {\r\n      warning(false, \"A router only supports one blocker at a time\");\r\n    }\r\n    let entries = Array.from(blockerFunctions.entries());\r\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\r\n    let blocker = state.blockers.get(blockerKey);\r\n    if (blocker && blocker.state === \"proceeding\") {\r\n      return;\r\n    }\r\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\r\n      return blockerKey;\r\n    }\r\n  }\r\n  function handleNavigational404(pathname) {\r\n    let error = getInternalRouterError(404, { pathname });\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let { matches, route } = getShortCircuitMatches(routesToUse);\r\n    return { notFoundMatches: matches, route, error };\r\n  }\r\n  function enableScrollRestoration(positions, getPosition, getKey) {\r\n    savedScrollPositions2 = positions;\r\n    getScrollPosition = getPosition;\r\n    getScrollRestorationKey2 = getKey || null;\r\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\r\n      initialScrollRestored = true;\r\n      let y = getSavedScrollPosition(state.location, state.matches);\r\n      if (y != null) {\r\n        updateState({ restoreScrollPosition: y });\r\n      }\r\n    }\r\n    return () => {\r\n      savedScrollPositions2 = null;\r\n      getScrollPosition = null;\r\n      getScrollRestorationKey2 = null;\r\n    };\r\n  }\r\n  function getScrollKey(location, matches) {\r\n    if (getScrollRestorationKey2) {\r\n      let key = getScrollRestorationKey2(\r\n        location,\r\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\r\n      );\r\n      return key || location.key;\r\n    }\r\n    return location.key;\r\n  }\r\n  function saveScrollPosition(location, matches) {\r\n    if (savedScrollPositions2 && getScrollPosition) {\r\n      let key = getScrollKey(location, matches);\r\n      savedScrollPositions2[key] = getScrollPosition();\r\n    }\r\n  }\r\n  function getSavedScrollPosition(location, matches) {\r\n    if (savedScrollPositions2) {\r\n      let key = getScrollKey(location, matches);\r\n      let y = savedScrollPositions2[key];\r\n      if (typeof y === \"number\") {\r\n        return y;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  function checkFogOfWar(matches, routesToUse, pathname) {\r\n    if (init.patchRoutesOnNavigation) {\r\n      if (!matches) {\r\n        let fogMatches = matchRoutesImpl(\r\n          routesToUse,\r\n          pathname,\r\n          basename,\r\n          true\r\n        );\r\n        return { active: true, matches: fogMatches || [] };\r\n      } else {\r\n        if (Object.keys(matches[0].params).length > 0) {\r\n          let partialMatches = matchRoutesImpl(\r\n            routesToUse,\r\n            pathname,\r\n            basename,\r\n            true\r\n          );\r\n          return { active: true, matches: partialMatches };\r\n        }\r\n      }\r\n    }\r\n    return { active: false, matches: null };\r\n  }\r\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\r\n    if (!init.patchRoutesOnNavigation) {\r\n      return { type: \"success\", matches };\r\n    }\r\n    let partialMatches = matches;\r\n    while (true) {\r\n      let isNonHMR = inFlightDataRoutes == null;\r\n      let routesToUse = inFlightDataRoutes || dataRoutes;\r\n      let localManifest = manifest;\r\n      try {\r\n        await init.patchRoutesOnNavigation({\r\n          signal,\r\n          path: pathname,\r\n          matches: partialMatches,\r\n          fetcherKey,\r\n          patch: (routeId, children) => {\r\n            if (signal.aborted) return;\r\n            patchRoutesImpl(\r\n              routeId,\r\n              children,\r\n              routesToUse,\r\n              localManifest,\r\n              mapRouteProperties2\r\n            );\r\n          }\r\n        });\r\n      } catch (e) {\r\n        return { type: \"error\", error: e, partialMatches };\r\n      } finally {\r\n        if (isNonHMR && !signal.aborted) {\r\n          dataRoutes = [...dataRoutes];\r\n        }\r\n      }\r\n      if (signal.aborted) {\r\n        return { type: \"aborted\" };\r\n      }\r\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\r\n      if (newMatches) {\r\n        return { type: \"success\", matches: newMatches };\r\n      }\r\n      let newPartialMatches = matchRoutesImpl(\r\n        routesToUse,\r\n        pathname,\r\n        basename,\r\n        true\r\n      );\r\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\r\n        (m, i) => m.route.id === newPartialMatches[i].route.id\r\n      )) {\r\n        return { type: \"success\", matches: null };\r\n      }\r\n      partialMatches = newPartialMatches;\r\n    }\r\n  }\r\n  function _internalSetRoutes(newRoutes) {\r\n    manifest = {};\r\n    inFlightDataRoutes = convertRoutesToDataRoutes(\r\n      newRoutes,\r\n      mapRouteProperties2,\r\n      void 0,\r\n      manifest\r\n    );\r\n  }\r\n  function patchRoutes(routeId, children) {\r\n    let isNonHMR = inFlightDataRoutes == null;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    patchRoutesImpl(\r\n      routeId,\r\n      children,\r\n      routesToUse,\r\n      manifest,\r\n      mapRouteProperties2\r\n    );\r\n    if (isNonHMR) {\r\n      dataRoutes = [...dataRoutes];\r\n      updateState({});\r\n    }\r\n  }\r\n  router = {\r\n    get basename() {\r\n      return basename;\r\n    },\r\n    get future() {\r\n      return future;\r\n    },\r\n    get state() {\r\n      return state;\r\n    },\r\n    get routes() {\r\n      return dataRoutes;\r\n    },\r\n    get window() {\r\n      return routerWindow;\r\n    },\r\n    initialize,\r\n    subscribe,\r\n    enableScrollRestoration,\r\n    navigate,\r\n    fetch: fetch2,\r\n    revalidate,\r\n    // Passthrough to history-aware createHref used by useHref so we get proper\r\n    // hash-aware URLs in DOM paths\r\n    createHref: (to) => init.history.createHref(to),\r\n    encodeLocation: (to) => init.history.encodeLocation(to),\r\n    getFetcher,\r\n    deleteFetcher: queueFetcherForDeletion,\r\n    dispose,\r\n    getBlocker,\r\n    deleteBlocker,\r\n    patchRoutes,\r\n    _internalFetchControllers: fetchControllers,\r\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\r\n    // updating the tree while validating the update algorithm.\r\n    _internalSetRoutes\r\n  };\r\n  return router;\r\n}\r\nfunction createStaticHandler(routes, opts) {\r\n  invariant(\r\n    routes.length > 0,\r\n    \"You must provide a non-empty routes array to createStaticHandler\"\r\n  );\r\n  let manifest = {};\r\n  let basename = (opts ? opts.basename : null) || \"/\";\r\n  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;\r\n  let dataRoutes = convertRoutesToDataRoutes(\r\n    routes,\r\n    mapRouteProperties2,\r\n    void 0,\r\n    manifest\r\n  );\r\n  async function query(request, {\r\n    requestContext,\r\n    filterMatchesToLoad,\r\n    skipLoaderErrorBubbling,\r\n    skipRevalidation,\r\n    dataStrategy,\r\n    unstable_respond: respond\r\n  } = {}) {\r\n    let url = new URL(request.url);\r\n    let method = request.method;\r\n    let location = createLocation(\"\", createPath(url), null, \"default\");\r\n    let matches = matchRoutes(dataRoutes, location, basename);\r\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\r\n    if (!isValidMethod(method) && method !== \"HEAD\") {\r\n      let error = getInternalRouterError(405, { method });\r\n      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);\r\n      let staticContext = {\r\n        basename,\r\n        location,\r\n        matches: methodNotAllowedMatches,\r\n        loaderData: {},\r\n        actionData: null,\r\n        errors: {\r\n          [route.id]: error\r\n        },\r\n        statusCode: error.status,\r\n        loaderHeaders: {},\r\n        actionHeaders: {}\r\n      };\r\n      return respond ? respond(staticContext) : staticContext;\r\n    } else if (!matches) {\r\n      let error = getInternalRouterError(404, { pathname: location.pathname });\r\n      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);\r\n      let staticContext = {\r\n        basename,\r\n        location,\r\n        matches: notFoundMatches,\r\n        loaderData: {},\r\n        actionData: null,\r\n        errors: {\r\n          [route.id]: error\r\n        },\r\n        statusCode: error.status,\r\n        loaderHeaders: {},\r\n        actionHeaders: {}\r\n      };\r\n      return respond ? respond(staticContext) : staticContext;\r\n    }\r\n    if (respond && matches.some(\r\n      (m) => m.route.unstable_middleware || typeof m.route.lazy === \"object\" && m.route.lazy.unstable_middleware\r\n    )) {\r\n      invariant(\r\n        requestContext instanceof unstable_RouterContextProvider,\r\n        \"When using middleware in `staticHandler.query()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\r\n      );\r\n      try {\r\n        await loadLazyMiddlewareForMatches(\r\n          matches,\r\n          manifest,\r\n          mapRouteProperties2\r\n        );\r\n        let renderedStaticContext;\r\n        let response = await runMiddlewarePipeline(\r\n          {\r\n            request,\r\n            matches,\r\n            params: matches[0].params,\r\n            // If we're calling middleware then it must be enabled so we can cast\r\n            // this to the proper type knowing it's not an `AppLoadContext`\r\n            context: requestContext\r\n          },\r\n          true,\r\n          async () => {\r\n            let result2 = await queryImpl(\r\n              request,\r\n              location,\r\n              matches,\r\n              requestContext,\r\n              dataStrategy || null,\r\n              skipLoaderErrorBubbling === true,\r\n              null,\r\n              filterMatchesToLoad || null,\r\n              skipRevalidation === true\r\n            );\r\n            if (isResponse(result2)) {\r\n              return result2;\r\n            }\r\n            renderedStaticContext = { location, basename, ...result2 };\r\n            let res = await respond(renderedStaticContext);\r\n            return res;\r\n          },\r\n          async (error, routeId) => {\r\n            if (isResponse(error)) {\r\n              return error;\r\n            }\r\n            if (renderedStaticContext) {\r\n              if (routeId in renderedStaticContext.loaderData) {\r\n                renderedStaticContext.loaderData[routeId] = void 0;\r\n              }\r\n              return respond(\r\n                getStaticContextFromError(\r\n                  dataRoutes,\r\n                  renderedStaticContext,\r\n                  error,\r\n                  skipLoaderErrorBubbling ? routeId : findNearestBoundary(matches, routeId).route.id\r\n                )\r\n              );\r\n            } else {\r\n              let boundaryRouteId = skipLoaderErrorBubbling ? routeId : findNearestBoundary(\r\n                matches,\r\n                matches.find(\r\n                  (m) => m.route.id === routeId || m.route.loader\r\n                )?.route.id || routeId\r\n              ).route.id;\r\n              return respond({\r\n                matches,\r\n                location,\r\n                basename,\r\n                loaderData: {},\r\n                actionData: null,\r\n                errors: {\r\n                  [boundaryRouteId]: error\r\n                },\r\n                statusCode: isRouteErrorResponse(error) ? error.status : 500,\r\n                actionHeaders: {},\r\n                loaderHeaders: {}\r\n              });\r\n            }\r\n          }\r\n        );\r\n        invariant(isResponse(response), \"Expected a response in query()\");\r\n        return response;\r\n      } catch (e) {\r\n        if (isResponse(e)) {\r\n          return e;\r\n        }\r\n        throw e;\r\n      }\r\n    }\r\n    let result = await queryImpl(\r\n      request,\r\n      location,\r\n      matches,\r\n      requestContext,\r\n      dataStrategy || null,\r\n      skipLoaderErrorBubbling === true,\r\n      null,\r\n      filterMatchesToLoad || null,\r\n      skipRevalidation === true\r\n    );\r\n    if (isResponse(result)) {\r\n      return result;\r\n    }\r\n    return { location, basename, ...result };\r\n  }\r\n  async function queryRoute(request, {\r\n    routeId,\r\n    requestContext,\r\n    dataStrategy,\r\n    unstable_respond: respond\r\n  } = {}) {\r\n    let url = new URL(request.url);\r\n    let method = request.method;\r\n    let location = createLocation(\"\", createPath(url), null, \"default\");\r\n    let matches = matchRoutes(dataRoutes, location, basename);\r\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\r\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\r\n      throw getInternalRouterError(405, { method });\r\n    } else if (!matches) {\r\n      throw getInternalRouterError(404, { pathname: location.pathname });\r\n    }\r\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\r\n    if (routeId && !match) {\r\n      throw getInternalRouterError(403, {\r\n        pathname: location.pathname,\r\n        routeId\r\n      });\r\n    } else if (!match) {\r\n      throw getInternalRouterError(404, { pathname: location.pathname });\r\n    }\r\n    if (respond && matches.some(\r\n      (m) => m.route.unstable_middleware || typeof m.route.lazy === \"object\" && m.route.lazy.unstable_middleware\r\n    )) {\r\n      invariant(\r\n        requestContext instanceof unstable_RouterContextProvider,\r\n        \"When using middleware in `staticHandler.queryRoute()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\r\n      );\r\n      await loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2);\r\n      let response = await runMiddlewarePipeline(\r\n        {\r\n          request,\r\n          matches,\r\n          params: matches[0].params,\r\n          // If we're calling middleware then it must be enabled so we can cast\r\n          // this to the proper type knowing it's not an `AppLoadContext`\r\n          context: requestContext\r\n        },\r\n        true,\r\n        async () => {\r\n          let result2 = await queryImpl(\r\n            request,\r\n            location,\r\n            matches,\r\n            requestContext,\r\n            dataStrategy || null,\r\n            false,\r\n            match,\r\n            null,\r\n            false\r\n          );\r\n          if (isResponse(result2)) {\r\n            return respond(result2);\r\n          }\r\n          let error2 = result2.errors ? Object.values(result2.errors)[0] : void 0;\r\n          if (error2 !== void 0) {\r\n            throw error2;\r\n          }\r\n          let value = result2.actionData ? Object.values(result2.actionData)[0] : Object.values(result2.loaderData)[0];\r\n          return typeof value === \"string\" ? new Response(value) : Response.json(value);\r\n        },\r\n        (error2) => {\r\n          if (isResponse(error2)) {\r\n            return respond(error2);\r\n          }\r\n          return new Response(String(error2), {\r\n            status: 500,\r\n            statusText: \"Unexpected Server Error\"\r\n          });\r\n        }\r\n      );\r\n      return response;\r\n    }\r\n    let result = await queryImpl(\r\n      request,\r\n      location,\r\n      matches,\r\n      requestContext,\r\n      dataStrategy || null,\r\n      false,\r\n      match,\r\n      null,\r\n      false\r\n    );\r\n    if (isResponse(result)) {\r\n      return result;\r\n    }\r\n    let error = result.errors ? Object.values(result.errors)[0] : void 0;\r\n    if (error !== void 0) {\r\n      throw error;\r\n    }\r\n    if (result.actionData) {\r\n      return Object.values(result.actionData)[0];\r\n    }\r\n    if (result.loaderData) {\r\n      return Object.values(result.loaderData)[0];\r\n    }\r\n    return void 0;\r\n  }\r\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, skipRevalidation) {\r\n    invariant(\r\n      request.signal,\r\n      \"query()/queryRoute() requests must contain an AbortController signal\"\r\n    );\r\n    try {\r\n      if (isMutationMethod(request.method)) {\r\n        let result2 = await submit(\r\n          request,\r\n          matches,\r\n          routeMatch || getTargetMatch(matches, location),\r\n          requestContext,\r\n          dataStrategy,\r\n          skipLoaderErrorBubbling,\r\n          routeMatch != null,\r\n          filterMatchesToLoad,\r\n          skipRevalidation\r\n        );\r\n        return result2;\r\n      }\r\n      let result = await loadRouteData(\r\n        request,\r\n        matches,\r\n        requestContext,\r\n        dataStrategy,\r\n        skipLoaderErrorBubbling,\r\n        routeMatch,\r\n        filterMatchesToLoad\r\n      );\r\n      return isResponse(result) ? result : {\r\n        ...result,\r\n        actionData: null,\r\n        actionHeaders: {}\r\n      };\r\n    } catch (e) {\r\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\r\n        if (e.type === \"error\" /* error */) {\r\n          throw e.result;\r\n        }\r\n        return e.result;\r\n      }\r\n      if (isRedirectResponse(e)) {\r\n        return e;\r\n      }\r\n      throw e;\r\n    }\r\n  }\r\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest, filterMatchesToLoad, skipRevalidation) {\r\n    let result;\r\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\r\n      let error = getInternalRouterError(405, {\r\n        method: request.method,\r\n        pathname: new URL(request.url).pathname,\r\n        routeId: actionMatch.route.id\r\n      });\r\n      if (isRouteRequest) {\r\n        throw error;\r\n      }\r\n      result = {\r\n        type: \"error\" /* error */,\r\n        error\r\n      };\r\n    } else {\r\n      let dsMatches = getTargetedDataStrategyMatches(\r\n        mapRouteProperties2,\r\n        manifest,\r\n        request,\r\n        matches,\r\n        actionMatch,\r\n        [],\r\n        requestContext\r\n      );\r\n      let results = await callDataStrategy(\r\n        request,\r\n        dsMatches,\r\n        isRouteRequest,\r\n        requestContext,\r\n        dataStrategy\r\n      );\r\n      result = results[actionMatch.route.id];\r\n      if (request.signal.aborted) {\r\n        throwStaticHandlerAbortedError(request, isRouteRequest);\r\n      }\r\n    }\r\n    if (isRedirectResult(result)) {\r\n      throw new Response(null, {\r\n        status: result.response.status,\r\n        headers: {\r\n          Location: result.response.headers.get(\"Location\")\r\n        }\r\n      });\r\n    }\r\n    if (isRouteRequest) {\r\n      if (isErrorResult(result)) {\r\n        throw result.error;\r\n      }\r\n      return {\r\n        matches: [actionMatch],\r\n        loaderData: {},\r\n        actionData: { [actionMatch.route.id]: result.data },\r\n        errors: null,\r\n        // Note: statusCode + headers are unused here since queryRoute will\r\n        // return the raw Response or value\r\n        statusCode: 200,\r\n        loaderHeaders: {},\r\n        actionHeaders: {}\r\n      };\r\n    }\r\n    if (skipRevalidation) {\r\n      if (isErrorResult(result)) {\r\n        let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\r\n        return {\r\n          statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\r\n          actionData: null,\r\n          actionHeaders: {\r\n            ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\r\n          },\r\n          matches,\r\n          loaderData: {},\r\n          errors: {\r\n            [boundaryMatch.route.id]: result.error\r\n          },\r\n          loaderHeaders: {}\r\n        };\r\n      } else {\r\n        return {\r\n          actionData: {\r\n            [actionMatch.route.id]: result.data\r\n          },\r\n          actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {},\r\n          matches,\r\n          loaderData: {},\r\n          errors: null,\r\n          statusCode: result.statusCode || 200,\r\n          loaderHeaders: {}\r\n        };\r\n      }\r\n    }\r\n    let loaderRequest = new Request(request.url, {\r\n      headers: request.headers,\r\n      redirect: request.redirect,\r\n      signal: request.signal\r\n    });\r\n    if (isErrorResult(result)) {\r\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\r\n      let handlerContext2 = await loadRouteData(\r\n        loaderRequest,\r\n        matches,\r\n        requestContext,\r\n        dataStrategy,\r\n        skipLoaderErrorBubbling,\r\n        null,\r\n        filterMatchesToLoad,\r\n        [boundaryMatch.route.id, result]\r\n      );\r\n      return {\r\n        ...handlerContext2,\r\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\r\n        actionData: null,\r\n        actionHeaders: {\r\n          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\r\n        }\r\n      };\r\n    }\r\n    let handlerContext = await loadRouteData(\r\n      loaderRequest,\r\n      matches,\r\n      requestContext,\r\n      dataStrategy,\r\n      skipLoaderErrorBubbling,\r\n      null,\r\n      filterMatchesToLoad\r\n    );\r\n    return {\r\n      ...handlerContext,\r\n      actionData: {\r\n        [actionMatch.route.id]: result.data\r\n      },\r\n      // action status codes take precedence over loader status codes\r\n      ...result.statusCode ? { statusCode: result.statusCode } : {},\r\n      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}\r\n    };\r\n  }\r\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, pendingActionResult) {\r\n    let isRouteRequest = routeMatch != null;\r\n    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {\r\n      throw getInternalRouterError(400, {\r\n        method: request.method,\r\n        pathname: new URL(request.url).pathname,\r\n        routeId: routeMatch?.route.id\r\n      });\r\n    }\r\n    let dsMatches;\r\n    if (routeMatch) {\r\n      dsMatches = getTargetedDataStrategyMatches(\r\n        mapRouteProperties2,\r\n        manifest,\r\n        request,\r\n        matches,\r\n        routeMatch,\r\n        [],\r\n        requestContext\r\n      );\r\n    } else {\r\n      let maxIdx = pendingActionResult && isErrorResult(pendingActionResult[1]) ? (\r\n        // Up to but not including the boundary\r\n        matches.findIndex((m) => m.route.id === pendingActionResult[0]) - 1\r\n      ) : void 0;\r\n      dsMatches = matches.map((match, index) => {\r\n        if (maxIdx != null && index > maxIdx) {\r\n          return getDataStrategyMatch(\r\n            mapRouteProperties2,\r\n            manifest,\r\n            request,\r\n            match,\r\n            [],\r\n            requestContext,\r\n            false\r\n          );\r\n        }\r\n        return getDataStrategyMatch(\r\n          mapRouteProperties2,\r\n          manifest,\r\n          request,\r\n          match,\r\n          [],\r\n          requestContext,\r\n          (match.route.loader || match.route.lazy) != null && (!filterMatchesToLoad || filterMatchesToLoad(match))\r\n        );\r\n      });\r\n    }\r\n    if (!dataStrategy && !dsMatches.some((m) => m.shouldLoad)) {\r\n      return {\r\n        matches,\r\n        loaderData: {},\r\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\r\n          [pendingActionResult[0]]: pendingActionResult[1].error\r\n        } : null,\r\n        statusCode: 200,\r\n        loaderHeaders: {}\r\n      };\r\n    }\r\n    let results = await callDataStrategy(\r\n      request,\r\n      dsMatches,\r\n      isRouteRequest,\r\n      requestContext,\r\n      dataStrategy\r\n    );\r\n    if (request.signal.aborted) {\r\n      throwStaticHandlerAbortedError(request, isRouteRequest);\r\n    }\r\n    let handlerContext = processRouteLoaderData(\r\n      matches,\r\n      results,\r\n      pendingActionResult,\r\n      true,\r\n      skipLoaderErrorBubbling\r\n    );\r\n    return {\r\n      ...handlerContext,\r\n      matches\r\n    };\r\n  }\r\n  async function callDataStrategy(request, matches, isRouteRequest, requestContext, dataStrategy) {\r\n    let results = await callDataStrategyImpl(\r\n      dataStrategy || defaultDataStrategy,\r\n      request,\r\n      matches,\r\n      null,\r\n      requestContext,\r\n      true\r\n    );\r\n    let dataResults = {};\r\n    await Promise.all(\r\n      matches.map(async (match) => {\r\n        if (!(match.route.id in results)) {\r\n          return;\r\n        }\r\n        let result = results[match.route.id];\r\n        if (isRedirectDataStrategyResult(result)) {\r\n          let response = result.result;\r\n          throw normalizeRelativeRoutingRedirectResponse(\r\n            response,\r\n            request,\r\n            match.route.id,\r\n            matches,\r\n            basename\r\n          );\r\n        }\r\n        if (isResponse(result.result) && isRouteRequest) {\r\n          throw result;\r\n        }\r\n        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\r\n      })\r\n    );\r\n    return dataResults;\r\n  }\r\n  return {\r\n    dataRoutes,\r\n    query,\r\n    queryRoute\r\n  };\r\n}\r\nfunction getStaticContextFromError(routes, handlerContext, error, boundaryId) {\r\n  let errorBoundaryId = boundaryId || handlerContext._deepestRenderedBoundaryId || routes[0].id;\r\n  return {\r\n    ...handlerContext,\r\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\r\n    errors: {\r\n      [errorBoundaryId]: error\r\n    }\r\n  };\r\n}\r\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\r\n  if (request.signal.reason !== void 0) {\r\n    throw request.signal.reason;\r\n  }\r\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\r\n  throw new Error(\r\n    `${method}() call aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\r\n  );\r\n}\r\nfunction isSubmissionNavigation(opts) {\r\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\r\n}\r\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\r\n  let contextualMatches;\r\n  let activeRouteMatch;\r\n  if (fromRouteId) {\r\n    contextualMatches = [];\r\n    for (let match of matches) {\r\n      contextualMatches.push(match);\r\n      if (match.route.id === fromRouteId) {\r\n        activeRouteMatch = match;\r\n        break;\r\n      }\r\n    }\r\n  } else {\r\n    contextualMatches = matches;\r\n    activeRouteMatch = matches[matches.length - 1];\r\n  }\r\n  let path = resolveTo(\r\n    to ? to : \".\",\r\n    getResolveToMatches(contextualMatches),\r\n    stripBasename(location.pathname, basename) || location.pathname,\r\n    relative === \"path\"\r\n  );\r\n  if (to == null) {\r\n    path.search = location.search;\r\n    path.hash = location.hash;\r\n  }\r\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\r\n    let nakedIndex = hasNakedIndexQuery(path.search);\r\n    if (activeRouteMatch.route.index && !nakedIndex) {\r\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\r\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\r\n      let params = new URLSearchParams(path.search);\r\n      let indexValues = params.getAll(\"index\");\r\n      params.delete(\"index\");\r\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\r\n      let qs = params.toString();\r\n      path.search = qs ? `?${qs}` : \"\";\r\n    }\r\n  }\r\n  if (basename !== \"/\") {\r\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\r\n  }\r\n  return createPath(path);\r\n}\r\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\r\n  if (!opts || !isSubmissionNavigation(opts)) {\r\n    return { path };\r\n  }\r\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\r\n    return {\r\n      path,\r\n      error: getInternalRouterError(405, { method: opts.formMethod })\r\n    };\r\n  }\r\n  let getInvalidBodyError = () => ({\r\n    path,\r\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\r\n  });\r\n  let rawFormMethod = opts.formMethod || \"get\";\r\n  let formMethod = rawFormMethod.toUpperCase();\r\n  let formAction = stripHashFromPath(path);\r\n  if (opts.body !== void 0) {\r\n    if (opts.formEncType === \"text/plain\") {\r\n      if (!isMutationMethod(formMethod)) {\r\n        return getInvalidBodyError();\r\n      }\r\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\r\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\r\n        Array.from(opts.body.entries()).reduce(\r\n          (acc, [name, value]) => `${acc}${name}=${value}\r\n`,\r\n          \"\"\r\n        )\r\n      ) : String(opts.body);\r\n      return {\r\n        path,\r\n        submission: {\r\n          formMethod,\r\n          formAction,\r\n          formEncType: opts.formEncType,\r\n          formData: void 0,\r\n          json: void 0,\r\n          text\r\n        }\r\n      };\r\n    } else if (opts.formEncType === \"application/json\") {\r\n      if (!isMutationMethod(formMethod)) {\r\n        return getInvalidBodyError();\r\n      }\r\n      try {\r\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\r\n        return {\r\n          path,\r\n          submission: {\r\n            formMethod,\r\n            formAction,\r\n            formEncType: opts.formEncType,\r\n            formData: void 0,\r\n            json,\r\n            text: void 0\r\n          }\r\n        };\r\n      } catch (e) {\r\n        return getInvalidBodyError();\r\n      }\r\n    }\r\n  }\r\n  invariant(\r\n    typeof FormData === \"function\",\r\n    \"FormData is not available in this environment\"\r\n  );\r\n  let searchParams;\r\n  let formData;\r\n  if (opts.formData) {\r\n    searchParams = convertFormDataToSearchParams(opts.formData);\r\n    formData = opts.formData;\r\n  } else if (opts.body instanceof FormData) {\r\n    searchParams = convertFormDataToSearchParams(opts.body);\r\n    formData = opts.body;\r\n  } else if (opts.body instanceof URLSearchParams) {\r\n    searchParams = opts.body;\r\n    formData = convertSearchParamsToFormData(searchParams);\r\n  } else if (opts.body == null) {\r\n    searchParams = new URLSearchParams();\r\n    formData = new FormData();\r\n  } else {\r\n    try {\r\n      searchParams = new URLSearchParams(opts.body);\r\n      formData = convertSearchParamsToFormData(searchParams);\r\n    } catch (e) {\r\n      return getInvalidBodyError();\r\n    }\r\n  }\r\n  let submission = {\r\n    formMethod,\r\n    formAction,\r\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\r\n    formData,\r\n    json: void 0,\r\n    text: void 0\r\n  };\r\n  if (isMutationMethod(submission.formMethod)) {\r\n    return { path, submission };\r\n  }\r\n  let parsedPath = parsePath(path);\r\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\r\n    searchParams.append(\"index\", \"\");\r\n  }\r\n  parsedPath.search = `?${searchParams}`;\r\n  return { path: createPath(parsedPath), submission };\r\n}\r\nfunction getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, hasPatchRoutesOnNavigation, pendingActionResult) {\r\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\r\n  let currentUrl = history.createURL(state.location);\r\n  let nextUrl = history.createURL(location);\r\n  let maxIdx;\r\n  if (initialHydration && state.errors) {\r\n    let boundaryId = Object.keys(state.errors)[0];\r\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId);\r\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\r\n    let boundaryId = pendingActionResult[0];\r\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId) - 1;\r\n  }\r\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\r\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\r\n  let baseShouldRevalidateArgs = {\r\n    currentUrl,\r\n    currentParams: state.matches[0]?.params || {},\r\n    nextUrl,\r\n    nextParams: matches[0].params,\r\n    ...submission,\r\n    actionResult,\r\n    actionStatus\r\n  };\r\n  let dsMatches = matches.map((match, index) => {\r\n    let { route } = match;\r\n    let forceShouldLoad = null;\r\n    if (maxIdx != null && index > maxIdx) {\r\n      forceShouldLoad = false;\r\n    } else if (route.lazy) {\r\n      forceShouldLoad = true;\r\n    } else if (route.loader == null) {\r\n      forceShouldLoad = false;\r\n    } else if (initialHydration) {\r\n      forceShouldLoad = shouldLoadRouteOnHydration(\r\n        route,\r\n        state.loaderData,\r\n        state.errors\r\n      );\r\n    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {\r\n      forceShouldLoad = true;\r\n    }\r\n    if (forceShouldLoad !== null) {\r\n      return getDataStrategyMatch(\r\n        mapRouteProperties2,\r\n        manifest,\r\n        request,\r\n        match,\r\n        lazyRoutePropertiesToSkip,\r\n        scopedContext,\r\n        forceShouldLoad\r\n      );\r\n    }\r\n    let defaultShouldRevalidate = shouldSkipRevalidation ? false : (\r\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\r\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\r\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match)\r\n    );\r\n    let shouldRevalidateArgs = {\r\n      ...baseShouldRevalidateArgs,\r\n      defaultShouldRevalidate\r\n    };\r\n    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);\r\n    return getDataStrategyMatch(\r\n      mapRouteProperties2,\r\n      manifest,\r\n      request,\r\n      match,\r\n      lazyRoutePropertiesToSkip,\r\n      scopedContext,\r\n      shouldLoad,\r\n      shouldRevalidateArgs\r\n    );\r\n  });\r\n  let revalidatingFetchers = [];\r\n  fetchLoadMatches.forEach((f, key) => {\r\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\r\n      return;\r\n    }\r\n    let fetcher = state.fetchers.get(key);\r\n    let isMidInitialLoad = fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0;\r\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\r\n    if (!fetcherMatches) {\r\n      if (hasPatchRoutesOnNavigation && isMidInitialLoad) {\r\n        return;\r\n      }\r\n      revalidatingFetchers.push({\r\n        key,\r\n        routeId: f.routeId,\r\n        path: f.path,\r\n        matches: null,\r\n        match: null,\r\n        request: null,\r\n        controller: null\r\n      });\r\n      return;\r\n    }\r\n    if (fetchRedirectIds.has(key)) {\r\n      return;\r\n    }\r\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\r\n    let fetchController = new AbortController();\r\n    let fetchRequest = createClientSideRequest(\r\n      history,\r\n      f.path,\r\n      fetchController.signal\r\n    );\r\n    let fetcherDsMatches = null;\r\n    if (cancelledFetcherLoads.has(key)) {\r\n      cancelledFetcherLoads.delete(key);\r\n      fetcherDsMatches = getTargetedDataStrategyMatches(\r\n        mapRouteProperties2,\r\n        manifest,\r\n        fetchRequest,\r\n        fetcherMatches,\r\n        fetcherMatch,\r\n        lazyRoutePropertiesToSkip,\r\n        scopedContext\r\n      );\r\n    } else if (isMidInitialLoad) {\r\n      if (isRevalidationRequired) {\r\n        fetcherDsMatches = getTargetedDataStrategyMatches(\r\n          mapRouteProperties2,\r\n          manifest,\r\n          fetchRequest,\r\n          fetcherMatches,\r\n          fetcherMatch,\r\n          lazyRoutePropertiesToSkip,\r\n          scopedContext\r\n        );\r\n      }\r\n    } else {\r\n      let shouldRevalidateArgs = {\r\n        ...baseShouldRevalidateArgs,\r\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\r\n      };\r\n      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {\r\n        fetcherDsMatches = getTargetedDataStrategyMatches(\r\n          mapRouteProperties2,\r\n          manifest,\r\n          fetchRequest,\r\n          fetcherMatches,\r\n          fetcherMatch,\r\n          lazyRoutePropertiesToSkip,\r\n          scopedContext,\r\n          shouldRevalidateArgs\r\n        );\r\n      }\r\n    }\r\n    if (fetcherDsMatches) {\r\n      revalidatingFetchers.push({\r\n        key,\r\n        routeId: f.routeId,\r\n        path: f.path,\r\n        matches: fetcherDsMatches,\r\n        match: fetcherMatch,\r\n        request: fetchRequest,\r\n        controller: fetchController\r\n      });\r\n    }\r\n  });\r\n  return { dsMatches, revalidatingFetchers };\r\n}\r\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\r\n  if (route.lazy) {\r\n    return true;\r\n  }\r\n  if (!route.loader) {\r\n    return false;\r\n  }\r\n  let hasData = loaderData != null && route.id in loaderData;\r\n  let hasError = errors != null && errors[route.id] !== void 0;\r\n  if (!hasData && hasError) {\r\n    return false;\r\n  }\r\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\r\n    return true;\r\n  }\r\n  return !hasData && !hasError;\r\n}\r\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\r\n  let isNew = (\r\n    // [a] -> [a, b]\r\n    !currentMatch || // [a, b] -> [a, c]\r\n    match.route.id !== currentMatch.route.id\r\n  );\r\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\r\n  return isNew || isMissingData;\r\n}\r\nfunction isNewRouteInstance(currentMatch, match) {\r\n  let currentPath = currentMatch.route.path;\r\n  return (\r\n    // param change for this match, /users/123 -> /users/456\r\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\r\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\r\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\r\n  );\r\n}\r\nfunction shouldRevalidateLoader(loaderMatch, arg) {\r\n  if (loaderMatch.route.shouldRevalidate) {\r\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\r\n    if (typeof routeChoice === \"boolean\") {\r\n      return routeChoice;\r\n    }\r\n  }\r\n  return arg.defaultShouldRevalidate;\r\n}\r\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\r\n  let childrenToPatch;\r\n  if (routeId) {\r\n    let route = manifest[routeId];\r\n    invariant(\r\n      route,\r\n      `No route found to patch children into: routeId = ${routeId}`\r\n    );\r\n    if (!route.children) {\r\n      route.children = [];\r\n    }\r\n    childrenToPatch = route.children;\r\n  } else {\r\n    childrenToPatch = routesToUse;\r\n  }\r\n  let uniqueChildren = children.filter(\r\n    (newRoute) => !childrenToPatch.some(\r\n      (existingRoute) => isSameRoute(newRoute, existingRoute)\r\n    )\r\n  );\r\n  let newRoutes = convertRoutesToDataRoutes(\r\n    uniqueChildren,\r\n    mapRouteProperties2,\r\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\r\n    manifest\r\n  );\r\n  childrenToPatch.push(...newRoutes);\r\n}\r\nfunction isSameRoute(newRoute, existingRoute) {\r\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\r\n    return true;\r\n  }\r\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\r\n    return false;\r\n  }\r\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\r\n    return true;\r\n  }\r\n  return newRoute.children.every(\r\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\r\n  );\r\n}\r\nvar lazyRoutePropertyCache = /* @__PURE__ */ new WeakMap();\r\nvar loadLazyRouteProperty = ({\r\n  key,\r\n  route,\r\n  manifest,\r\n  mapRouteProperties: mapRouteProperties2\r\n}) => {\r\n  let routeToUpdate = manifest[route.id];\r\n  invariant(routeToUpdate, \"No route found in manifest\");\r\n  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== \"object\") {\r\n    return;\r\n  }\r\n  let lazyFn = routeToUpdate.lazy[key];\r\n  if (!lazyFn) {\r\n    return;\r\n  }\r\n  let cache = lazyRoutePropertyCache.get(routeToUpdate);\r\n  if (!cache) {\r\n    cache = {};\r\n    lazyRoutePropertyCache.set(routeToUpdate, cache);\r\n  }\r\n  let cachedPromise = cache[key];\r\n  if (cachedPromise) {\r\n    return cachedPromise;\r\n  }\r\n  let propertyPromise = (async () => {\r\n    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);\r\n    let staticRouteValue = routeToUpdate[key];\r\n    let isStaticallyDefined = staticRouteValue !== void 0 && key !== \"hasErrorBoundary\";\r\n    if (isUnsupported) {\r\n      warning(\r\n        !isUnsupported,\r\n        \"Route property \" + key + \" is not a supported lazy route property. This property will be ignored.\"\r\n      );\r\n      cache[key] = Promise.resolve();\r\n    } else if (isStaticallyDefined) {\r\n      warning(\r\n        false,\r\n        `Route \"${routeToUpdate.id}\" has a static property \"${key}\" defined. The lazy property will be ignored.`\r\n      );\r\n    } else {\r\n      let value = await lazyFn();\r\n      if (value != null) {\r\n        Object.assign(routeToUpdate, { [key]: value });\r\n        Object.assign(routeToUpdate, mapRouteProperties2(routeToUpdate));\r\n      }\r\n    }\r\n    if (typeof routeToUpdate.lazy === \"object\") {\r\n      routeToUpdate.lazy[key] = void 0;\r\n      if (Object.values(routeToUpdate.lazy).every((value) => value === void 0)) {\r\n        routeToUpdate.lazy = void 0;\r\n      }\r\n    }\r\n  })();\r\n  cache[key] = propertyPromise;\r\n  return propertyPromise;\r\n};\r\nvar lazyRouteFunctionCache = /* @__PURE__ */ new WeakMap();\r\nfunction loadLazyRoute(route, type, manifest, mapRouteProperties2, lazyRoutePropertiesToSkip) {\r\n  let routeToUpdate = manifest[route.id];\r\n  invariant(routeToUpdate, \"No route found in manifest\");\r\n  if (!route.lazy) {\r\n    return {\r\n      lazyRoutePromise: void 0,\r\n      lazyHandlerPromise: void 0\r\n    };\r\n  }\r\n  if (typeof route.lazy === \"function\") {\r\n    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);\r\n    if (cachedPromise) {\r\n      return {\r\n        lazyRoutePromise: cachedPromise,\r\n        lazyHandlerPromise: cachedPromise\r\n      };\r\n    }\r\n    let lazyRoutePromise2 = (async () => {\r\n      invariant(\r\n        typeof route.lazy === \"function\",\r\n        \"No lazy route function found\"\r\n      );\r\n      let lazyRoute = await route.lazy();\r\n      let routeUpdates = {};\r\n      for (let lazyRouteProperty in lazyRoute) {\r\n        let lazyValue = lazyRoute[lazyRouteProperty];\r\n        if (lazyValue === void 0) {\r\n          continue;\r\n        }\r\n        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);\r\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\r\n        let isStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\r\n        // on the route updates\r\n        lazyRouteProperty !== \"hasErrorBoundary\";\r\n        if (isUnsupported) {\r\n          warning(\r\n            !isUnsupported,\r\n            \"Route property \" + lazyRouteProperty + \" is not a supported property to be returned from a lazy route function. This property will be ignored.\"\r\n          );\r\n        } else if (isStaticallyDefined) {\r\n          warning(\r\n            !isStaticallyDefined,\r\n            `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\r\n          );\r\n        } else {\r\n          routeUpdates[lazyRouteProperty] = lazyValue;\r\n        }\r\n      }\r\n      Object.assign(routeToUpdate, routeUpdates);\r\n      Object.assign(routeToUpdate, {\r\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\r\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\r\n        // since the logic will differ between frameworks.\r\n        ...mapRouteProperties2(routeToUpdate),\r\n        lazy: void 0\r\n      });\r\n    })();\r\n    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);\r\n    lazyRoutePromise2.catch(() => {\r\n    });\r\n    return {\r\n      lazyRoutePromise: lazyRoutePromise2,\r\n      lazyHandlerPromise: lazyRoutePromise2\r\n    };\r\n  }\r\n  let lazyKeys = Object.keys(route.lazy);\r\n  let lazyPropertyPromises = [];\r\n  let lazyHandlerPromise = void 0;\r\n  for (let key of lazyKeys) {\r\n    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {\r\n      continue;\r\n    }\r\n    let promise = loadLazyRouteProperty({\r\n      key,\r\n      route,\r\n      manifest,\r\n      mapRouteProperties: mapRouteProperties2\r\n    });\r\n    if (promise) {\r\n      lazyPropertyPromises.push(promise);\r\n      if (key === type) {\r\n        lazyHandlerPromise = promise;\r\n      }\r\n    }\r\n  }\r\n  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {\r\n  }) : void 0;\r\n  lazyRoutePromise?.catch(() => {\r\n  });\r\n  lazyHandlerPromise?.catch(() => {\r\n  });\r\n  return {\r\n    lazyRoutePromise,\r\n    lazyHandlerPromise\r\n  };\r\n}\r\nfunction isNonNullable(value) {\r\n  return value !== void 0;\r\n}\r\nfunction loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2) {\r\n  let promises = matches.map(({ route }) => {\r\n    if (typeof route.lazy !== \"object\" || !route.lazy.unstable_middleware) {\r\n      return void 0;\r\n    }\r\n    return loadLazyRouteProperty({\r\n      key: \"unstable_middleware\",\r\n      route,\r\n      manifest,\r\n      mapRouteProperties: mapRouteProperties2\r\n    });\r\n  }).filter(isNonNullable);\r\n  return promises.length > 0 ? Promise.all(promises) : void 0;\r\n}\r\nasync function defaultDataStrategy(args) {\r\n  let matchesToLoad = args.matches.filter((m) => m.shouldLoad);\r\n  let keyedResults = {};\r\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\r\n  results.forEach((result, i) => {\r\n    keyedResults[matchesToLoad[i].route.id] = result;\r\n  });\r\n  return keyedResults;\r\n}\r\nasync function defaultDataStrategyWithMiddleware(args) {\r\n  if (!args.matches.some((m) => m.route.unstable_middleware)) {\r\n    return defaultDataStrategy(args);\r\n  }\r\n  return runMiddlewarePipeline(\r\n    args,\r\n    false,\r\n    () => defaultDataStrategy(args),\r\n    (error, routeId) => ({ [routeId]: { type: \"error\", result: error } })\r\n  );\r\n}\r\nasync function runMiddlewarePipeline(args, propagateResult, handler, errorHandler) {\r\n  let { matches, request, params, context } = args;\r\n  let middlewareState = {\r\n    handlerResult: void 0\r\n  };\r\n  try {\r\n    let tuples = matches.flatMap(\r\n      (m) => m.route.unstable_middleware ? m.route.unstable_middleware.map((fn) => [m.route.id, fn]) : []\r\n    );\r\n    let result = await callRouteMiddleware(\r\n      { request, params, context },\r\n      tuples,\r\n      propagateResult,\r\n      middlewareState,\r\n      handler\r\n    );\r\n    return propagateResult ? result : middlewareState.handlerResult;\r\n  } catch (e) {\r\n    if (!middlewareState.middlewareError) {\r\n      throw e;\r\n    }\r\n    let result = await errorHandler(\r\n      middlewareState.middlewareError.error,\r\n      middlewareState.middlewareError.routeId\r\n    );\r\n    if (propagateResult || !middlewareState.handlerResult) {\r\n      return result;\r\n    }\r\n    return Object.assign(middlewareState.handlerResult, result);\r\n  }\r\n}\r\nasync function callRouteMiddleware(args, middlewares, propagateResult, middlewareState, handler, idx = 0) {\r\n  let { request } = args;\r\n  if (request.signal.aborted) {\r\n    if (request.signal.reason) {\r\n      throw request.signal.reason;\r\n    }\r\n    throw new Error(\r\n      `Request aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\r\n    );\r\n  }\r\n  let tuple = middlewares[idx];\r\n  if (!tuple) {\r\n    middlewareState.handlerResult = await handler();\r\n    return middlewareState.handlerResult;\r\n  }\r\n  let [routeId, middleware] = tuple;\r\n  let nextCalled = false;\r\n  let nextResult = void 0;\r\n  let next = async () => {\r\n    if (nextCalled) {\r\n      throw new Error(\"You may only call `next()` once per middleware\");\r\n    }\r\n    nextCalled = true;\r\n    let result = await callRouteMiddleware(\r\n      args,\r\n      middlewares,\r\n      propagateResult,\r\n      middlewareState,\r\n      handler,\r\n      idx + 1\r\n    );\r\n    if (propagateResult) {\r\n      nextResult = result;\r\n      return nextResult;\r\n    }\r\n  };\r\n  try {\r\n    let result = await middleware(\r\n      {\r\n        request: args.request,\r\n        params: args.params,\r\n        context: args.context\r\n      },\r\n      next\r\n    );\r\n    if (nextCalled) {\r\n      if (result === void 0) {\r\n        return nextResult;\r\n      } else {\r\n        return result;\r\n      }\r\n    } else {\r\n      return next();\r\n    }\r\n  } catch (error) {\r\n    if (!middlewareState.middlewareError) {\r\n      middlewareState.middlewareError = { routeId, error };\r\n    } else if (middlewareState.middlewareError.error !== error) {\r\n      middlewareState.middlewareError = { routeId, error };\r\n    }\r\n    throw error;\r\n  }\r\n}\r\nfunction getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip) {\r\n  let lazyMiddlewarePromise = loadLazyRouteProperty({\r\n    key: \"unstable_middleware\",\r\n    route: match.route,\r\n    manifest,\r\n    mapRouteProperties: mapRouteProperties2\r\n  });\r\n  let lazyRoutePromises = loadLazyRoute(\r\n    match.route,\r\n    isMutationMethod(request.method) ? \"action\" : \"loader\",\r\n    manifest,\r\n    mapRouteProperties2,\r\n    lazyRoutePropertiesToSkip\r\n  );\r\n  return {\r\n    middleware: lazyMiddlewarePromise,\r\n    route: lazyRoutePromises.lazyRoutePromise,\r\n    handler: lazyRoutePromises.lazyHandlerPromise\r\n  };\r\n}\r\nfunction getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {\r\n  let isUsingNewApi = false;\r\n  let _lazyPromises = getDataStrategyMatchLazyPromises(\r\n    mapRouteProperties2,\r\n    manifest,\r\n    request,\r\n    match,\r\n    lazyRoutePropertiesToSkip\r\n  );\r\n  return {\r\n    ...match,\r\n    _lazyPromises,\r\n    shouldLoad,\r\n    unstable_shouldRevalidateArgs,\r\n    unstable_shouldCallHandler(defaultShouldRevalidate) {\r\n      isUsingNewApi = true;\r\n      if (!unstable_shouldRevalidateArgs) {\r\n        return shouldLoad;\r\n      }\r\n      if (typeof defaultShouldRevalidate === \"boolean\") {\r\n        return shouldRevalidateLoader(match, {\r\n          ...unstable_shouldRevalidateArgs,\r\n          defaultShouldRevalidate\r\n        });\r\n      }\r\n      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);\r\n    },\r\n    resolve(handlerOverride) {\r\n      if (isUsingNewApi || shouldLoad || handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\r\n        return callLoaderOrAction({\r\n          request,\r\n          match,\r\n          lazyHandlerPromise: _lazyPromises?.handler,\r\n          lazyRoutePromise: _lazyPromises?.route,\r\n          handlerOverride,\r\n          scopedContext\r\n        });\r\n      }\r\n      return Promise.resolve({ type: \"data\" /* data */, result: void 0 });\r\n    }\r\n  };\r\n}\r\nfunction getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {\r\n  return matches.map((match) => {\r\n    if (match.route.id !== targetMatch.route.id) {\r\n      return {\r\n        ...match,\r\n        shouldLoad: false,\r\n        unstable_shouldRevalidateArgs: shouldRevalidateArgs,\r\n        unstable_shouldCallHandler: () => false,\r\n        _lazyPromises: getDataStrategyMatchLazyPromises(\r\n          mapRouteProperties2,\r\n          manifest,\r\n          request,\r\n          match,\r\n          lazyRoutePropertiesToSkip\r\n        ),\r\n        resolve: () => Promise.resolve({ type: \"data\", result: void 0 })\r\n      };\r\n    }\r\n    return getDataStrategyMatch(\r\n      mapRouteProperties2,\r\n      manifest,\r\n      request,\r\n      match,\r\n      lazyRoutePropertiesToSkip,\r\n      scopedContext,\r\n      true,\r\n      shouldRevalidateArgs\r\n    );\r\n  });\r\n}\r\nasync function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {\r\n  if (matches.some((m) => m._lazyPromises?.middleware)) {\r\n    await Promise.all(matches.map((m) => m._lazyPromises?.middleware));\r\n  }\r\n  let dataStrategyArgs = {\r\n    request,\r\n    params: matches[0].params,\r\n    context: scopedContext,\r\n    matches\r\n  };\r\n  let unstable_runClientMiddleware = isStaticHandler ? () => {\r\n    throw new Error(\r\n      \"You cannot call `unstable_runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`\"\r\n    );\r\n  } : (cb) => {\r\n    let typedDataStrategyArgs = dataStrategyArgs;\r\n    return runMiddlewarePipeline(\r\n      typedDataStrategyArgs,\r\n      false,\r\n      () => cb({\r\n        ...typedDataStrategyArgs,\r\n        fetcherKey,\r\n        unstable_runClientMiddleware: () => {\r\n          throw new Error(\r\n            \"Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler\"\r\n          );\r\n        }\r\n      }),\r\n      (error, routeId) => ({\r\n        [routeId]: { type: \"error\", result: error }\r\n      })\r\n    );\r\n  };\r\n  let results = await dataStrategyImpl({\r\n    ...dataStrategyArgs,\r\n    fetcherKey,\r\n    unstable_runClientMiddleware\r\n  });\r\n  try {\r\n    await Promise.all(\r\n      matches.flatMap((m) => [m._lazyPromises?.handler, m._lazyPromises?.route])\r\n    );\r\n  } catch (e) {\r\n  }\r\n  return results;\r\n}\r\nasync function callLoaderOrAction({\r\n  request,\r\n  match,\r\n  lazyHandlerPromise,\r\n  lazyRoutePromise,\r\n  handlerOverride,\r\n  scopedContext\r\n}) {\r\n  let result;\r\n  let onReject;\r\n  let isAction = isMutationMethod(request.method);\r\n  let type = isAction ? \"action\" : \"loader\";\r\n  let runHandler = (handler) => {\r\n    let reject;\r\n    let abortPromise = new Promise((_, r) => reject = r);\r\n    onReject = () => reject();\r\n    request.signal.addEventListener(\"abort\", onReject);\r\n    let actualHandler = (ctx) => {\r\n      if (typeof handler !== \"function\") {\r\n        return Promise.reject(\r\n          new Error(\r\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\r\n          )\r\n        );\r\n      }\r\n      return handler(\r\n        {\r\n          request,\r\n          params: match.params,\r\n          context: scopedContext\r\n        },\r\n        ...ctx !== void 0 ? [ctx] : []\r\n      );\r\n    };\r\n    let handlerPromise = (async () => {\r\n      try {\r\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\r\n        return { type: \"data\", result: val };\r\n      } catch (e) {\r\n        return { type: \"error\", result: e };\r\n      }\r\n    })();\r\n    return Promise.race([handlerPromise, abortPromise]);\r\n  };\r\n  try {\r\n    let handler = isAction ? match.route.action : match.route.loader;\r\n    if (lazyHandlerPromise || lazyRoutePromise) {\r\n      if (handler) {\r\n        let handlerError;\r\n        let [value] = await Promise.all([\r\n          // If the handler throws, don't let it immediately bubble out,\r\n          // since we need to let the lazy() execution finish so we know if this\r\n          // route has a boundary that can handle the error\r\n          runHandler(handler).catch((e) => {\r\n            handlerError = e;\r\n          }),\r\n          // Ensure all lazy route promises are resolved before continuing\r\n          lazyHandlerPromise,\r\n          lazyRoutePromise\r\n        ]);\r\n        if (handlerError !== void 0) {\r\n          throw handlerError;\r\n        }\r\n        result = value;\r\n      } else {\r\n        await lazyHandlerPromise;\r\n        let handler2 = isAction ? match.route.action : match.route.loader;\r\n        if (handler2) {\r\n          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);\r\n        } else if (type === \"action\") {\r\n          let url = new URL(request.url);\r\n          let pathname = url.pathname + url.search;\r\n          throw getInternalRouterError(405, {\r\n            method: request.method,\r\n            pathname,\r\n            routeId: match.route.id\r\n          });\r\n        } else {\r\n          return { type: \"data\" /* data */, result: void 0 };\r\n        }\r\n      }\r\n    } else if (!handler) {\r\n      let url = new URL(request.url);\r\n      let pathname = url.pathname + url.search;\r\n      throw getInternalRouterError(404, {\r\n        pathname\r\n      });\r\n    } else {\r\n      result = await runHandler(handler);\r\n    }\r\n  } catch (e) {\r\n    return { type: \"error\" /* error */, result: e };\r\n  } finally {\r\n    if (onReject) {\r\n      request.signal.removeEventListener(\"abort\", onReject);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\r\n  let { result, type } = dataStrategyResult;\r\n  if (isResponse(result)) {\r\n    let data2;\r\n    try {\r\n      let contentType = result.headers.get(\"Content-Type\");\r\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\r\n        if (result.body == null) {\r\n          data2 = null;\r\n        } else {\r\n          data2 = await result.json();\r\n        }\r\n      } else {\r\n        data2 = await result.text();\r\n      }\r\n    } catch (e) {\r\n      return { type: \"error\" /* error */, error: e };\r\n    }\r\n    if (type === \"error\" /* error */) {\r\n      return {\r\n        type: \"error\" /* error */,\r\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\r\n        statusCode: result.status,\r\n        headers: result.headers\r\n      };\r\n    }\r\n    return {\r\n      type: \"data\" /* data */,\r\n      data: data2,\r\n      statusCode: result.status,\r\n      headers: result.headers\r\n    };\r\n  }\r\n  if (type === \"error\" /* error */) {\r\n    if (isDataWithResponseInit(result)) {\r\n      if (result.data instanceof Error) {\r\n        return {\r\n          type: \"error\" /* error */,\r\n          error: result.data,\r\n          statusCode: result.init?.status,\r\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\r\n        };\r\n      }\r\n      return {\r\n        type: \"error\" /* error */,\r\n        error: new ErrorResponseImpl(\r\n          result.init?.status || 500,\r\n          void 0,\r\n          result.data\r\n        ),\r\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\r\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\r\n      };\r\n    }\r\n    return {\r\n      type: \"error\" /* error */,\r\n      error: result,\r\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\r\n    };\r\n  }\r\n  if (isDataWithResponseInit(result)) {\r\n    return {\r\n      type: \"data\" /* data */,\r\n      data: result.data,\r\n      statusCode: result.init?.status,\r\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\r\n    };\r\n  }\r\n  return { type: \"data\" /* data */, data: result };\r\n}\r\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\r\n  let location = response.headers.get(\"Location\");\r\n  invariant(\r\n    location,\r\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\r\n  );\r\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\r\n    let trimmedMatches = matches.slice(\r\n      0,\r\n      matches.findIndex((m) => m.route.id === routeId) + 1\r\n    );\r\n    location = normalizeTo(\r\n      new URL(request.url),\r\n      trimmedMatches,\r\n      basename,\r\n      location\r\n    );\r\n    response.headers.set(\"Location\", location);\r\n  }\r\n  return response;\r\n}\r\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\r\n  if (ABSOLUTE_URL_REGEX.test(location)) {\r\n    let normalizedLocation = location;\r\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\r\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\r\n    if (url.origin === currentUrl.origin && isSameBasename) {\r\n      return url.pathname + url.search + url.hash;\r\n    }\r\n  }\r\n  return location;\r\n}\r\nfunction createClientSideRequest(history, location, signal, submission) {\r\n  let url = history.createURL(stripHashFromPath(location)).toString();\r\n  let init = { signal };\r\n  if (submission && isMutationMethod(submission.formMethod)) {\r\n    let { formMethod, formEncType } = submission;\r\n    init.method = formMethod.toUpperCase();\r\n    if (formEncType === \"application/json\") {\r\n      init.headers = new Headers({ \"Content-Type\": formEncType });\r\n      init.body = JSON.stringify(submission.json);\r\n    } else if (formEncType === \"text/plain\") {\r\n      init.body = submission.text;\r\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\r\n      init.body = convertFormDataToSearchParams(submission.formData);\r\n    } else {\r\n      init.body = submission.formData;\r\n    }\r\n  }\r\n  return new Request(url, init);\r\n}\r\nfunction convertFormDataToSearchParams(formData) {\r\n  let searchParams = new URLSearchParams();\r\n  for (let [key, value] of formData.entries()) {\r\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\r\n  }\r\n  return searchParams;\r\n}\r\nfunction convertSearchParamsToFormData(searchParams) {\r\n  let formData = new FormData();\r\n  for (let [key, value] of searchParams.entries()) {\r\n    formData.append(key, value);\r\n  }\r\n  return formData;\r\n}\r\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\r\n  let loaderData = {};\r\n  let errors = null;\r\n  let statusCode;\r\n  let foundError = false;\r\n  let loaderHeaders = {};\r\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\r\n  matches.forEach((match) => {\r\n    if (!(match.route.id in results)) {\r\n      return;\r\n    }\r\n    let id = match.route.id;\r\n    let result = results[id];\r\n    invariant(\r\n      !isRedirectResult(result),\r\n      \"Cannot handle redirect results in processLoaderData\"\r\n    );\r\n    if (isErrorResult(result)) {\r\n      let error = result.error;\r\n      if (pendingError !== void 0) {\r\n        error = pendingError;\r\n        pendingError = void 0;\r\n      }\r\n      errors = errors || {};\r\n      if (skipLoaderErrorBubbling) {\r\n        errors[id] = error;\r\n      } else {\r\n        let boundaryMatch = findNearestBoundary(matches, id);\r\n        if (errors[boundaryMatch.route.id] == null) {\r\n          errors[boundaryMatch.route.id] = error;\r\n        }\r\n      }\r\n      if (!isStaticHandler) {\r\n        loaderData[id] = ResetLoaderDataSymbol;\r\n      }\r\n      if (!foundError) {\r\n        foundError = true;\r\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\r\n      }\r\n      if (result.headers) {\r\n        loaderHeaders[id] = result.headers;\r\n      }\r\n    } else {\r\n      loaderData[id] = result.data;\r\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\r\n        statusCode = result.statusCode;\r\n      }\r\n      if (result.headers) {\r\n        loaderHeaders[id] = result.headers;\r\n      }\r\n    }\r\n  });\r\n  if (pendingError !== void 0 && pendingActionResult) {\r\n    errors = { [pendingActionResult[0]]: pendingError };\r\n    if (pendingActionResult[2]) {\r\n      loaderData[pendingActionResult[2]] = void 0;\r\n    }\r\n  }\r\n  return {\r\n    loaderData,\r\n    errors,\r\n    statusCode: statusCode || 200,\r\n    loaderHeaders\r\n  };\r\n}\r\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\r\n  let { loaderData, errors } = processRouteLoaderData(\r\n    matches,\r\n    results,\r\n    pendingActionResult\r\n  );\r\n  revalidatingFetchers.filter((f) => !f.matches || f.matches.some((m) => m.shouldLoad)).forEach((rf) => {\r\n    let { key, match, controller } = rf;\r\n    let result = fetcherResults[key];\r\n    invariant(result, \"Did not find corresponding fetcher result\");\r\n    if (controller && controller.signal.aborted) {\r\n      return;\r\n    } else if (isErrorResult(result)) {\r\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\r\n      if (!(errors && errors[boundaryMatch.route.id])) {\r\n        errors = {\r\n          ...errors,\r\n          [boundaryMatch.route.id]: result.error\r\n        };\r\n      }\r\n      state.fetchers.delete(key);\r\n    } else if (isRedirectResult(result)) {\r\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\r\n    } else {\r\n      let doneFetcher = getDoneFetcher(result.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n  });\r\n  return { loaderData, errors };\r\n}\r\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\r\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\r\n    merged[k] = v;\r\n    return merged;\r\n  }, {});\r\n  for (let match of matches) {\r\n    let id = match.route.id;\r\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\r\n      mergedLoaderData[id] = loaderData[id];\r\n    }\r\n    if (errors && errors.hasOwnProperty(id)) {\r\n      break;\r\n    }\r\n  }\r\n  return mergedLoaderData;\r\n}\r\nfunction getActionDataForCommit(pendingActionResult) {\r\n  if (!pendingActionResult) {\r\n    return {};\r\n  }\r\n  return isErrorResult(pendingActionResult[1]) ? {\r\n    // Clear out prior actionData on errors\r\n    actionData: {}\r\n  } : {\r\n    actionData: {\r\n      [pendingActionResult[0]]: pendingActionResult[1].data\r\n    }\r\n  };\r\n}\r\nfunction findNearestBoundary(matches, routeId) {\r\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\r\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\r\n}\r\nfunction getShortCircuitMatches(routes) {\r\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\r\n    id: `__shim-error-route__`\r\n  };\r\n  return {\r\n    matches: [\r\n      {\r\n        params: {},\r\n        pathname: \"\",\r\n        pathnameBase: \"\",\r\n        route\r\n      }\r\n    ],\r\n    route\r\n  };\r\n}\r\nfunction getInternalRouterError(status, {\r\n  pathname,\r\n  routeId,\r\n  method,\r\n  type,\r\n  message\r\n} = {}) {\r\n  let statusText = \"Unknown Server Error\";\r\n  let errorMessage = \"Unknown @remix-run/router error\";\r\n  if (status === 400) {\r\n    statusText = \"Bad Request\";\r\n    if (method && pathname && routeId) {\r\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\r\n    } else if (type === \"invalid-body\") {\r\n      errorMessage = \"Unable to encode submission body\";\r\n    }\r\n  } else if (status === 403) {\r\n    statusText = \"Forbidden\";\r\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\r\n  } else if (status === 404) {\r\n    statusText = \"Not Found\";\r\n    errorMessage = `No route matches URL \"${pathname}\"`;\r\n  } else if (status === 405) {\r\n    statusText = \"Method Not Allowed\";\r\n    if (method && pathname && routeId) {\r\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\r\n    } else if (method) {\r\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\r\n    }\r\n  }\r\n  return new ErrorResponseImpl(\r\n    status || 500,\r\n    statusText,\r\n    new Error(errorMessage),\r\n    true\r\n  );\r\n}\r\nfunction findRedirect(results) {\r\n  let entries = Object.entries(results);\r\n  for (let i = entries.length - 1; i >= 0; i--) {\r\n    let [key, result] = entries[i];\r\n    if (isRedirectResult(result)) {\r\n      return { key, result };\r\n    }\r\n  }\r\n}\r\nfunction stripHashFromPath(path) {\r\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\r\n  return createPath({ ...parsedPath, hash: \"\" });\r\n}\r\nfunction isHashChangeOnly(a, b) {\r\n  if (a.pathname !== b.pathname || a.search !== b.search) {\r\n    return false;\r\n  }\r\n  if (a.hash === \"\") {\r\n    return b.hash !== \"\";\r\n  } else if (a.hash === b.hash) {\r\n    return true;\r\n  } else if (b.hash !== \"\") {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction isDataStrategyResult(result) {\r\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === \"data\" /* data */ || result.type === \"error\" /* error */);\r\n}\r\nfunction isRedirectDataStrategyResult(result) {\r\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\r\n}\r\nfunction isErrorResult(result) {\r\n  return result.type === \"error\" /* error */;\r\n}\r\nfunction isRedirectResult(result) {\r\n  return (result && result.type) === \"redirect\" /* redirect */;\r\n}\r\nfunction isDataWithResponseInit(value) {\r\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\r\n}\r\nfunction isResponse(value) {\r\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\r\n}\r\nfunction isRedirectStatusCode(statusCode) {\r\n  return redirectStatusCodes.has(statusCode);\r\n}\r\nfunction isRedirectResponse(result) {\r\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\"Location\");\r\n}\r\nfunction isValidMethod(method) {\r\n  return validRequestMethods.has(method.toUpperCase());\r\n}\r\nfunction isMutationMethod(method) {\r\n  return validMutationMethods.has(method.toUpperCase());\r\n}\r\nfunction hasNakedIndexQuery(search) {\r\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\r\n}\r\nfunction getTargetMatch(matches, location) {\r\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\r\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\r\n    return matches[matches.length - 1];\r\n  }\r\n  let pathMatches = getPathContributingMatches(matches);\r\n  return pathMatches[pathMatches.length - 1];\r\n}\r\nfunction getSubmissionFromNavigation(navigation) {\r\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\r\n  if (!formMethod || !formAction || !formEncType) {\r\n    return;\r\n  }\r\n  if (text != null) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData: void 0,\r\n      json: void 0,\r\n      text\r\n    };\r\n  } else if (formData != null) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData,\r\n      json: void 0,\r\n      text: void 0\r\n    };\r\n  } else if (json !== void 0) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData: void 0,\r\n      json,\r\n      text: void 0\r\n    };\r\n  }\r\n}\r\nfunction getLoadingNavigation(location, submission) {\r\n  if (submission) {\r\n    let navigation = {\r\n      state: \"loading\",\r\n      location,\r\n      formMethod: submission.formMethod,\r\n      formAction: submission.formAction,\r\n      formEncType: submission.formEncType,\r\n      formData: submission.formData,\r\n      json: submission.json,\r\n      text: submission.text\r\n    };\r\n    return navigation;\r\n  } else {\r\n    let navigation = {\r\n      state: \"loading\",\r\n      location,\r\n      formMethod: void 0,\r\n      formAction: void 0,\r\n      formEncType: void 0,\r\n      formData: void 0,\r\n      json: void 0,\r\n      text: void 0\r\n    };\r\n    return navigation;\r\n  }\r\n}\r\nfunction getSubmittingNavigation(location, submission) {\r\n  let navigation = {\r\n    state: \"submitting\",\r\n    location,\r\n    formMethod: submission.formMethod,\r\n    formAction: submission.formAction,\r\n    formEncType: submission.formEncType,\r\n    formData: submission.formData,\r\n    json: submission.json,\r\n    text: submission.text\r\n  };\r\n  return navigation;\r\n}\r\nfunction getLoadingFetcher(submission, data2) {\r\n  if (submission) {\r\n    let fetcher = {\r\n      state: \"loading\",\r\n      formMethod: submission.formMethod,\r\n      formAction: submission.formAction,\r\n      formEncType: submission.formEncType,\r\n      formData: submission.formData,\r\n      json: submission.json,\r\n      text: submission.text,\r\n      data: data2\r\n    };\r\n    return fetcher;\r\n  } else {\r\n    let fetcher = {\r\n      state: \"loading\",\r\n      formMethod: void 0,\r\n      formAction: void 0,\r\n      formEncType: void 0,\r\n      formData: void 0,\r\n      json: void 0,\r\n      text: void 0,\r\n      data: data2\r\n    };\r\n    return fetcher;\r\n  }\r\n}\r\nfunction getSubmittingFetcher(submission, existingFetcher) {\r\n  let fetcher = {\r\n    state: \"submitting\",\r\n    formMethod: submission.formMethod,\r\n    formAction: submission.formAction,\r\n    formEncType: submission.formEncType,\r\n    formData: submission.formData,\r\n    json: submission.json,\r\n    text: submission.text,\r\n    data: existingFetcher ? existingFetcher.data : void 0\r\n  };\r\n  return fetcher;\r\n}\r\nfunction getDoneFetcher(data2) {\r\n  let fetcher = {\r\n    state: \"idle\",\r\n    formMethod: void 0,\r\n    formAction: void 0,\r\n    formEncType: void 0,\r\n    formData: void 0,\r\n    json: void 0,\r\n    text: void 0,\r\n    data: data2\r\n  };\r\n  return fetcher;\r\n}\r\nfunction restoreAppliedTransitions(_window, transitions) {\r\n  try {\r\n    let sessionPositions = _window.sessionStorage.getItem(\r\n      TRANSITIONS_STORAGE_KEY\r\n    );\r\n    if (sessionPositions) {\r\n      let json = JSON.parse(sessionPositions);\r\n      for (let [k, v] of Object.entries(json || {})) {\r\n        if (v && Array.isArray(v)) {\r\n          transitions.set(k, new Set(v || []));\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n  }\r\n}\r\nfunction persistAppliedTransitions(_window, transitions) {\r\n  if (transitions.size > 0) {\r\n    let json = {};\r\n    for (let [k, v] of transitions) {\r\n      json[k] = [...v];\r\n    }\r\n    try {\r\n      _window.sessionStorage.setItem(\r\n        TRANSITIONS_STORAGE_KEY,\r\n        JSON.stringify(json)\r\n      );\r\n    } catch (error) {\r\n      warning(\r\n        false,\r\n        `Failed to save applied view transitions in sessionStorage (${error}).`\r\n      );\r\n    }\r\n  }\r\n}\r\nfunction createDeferred() {\r\n  let resolve;\r\n  let reject;\r\n  let promise = new Promise((res, rej) => {\r\n    resolve = async (val) => {\r\n      res(val);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n    reject = async (error) => {\r\n      rej(error);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n  });\r\n  return {\r\n    promise,\r\n    //@ts-ignore\r\n    resolve,\r\n    //@ts-ignore\r\n    reject\r\n  };\r\n}\r\n\r\n// lib/components.tsx\r\n\r\n\r\n// lib/context.ts\r\n\r\nvar DataRouterContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\r\nDataRouterContext.displayName = \"DataRouter\";\r\nvar DataRouterStateContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\r\nDataRouterStateContext.displayName = \"DataRouterState\";\r\nvar ViewTransitionContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext({\r\n  isTransitioning: false\r\n});\r\nViewTransitionContext.displayName = \"ViewTransition\";\r\nvar FetchersContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(\r\n  /* @__PURE__ */ new Map()\r\n);\r\nFetchersContext.displayName = \"Fetchers\";\r\nvar AwaitContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\r\nAwaitContext.displayName = \"Await\";\r\nvar NavigationContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(\r\n  null\r\n);\r\nNavigationContext.displayName = \"Navigation\";\r\nvar LocationContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(\r\n  null\r\n);\r\nLocationContext.displayName = \"Location\";\r\nvar RouteContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext({\r\n  outlet: null,\r\n  matches: [],\r\n  isDataRoute: false\r\n});\r\nRouteContext.displayName = \"Route\";\r\nvar RouteErrorContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\r\nRouteErrorContext.displayName = \"RouteError\";\r\nvar ENABLE_DEV_WARNINGS = true;\r\n\r\n// lib/hooks.tsx\r\n\r\nfunction useHref(to, { relative } = {}) {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useHref() may be used only in the context of a <Router> component.`\r\n  );\r\n  let { basename, navigator } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\r\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\r\n  let joinedPathname = pathname;\r\n  if (basename !== \"/\") {\r\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\r\n  }\r\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\r\n}\r\nfunction useInRouterContext() {\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(LocationContext) != null;\r\n}\r\nfunction useLocation() {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useLocation() may be used only in the context of a <Router> component.`\r\n  );\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(LocationContext).location;\r\n}\r\nfunction useNavigationType() {\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(LocationContext).navigationType;\r\n}\r\nfunction useMatch(pattern) {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useMatch() may be used only in the context of a <Router> component.`\r\n  );\r\n  let { pathname } = useLocation();\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n    () => matchPath(pattern, decodePath(pathname)),\r\n    [pathname, pattern]\r\n  );\r\n}\r\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\r\nfunction useIsomorphicLayoutEffect(cb) {\r\n  let isStatic = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext).static;\r\n  if (!isStatic) {\r\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(cb);\r\n  }\r\n}\r\nfunction useNavigate() {\r\n  let { isDataRoute } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\r\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\r\n}\r\nfunction useNavigateUnstable() {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useNavigate() may be used only in the context of a <Router> component.`\r\n  );\r\n  let dataRouterContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);\r\n  let { basename, navigator } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\r\n  let { matches } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\r\n  let { pathname: locationPathname } = useLocation();\r\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\r\n  let activeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\r\n  useIsomorphicLayoutEffect(() => {\r\n    activeRef.current = true;\r\n  });\r\n  let navigate = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    (to, options = {}) => {\r\n      warning(activeRef.current, navigateEffectWarning);\r\n      if (!activeRef.current) return;\r\n      if (typeof to === \"number\") {\r\n        navigator.go(to);\r\n        return;\r\n      }\r\n      let path = resolveTo(\r\n        to,\r\n        JSON.parse(routePathnamesJson),\r\n        locationPathname,\r\n        options.relative === \"path\"\r\n      );\r\n      if (dataRouterContext == null && basename !== \"/\") {\r\n        path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\r\n      }\r\n      (!!options.replace ? navigator.replace : navigator.push)(\r\n        path,\r\n        options.state,\r\n        options\r\n      );\r\n    },\r\n    [\r\n      basename,\r\n      navigator,\r\n      routePathnamesJson,\r\n      locationPathname,\r\n      dataRouterContext\r\n    ]\r\n  );\r\n  return navigate;\r\n}\r\nvar OutletContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\r\nfunction useOutletContext() {\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(OutletContext);\r\n}\r\nfunction useOutlet(context) {\r\n  let outlet = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext).outlet;\r\n  if (outlet) {\r\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(OutletContext.Provider, { value: context }, outlet);\r\n  }\r\n  return outlet;\r\n}\r\nfunction useParams() {\r\n  let { matches } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\r\n  let routeMatch = matches[matches.length - 1];\r\n  return routeMatch ? routeMatch.params : {};\r\n}\r\nfunction useResolvedPath(to, { relative } = {}) {\r\n  let { matches } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\r\n  let { pathname: locationPathname } = useLocation();\r\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n    () => resolveTo(\r\n      to,\r\n      JSON.parse(routePathnamesJson),\r\n      locationPathname,\r\n      relative === \"path\"\r\n    ),\r\n    [to, routePathnamesJson, locationPathname, relative]\r\n  );\r\n}\r\nfunction useRoutes(routes, locationArg) {\r\n  return useRoutesImpl(routes, locationArg);\r\n}\r\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useRoutes() may be used only in the context of a <Router> component.`\r\n  );\r\n  let { navigator } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\r\n  let { matches: parentMatches } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\r\n  let routeMatch = parentMatches[parentMatches.length - 1];\r\n  let parentParams = routeMatch ? routeMatch.params : {};\r\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\r\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\r\n  let parentRoute = routeMatch && routeMatch.route;\r\n  if (ENABLE_DEV_WARNINGS) {\r\n    let parentPath = parentRoute && parentRoute.path || \"\";\r\n    warningOnce(\r\n      parentPathname,\r\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\r\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\r\n\r\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\r\n    );\r\n  }\r\n  let locationFromContext = useLocation();\r\n  let location;\r\n  if (locationArg) {\r\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\r\n    invariant(\r\n      parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\r\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\r\n    );\r\n    location = parsedLocationArg;\r\n  } else {\r\n    location = locationFromContext;\r\n  }\r\n  let pathname = location.pathname || \"/\";\r\n  let remainingPathname = pathname;\r\n  if (parentPathnameBase !== \"/\") {\r\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\r\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\r\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\r\n  }\r\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\r\n  if (ENABLE_DEV_WARNINGS) {\r\n    warning(\r\n      parentRoute || matches != null,\r\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\r\n    );\r\n    warning(\r\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\r\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\r\n    );\r\n  }\r\n  let renderedMatches = _renderMatches(\r\n    matches && matches.map(\r\n      (match) => Object.assign({}, match, {\r\n        params: Object.assign({}, parentParams, match.params),\r\n        pathname: joinPaths([\r\n          parentPathnameBase,\r\n          // Re-encode pathnames that were decoded inside matchRoutes\r\n          navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname\r\n        ]),\r\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\r\n          parentPathnameBase,\r\n          // Re-encode pathnames that were decoded inside matchRoutes\r\n          navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\r\n        ])\r\n      })\r\n    ),\r\n    parentMatches,\r\n    dataRouterState,\r\n    future\r\n  );\r\n  if (locationArg && renderedMatches) {\r\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n      LocationContext.Provider,\r\n      {\r\n        value: {\r\n          location: {\r\n            pathname: \"/\",\r\n            search: \"\",\r\n            hash: \"\",\r\n            state: null,\r\n            key: \"default\",\r\n            ...location\r\n          },\r\n          navigationType: \"POP\" /* Pop */\r\n        }\r\n      },\r\n      renderedMatches\r\n    );\r\n  }\r\n  return renderedMatches;\r\n}\r\nfunction DefaultErrorComponent() {\r\n  let error = useRouteError();\r\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\r\n  let stack = error instanceof Error ? error.stack : null;\r\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\r\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\r\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\r\n  let devInfo = null;\r\n  if (ENABLE_DEV_WARNINGS) {\r\n    console.error(\r\n      \"Error handled by React Router default ErrorBoundary:\",\r\n      error\r\n    );\r\n    devInfo = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\r\n  }\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\r\n}\r\nvar defaultErrorElement = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultErrorComponent, null);\r\nvar RenderErrorBoundary = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      location: props.location,\r\n      revalidation: props.revalidation,\r\n      error: props.error\r\n    };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { error };\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\r\n      return {\r\n        error: props.error,\r\n        location: props.location,\r\n        revalidation: props.revalidation\r\n      };\r\n    }\r\n    return {\r\n      error: props.error !== void 0 ? props.error : state.error,\r\n      location: state.location,\r\n      revalidation: props.revalidation || state.revalidation\r\n    };\r\n  }\r\n  componentDidCatch(error, errorInfo) {\r\n    console.error(\r\n      \"React Router caught the following error during render\",\r\n      error,\r\n      errorInfo\r\n    );\r\n  }\r\n  render() {\r\n    return this.state.error !== void 0 ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n      RouteErrorContext.Provider,\r\n      {\r\n        value: this.state.error,\r\n        children: this.props.component\r\n      }\r\n    )) : this.props.children;\r\n  }\r\n};\r\nfunction RenderedRoute({ routeContext, match, children }) {\r\n  let dataRouterContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);\r\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\r\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\r\n  }\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RouteContext.Provider, { value: routeContext }, children);\r\n}\r\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\r\n  if (matches == null) {\r\n    if (!dataRouterState) {\r\n      return null;\r\n    }\r\n    if (dataRouterState.errors) {\r\n      matches = dataRouterState.matches;\r\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\r\n      matches = dataRouterState.matches;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  let renderedMatches = matches;\r\n  let errors = dataRouterState?.errors;\r\n  if (errors != null) {\r\n    let errorIndex = renderedMatches.findIndex(\r\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\r\n    );\r\n    invariant(\r\n      errorIndex >= 0,\r\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\r\n        errors\r\n      ).join(\",\")}`\r\n    );\r\n    renderedMatches = renderedMatches.slice(\r\n      0,\r\n      Math.min(renderedMatches.length, errorIndex + 1)\r\n    );\r\n  }\r\n  let renderFallback = false;\r\n  let fallbackIndex = -1;\r\n  if (dataRouterState) {\r\n    for (let i = 0; i < renderedMatches.length; i++) {\r\n      let match = renderedMatches[i];\r\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\r\n        fallbackIndex = i;\r\n      }\r\n      if (match.route.id) {\r\n        let { loaderData, errors: errors2 } = dataRouterState;\r\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\r\n        if (match.route.lazy || needsToRunLoader) {\r\n          renderFallback = true;\r\n          if (fallbackIndex >= 0) {\r\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\r\n          } else {\r\n            renderedMatches = [renderedMatches[0]];\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return renderedMatches.reduceRight((outlet, match, index) => {\r\n    let error;\r\n    let shouldRenderHydrateFallback = false;\r\n    let errorElement = null;\r\n    let hydrateFallbackElement = null;\r\n    if (dataRouterState) {\r\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\r\n      errorElement = match.route.errorElement || defaultErrorElement;\r\n      if (renderFallback) {\r\n        if (fallbackIndex < 0 && index === 0) {\r\n          warningOnce(\r\n            \"route-fallback\",\r\n            false,\r\n            \"No `HydrateFallback` element provided to render during initial hydration\"\r\n          );\r\n          shouldRenderHydrateFallback = true;\r\n          hydrateFallbackElement = null;\r\n        } else if (fallbackIndex === index) {\r\n          shouldRenderHydrateFallback = true;\r\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\r\n        }\r\n      }\r\n    }\r\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\r\n    let getChildren = () => {\r\n      let children;\r\n      if (error) {\r\n        children = errorElement;\r\n      } else if (shouldRenderHydrateFallback) {\r\n        children = hydrateFallbackElement;\r\n      } else if (match.route.Component) {\r\n        children = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(match.route.Component, null);\r\n      } else if (match.route.element) {\r\n        children = match.route.element;\r\n      } else {\r\n        children = outlet;\r\n      }\r\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n        RenderedRoute,\r\n        {\r\n          match,\r\n          routeContext: {\r\n            outlet,\r\n            matches: matches2,\r\n            isDataRoute: dataRouterState != null\r\n          },\r\n          children\r\n        }\r\n      );\r\n    };\r\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n      RenderErrorBoundary,\r\n      {\r\n        location: dataRouterState.location,\r\n        revalidation: dataRouterState.revalidation,\r\n        component: errorElement,\r\n        error,\r\n        children: getChildren(),\r\n        routeContext: { outlet: null, matches: matches2, isDataRoute: true }\r\n      }\r\n    ) : getChildren();\r\n  }, null);\r\n}\r\nfunction getDataRouterConsoleError(hookName) {\r\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\r\n}\r\nfunction useDataRouterContext(hookName) {\r\n  let ctx = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);\r\n  invariant(ctx, getDataRouterConsoleError(hookName));\r\n  return ctx;\r\n}\r\nfunction useDataRouterState(hookName) {\r\n  let state = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterStateContext);\r\n  invariant(state, getDataRouterConsoleError(hookName));\r\n  return state;\r\n}\r\nfunction useRouteContext(hookName) {\r\n  let route = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\r\n  invariant(route, getDataRouterConsoleError(hookName));\r\n  return route;\r\n}\r\nfunction useCurrentRouteId(hookName) {\r\n  let route = useRouteContext(hookName);\r\n  let thisRoute = route.matches[route.matches.length - 1];\r\n  invariant(\r\n    thisRoute.route.id,\r\n    `${hookName} can only be used on routes that contain a unique \"id\"`\r\n  );\r\n  return thisRoute.route.id;\r\n}\r\nfunction useRouteId() {\r\n  return useCurrentRouteId(\"useRouteId\" /* UseRouteId */);\r\n}\r\nfunction useNavigation() {\r\n  let state = useDataRouterState(\"useNavigation\" /* UseNavigation */);\r\n  return state.navigation;\r\n}\r\nfunction useRevalidator() {\r\n  let dataRouterContext = useDataRouterContext(\"useRevalidator\" /* UseRevalidator */);\r\n  let state = useDataRouterState(\"useRevalidator\" /* UseRevalidator */);\r\n  let revalidate = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(async () => {\r\n    await dataRouterContext.router.revalidate();\r\n  }, [dataRouterContext.router]);\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n    () => ({ revalidate, state: state.revalidation }),\r\n    [revalidate, state.revalidation]\r\n  );\r\n}\r\nfunction useMatches() {\r\n  let { matches, loaderData } = useDataRouterState(\r\n    \"useMatches\" /* UseMatches */\r\n  );\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\r\n    [matches, loaderData]\r\n  );\r\n}\r\nfunction useLoaderData() {\r\n  let state = useDataRouterState(\"useLoaderData\" /* UseLoaderData */);\r\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\r\n  return state.loaderData[routeId];\r\n}\r\nfunction useRouteLoaderData(routeId) {\r\n  let state = useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */);\r\n  return state.loaderData[routeId];\r\n}\r\nfunction useActionData() {\r\n  let state = useDataRouterState(\"useActionData\" /* UseActionData */);\r\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\r\n  return state.actionData ? state.actionData[routeId] : void 0;\r\n}\r\nfunction useRouteError() {\r\n  let error = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteErrorContext);\r\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\r\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\r\n  if (error !== void 0) {\r\n    return error;\r\n  }\r\n  return state.errors?.[routeId];\r\n}\r\nfunction useAsyncValue() {\r\n  let value = react__WEBPACK_IMPORTED_MODULE_0__.useContext(AwaitContext);\r\n  return value?._data;\r\n}\r\nfunction useAsyncError() {\r\n  let value = react__WEBPACK_IMPORTED_MODULE_0__.useContext(AwaitContext);\r\n  return value?._error;\r\n}\r\nvar blockerId = 0;\r\nfunction useBlocker(shouldBlock) {\r\n  let { router, basename } = useDataRouterContext(\"useBlocker\" /* UseBlocker */);\r\n  let state = useDataRouterState(\"useBlocker\" /* UseBlocker */);\r\n  let [blockerKey, setBlockerKey] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\"\");\r\n  let blockerFunction = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    (arg) => {\r\n      if (typeof shouldBlock !== \"function\") {\r\n        return !!shouldBlock;\r\n      }\r\n      if (basename === \"/\") {\r\n        return shouldBlock(arg);\r\n      }\r\n      let { currentLocation, nextLocation, historyAction } = arg;\r\n      return shouldBlock({\r\n        currentLocation: {\r\n          ...currentLocation,\r\n          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\r\n        },\r\n        nextLocation: {\r\n          ...nextLocation,\r\n          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\r\n        },\r\n        historyAction\r\n      });\r\n    },\r\n    [basename, shouldBlock]\r\n  );\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    let key = String(++blockerId);\r\n    setBlockerKey(key);\r\n    return () => router.deleteBlocker(key);\r\n  }, [router]);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    if (blockerKey !== \"\") {\r\n      router.getBlocker(blockerKey, blockerFunction);\r\n    }\r\n  }, [router, blockerKey, blockerFunction]);\r\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\r\n}\r\nfunction useNavigateStable() {\r\n  let { router } = useDataRouterContext(\"useNavigate\" /* UseNavigateStable */);\r\n  let id = useCurrentRouteId(\"useNavigate\" /* UseNavigateStable */);\r\n  let activeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\r\n  useIsomorphicLayoutEffect(() => {\r\n    activeRef.current = true;\r\n  });\r\n  let navigate = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    async (to, options = {}) => {\r\n      warning(activeRef.current, navigateEffectWarning);\r\n      if (!activeRef.current) return;\r\n      if (typeof to === \"number\") {\r\n        router.navigate(to);\r\n      } else {\r\n        await router.navigate(to, { fromRouteId: id, ...options });\r\n      }\r\n    },\r\n    [router, id]\r\n  );\r\n  return navigate;\r\n}\r\nvar alreadyWarned = {};\r\nfunction warningOnce(key, cond, message) {\r\n  if (!cond && !alreadyWarned[key]) {\r\n    alreadyWarned[key] = true;\r\n    warning(false, message);\r\n  }\r\n}\r\n\r\n// lib/server-runtime/warnings.ts\r\nvar alreadyWarned2 = {};\r\nfunction warnOnce(condition, message) {\r\n  if (!condition && !alreadyWarned2[message]) {\r\n    alreadyWarned2[message] = true;\r\n    console.warn(message);\r\n  }\r\n}\r\n\r\n// lib/components.tsx\r\nfunction mapRouteProperties(route) {\r\n  let updates = {\r\n    // Note: this check also occurs in createRoutesFromChildren so update\r\n    // there if you change this -- please and thank you!\r\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\r\n  };\r\n  if (route.Component) {\r\n    if (ENABLE_DEV_WARNINGS) {\r\n      if (route.element) {\r\n        warning(\r\n          false,\r\n          \"You should not include both `Component` and `element` on your route - `Component` will be used.\"\r\n        );\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      element: react__WEBPACK_IMPORTED_MODULE_0__.createElement(route.Component),\r\n      Component: void 0\r\n    });\r\n  }\r\n  if (route.HydrateFallback) {\r\n    if (ENABLE_DEV_WARNINGS) {\r\n      if (route.hydrateFallbackElement) {\r\n        warning(\r\n          false,\r\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\"\r\n        );\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      hydrateFallbackElement: react__WEBPACK_IMPORTED_MODULE_0__.createElement(route.HydrateFallback),\r\n      HydrateFallback: void 0\r\n    });\r\n  }\r\n  if (route.ErrorBoundary) {\r\n    if (ENABLE_DEV_WARNINGS) {\r\n      if (route.errorElement) {\r\n        warning(\r\n          false,\r\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\"\r\n        );\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      errorElement: react__WEBPACK_IMPORTED_MODULE_0__.createElement(route.ErrorBoundary),\r\n      ErrorBoundary: void 0\r\n    });\r\n  }\r\n  return updates;\r\n}\r\nvar hydrationRouteProperties = [\r\n  \"HydrateFallback\",\r\n  \"hydrateFallbackElement\"\r\n];\r\nfunction createMemoryRouter(routes, opts) {\r\n  return createRouter({\r\n    basename: opts?.basename,\r\n    unstable_getContext: opts?.unstable_getContext,\r\n    future: opts?.future,\r\n    history: createMemoryHistory({\r\n      initialEntries: opts?.initialEntries,\r\n      initialIndex: opts?.initialIndex\r\n    }),\r\n    hydrationData: opts?.hydrationData,\r\n    routes,\r\n    hydrationRouteProperties,\r\n    mapRouteProperties,\r\n    dataStrategy: opts?.dataStrategy,\r\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation\r\n  }).initialize();\r\n}\r\nvar Deferred = class {\r\n  constructor() {\r\n    this.status = \"pending\";\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.resolve = (value) => {\r\n        if (this.status === \"pending\") {\r\n          this.status = \"resolved\";\r\n          resolve(value);\r\n        }\r\n      };\r\n      this.reject = (reason) => {\r\n        if (this.status === \"pending\") {\r\n          this.status = \"rejected\";\r\n          reject(reason);\r\n        }\r\n      };\r\n    });\r\n  }\r\n};\r\nfunction RouterProvider({\r\n  router,\r\n  flushSync: reactDomFlushSyncImpl\r\n}) {\r\n  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState(router.state);\r\n  let [pendingState, setPendingState] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\r\n  let [vtContext, setVtContext] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\r\n    isTransitioning: false\r\n  });\r\n  let [renderDfd, setRenderDfd] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\r\n  let [transition, setTransition] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\r\n  let [interruption, setInterruption] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\r\n  let fetcherData = react__WEBPACK_IMPORTED_MODULE_0__.useRef(/* @__PURE__ */ new Map());\r\n  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {\r\n      newState.fetchers.forEach((fetcher, key) => {\r\n        if (fetcher.data !== void 0) {\r\n          fetcherData.current.set(key, fetcher.data);\r\n        }\r\n      });\r\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\r\n      warnOnce(\r\n        flushSync === false || reactDomFlushSyncImpl != null,\r\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\r\n      );\r\n      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === \"function\";\r\n      warnOnce(\r\n        viewTransitionOpts == null || isViewTransitionAvailable,\r\n        \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\"\r\n      );\r\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\r\n        if (reactDomFlushSyncImpl && flushSync) {\r\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\r\n        } else {\r\n          react__WEBPACK_IMPORTED_MODULE_0__.startTransition(() => setStateImpl(newState));\r\n        }\r\n        return;\r\n      }\r\n      if (reactDomFlushSyncImpl && flushSync) {\r\n        reactDomFlushSyncImpl(() => {\r\n          if (transition) {\r\n            renderDfd && renderDfd.resolve();\r\n            transition.skipTransition();\r\n          }\r\n          setVtContext({\r\n            isTransitioning: true,\r\n            flushSync: true,\r\n            currentLocation: viewTransitionOpts.currentLocation,\r\n            nextLocation: viewTransitionOpts.nextLocation\r\n          });\r\n        });\r\n        let t = router.window.document.startViewTransition(() => {\r\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\r\n        });\r\n        t.finished.finally(() => {\r\n          reactDomFlushSyncImpl(() => {\r\n            setRenderDfd(void 0);\r\n            setTransition(void 0);\r\n            setPendingState(void 0);\r\n            setVtContext({ isTransitioning: false });\r\n          });\r\n        });\r\n        reactDomFlushSyncImpl(() => setTransition(t));\r\n        return;\r\n      }\r\n      if (transition) {\r\n        renderDfd && renderDfd.resolve();\r\n        transition.skipTransition();\r\n        setInterruption({\r\n          state: newState,\r\n          currentLocation: viewTransitionOpts.currentLocation,\r\n          nextLocation: viewTransitionOpts.nextLocation\r\n        });\r\n      } else {\r\n        setPendingState(newState);\r\n        setVtContext({\r\n          isTransitioning: true,\r\n          flushSync: false,\r\n          currentLocation: viewTransitionOpts.currentLocation,\r\n          nextLocation: viewTransitionOpts.nextLocation\r\n        });\r\n      }\r\n    },\r\n    [router.window, reactDomFlushSyncImpl, transition, renderDfd]\r\n  );\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\r\n      setRenderDfd(new Deferred());\r\n    }\r\n  }, [vtContext]);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    if (renderDfd && pendingState && router.window) {\r\n      let newState = pendingState;\r\n      let renderPromise = renderDfd.promise;\r\n      let transition2 = router.window.document.startViewTransition(async () => {\r\n        react__WEBPACK_IMPORTED_MODULE_0__.startTransition(() => setStateImpl(newState));\r\n        await renderPromise;\r\n      });\r\n      transition2.finished.finally(() => {\r\n        setRenderDfd(void 0);\r\n        setTransition(void 0);\r\n        setPendingState(void 0);\r\n        setVtContext({ isTransitioning: false });\r\n      });\r\n      setTransition(transition2);\r\n    }\r\n  }, [pendingState, renderDfd, router.window]);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\r\n      renderDfd.resolve();\r\n    }\r\n  }, [renderDfd, transition, state.location, pendingState]);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    if (!vtContext.isTransitioning && interruption) {\r\n      setPendingState(interruption.state);\r\n      setVtContext({\r\n        isTransitioning: true,\r\n        flushSync: false,\r\n        currentLocation: interruption.currentLocation,\r\n        nextLocation: interruption.nextLocation\r\n      });\r\n      setInterruption(void 0);\r\n    }\r\n  }, [vtContext.isTransitioning, interruption]);\r\n  let navigator = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\r\n    return {\r\n      createHref: router.createHref,\r\n      encodeLocation: router.encodeLocation,\r\n      go: (n) => router.navigate(n),\r\n      push: (to, state2, opts) => router.navigate(to, {\r\n        state: state2,\r\n        preventScrollReset: opts?.preventScrollReset\r\n      }),\r\n      replace: (to, state2, opts) => router.navigate(to, {\r\n        replace: true,\r\n        state: state2,\r\n        preventScrollReset: opts?.preventScrollReset\r\n      })\r\n    };\r\n  }, [router]);\r\n  let basename = router.basename || \"/\";\r\n  let dataRouterContext = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n    () => ({\r\n      router,\r\n      navigator,\r\n      static: false,\r\n      basename\r\n    }),\r\n    [router, navigator, basename]\r\n  );\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      location: state.location,\r\n      navigationType: state.historyAction,\r\n      navigator\r\n    },\r\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n      MemoizedDataRoutes,\r\n      {\r\n        routes: router.routes,\r\n        future: router.future,\r\n        state\r\n      }\r\n    )\r\n  ))))), null);\r\n}\r\nvar MemoizedDataRoutes = react__WEBPACK_IMPORTED_MODULE_0__.memo(DataRoutes);\r\nfunction DataRoutes({\r\n  routes,\r\n  future,\r\n  state\r\n}) {\r\n  return useRoutesImpl(routes, void 0, state, future);\r\n}\r\nfunction MemoryRouter({\r\n  basename,\r\n  children,\r\n  initialEntries,\r\n  initialIndex\r\n}) {\r\n  let historyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createMemoryHistory({\r\n      initialEntries,\r\n      initialIndex,\r\n      v5Compat: true\r\n    });\r\n  }\r\n  let history = historyRef.current;\r\n  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    (newState) => {\r\n      react__WEBPACK_IMPORTED_MODULE_0__.startTransition(() => setStateImpl(newState));\r\n    },\r\n    [setStateImpl]\r\n  );\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location: state.location,\r\n      navigationType: state.action,\r\n      navigator: history\r\n    }\r\n  );\r\n}\r\nfunction Navigate({\r\n  to,\r\n  replace: replace2,\r\n  state,\r\n  relative\r\n}) {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of\r\n    // the router loaded. We can help them understand how to avoid that.\r\n    `<Navigate> may be used only in the context of a <Router> component.`\r\n  );\r\n  let { static: isStatic } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\r\n  warning(\r\n    !isStatic,\r\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`\r\n  );\r\n  let { matches } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\r\n  let { pathname: locationPathname } = useLocation();\r\n  let navigate = useNavigate();\r\n  let path = resolveTo(\r\n    to,\r\n    getResolveToMatches(matches),\r\n    locationPathname,\r\n    relative === \"path\"\r\n  );\r\n  let jsonPath = JSON.stringify(path);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });\r\n  }, [navigate, jsonPath, relative, replace2, state]);\r\n  return null;\r\n}\r\nfunction Outlet(props) {\r\n  return useOutlet(props.context);\r\n}\r\nfunction Route(_props) {\r\n  invariant(\r\n    false,\r\n    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`\r\n  );\r\n}\r\nfunction Router({\r\n  basename: basenameProp = \"/\",\r\n  children = null,\r\n  location: locationProp,\r\n  navigationType = \"POP\" /* Pop */,\r\n  navigator,\r\n  static: staticProp = false\r\n}) {\r\n  invariant(\r\n    !useInRouterContext(),\r\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\r\n  );\r\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\r\n  let navigationContext = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n    () => ({\r\n      basename,\r\n      navigator,\r\n      static: staticProp,\r\n      future: {}\r\n    }),\r\n    [basename, navigator, staticProp]\r\n  );\r\n  if (typeof locationProp === \"string\") {\r\n    locationProp = parsePath(locationProp);\r\n  }\r\n  let {\r\n    pathname = \"/\",\r\n    search = \"\",\r\n    hash = \"\",\r\n    state = null,\r\n    key = \"default\"\r\n  } = locationProp;\r\n  let locationContext = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\r\n    let trailingPathname = stripBasename(pathname, basename);\r\n    if (trailingPathname == null) {\r\n      return null;\r\n    }\r\n    return {\r\n      location: {\r\n        pathname: trailingPathname,\r\n        search,\r\n        hash,\r\n        state,\r\n        key\r\n      },\r\n      navigationType\r\n    };\r\n  }, [basename, pathname, search, hash, state, key, navigationType]);\r\n  warning(\r\n    locationContext != null,\r\n    `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`\r\n  );\r\n  if (locationContext == null) {\r\n    return null;\r\n  }\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LocationContext.Provider, { children, value: locationContext }));\r\n}\r\nfunction Routes({\r\n  children,\r\n  location\r\n}) {\r\n  return useRoutes(createRoutesFromChildren(children), location);\r\n}\r\nfunction Await({\r\n  children,\r\n  errorElement,\r\n  resolve\r\n}) {\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AwaitErrorBoundary, { resolve, errorElement }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ResolveAwait, null, children));\r\n}\r\nvar AwaitErrorBoundary = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { error };\r\n  }\r\n  componentDidCatch(error, errorInfo) {\r\n    console.error(\r\n      \"<Await> caught the following error during render\",\r\n      error,\r\n      errorInfo\r\n    );\r\n  }\r\n  render() {\r\n    let { children, errorElement, resolve } = this.props;\r\n    let promise = null;\r\n    let status = 0 /* pending */;\r\n    if (!(resolve instanceof Promise)) {\r\n      status = 1 /* success */;\r\n      promise = Promise.resolve();\r\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\r\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\r\n    } else if (this.state.error) {\r\n      status = 2 /* error */;\r\n      let renderError = this.state.error;\r\n      promise = Promise.reject().catch(() => {\r\n      });\r\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\r\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\r\n    } else if (resolve._tracked) {\r\n      promise = resolve;\r\n      status = \"_error\" in promise ? 2 /* error */ : \"_data\" in promise ? 1 /* success */ : 0 /* pending */;\r\n    } else {\r\n      status = 0 /* pending */;\r\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\r\n      promise = resolve.then(\r\n        (data2) => Object.defineProperty(resolve, \"_data\", { get: () => data2 }),\r\n        (error) => Object.defineProperty(resolve, \"_error\", { get: () => error })\r\n      );\r\n    }\r\n    if (status === 2 /* error */ && !errorElement) {\r\n      throw promise._error;\r\n    }\r\n    if (status === 2 /* error */) {\r\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AwaitContext.Provider, { value: promise, children: errorElement });\r\n    }\r\n    if (status === 1 /* success */) {\r\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AwaitContext.Provider, { value: promise, children });\r\n    }\r\n    throw promise;\r\n  }\r\n};\r\nfunction ResolveAwait({\r\n  children\r\n}) {\r\n  let data2 = useAsyncValue();\r\n  let toRender = typeof children === \"function\" ? children(data2) : children;\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, toRender);\r\n}\r\nfunction createRoutesFromChildren(children, parentPath = []) {\r\n  let routes = [];\r\n  react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(children, (element, index) => {\r\n    if (!react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(element)) {\r\n      return;\r\n    }\r\n    let treePath = [...parentPath, index];\r\n    if (element.type === react__WEBPACK_IMPORTED_MODULE_0__.Fragment) {\r\n      routes.push.apply(\r\n        routes,\r\n        createRoutesFromChildren(element.props.children, treePath)\r\n      );\r\n      return;\r\n    }\r\n    invariant(\r\n      element.type === Route,\r\n      `[${typeof element.type === \"string\" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\r\n    );\r\n    invariant(\r\n      !element.props.index || !element.props.children,\r\n      \"An index route cannot have child routes.\"\r\n    );\r\n    let route = {\r\n      id: element.props.id || treePath.join(\"-\"),\r\n      caseSensitive: element.props.caseSensitive,\r\n      element: element.props.element,\r\n      Component: element.props.Component,\r\n      index: element.props.index,\r\n      path: element.props.path,\r\n      loader: element.props.loader,\r\n      action: element.props.action,\r\n      hydrateFallbackElement: element.props.hydrateFallbackElement,\r\n      HydrateFallback: element.props.HydrateFallback,\r\n      errorElement: element.props.errorElement,\r\n      ErrorBoundary: element.props.ErrorBoundary,\r\n      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,\r\n      shouldRevalidate: element.props.shouldRevalidate,\r\n      handle: element.props.handle,\r\n      lazy: element.props.lazy\r\n    };\r\n    if (element.props.children) {\r\n      route.children = createRoutesFromChildren(\r\n        element.props.children,\r\n        treePath\r\n      );\r\n    }\r\n    routes.push(route);\r\n  });\r\n  return routes;\r\n}\r\nvar createRoutesFromElements = createRoutesFromChildren;\r\nfunction renderMatches(matches) {\r\n  return _renderMatches(matches);\r\n}\r\nfunction withComponentProps(Component4) {\r\n  return function WithComponentProps() {\r\n    const props = {\r\n      params: useParams(),\r\n      loaderData: useLoaderData(),\r\n      actionData: useActionData(),\r\n      matches: useMatches()\r\n    };\r\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component4, props);\r\n  };\r\n}\r\nfunction withHydrateFallbackProps(HydrateFallback) {\r\n  return function WithHydrateFallbackProps() {\r\n    const props = {\r\n      params: useParams(),\r\n      loaderData: useLoaderData(),\r\n      actionData: useActionData()\r\n    };\r\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(HydrateFallback, props);\r\n  };\r\n}\r\nfunction withErrorBoundaryProps(ErrorBoundary) {\r\n  return function WithErrorBoundaryProps() {\r\n    const props = {\r\n      params: useParams(),\r\n      loaderData: useLoaderData(),\r\n      actionData: useActionData(),\r\n      error: useRouteError()\r\n    };\r\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBoundary, props);\r\n  };\r\n}\r\n\r\n// lib/dom/lib.tsx\r\n\r\n\r\n// lib/dom/dom.ts\r\nvar defaultMethod = \"get\";\r\nvar defaultEncType = \"application/x-www-form-urlencoded\";\r\nfunction isHtmlElement(object) {\r\n  return object != null && typeof object.tagName === \"string\";\r\n}\r\nfunction isButtonElement(object) {\r\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\r\n}\r\nfunction isFormElement(object) {\r\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\r\n}\r\nfunction isInputElement(object) {\r\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\r\n}\r\nfunction isModifiedEvent(event) {\r\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\r\n}\r\nfunction shouldProcessLinkClick(event, target) {\r\n  return event.button === 0 && // Ignore everything but left clicks\r\n  (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\r\n  !isModifiedEvent(event);\r\n}\r\nfunction createSearchParams(init = \"\") {\r\n  return new URLSearchParams(\r\n    typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {\r\n      let value = init[key];\r\n      return memo2.concat(\r\n        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\r\n      );\r\n    }, [])\r\n  );\r\n}\r\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\r\n  let searchParams = createSearchParams(locationSearch);\r\n  if (defaultSearchParams) {\r\n    defaultSearchParams.forEach((_, key) => {\r\n      if (!searchParams.has(key)) {\r\n        defaultSearchParams.getAll(key).forEach((value) => {\r\n          searchParams.append(key, value);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  return searchParams;\r\n}\r\nvar _formDataSupportsSubmitter = null;\r\nfunction isFormDataSubmitterSupported() {\r\n  if (_formDataSupportsSubmitter === null) {\r\n    try {\r\n      new FormData(\r\n        document.createElement(\"form\"),\r\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\r\n        0\r\n      );\r\n      _formDataSupportsSubmitter = false;\r\n    } catch (e) {\r\n      _formDataSupportsSubmitter = true;\r\n    }\r\n  }\r\n  return _formDataSupportsSubmitter;\r\n}\r\nvar supportedFormEncTypes = /* @__PURE__ */ new Set([\r\n  \"application/x-www-form-urlencoded\",\r\n  \"multipart/form-data\",\r\n  \"text/plain\"\r\n]);\r\nfunction getFormEncType(encType) {\r\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\r\n    warning(\r\n      false,\r\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` and will default to \"${defaultEncType}\"`\r\n    );\r\n    return null;\r\n  }\r\n  return encType;\r\n}\r\nfunction getFormSubmissionInfo(target, basename) {\r\n  let method;\r\n  let action;\r\n  let encType;\r\n  let formData;\r\n  let body;\r\n  if (isFormElement(target)) {\r\n    let attr = target.getAttribute(\"action\");\r\n    action = attr ? stripBasename(attr, basename) : null;\r\n    method = target.getAttribute(\"method\") || defaultMethod;\r\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\r\n    formData = new FormData(target);\r\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\r\n    let form = target.form;\r\n    if (form == null) {\r\n      throw new Error(\r\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\r\n      );\r\n    }\r\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\r\n    action = attr ? stripBasename(attr, basename) : null;\r\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\r\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\r\n    formData = new FormData(form, target);\r\n    if (!isFormDataSubmitterSupported()) {\r\n      let { name, type, value } = target;\r\n      if (type === \"image\") {\r\n        let prefix = name ? `${name}.` : \"\";\r\n        formData.append(`${prefix}x`, \"0\");\r\n        formData.append(`${prefix}y`, \"0\");\r\n      } else if (name) {\r\n        formData.append(name, value);\r\n      }\r\n    }\r\n  } else if (isHtmlElement(target)) {\r\n    throw new Error(\r\n      `Cannot submit element that is not <form>, <button>, or <input type=\"submit|image\">`\r\n    );\r\n  } else {\r\n    method = defaultMethod;\r\n    action = null;\r\n    encType = defaultEncType;\r\n    body = target;\r\n  }\r\n  if (formData && encType === \"text/plain\") {\r\n    body = formData;\r\n    formData = void 0;\r\n  }\r\n  return { action, method: method.toLowerCase(), encType, formData, body };\r\n}\r\n\r\n// lib/dom/ssr/components.tsx\r\n\r\n\r\n// lib/dom/ssr/invariant.ts\r\nfunction invariant2(value, message) {\r\n  if (value === false || value === null || typeof value === \"undefined\") {\r\n    throw new Error(message);\r\n  }\r\n}\r\n\r\n// lib/dom/ssr/routeModules.ts\r\nasync function loadRouteModule(route, routeModulesCache) {\r\n  if (route.id in routeModulesCache) {\r\n    return routeModulesCache[route.id];\r\n  }\r\n  try {\r\n    let routeModule = await import(\r\n      /* @vite-ignore */\r\n      /* webpackIgnore: true */\r\n      route.module\r\n    );\r\n    routeModulesCache[route.id] = routeModule;\r\n    return routeModule;\r\n  } catch (error) {\r\n    console.error(\r\n      `Error loading route module \\`${route.module}\\`, reloading page...`\r\n    );\r\n    console.error(error);\r\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\r\n    /* unsupported import.meta.hot */ undefined) // removed by dead control flow\n{}\r\n    window.location.reload();\r\n    return new Promise(() => {\r\n    });\r\n  }\r\n}\r\n\r\n// lib/dom/ssr/links.ts\r\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\r\n  let descriptors = matches.map((match) => {\r\n    let module = routeModules[match.route.id];\r\n    let route = manifest.routes[match.route.id];\r\n    return [\r\n      route && route.css ? route.css.map((href2) => ({ rel: \"stylesheet\", href: href2 })) : [],\r\n      module?.links?.() || []\r\n    ];\r\n  }).flat(2);\r\n  let preloads = getModuleLinkHrefs(matches, manifest);\r\n  return dedupeLinkDescriptors(descriptors, preloads);\r\n}\r\nfunction getRouteCssDescriptors(route) {\r\n  if (!route.css) return [];\r\n  return route.css.map((href2) => ({ rel: \"stylesheet\", href: href2 }));\r\n}\r\nasync function prefetchRouteCss(route) {\r\n  if (!route.css) return;\r\n  let descriptors = getRouteCssDescriptors(route);\r\n  await Promise.all(descriptors.map(prefetchStyleLink));\r\n}\r\nasync function prefetchStyleLinks(route, routeModule) {\r\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\r\n  let descriptors = [];\r\n  if (route.css) {\r\n    descriptors.push(...getRouteCssDescriptors(route));\r\n  }\r\n  if (routeModule.links) {\r\n    descriptors.push(...routeModule.links());\r\n  }\r\n  if (descriptors.length === 0) return;\r\n  let styleLinks = [];\r\n  for (let descriptor of descriptors) {\r\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\r\n      styleLinks.push({\r\n        ...descriptor,\r\n        rel: \"preload\",\r\n        as: \"style\"\r\n      });\r\n    }\r\n  }\r\n  await Promise.all(styleLinks.map(prefetchStyleLink));\r\n}\r\nasync function prefetchStyleLink(descriptor) {\r\n  return new Promise((resolve) => {\r\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(\r\n      `link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`\r\n    )) {\r\n      return resolve();\r\n    }\r\n    let link = document.createElement(\"link\");\r\n    Object.assign(link, descriptor);\r\n    function removeLink() {\r\n      if (document.head.contains(link)) {\r\n        document.head.removeChild(link);\r\n      }\r\n    }\r\n    link.onload = () => {\r\n      removeLink();\r\n      resolve();\r\n    };\r\n    link.onerror = () => {\r\n      removeLink();\r\n      resolve();\r\n    };\r\n    document.head.appendChild(link);\r\n  });\r\n}\r\nfunction isPageLinkDescriptor(object) {\r\n  return object != null && typeof object.page === \"string\";\r\n}\r\nfunction isHtmlLinkDescriptor(object) {\r\n  if (object == null) {\r\n    return false;\r\n  }\r\n  if (object.href == null) {\r\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\r\n  }\r\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\r\n}\r\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\r\n  let links = await Promise.all(\r\n    matches.map(async (match) => {\r\n      let route = manifest.routes[match.route.id];\r\n      if (route) {\r\n        let mod = await loadRouteModule(route, routeModules);\r\n        return mod.links ? mod.links() : [];\r\n      }\r\n      return [];\r\n    })\r\n  );\r\n  return dedupeLinkDescriptors(\r\n    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === \"stylesheet\" || link.rel === \"preload\").map(\r\n      (link) => link.rel === \"stylesheet\" ? { ...link, rel: \"prefetch\", as: \"style\" } : { ...link, rel: \"prefetch\" }\r\n    )\r\n  );\r\n}\r\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\r\n  let isNew = (match, index) => {\r\n    if (!currentMatches[index]) return true;\r\n    return match.route.id !== currentMatches[index].route.id;\r\n  };\r\n  let matchPathChanged = (match, index) => {\r\n    return (\r\n      // param change, /users/123 -> /users/456\r\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\r\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\r\n      currentMatches[index].route.path?.endsWith(\"*\") && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\r\n    );\r\n  };\r\n  if (mode === \"assets\") {\r\n    return nextMatches.filter(\r\n      (match, index) => isNew(match, index) || matchPathChanged(match, index)\r\n    );\r\n  }\r\n  if (mode === \"data\") {\r\n    return nextMatches.filter((match, index) => {\r\n      let manifestRoute = manifest.routes[match.route.id];\r\n      if (!manifestRoute || !manifestRoute.hasLoader) {\r\n        return false;\r\n      }\r\n      if (isNew(match, index) || matchPathChanged(match, index)) {\r\n        return true;\r\n      }\r\n      if (match.route.shouldRevalidate) {\r\n        let routeChoice = match.route.shouldRevalidate({\r\n          currentUrl: new URL(\r\n            location.pathname + location.search + location.hash,\r\n            window.origin\r\n          ),\r\n          currentParams: currentMatches[0]?.params || {},\r\n          nextUrl: new URL(page, window.origin),\r\n          nextParams: match.params,\r\n          defaultShouldRevalidate: true\r\n        });\r\n        if (typeof routeChoice === \"boolean\") {\r\n          return routeChoice;\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n  return [];\r\n}\r\nfunction getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {\r\n  return dedupeHrefs(\r\n    matches.map((match) => {\r\n      let route = manifest.routes[match.route.id];\r\n      if (!route) return [];\r\n      let hrefs = [route.module];\r\n      if (route.clientActionModule) {\r\n        hrefs = hrefs.concat(route.clientActionModule);\r\n      }\r\n      if (route.clientLoaderModule) {\r\n        hrefs = hrefs.concat(route.clientLoaderModule);\r\n      }\r\n      if (includeHydrateFallback && route.hydrateFallbackModule) {\r\n        hrefs = hrefs.concat(route.hydrateFallbackModule);\r\n      }\r\n      if (route.imports) {\r\n        hrefs = hrefs.concat(route.imports);\r\n      }\r\n      return hrefs;\r\n    }).flat(1)\r\n  );\r\n}\r\nfunction dedupeHrefs(hrefs) {\r\n  return [...new Set(hrefs)];\r\n}\r\nfunction sortKeys(obj) {\r\n  let sorted = {};\r\n  let keys = Object.keys(obj).sort();\r\n  for (let key of keys) {\r\n    sorted[key] = obj[key];\r\n  }\r\n  return sorted;\r\n}\r\nfunction dedupeLinkDescriptors(descriptors, preloads) {\r\n  let set = /* @__PURE__ */ new Set();\r\n  let preloadsSet = new Set(preloads);\r\n  return descriptors.reduce((deduped, descriptor) => {\r\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\r\n    if (alreadyModulePreload) {\r\n      return deduped;\r\n    }\r\n    let key = JSON.stringify(sortKeys(descriptor));\r\n    if (!set.has(key)) {\r\n      set.add(key);\r\n      deduped.push({ key, link: descriptor });\r\n    }\r\n    return deduped;\r\n  }, []);\r\n}\r\nvar _isPreloadSupported;\r\nfunction isPreloadSupported() {\r\n  if (_isPreloadSupported !== void 0) {\r\n    return _isPreloadSupported;\r\n  }\r\n  let el = document.createElement(\"link\");\r\n  _isPreloadSupported = el.relList.supports(\"preload\");\r\n  el = null;\r\n  return _isPreloadSupported;\r\n}\r\n\r\n// lib/dom/ssr/markup.ts\r\nvar ESCAPE_LOOKUP = {\r\n  \"&\": \"\\\\u0026\",\r\n  \">\": \"\\\\u003e\",\r\n  \"<\": \"\\\\u003c\",\r\n  \"\\u2028\": \"\\\\u2028\",\r\n  \"\\u2029\": \"\\\\u2029\"\r\n};\r\nvar ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\r\nfunction escapeHtml(html) {\r\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\r\n}\r\nfunction createHtml(html) {\r\n  return { __html: html };\r\n}\r\n\r\n// lib/dom/ssr/single-fetch.tsx\r\n\r\n\r\n// vendor/turbo-stream-v2/utils.ts\r\nvar HOLE = -1;\r\nvar NAN = -2;\r\nvar NEGATIVE_INFINITY = -3;\r\nvar NEGATIVE_ZERO = -4;\r\nvar NULL = -5;\r\nvar POSITIVE_INFINITY = -6;\r\nvar UNDEFINED = -7;\r\nvar TYPE_BIGINT = \"B\";\r\nvar TYPE_DATE = \"D\";\r\nvar TYPE_ERROR = \"E\";\r\nvar TYPE_MAP = \"M\";\r\nvar TYPE_NULL_OBJECT = \"N\";\r\nvar TYPE_PROMISE = \"P\";\r\nvar TYPE_REGEXP = \"R\";\r\nvar TYPE_SET = \"S\";\r\nvar TYPE_SYMBOL = \"Y\";\r\nvar TYPE_URL = \"U\";\r\nvar TYPE_PREVIOUS_RESOLVED = \"Z\";\r\nvar Deferred2 = class {\r\n  constructor() {\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.resolve = resolve;\r\n      this.reject = reject;\r\n    });\r\n  }\r\n};\r\nfunction createLineSplittingTransform() {\r\n  const decoder = new TextDecoder();\r\n  let leftover = \"\";\r\n  return new TransformStream({\r\n    transform(chunk, controller) {\r\n      const str = decoder.decode(chunk, { stream: true });\r\n      const parts = (leftover + str).split(\"\\n\");\r\n      leftover = parts.pop() || \"\";\r\n      for (const part of parts) {\r\n        controller.enqueue(part);\r\n      }\r\n    },\r\n    flush(controller) {\r\n      if (leftover) {\r\n        controller.enqueue(leftover);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// vendor/turbo-stream-v2/flatten.ts\r\nfunction flatten(input) {\r\n  const { indices } = this;\r\n  const existing = indices.get(input);\r\n  if (existing) return [existing];\r\n  if (input === void 0) return UNDEFINED;\r\n  if (input === null) return NULL;\r\n  if (Number.isNaN(input)) return NAN;\r\n  if (input === Number.POSITIVE_INFINITY) return POSITIVE_INFINITY;\r\n  if (input === Number.NEGATIVE_INFINITY) return NEGATIVE_INFINITY;\r\n  if (input === 0 && 1 / input < 0) return NEGATIVE_ZERO;\r\n  const index = this.index++;\r\n  indices.set(input, index);\r\n  stringify.call(this, input, index);\r\n  return index;\r\n}\r\nfunction stringify(input, index) {\r\n  const { deferred, plugins, postPlugins } = this;\r\n  const str = this.stringified;\r\n  const stack = [[input, index]];\r\n  while (stack.length > 0) {\r\n    const [input2, index2] = stack.pop();\r\n    const partsForObj = (obj) => Object.keys(obj).map((k) => `\"_${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`).join(\",\");\r\n    let error = null;\r\n    switch (typeof input2) {\r\n      case \"boolean\":\r\n      case \"number\":\r\n      case \"string\":\r\n        str[index2] = JSON.stringify(input2);\r\n        break;\r\n      case \"bigint\":\r\n        str[index2] = `[\"${TYPE_BIGINT}\",\"${input2}\"]`;\r\n        break;\r\n      case \"symbol\": {\r\n        const keyFor = Symbol.keyFor(input2);\r\n        if (!keyFor) {\r\n          error = new Error(\r\n            \"Cannot encode symbol unless created with Symbol.for()\"\r\n          );\r\n        } else {\r\n          str[index2] = `[\"${TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\r\n        }\r\n        break;\r\n      }\r\n      case \"object\": {\r\n        if (!input2) {\r\n          str[index2] = `${NULL}`;\r\n          break;\r\n        }\r\n        const isArray = Array.isArray(input2);\r\n        let pluginHandled = false;\r\n        if (!isArray && plugins) {\r\n          for (const plugin of plugins) {\r\n            const pluginResult = plugin(input2);\r\n            if (Array.isArray(pluginResult)) {\r\n              pluginHandled = true;\r\n              const [pluginIdentifier, ...rest] = pluginResult;\r\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\r\n              if (rest.length > 0) {\r\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\r\n              }\r\n              str[index2] += \"]\";\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (!pluginHandled) {\r\n          let result = isArray ? \"[\" : \"{\";\r\n          if (isArray) {\r\n            for (let i = 0; i < input2.length; i++)\r\n              result += (i ? \",\" : \"\") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);\r\n            str[index2] = `${result}]`;\r\n          } else if (input2 instanceof Date) {\r\n            str[index2] = `[\"${TYPE_DATE}\",${input2.getTime()}]`;\r\n          } else if (input2 instanceof URL) {\r\n            str[index2] = `[\"${TYPE_URL}\",${JSON.stringify(input2.href)}]`;\r\n          } else if (input2 instanceof RegExp) {\r\n            str[index2] = `[\"${TYPE_REGEXP}\",${JSON.stringify(\r\n              input2.source\r\n            )},${JSON.stringify(input2.flags)}]`;\r\n          } else if (input2 instanceof Set) {\r\n            if (input2.size > 0) {\r\n              str[index2] = `[\"${TYPE_SET}\",${[...input2].map((val) => flatten.call(this, val)).join(\",\")}]`;\r\n            } else {\r\n              str[index2] = `[\"${TYPE_SET}\"]`;\r\n            }\r\n          } else if (input2 instanceof Map) {\r\n            if (input2.size > 0) {\r\n              str[index2] = `[\"${TYPE_MAP}\",${[...input2].flatMap(([k, v]) => [\r\n                flatten.call(this, k),\r\n                flatten.call(this, v)\r\n              ]).join(\",\")}]`;\r\n            } else {\r\n              str[index2] = `[\"${TYPE_MAP}\"]`;\r\n            }\r\n          } else if (input2 instanceof Promise) {\r\n            str[index2] = `[\"${TYPE_PROMISE}\",${index2}]`;\r\n            deferred[index2] = input2;\r\n          } else if (input2 instanceof Error) {\r\n            str[index2] = `[\"${TYPE_ERROR}\",${JSON.stringify(input2.message)}`;\r\n            if (input2.name !== \"Error\") {\r\n              str[index2] += `,${JSON.stringify(input2.name)}`;\r\n            }\r\n            str[index2] += \"]\";\r\n          } else if (Object.getPrototypeOf(input2) === null) {\r\n            str[index2] = `[\"${TYPE_NULL_OBJECT}\",{${partsForObj(input2)}}]`;\r\n          } else if (isPlainObject(input2)) {\r\n            str[index2] = `{${partsForObj(input2)}}`;\r\n          } else {\r\n            error = new Error(\"Cannot encode object with prototype\");\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        const isArray = Array.isArray(input2);\r\n        let pluginHandled = false;\r\n        if (!isArray && plugins) {\r\n          for (const plugin of plugins) {\r\n            const pluginResult = plugin(input2);\r\n            if (Array.isArray(pluginResult)) {\r\n              pluginHandled = true;\r\n              const [pluginIdentifier, ...rest] = pluginResult;\r\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\r\n              if (rest.length > 0) {\r\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\r\n              }\r\n              str[index2] += \"]\";\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (!pluginHandled) {\r\n          error = new Error(\"Cannot encode function or unexpected type\");\r\n        }\r\n      }\r\n    }\r\n    if (error) {\r\n      let pluginHandled = false;\r\n      if (postPlugins) {\r\n        for (const plugin of postPlugins) {\r\n          const pluginResult = plugin(input2);\r\n          if (Array.isArray(pluginResult)) {\r\n            pluginHandled = true;\r\n            const [pluginIdentifier, ...rest] = pluginResult;\r\n            str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\r\n            if (rest.length > 0) {\r\n              str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\r\n            }\r\n            str[index2] += \"]\";\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (!pluginHandled) {\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n}\r\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\r\nfunction isPlainObject(thing) {\r\n  const proto = Object.getPrototypeOf(thing);\r\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\r\n}\r\n\r\n// vendor/turbo-stream-v2/unflatten.ts\r\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\r\nfunction unflatten(parsed) {\r\n  const { hydrated, values } = this;\r\n  if (typeof parsed === \"number\") return hydrate.call(this, parsed);\r\n  if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();\r\n  const startIndex = values.length;\r\n  for (const value of parsed) {\r\n    values.push(value);\r\n  }\r\n  hydrated.length = values.length;\r\n  return hydrate.call(this, startIndex);\r\n}\r\nfunction hydrate(index) {\r\n  const { hydrated, values, deferred, plugins } = this;\r\n  let result;\r\n  const stack = [\r\n    [\r\n      index,\r\n      (v) => {\r\n        result = v;\r\n      }\r\n    ]\r\n  ];\r\n  let postRun = [];\r\n  while (stack.length > 0) {\r\n    const [index2, set] = stack.pop();\r\n    switch (index2) {\r\n      case UNDEFINED:\r\n        set(void 0);\r\n        continue;\r\n      case NULL:\r\n        set(null);\r\n        continue;\r\n      case NAN:\r\n        set(NaN);\r\n        continue;\r\n      case POSITIVE_INFINITY:\r\n        set(Infinity);\r\n        continue;\r\n      case NEGATIVE_INFINITY:\r\n        set(-Infinity);\r\n        continue;\r\n      case NEGATIVE_ZERO:\r\n        set(-0);\r\n        continue;\r\n    }\r\n    if (hydrated[index2]) {\r\n      set(hydrated[index2]);\r\n      continue;\r\n    }\r\n    const value = values[index2];\r\n    if (!value || typeof value !== \"object\") {\r\n      hydrated[index2] = value;\r\n      set(value);\r\n      continue;\r\n    }\r\n    if (Array.isArray(value)) {\r\n      if (typeof value[0] === \"string\") {\r\n        const [type, b, c] = value;\r\n        switch (type) {\r\n          case TYPE_DATE:\r\n            set(hydrated[index2] = new Date(b));\r\n            continue;\r\n          case TYPE_URL:\r\n            set(hydrated[index2] = new URL(b));\r\n            continue;\r\n          case TYPE_BIGINT:\r\n            set(hydrated[index2] = BigInt(b));\r\n            continue;\r\n          case TYPE_REGEXP:\r\n            set(hydrated[index2] = new RegExp(b, c));\r\n            continue;\r\n          case TYPE_SYMBOL:\r\n            set(hydrated[index2] = Symbol.for(b));\r\n            continue;\r\n          case TYPE_SET:\r\n            const newSet = /* @__PURE__ */ new Set();\r\n            hydrated[index2] = newSet;\r\n            for (let i = value.length - 1; i > 0; i--)\r\n              stack.push([\r\n                value[i],\r\n                (v) => {\r\n                  newSet.add(v);\r\n                }\r\n              ]);\r\n            set(newSet);\r\n            continue;\r\n          case TYPE_MAP:\r\n            const map = /* @__PURE__ */ new Map();\r\n            hydrated[index2] = map;\r\n            for (let i = value.length - 2; i > 0; i -= 2) {\r\n              const r = [];\r\n              stack.push([\r\n                value[i + 1],\r\n                (v) => {\r\n                  r[1] = v;\r\n                }\r\n              ]);\r\n              stack.push([\r\n                value[i],\r\n                (k) => {\r\n                  r[0] = k;\r\n                }\r\n              ]);\r\n              postRun.push(() => {\r\n                map.set(r[0], r[1]);\r\n              });\r\n            }\r\n            set(map);\r\n            continue;\r\n          case TYPE_NULL_OBJECT:\r\n            const obj = /* @__PURE__ */ Object.create(null);\r\n            hydrated[index2] = obj;\r\n            for (const key of Object.keys(b).reverse()) {\r\n              const r = [];\r\n              stack.push([\r\n                b[key],\r\n                (v) => {\r\n                  r[1] = v;\r\n                }\r\n              ]);\r\n              stack.push([\r\n                Number(key.slice(1)),\r\n                (k) => {\r\n                  r[0] = k;\r\n                }\r\n              ]);\r\n              postRun.push(() => {\r\n                obj[r[0]] = r[1];\r\n              });\r\n            }\r\n            set(obj);\r\n            continue;\r\n          case TYPE_PROMISE:\r\n            if (hydrated[b]) {\r\n              set(hydrated[index2] = hydrated[b]);\r\n            } else {\r\n              const d = new Deferred2();\r\n              deferred[b] = d;\r\n              set(hydrated[index2] = d.promise);\r\n            }\r\n            continue;\r\n          case TYPE_ERROR:\r\n            const [, message, errorType] = value;\r\n            let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\r\n            hydrated[index2] = error;\r\n            set(error);\r\n            continue;\r\n          case TYPE_PREVIOUS_RESOLVED:\r\n            set(hydrated[index2] = hydrated[b]);\r\n            continue;\r\n          default:\r\n            if (Array.isArray(plugins)) {\r\n              const r = [];\r\n              const vals = value.slice(1);\r\n              for (let i = 0; i < vals.length; i++) {\r\n                const v = vals[i];\r\n                stack.push([\r\n                  v,\r\n                  (v2) => {\r\n                    r[i] = v2;\r\n                  }\r\n                ]);\r\n              }\r\n              postRun.push(() => {\r\n                for (const plugin of plugins) {\r\n                  const result2 = plugin(value[0], ...r);\r\n                  if (result2) {\r\n                    set(hydrated[index2] = result2.value);\r\n                    return;\r\n                  }\r\n                }\r\n                throw new SyntaxError();\r\n              });\r\n              continue;\r\n            }\r\n            throw new SyntaxError();\r\n        }\r\n      } else {\r\n        const array = [];\r\n        hydrated[index2] = array;\r\n        for (let i = 0; i < value.length; i++) {\r\n          const n = value[i];\r\n          if (n !== HOLE) {\r\n            stack.push([\r\n              n,\r\n              (v) => {\r\n                array[i] = v;\r\n              }\r\n            ]);\r\n          }\r\n        }\r\n        set(array);\r\n        continue;\r\n      }\r\n    } else {\r\n      const object = {};\r\n      hydrated[index2] = object;\r\n      for (const key of Object.keys(value).reverse()) {\r\n        const r = [];\r\n        stack.push([\r\n          value[key],\r\n          (v) => {\r\n            r[1] = v;\r\n          }\r\n        ]);\r\n        stack.push([\r\n          Number(key.slice(1)),\r\n          (k) => {\r\n            r[0] = k;\r\n          }\r\n        ]);\r\n        postRun.push(() => {\r\n          object[r[0]] = r[1];\r\n        });\r\n      }\r\n      set(object);\r\n      continue;\r\n    }\r\n  }\r\n  while (postRun.length > 0) {\r\n    postRun.pop()();\r\n  }\r\n  return result;\r\n}\r\n\r\n// vendor/turbo-stream-v2/turbo-stream.ts\r\nasync function decode(readable, options) {\r\n  const { plugins } = options ?? {};\r\n  const done = new Deferred2();\r\n  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\r\n  const decoder = {\r\n    values: [],\r\n    hydrated: [],\r\n    deferred: {},\r\n    plugins\r\n  };\r\n  const decoded = await decodeInitial.call(decoder, reader);\r\n  let donePromise = done.promise;\r\n  if (decoded.done) {\r\n    done.resolve();\r\n  } else {\r\n    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {\r\n      for (const deferred of Object.values(decoder.deferred)) {\r\n        deferred.reject(reason);\r\n      }\r\n      done.reject(reason);\r\n    });\r\n  }\r\n  return {\r\n    done: donePromise.then(() => reader.closed),\r\n    value: decoded.value\r\n  };\r\n}\r\nasync function decodeInitial(reader) {\r\n  const read = await reader.read();\r\n  if (!read.value) {\r\n    throw new SyntaxError();\r\n  }\r\n  let line;\r\n  try {\r\n    line = JSON.parse(read.value);\r\n  } catch (reason) {\r\n    throw new SyntaxError();\r\n  }\r\n  return {\r\n    done: read.done,\r\n    value: unflatten.call(this, line)\r\n  };\r\n}\r\nasync function decodeDeferred(reader) {\r\n  let read = await reader.read();\r\n  while (!read.done) {\r\n    if (!read.value) continue;\r\n    const line = read.value;\r\n    switch (line[0]) {\r\n      case TYPE_PROMISE: {\r\n        const colonIndex = line.indexOf(\":\");\r\n        const deferredId = Number(line.slice(1, colonIndex));\r\n        const deferred = this.deferred[deferredId];\r\n        if (!deferred) {\r\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\r\n        }\r\n        const lineData = line.slice(colonIndex + 1);\r\n        let jsonLine;\r\n        try {\r\n          jsonLine = JSON.parse(lineData);\r\n        } catch (reason) {\r\n          throw new SyntaxError();\r\n        }\r\n        const value = unflatten.call(this, jsonLine);\r\n        deferred.resolve(value);\r\n        break;\r\n      }\r\n      case TYPE_ERROR: {\r\n        const colonIndex = line.indexOf(\":\");\r\n        const deferredId = Number(line.slice(1, colonIndex));\r\n        const deferred = this.deferred[deferredId];\r\n        if (!deferred) {\r\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\r\n        }\r\n        const lineData = line.slice(colonIndex + 1);\r\n        let jsonLine;\r\n        try {\r\n          jsonLine = JSON.parse(lineData);\r\n        } catch (reason) {\r\n          throw new SyntaxError();\r\n        }\r\n        const value = unflatten.call(this, jsonLine);\r\n        deferred.reject(value);\r\n        break;\r\n      }\r\n      default:\r\n        throw new SyntaxError();\r\n    }\r\n    read = await reader.read();\r\n  }\r\n}\r\nfunction encode(input, options) {\r\n  const { plugins, postPlugins, signal } = options ?? {};\r\n  const encoder2 = {\r\n    deferred: {},\r\n    index: 0,\r\n    indices: /* @__PURE__ */ new Map(),\r\n    stringified: [],\r\n    plugins,\r\n    postPlugins,\r\n    signal\r\n  };\r\n  const textEncoder = new TextEncoder();\r\n  let lastSentIndex = 0;\r\n  const readable = new ReadableStream({\r\n    async start(controller) {\r\n      const id = flatten.call(encoder2, input);\r\n      if (Array.isArray(id)) {\r\n        throw new Error(\"This should never happen\");\r\n      }\r\n      if (id < 0) {\r\n        controller.enqueue(textEncoder.encode(`${id}\r\n`));\r\n      } else {\r\n        controller.enqueue(\r\n          textEncoder.encode(`[${encoder2.stringified.join(\",\")}]\r\n`)\r\n        );\r\n        lastSentIndex = encoder2.stringified.length - 1;\r\n      }\r\n      const seenPromises = /* @__PURE__ */ new WeakSet();\r\n      if (Object.keys(encoder2.deferred).length) {\r\n        let raceDone;\r\n        const racePromise = new Promise((resolve, reject) => {\r\n          raceDone = resolve;\r\n          if (signal) {\r\n            const rejectPromise = () => reject(signal.reason || new Error(\"Signal was aborted.\"));\r\n            if (signal.aborted) {\r\n              rejectPromise();\r\n            } else {\r\n              signal.addEventListener(\"abort\", (event) => {\r\n                rejectPromise();\r\n              });\r\n            }\r\n          }\r\n        });\r\n        while (Object.keys(encoder2.deferred).length > 0) {\r\n          for (const [deferredId, deferred] of Object.entries(\r\n            encoder2.deferred\r\n          )) {\r\n            if (seenPromises.has(deferred)) continue;\r\n            seenPromises.add(\r\n              // biome-ignore lint/suspicious/noAssignInExpressions: <explanation>\r\n              encoder2.deferred[Number(deferredId)] = Promise.race([\r\n                racePromise,\r\n                deferred\r\n              ]).then(\r\n                (resolved) => {\r\n                  const id2 = flatten.call(encoder2, resolved);\r\n                  if (Array.isArray(id2)) {\r\n                    controller.enqueue(\r\n                      textEncoder.encode(\r\n                        `${TYPE_PROMISE}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\r\n`\r\n                      )\r\n                    );\r\n                    encoder2.index++;\r\n                    lastSentIndex++;\r\n                  } else if (id2 < 0) {\r\n                    controller.enqueue(\r\n                      textEncoder.encode(\r\n                        `${TYPE_PROMISE}${deferredId}:${id2}\r\n`\r\n                      )\r\n                    );\r\n                  } else {\r\n                    const values = encoder2.stringified.slice(lastSentIndex + 1).join(\",\");\r\n                    controller.enqueue(\r\n                      textEncoder.encode(\r\n                        `${TYPE_PROMISE}${deferredId}:[${values}]\r\n`\r\n                      )\r\n                    );\r\n                    lastSentIndex = encoder2.stringified.length - 1;\r\n                  }\r\n                },\r\n                (reason) => {\r\n                  if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\r\n                    reason = new Error(\"An unknown error occurred\");\r\n                  }\r\n                  const id2 = flatten.call(encoder2, reason);\r\n                  if (Array.isArray(id2)) {\r\n                    controller.enqueue(\r\n                      textEncoder.encode(\r\n                        `${TYPE_ERROR}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\r\n`\r\n                      )\r\n                    );\r\n                    encoder2.index++;\r\n                    lastSentIndex++;\r\n                  } else if (id2 < 0) {\r\n                    controller.enqueue(\r\n                      textEncoder.encode(`${TYPE_ERROR}${deferredId}:${id2}\r\n`)\r\n                    );\r\n                  } else {\r\n                    const values = encoder2.stringified.slice(lastSentIndex + 1).join(\",\");\r\n                    controller.enqueue(\r\n                      textEncoder.encode(\r\n                        `${TYPE_ERROR}${deferredId}:[${values}]\r\n`\r\n                      )\r\n                    );\r\n                    lastSentIndex = encoder2.stringified.length - 1;\r\n                  }\r\n                }\r\n              ).finally(() => {\r\n                delete encoder2.deferred[Number(deferredId)];\r\n              })\r\n            );\r\n          }\r\n          await Promise.race(Object.values(encoder2.deferred));\r\n        }\r\n        raceDone();\r\n      }\r\n      await Promise.all(Object.values(encoder2.deferred));\r\n      controller.close();\r\n    }\r\n  });\r\n  return readable;\r\n}\r\n\r\n// lib/dom/ssr/data.ts\r\nasync function createRequestInit(request) {\r\n  let init = { signal: request.signal };\r\n  if (request.method !== \"GET\") {\r\n    init.method = request.method;\r\n    let contentType = request.headers.get(\"Content-Type\");\r\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\r\n      init.headers = { \"Content-Type\": contentType };\r\n      init.body = JSON.stringify(await request.json());\r\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\r\n      init.headers = { \"Content-Type\": contentType };\r\n      init.body = await request.text();\r\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\r\n      init.body = new URLSearchParams(await request.text());\r\n    } else {\r\n      init.body = await request.formData();\r\n    }\r\n  }\r\n  return init;\r\n}\r\n\r\n// lib/dom/ssr/single-fetch.tsx\r\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\r\nvar SingleFetchNoResultError = class extends Error {\r\n};\r\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\r\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205]);\r\nfunction StreamTransfer({\r\n  context,\r\n  identifier,\r\n  reader,\r\n  textDecoder,\r\n  nonce\r\n}) {\r\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\r\n    return null;\r\n  }\r\n  if (!context.renderMeta.streamCache) {\r\n    context.renderMeta.streamCache = {};\r\n  }\r\n  let { streamCache } = context.renderMeta;\r\n  let promise = streamCache[identifier];\r\n  if (!promise) {\r\n    promise = streamCache[identifier] = reader.read().then((result) => {\r\n      streamCache[identifier].result = {\r\n        done: result.done,\r\n        value: textDecoder.decode(result.value, { stream: true })\r\n      };\r\n    }).catch((e) => {\r\n      streamCache[identifier].error = e;\r\n    });\r\n  }\r\n  if (promise.error) {\r\n    throw promise.error;\r\n  }\r\n  if (promise.result === void 0) {\r\n    throw promise;\r\n  }\r\n  let { done, value } = promise.result;\r\n  let scriptTag = value ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    \"script\",\r\n    {\r\n      nonce,\r\n      dangerouslySetInnerHTML: {\r\n        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(\r\n          JSON.stringify(value)\r\n        )});`\r\n      }\r\n    }\r\n  ) : null;\r\n  if (done) {\r\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, scriptTag, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n      \"script\",\r\n      {\r\n        nonce,\r\n        dangerouslySetInnerHTML: {\r\n          __html: `window.__reactRouterContext.streamController.close();`\r\n        }\r\n      }\r\n    ));\r\n  } else {\r\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, scriptTag, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Suspense, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n      StreamTransfer,\r\n      {\r\n        context,\r\n        identifier: identifier + 1,\r\n        reader,\r\n        textDecoder,\r\n        nonce\r\n      }\r\n    )));\r\n  }\r\n}\r\nfunction getTurboStreamSingleFetchDataStrategy(getRouter, manifest, routeModules, ssr, basename) {\r\n  let dataStrategy = getSingleFetchDataStrategyImpl(\r\n    getRouter,\r\n    (match) => {\r\n      let manifestRoute = manifest.routes[match.route.id];\r\n      invariant2(manifestRoute, \"Route not found in manifest\");\r\n      let routeModule = routeModules[match.route.id];\r\n      return {\r\n        hasLoader: manifestRoute.hasLoader,\r\n        hasClientLoader: manifestRoute.hasClientLoader,\r\n        hasShouldRevalidate: Boolean(routeModule?.shouldRevalidate)\r\n      };\r\n    },\r\n    fetchAndDecodeViaTurboStream,\r\n    ssr,\r\n    basename\r\n  );\r\n  return async (args) => args.unstable_runClientMiddleware(dataStrategy);\r\n}\r\nfunction getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename) {\r\n  return async (args) => {\r\n    let { request, matches, fetcherKey } = args;\r\n    let router = getRouter();\r\n    if (request.method !== \"GET\") {\r\n      return singleFetchActionStrategy(args, fetchAndDecode, basename);\r\n    }\r\n    let foundRevalidatingServerLoader = matches.some((m) => {\r\n      let { hasLoader, hasClientLoader } = getRouteInfo(m);\r\n      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;\r\n    });\r\n    if (!ssr && !foundRevalidatingServerLoader) {\r\n      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);\r\n    }\r\n    if (fetcherKey) {\r\n      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);\r\n    }\r\n    return singleFetchLoaderNavigationStrategy(\r\n      args,\r\n      router,\r\n      getRouteInfo,\r\n      fetchAndDecode,\r\n      ssr,\r\n      basename\r\n    );\r\n  };\r\n}\r\nasync function singleFetchActionStrategy(args, fetchAndDecode, basename) {\r\n  let actionMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\r\n  invariant2(actionMatch, \"No action match found\");\r\n  let actionStatus = void 0;\r\n  let result = await actionMatch.resolve(async (handler) => {\r\n    let result2 = await handler(async () => {\r\n      let { data: data2, status } = await fetchAndDecode(args, basename, [\r\n        actionMatch.route.id\r\n      ]);\r\n      actionStatus = status;\r\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\r\n    });\r\n    return result2;\r\n  });\r\n  if (isResponse(result.result) || isRouteErrorResponse(result.result) || isDataWithResponseInit(result.result)) {\r\n    return { [actionMatch.route.id]: result };\r\n  }\r\n  return {\r\n    [actionMatch.route.id]: {\r\n      type: result.type,\r\n      result: data(result.result, actionStatus)\r\n    }\r\n  };\r\n}\r\nasync function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {\r\n  let matchesToLoad = args.matches.filter(\r\n    (m) => m.unstable_shouldCallHandler()\r\n  );\r\n  let results = {};\r\n  await Promise.all(\r\n    matchesToLoad.map(\r\n      (m) => m.resolve(async (handler) => {\r\n        try {\r\n          let { hasClientLoader } = getRouteInfo(m);\r\n          let routeId = m.route.id;\r\n          let result = hasClientLoader ? await handler(async () => {\r\n            let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\r\n            return unwrapSingleFetchResult(data2, routeId);\r\n          }) : await handler();\r\n          results[m.route.id] = { type: \"data\", result };\r\n        } catch (e) {\r\n          results[m.route.id] = { type: \"error\", result: e };\r\n        }\r\n      })\r\n    )\r\n  );\r\n  return results;\r\n}\r\nasync function singleFetchLoaderNavigationStrategy(args, router, getRouteInfo, fetchAndDecode, ssr, basename) {\r\n  let routesParams = /* @__PURE__ */ new Set();\r\n  let foundOptOutRoute = false;\r\n  let routeDfds = args.matches.map(() => createDeferred2());\r\n  let singleFetchDfd = createDeferred2();\r\n  let results = {};\r\n  let resolvePromise = Promise.all(\r\n    args.matches.map(\r\n      async (m, i) => m.resolve(async (handler) => {\r\n        routeDfds[i].resolve();\r\n        let routeId = m.route.id;\r\n        let { hasLoader, hasClientLoader, hasShouldRevalidate } = getRouteInfo(m);\r\n        let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;\r\n        let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);\r\n        if (!shouldCall) {\r\n          foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null && // This is a revalidation,\r\n          hasLoader && // for a route with a server loader,\r\n          hasShouldRevalidate === true);\r\n          return;\r\n        }\r\n        if (hasClientLoader) {\r\n          if (hasLoader) {\r\n            foundOptOutRoute = true;\r\n          }\r\n          try {\r\n            let result = await handler(async () => {\r\n              let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\r\n              return unwrapSingleFetchResult(data2, routeId);\r\n            });\r\n            results[routeId] = { type: \"data\", result };\r\n          } catch (e) {\r\n            results[routeId] = { type: \"error\", result: e };\r\n          }\r\n          return;\r\n        }\r\n        if (hasLoader) {\r\n          routesParams.add(routeId);\r\n        }\r\n        try {\r\n          let result = await handler(async () => {\r\n            let data2 = await singleFetchDfd.promise;\r\n            return unwrapSingleFetchResult(data2, routeId);\r\n          });\r\n          results[routeId] = { type: \"data\", result };\r\n        } catch (e) {\r\n          results[routeId] = { type: \"error\", result: e };\r\n        }\r\n      })\r\n    )\r\n  );\r\n  await Promise.all(routeDfds.map((d) => d.promise));\r\n  let isInitialLoad = !router.state.initialized && router.state.navigation.state === \"idle\";\r\n  if ((isInitialLoad || routesParams.size === 0) && !window.__reactRouterHdrActive) {\r\n    singleFetchDfd.resolve({ routes: {} });\r\n  } else {\r\n    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;\r\n    try {\r\n      let data2 = await fetchAndDecode(args, basename, targetRoutes);\r\n      singleFetchDfd.resolve(data2.data);\r\n    } catch (e) {\r\n      singleFetchDfd.reject(e);\r\n    }\r\n  }\r\n  await resolvePromise;\r\n  await bubbleMiddlewareErrors(\r\n    singleFetchDfd.promise,\r\n    args.matches,\r\n    routesParams,\r\n    results\r\n  );\r\n  return results;\r\n}\r\nasync function bubbleMiddlewareErrors(singleFetchPromise, matches, routesParams, results) {\r\n  try {\r\n    let middlewareError;\r\n    let fetchedData = await singleFetchPromise;\r\n    if (\"routes\" in fetchedData) {\r\n      for (let match of matches) {\r\n        if (match.route.id in fetchedData.routes) {\r\n          let routeResult = fetchedData.routes[match.route.id];\r\n          if (\"error\" in routeResult) {\r\n            middlewareError = routeResult.error;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (middlewareError !== void 0) {\r\n      Array.from(routesParams.values()).forEach((routeId) => {\r\n        if (results[routeId].result instanceof SingleFetchNoResultError) {\r\n          results[routeId].result = middlewareError;\r\n        }\r\n      });\r\n    }\r\n  } catch (e) {\r\n  }\r\n}\r\nasync function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {\r\n  let fetcherMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\r\n  invariant2(fetcherMatch, \"No fetcher match found\");\r\n  let routeId = fetcherMatch.route.id;\r\n  let result = await fetcherMatch.resolve(\r\n    async (handler) => handler(async () => {\r\n      let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\r\n      return unwrapSingleFetchResult(data2, routeId);\r\n    })\r\n  );\r\n  return { [fetcherMatch.route.id]: result };\r\n}\r\nfunction stripIndexParam(url) {\r\n  let indexValues = url.searchParams.getAll(\"index\");\r\n  url.searchParams.delete(\"index\");\r\n  let indexValuesToKeep = [];\r\n  for (let indexValue of indexValues) {\r\n    if (indexValue) {\r\n      indexValuesToKeep.push(indexValue);\r\n    }\r\n  }\r\n  for (let toKeep of indexValuesToKeep) {\r\n    url.searchParams.append(\"index\", toKeep);\r\n  }\r\n  return url;\r\n}\r\nfunction singleFetchUrl(reqUrl, basename) {\r\n  let url = typeof reqUrl === \"string\" ? new URL(\r\n    reqUrl,\r\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\r\n    // don't assume window is available\r\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\r\n  ) : reqUrl;\r\n  if (url.pathname === \"/\") {\r\n    url.pathname = \"_root.data\";\r\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\r\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.data`;\r\n  } else {\r\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\r\n  }\r\n  return url;\r\n}\r\nasync function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {\r\n  let { request } = args;\r\n  let url = singleFetchUrl(request.url, basename);\r\n  if (request.method === \"GET\") {\r\n    url = stripIndexParam(url);\r\n    if (targetRoutes) {\r\n      url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\r\n    }\r\n  }\r\n  let res = await fetch(url, await createRequestInit(request));\r\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\r\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\r\n  }\r\n  if (res.status === 204 && res.headers.has(\"X-Remix-Redirect\")) {\r\n    return {\r\n      status: SINGLE_FETCH_REDIRECT_STATUS,\r\n      data: {\r\n        redirect: {\r\n          redirect: res.headers.get(\"X-Remix-Redirect\"),\r\n          status: Number(res.headers.get(\"X-Remix-Status\") || \"302\"),\r\n          revalidate: res.headers.get(\"X-Remix-Revalidate\") === \"true\",\r\n          reload: res.headers.get(\"X-Remix-Reload-Document\") === \"true\",\r\n          replace: res.headers.get(\"X-Remix-Replace\") === \"true\"\r\n        }\r\n      }\r\n    };\r\n  }\r\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\r\n    let routes = {};\r\n    if (targetRoutes && request.method !== \"GET\") {\r\n      routes[targetRoutes[0]] = { data: void 0 };\r\n    }\r\n    return {\r\n      status: res.status,\r\n      data: { routes }\r\n    };\r\n  }\r\n  invariant2(res.body, \"No response body to decode\");\r\n  try {\r\n    let decoded = await decodeViaTurboStream(res.body, window);\r\n    let data2;\r\n    if (request.method === \"GET\") {\r\n      let typed = decoded.value;\r\n      if (SingleFetchRedirectSymbol in typed) {\r\n        data2 = { redirect: typed[SingleFetchRedirectSymbol] };\r\n      } else {\r\n        data2 = { routes: typed };\r\n      }\r\n    } else {\r\n      let typed = decoded.value;\r\n      let routeId = targetRoutes?.[0];\r\n      invariant2(routeId, \"No routeId found for single fetch call decoding\");\r\n      if (\"redirect\" in typed) {\r\n        data2 = { redirect: typed };\r\n      } else {\r\n        data2 = { routes: { [routeId]: typed } };\r\n      }\r\n    }\r\n    return { status: res.status, data: data2 };\r\n  } catch (e) {\r\n    throw new Error(\"Unable to decode turbo-stream response\");\r\n  }\r\n}\r\nfunction decodeViaTurboStream(body, global2) {\r\n  return decode(body, {\r\n    plugins: [\r\n      (type, ...rest) => {\r\n        if (type === \"SanitizedError\") {\r\n          let [name, message, stack] = rest;\r\n          let Constructor = Error;\r\n          if (name && name in global2 && typeof global2[name] === \"function\") {\r\n            Constructor = global2[name];\r\n          }\r\n          let error = new Constructor(message);\r\n          error.stack = stack;\r\n          return { value: error };\r\n        }\r\n        if (type === \"ErrorResponse\") {\r\n          let [data2, status, statusText] = rest;\r\n          return {\r\n            value: new ErrorResponseImpl(status, statusText, data2)\r\n          };\r\n        }\r\n        if (type === \"SingleFetchRedirect\") {\r\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\r\n        }\r\n        if (type === \"SingleFetchClassInstance\") {\r\n          return { value: rest[0] };\r\n        }\r\n        if (type === \"SingleFetchFallback\") {\r\n          return { value: void 0 };\r\n        }\r\n      }\r\n    ]\r\n  });\r\n}\r\nfunction unwrapSingleFetchResult(result, routeId) {\r\n  if (\"redirect\" in result) {\r\n    let {\r\n      redirect: location,\r\n      revalidate,\r\n      reload,\r\n      replace: replace2,\r\n      status\r\n    } = result.redirect;\r\n    throw redirect(location, {\r\n      status,\r\n      headers: {\r\n        // Three R's of redirecting (lol Veep)\r\n        ...revalidate ? { \"X-Remix-Revalidate\": \"yes\" } : null,\r\n        ...reload ? { \"X-Remix-Reload-Document\": \"yes\" } : null,\r\n        ...replace2 ? { \"X-Remix-Replace\": \"yes\" } : null\r\n      }\r\n    });\r\n  }\r\n  let routeResult = result.routes[routeId];\r\n  if (routeResult == null) {\r\n    throw new SingleFetchNoResultError(\r\n      `No result found for routeId \"${routeId}\"`\r\n    );\r\n  } else if (\"error\" in routeResult) {\r\n    throw routeResult.error;\r\n  } else if (\"data\" in routeResult) {\r\n    return routeResult.data;\r\n  } else {\r\n    throw new Error(`Invalid response found for routeId \"${routeId}\"`);\r\n  }\r\n}\r\nfunction createDeferred2() {\r\n  let resolve;\r\n  let reject;\r\n  let promise = new Promise((res, rej) => {\r\n    resolve = async (val) => {\r\n      res(val);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n    reject = async (error) => {\r\n      rej(error);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n  });\r\n  return {\r\n    promise,\r\n    //@ts-ignore\r\n    resolve,\r\n    //@ts-ignore\r\n    reject\r\n  };\r\n}\r\n\r\n// lib/dom/ssr/fog-of-war.ts\r\n\r\n\r\n// lib/dom/ssr/routes.tsx\r\n\r\n\r\n// lib/dom/ssr/errorBoundaries.tsx\r\n\r\nvar RemixErrorBoundary = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: props.error || null, location: props.location };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { error };\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (state.location !== props.location) {\r\n      return { error: props.error || null, location: props.location };\r\n    }\r\n    return { error: props.error || state.error, location: state.location };\r\n  }\r\n  render() {\r\n    if (this.state.error) {\r\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n        RemixRootDefaultErrorBoundary,\r\n        {\r\n          error: this.state.error,\r\n          isOutsideRemixApp: true\r\n        }\r\n      );\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n};\r\nfunction RemixRootDefaultErrorBoundary({\r\n  error,\r\n  isOutsideRemixApp\r\n}) {\r\n  console.error(error);\r\n  let heyDeveloper = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    \"script\",\r\n    {\r\n      dangerouslySetInnerHTML: {\r\n        __html: `\r\n        console.log(\r\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://reactrouter.com/how-to/error-boundary for more information.\"\r\n        );\r\n      `\r\n      }\r\n    }\r\n  );\r\n  if (isRouteErrorResponse(error)) {\r\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), ENABLE_DEV_WARNINGS ? heyDeveloper : null);\r\n  }\r\n  let errorInstance;\r\n  if (error instanceof Error) {\r\n    errorInstance = error;\r\n  } else {\r\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\r\n    errorInstance = new Error(errorString);\r\n  }\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    BoundaryShell,\r\n    {\r\n      title: \"Application Error!\",\r\n      isOutsideRemixApp\r\n    },\r\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\r\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n      \"pre\",\r\n      {\r\n        style: {\r\n          padding: \"2rem\",\r\n          background: \"hsla(10, 50%, 50%, 0.1)\",\r\n          color: \"red\",\r\n          overflow: \"auto\"\r\n        }\r\n      },\r\n      errorInstance.stack\r\n    ),\r\n    heyDeveloper\r\n  );\r\n}\r\nfunction BoundaryShell({\r\n  title,\r\n  renderScripts,\r\n  isOutsideRemixApp,\r\n  children\r\n}) {\r\n  let { routeModules } = useFrameworkContext();\r\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\r\n    return children;\r\n  }\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"head\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    \"meta\",\r\n    {\r\n      name: \"viewport\",\r\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\r\n    }\r\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", null, title)), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"body\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Scripts, null) : null)));\r\n}\r\n\r\n// lib/dom/ssr/fallback.tsx\r\n\r\nfunction RemixRootDefaultHydrateFallback() {\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, ENABLE_DEV_WARNINGS ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    \"script\",\r\n    {\r\n      dangerouslySetInnerHTML: {\r\n        __html: `\r\n              console.log(\r\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\r\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\r\n                \"functions. Check out https://reactrouter.com/start/framework/route-module#hydratefallback \" +\r\n                \"for more information.\"\r\n              );\r\n            `\r\n      }\r\n    }\r\n  ) : null);\r\n}\r\n\r\n// lib/dom/ssr/routes.tsx\r\nfunction groupRoutesByParentId(manifest) {\r\n  let routes = {};\r\n  Object.values(manifest).forEach((route) => {\r\n    if (route) {\r\n      let parentId = route.parentId || \"\";\r\n      if (!routes[parentId]) {\r\n        routes[parentId] = [];\r\n      }\r\n      routes[parentId].push(route);\r\n    }\r\n  });\r\n  return routes;\r\n}\r\nfunction getRouteComponents(route, routeModule, isSpaMode) {\r\n  let Component4 = getRouteModuleComponent(routeModule);\r\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\r\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\r\n  if (route.id === \"root\" && routeModule.Layout) {\r\n    return {\r\n      ...Component4 ? {\r\n        element: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(routeModule.Layout, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component4, null))\r\n      } : { Component: Component4 },\r\n      ...ErrorBoundary ? {\r\n        errorElement: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(routeModule.Layout, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBoundary, null))\r\n      } : { ErrorBoundary },\r\n      ...HydrateFallback ? {\r\n        hydrateFallbackElement: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(routeModule.Layout, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(HydrateFallback, null))\r\n      } : { HydrateFallback }\r\n    };\r\n  }\r\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\r\n}\r\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {\r\n  return (routesByParentId[parentId] || []).map((route) => {\r\n    let routeModule = routeModules[route.id];\r\n    invariant2(\r\n      routeModule,\r\n      \"No `routeModule` available to create server routes\"\r\n    );\r\n    let dataRoute = {\r\n      ...getRouteComponents(route, routeModule, isSpaMode),\r\n      caseSensitive: route.caseSensitive,\r\n      id: route.id,\r\n      index: route.index,\r\n      path: route.path,\r\n      handle: routeModule.handle,\r\n      // For SPA Mode, all routes are lazy except root.  However we tell the\r\n      // router root is also lazy here too since we don't need a full\r\n      // implementation - we just need a `lazy` prop to tell the RR rendering\r\n      // where to stop which is always at the root route in SPA mode\r\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\r\n      // For partial hydration rendering, we need to indicate when the route\r\n      // has a loader/clientLoader, but it won't ever be called during the static\r\n      // render, so just give it a no-op function so we can render down to the\r\n      // proper fallback\r\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\r\n      // We don't need middleware/action/shouldRevalidate on these routes since\r\n      // they're for a static render\r\n    };\r\n    let children = createServerRoutes(\r\n      manifest,\r\n      routeModules,\r\n      future,\r\n      isSpaMode,\r\n      route.id,\r\n      routesByParentId,\r\n      spaModeLazyPromise\r\n    );\r\n    if (children.length > 0) dataRoute.children = children;\r\n    return dataRoute;\r\n  });\r\n}\r\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\r\n  return createClientRoutes(\r\n    manifest,\r\n    routeModulesCache,\r\n    initialState,\r\n    ssr,\r\n    isSpaMode,\r\n    \"\",\r\n    groupRoutesByParentId(manifest),\r\n    needsRevalidation\r\n  );\r\n}\r\nfunction preventInvalidServerHandlerCall(type, route) {\r\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\r\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\r\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\r\n    console.error(msg);\r\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\r\n  }\r\n}\r\nfunction noActionDefinedError(type, routeId) {\r\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\r\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\r\n  console.error(msg);\r\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\r\n}\r\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\r\n  return (routesByParentId[parentId] || []).map((route) => {\r\n    let routeModule = routeModulesCache[route.id];\r\n    function fetchServerHandler(singleFetch) {\r\n      invariant2(\r\n        typeof singleFetch === \"function\",\r\n        \"No single fetch function available for route handler\"\r\n      );\r\n      return singleFetch();\r\n    }\r\n    function fetchServerLoader(singleFetch) {\r\n      if (!route.hasLoader) return Promise.resolve(null);\r\n      return fetchServerHandler(singleFetch);\r\n    }\r\n    function fetchServerAction(singleFetch) {\r\n      if (!route.hasAction) {\r\n        throw noActionDefinedError(\"action\", route.id);\r\n      }\r\n      return fetchServerHandler(singleFetch);\r\n    }\r\n    function prefetchModule(modulePath) {\r\n      import(\r\n        /* @vite-ignore */\r\n        /* webpackIgnore: true */\r\n        modulePath\r\n      );\r\n    }\r\n    function prefetchRouteModuleChunks(route2) {\r\n      if (route2.clientActionModule) {\r\n        prefetchModule(route2.clientActionModule);\r\n      }\r\n      if (route2.clientLoaderModule) {\r\n        prefetchModule(route2.clientLoaderModule);\r\n      }\r\n    }\r\n    async function prefetchStylesAndCallHandler(handler) {\r\n      let cachedModule = routeModulesCache[route.id];\r\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\r\n      try {\r\n        return handler();\r\n      } finally {\r\n        await linkPrefetchPromise;\r\n      }\r\n    }\r\n    let dataRoute = {\r\n      id: route.id,\r\n      index: route.index,\r\n      path: route.path\r\n    };\r\n    if (routeModule) {\r\n      Object.assign(dataRoute, {\r\n        ...dataRoute,\r\n        ...getRouteComponents(route, routeModule, isSpaMode),\r\n        unstable_middleware: routeModule.unstable_clientMiddleware,\r\n        handle: routeModule.handle,\r\n        shouldRevalidate: getShouldRevalidateFunction(\r\n          dataRoute.path,\r\n          routeModule,\r\n          route,\r\n          ssr,\r\n          needsRevalidation\r\n        )\r\n      });\r\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\r\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\r\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\r\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\r\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\r\n      dataRoute.loader = async ({ request, params, context }, singleFetch) => {\r\n        try {\r\n          let result = await prefetchStylesAndCallHandler(async () => {\r\n            invariant2(\r\n              routeModule,\r\n              \"No `routeModule` available for critical-route loader\"\r\n            );\r\n            if (!routeModule.clientLoader) {\r\n              return fetchServerLoader(singleFetch);\r\n            }\r\n            return routeModule.clientLoader({\r\n              request,\r\n              params,\r\n              context,\r\n              async serverLoader() {\r\n                preventInvalidServerHandlerCall(\"loader\", route);\r\n                if (isHydrationRequest) {\r\n                  if (hasInitialData) {\r\n                    return initialData;\r\n                  }\r\n                  if (hasInitialError) {\r\n                    throw initialError;\r\n                  }\r\n                }\r\n                return fetchServerLoader(singleFetch);\r\n              }\r\n            });\r\n          });\r\n          return result;\r\n        } finally {\r\n          isHydrationRequest = false;\r\n        }\r\n      };\r\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\r\n        route.id,\r\n        routeModule.clientLoader,\r\n        route.hasLoader,\r\n        isSpaMode\r\n      );\r\n      dataRoute.action = ({ request, params, context }, singleFetch) => {\r\n        return prefetchStylesAndCallHandler(async () => {\r\n          invariant2(\r\n            routeModule,\r\n            \"No `routeModule` available for critical-route action\"\r\n          );\r\n          if (!routeModule.clientAction) {\r\n            if (isSpaMode) {\r\n              throw noActionDefinedError(\"clientAction\", route.id);\r\n            }\r\n            return fetchServerAction(singleFetch);\r\n          }\r\n          return routeModule.clientAction({\r\n            request,\r\n            params,\r\n            context,\r\n            async serverAction() {\r\n              preventInvalidServerHandlerCall(\"action\", route);\r\n              return fetchServerAction(singleFetch);\r\n            }\r\n          });\r\n        });\r\n      };\r\n    } else {\r\n      if (!route.hasClientLoader) {\r\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\r\n          return fetchServerLoader(singleFetch);\r\n        });\r\n      }\r\n      if (!route.hasClientAction) {\r\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\r\n          if (isSpaMode) {\r\n            throw noActionDefinedError(\"clientAction\", route.id);\r\n          }\r\n          return fetchServerAction(singleFetch);\r\n        });\r\n      }\r\n      let lazyRoutePromise;\r\n      async function getLazyRoute() {\r\n        if (lazyRoutePromise) {\r\n          return await lazyRoutePromise;\r\n        }\r\n        lazyRoutePromise = (async () => {\r\n          if (route.clientLoaderModule || route.clientActionModule) {\r\n            await new Promise((resolve) => setTimeout(resolve, 0));\r\n          }\r\n          let routeModulePromise = loadRouteModuleWithBlockingLinks(\r\n            route,\r\n            routeModulesCache\r\n          );\r\n          prefetchRouteModuleChunks(route);\r\n          return await routeModulePromise;\r\n        })();\r\n        return await lazyRoutePromise;\r\n      }\r\n      dataRoute.lazy = {\r\n        loader: route.hasClientLoader ? async () => {\r\n          let { clientLoader } = route.clientLoaderModule ? await import(\r\n            /* @vite-ignore */\r\n            /* webpackIgnore: true */\r\n            route.clientLoaderModule\r\n          ) : await getLazyRoute();\r\n          invariant2(clientLoader, \"No `clientLoader` export found\");\r\n          return (args, singleFetch) => clientLoader({\r\n            ...args,\r\n            async serverLoader() {\r\n              preventInvalidServerHandlerCall(\"loader\", route);\r\n              return fetchServerLoader(singleFetch);\r\n            }\r\n          });\r\n        } : void 0,\r\n        action: route.hasClientAction ? async () => {\r\n          let clientActionPromise = route.clientActionModule ? import(\r\n            /* @vite-ignore */\r\n            /* webpackIgnore: true */\r\n            route.clientActionModule\r\n          ) : getLazyRoute();\r\n          prefetchRouteModuleChunks(route);\r\n          let { clientAction } = await clientActionPromise;\r\n          invariant2(clientAction, \"No `clientAction` export found\");\r\n          return (args, singleFetch) => clientAction({\r\n            ...args,\r\n            async serverAction() {\r\n              preventInvalidServerHandlerCall(\"action\", route);\r\n              return fetchServerAction(singleFetch);\r\n            }\r\n          });\r\n        } : void 0,\r\n        unstable_middleware: route.hasClientMiddleware ? async () => {\r\n          let { unstable_clientMiddleware } = route.clientMiddlewareModule ? await import(\r\n            /* @vite-ignore */\r\n            /* webpackIgnore: true */\r\n            route.clientMiddlewareModule\r\n          ) : await getLazyRoute();\r\n          invariant2(\r\n            unstable_clientMiddleware,\r\n            \"No `unstable_clientMiddleware` export found\"\r\n          );\r\n          return unstable_clientMiddleware;\r\n        } : void 0,\r\n        shouldRevalidate: async () => {\r\n          let lazyRoute = await getLazyRoute();\r\n          return getShouldRevalidateFunction(\r\n            dataRoute.path,\r\n            lazyRoute,\r\n            route,\r\n            ssr,\r\n            needsRevalidation\r\n          );\r\n        },\r\n        handle: async () => (await getLazyRoute()).handle,\r\n        // No need to wrap these in layout since the root route is never\r\n        // loaded via route.lazy()\r\n        Component: async () => (await getLazyRoute()).Component,\r\n        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0\r\n      };\r\n    }\r\n    let children = createClientRoutes(\r\n      manifest,\r\n      routeModulesCache,\r\n      initialState,\r\n      ssr,\r\n      isSpaMode,\r\n      route.id,\r\n      routesByParentId,\r\n      needsRevalidation\r\n    );\r\n    if (children.length > 0) dataRoute.children = children;\r\n    return dataRoute;\r\n  });\r\n}\r\nfunction getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {\r\n  if (needsRevalidation) {\r\n    return wrapShouldRevalidateForHdr(\r\n      manifestRoute.id,\r\n      route.shouldRevalidate,\r\n      needsRevalidation\r\n    );\r\n  }\r\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\r\n    let myParams = path ? compilePath(path)[1].map((p) => p.paramName) : [];\r\n    const didParamsChange = (opts) => myParams.some((p) => opts.currentParams[p] !== opts.nextParams[p]);\r\n    if (route.shouldRevalidate) {\r\n      let fn = route.shouldRevalidate;\r\n      return (opts) => fn({\r\n        ...opts,\r\n        defaultShouldRevalidate: didParamsChange(opts)\r\n      });\r\n    } else {\r\n      return (opts) => didParamsChange(opts);\r\n    }\r\n  }\r\n  if (ssr && route.shouldRevalidate) {\r\n    let fn = route.shouldRevalidate;\r\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\r\n  }\r\n  return route.shouldRevalidate;\r\n}\r\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\r\n  let handledRevalidation = false;\r\n  return (arg) => {\r\n    if (!handledRevalidation) {\r\n      handledRevalidation = true;\r\n      return needsRevalidation.has(routeId);\r\n    }\r\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\r\n  };\r\n}\r\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\r\n  let routeModulePromise = loadRouteModule(route, routeModules);\r\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\r\n  let routeModule = await routeModulePromise;\r\n  await Promise.all([\r\n    prefetchRouteCssPromise,\r\n    prefetchStyleLinks(route, routeModule)\r\n  ]);\r\n  return {\r\n    Component: getRouteModuleComponent(routeModule),\r\n    ErrorBoundary: routeModule.ErrorBoundary,\r\n    unstable_clientMiddleware: routeModule.unstable_clientMiddleware,\r\n    clientAction: routeModule.clientAction,\r\n    clientLoader: routeModule.clientLoader,\r\n    handle: routeModule.handle,\r\n    links: routeModule.links,\r\n    meta: routeModule.meta,\r\n    shouldRevalidate: routeModule.shouldRevalidate\r\n  };\r\n}\r\nfunction getRouteModuleComponent(routeModule) {\r\n  if (routeModule.default == null) return void 0;\r\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\r\n  if (!isEmptyObject) {\r\n    return routeModule.default;\r\n  }\r\n}\r\nfunction shouldHydrateRouteLoader(routeId, clientLoader, hasLoader, isSpaMode) {\r\n  return isSpaMode && routeId !== \"root\" || clientLoader != null && (clientLoader.hydrate === true || hasLoader !== true);\r\n}\r\n\r\n// lib/dom/ssr/fog-of-war.ts\r\nvar nextPaths = /* @__PURE__ */ new Set();\r\nvar discoveredPathsMaxSize = 1e3;\r\nvar discoveredPaths = /* @__PURE__ */ new Set();\r\nvar URL_LIMIT = 7680;\r\nfunction isFogOfWarEnabled(routeDiscovery, ssr) {\r\n  return routeDiscovery.mode === \"lazy\" && ssr === true;\r\n}\r\nfunction getPartialManifest({ sri, ...manifest }, router) {\r\n  let routeIds = new Set(router.state.matches.map((m) => m.route.id));\r\n  let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\r\n  let paths = [\"/\"];\r\n  segments.pop();\r\n  while (segments.length > 0) {\r\n    paths.push(`/${segments.join(\"/\")}`);\r\n    segments.pop();\r\n  }\r\n  paths.forEach((path) => {\r\n    let matches = matchRoutes(router.routes, path, router.basename);\r\n    if (matches) {\r\n      matches.forEach((m) => routeIds.add(m.route.id));\r\n    }\r\n  });\r\n  let initialRoutes = [...routeIds].reduce(\r\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\r\n    {}\r\n  );\r\n  return {\r\n    ...manifest,\r\n    routes: initialRoutes,\r\n    sri: sri ? true : void 0\r\n  };\r\n}\r\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, routeDiscovery, isSpaMode, basename) {\r\n  if (!isFogOfWarEnabled(routeDiscovery, ssr)) {\r\n    return void 0;\r\n  }\r\n  return async ({ path, patch, signal, fetcherKey }) => {\r\n    if (discoveredPaths.has(path)) {\r\n      return;\r\n    }\r\n    await fetchAndApplyManifestPatches(\r\n      [path],\r\n      fetcherKey ? window.location.href : path,\r\n      manifest,\r\n      routeModules,\r\n      ssr,\r\n      isSpaMode,\r\n      basename,\r\n      routeDiscovery.manifestPath,\r\n      patch,\r\n      signal\r\n    );\r\n  };\r\n}\r\nfunction useFogOFWarDiscovery(router, manifest, routeModules, ssr, routeDiscovery, isSpaMode) {\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    if (!isFogOfWarEnabled(routeDiscovery, ssr) || // @ts-expect-error - TS doesn't know about this yet\r\n    window.navigator?.connection?.saveData === true) {\r\n      return;\r\n    }\r\n    function registerElement(el) {\r\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\r\n      if (!path) {\r\n        return;\r\n      }\r\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\r\n      if (!discoveredPaths.has(pathname)) {\r\n        nextPaths.add(pathname);\r\n      }\r\n    }\r\n    async function fetchPatches() {\r\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\r\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\r\n        if (discoveredPaths.has(path)) {\r\n          nextPaths.delete(path);\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      if (lazyPaths.length === 0) {\r\n        return;\r\n      }\r\n      try {\r\n        await fetchAndApplyManifestPatches(\r\n          lazyPaths,\r\n          null,\r\n          manifest,\r\n          routeModules,\r\n          ssr,\r\n          isSpaMode,\r\n          router.basename,\r\n          routeDiscovery.manifestPath,\r\n          router.patchRoutes\r\n        );\r\n      } catch (e) {\r\n        console.error(\"Failed to fetch manifest patches\", e);\r\n      }\r\n    }\r\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\r\n    fetchPatches();\r\n    let observer = new MutationObserver(() => debouncedFetchPatches());\r\n    observer.observe(document.documentElement, {\r\n      subtree: true,\r\n      childList: true,\r\n      attributes: true,\r\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\r\n    });\r\n    return () => observer.disconnect();\r\n  }, [ssr, isSpaMode, manifest, routeModules, router, routeDiscovery]);\r\n}\r\nfunction getManifestPath(_manifestPath, basename) {\r\n  let manifestPath = _manifestPath || \"/__manifest\";\r\n  if (basename == null) {\r\n    return manifestPath;\r\n  }\r\n  return `${basename}${manifestPath}`.replace(/\\/+/g, \"/\");\r\n}\r\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\r\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, manifestPath, patchRoutes, signal) {\r\n  let url = new URL(\r\n    getManifestPath(manifestPath, basename),\r\n    window.location.origin\r\n  );\r\n  paths.sort().forEach((path) => url.searchParams.append(\"p\", path));\r\n  url.searchParams.set(\"version\", manifest.version);\r\n  if (url.toString().length > URL_LIMIT) {\r\n    nextPaths.clear();\r\n    return;\r\n  }\r\n  let serverPatches;\r\n  try {\r\n    let res = await fetch(url, { signal });\r\n    if (!res.ok) {\r\n      throw new Error(`${res.status} ${res.statusText}`);\r\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\r\n      if (!errorReloadPath) {\r\n        console.warn(\r\n          \"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\"\r\n        );\r\n        return;\r\n      }\r\n      if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\r\n        console.error(\r\n          \"Unable to discover routes due to manifest version mismatch.\"\r\n        );\r\n        return;\r\n      }\r\n      sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\r\n      window.location.href = errorReloadPath;\r\n      console.warn(\"Detected manifest version mismatch, reloading...\");\r\n      await new Promise(() => {\r\n      });\r\n    } else if (res.status >= 400) {\r\n      throw new Error(await res.text());\r\n    }\r\n    sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\r\n    serverPatches = await res.json();\r\n  } catch (e) {\r\n    if (signal?.aborted) return;\r\n    throw e;\r\n  }\r\n  let knownRoutes = new Set(Object.keys(manifest.routes));\r\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\r\n    if (route && !knownRoutes.has(route.id)) {\r\n      acc[route.id] = route;\r\n    }\r\n    return acc;\r\n  }, {});\r\n  Object.assign(manifest.routes, patches);\r\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\r\n  let parentIds = /* @__PURE__ */ new Set();\r\n  Object.values(patches).forEach((patch) => {\r\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\r\n      parentIds.add(patch.parentId);\r\n    }\r\n  });\r\n  parentIds.forEach(\r\n    (parentId) => patchRoutes(\r\n      parentId || null,\r\n      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)\r\n    )\r\n  );\r\n}\r\nfunction addToFifoQueue(path, queue) {\r\n  if (queue.size >= discoveredPathsMaxSize) {\r\n    let first = queue.values().next().value;\r\n    queue.delete(first);\r\n  }\r\n  queue.add(path);\r\n}\r\nfunction debounce(callback, wait) {\r\n  let timeoutId;\r\n  return (...args) => {\r\n    window.clearTimeout(timeoutId);\r\n    timeoutId = window.setTimeout(() => callback(...args), wait);\r\n  };\r\n}\r\n\r\n// lib/dom/ssr/components.tsx\r\nfunction useDataRouterContext2() {\r\n  let context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);\r\n  invariant2(\r\n    context,\r\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\r\n  );\r\n  return context;\r\n}\r\nfunction useDataRouterStateContext() {\r\n  let context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterStateContext);\r\n  invariant2(\r\n    context,\r\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\r\n  );\r\n  return context;\r\n}\r\nvar FrameworkContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0);\r\nFrameworkContext.displayName = \"FrameworkContext\";\r\nfunction useFrameworkContext() {\r\n  let context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FrameworkContext);\r\n  invariant2(\r\n    context,\r\n    \"You must render this element inside a <HydratedRouter> element\"\r\n  );\r\n  return context;\r\n}\r\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\r\n  let frameworkContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FrameworkContext);\r\n  let [maybePrefetch, setMaybePrefetch] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\r\n  let [shouldPrefetch, setShouldPrefetch] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\r\n  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;\r\n  let ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    if (prefetch === \"render\") {\r\n      setShouldPrefetch(true);\r\n    }\r\n    if (prefetch === \"viewport\") {\r\n      let callback = (entries) => {\r\n        entries.forEach((entry) => {\r\n          setShouldPrefetch(entry.isIntersecting);\r\n        });\r\n      };\r\n      let observer = new IntersectionObserver(callback, { threshold: 0.5 });\r\n      if (ref.current) observer.observe(ref.current);\r\n      return () => {\r\n        observer.disconnect();\r\n      };\r\n    }\r\n  }, [prefetch]);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    if (maybePrefetch) {\r\n      let id = setTimeout(() => {\r\n        setShouldPrefetch(true);\r\n      }, 100);\r\n      return () => {\r\n        clearTimeout(id);\r\n      };\r\n    }\r\n  }, [maybePrefetch]);\r\n  let setIntent = () => {\r\n    setMaybePrefetch(true);\r\n  };\r\n  let cancelIntent = () => {\r\n    setMaybePrefetch(false);\r\n    setShouldPrefetch(false);\r\n  };\r\n  if (!frameworkContext) {\r\n    return [false, ref, {}];\r\n  }\r\n  if (prefetch !== \"intent\") {\r\n    return [shouldPrefetch, ref, {}];\r\n  }\r\n  return [\r\n    shouldPrefetch,\r\n    ref,\r\n    {\r\n      onFocus: composeEventHandlers(onFocus, setIntent),\r\n      onBlur: composeEventHandlers(onBlur, cancelIntent),\r\n      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\r\n      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\r\n      onTouchStart: composeEventHandlers(onTouchStart, setIntent)\r\n    }\r\n  ];\r\n}\r\nfunction composeEventHandlers(theirHandler, ourHandler) {\r\n  return (event) => {\r\n    theirHandler && theirHandler(event);\r\n    if (!event.defaultPrevented) {\r\n      ourHandler(event);\r\n    }\r\n  };\r\n}\r\nfunction getActiveMatches(matches, errors, isSpaMode) {\r\n  if (isSpaMode && !isHydrated) {\r\n    return [matches[0]];\r\n  }\r\n  if (errors) {\r\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\r\n    return matches.slice(0, errorIdx + 1);\r\n  }\r\n  return matches;\r\n}\r\nfunction Links() {\r\n  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();\r\n  let { errors, matches: routerMatches } = useDataRouterStateContext();\r\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\r\n  let keyedLinks = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n    () => getKeyedLinksForMatches(matches, routeModules, manifest),\r\n    [matches, routeModules, manifest]\r\n  );\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, typeof criticalCss === \"string\" ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"style\", { dangerouslySetInnerHTML: { __html: criticalCss } }) : null, typeof criticalCss === \"object\" ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", { rel: \"stylesheet\", href: criticalCss.href }) : null, keyedLinks.map(\r\n    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PrefetchPageLinks, { key, ...link }) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", { key, ...link })\r\n  ));\r\n}\r\nfunction PrefetchPageLinks({\r\n  page,\r\n  ...dataLinkProps\r\n}) {\r\n  let { router } = useDataRouterContext2();\r\n  let matches = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n    () => matchRoutes(router.routes, page, router.basename),\r\n    [router.routes, page, router.basename]\r\n  );\r\n  if (!matches) {\r\n    return null;\r\n  }\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PrefetchPageLinksImpl, { page, matches, ...dataLinkProps });\r\n}\r\nfunction useKeyedPrefetchLinks(matches) {\r\n  let { manifest, routeModules } = useFrameworkContext();\r\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    let interrupted = false;\r\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(\r\n      (links) => {\r\n        if (!interrupted) {\r\n          setKeyedPrefetchLinks(links);\r\n        }\r\n      }\r\n    );\r\n    return () => {\r\n      interrupted = true;\r\n    };\r\n  }, [matches, manifest, routeModules]);\r\n  return keyedPrefetchLinks;\r\n}\r\nfunction PrefetchPageLinksImpl({\r\n  page,\r\n  matches: nextMatches,\r\n  ...linkProps\r\n}) {\r\n  let location = useLocation();\r\n  let { manifest, routeModules } = useFrameworkContext();\r\n  let { basename } = useDataRouterContext2();\r\n  let { loaderData, matches } = useDataRouterStateContext();\r\n  let newMatchesForData = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n    () => getNewMatchesForLinks(\r\n      page,\r\n      nextMatches,\r\n      matches,\r\n      manifest,\r\n      location,\r\n      \"data\"\r\n    ),\r\n    [page, nextMatches, matches, manifest, location]\r\n  );\r\n  let newMatchesForAssets = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n    () => getNewMatchesForLinks(\r\n      page,\r\n      nextMatches,\r\n      matches,\r\n      manifest,\r\n      location,\r\n      \"assets\"\r\n    ),\r\n    [page, nextMatches, matches, manifest, location]\r\n  );\r\n  let dataHrefs = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\r\n    if (page === location.pathname + location.search + location.hash) {\r\n      return [];\r\n    }\r\n    let routesParams = /* @__PURE__ */ new Set();\r\n    let foundOptOutRoute = false;\r\n    nextMatches.forEach((m) => {\r\n      let manifestRoute = manifest.routes[m.route.id];\r\n      if (!manifestRoute || !manifestRoute.hasLoader) {\r\n        return;\r\n      }\r\n      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {\r\n        foundOptOutRoute = true;\r\n      } else if (manifestRoute.hasClientLoader) {\r\n        foundOptOutRoute = true;\r\n      } else {\r\n        routesParams.add(m.route.id);\r\n      }\r\n    });\r\n    if (routesParams.size === 0) {\r\n      return [];\r\n    }\r\n    let url = singleFetchUrl(page, basename);\r\n    if (foundOptOutRoute && routesParams.size > 0) {\r\n      url.searchParams.set(\r\n        \"_routes\",\r\n        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\r\n      );\r\n    }\r\n    return [url.pathname + url.search];\r\n  }, [\r\n    basename,\r\n    loaderData,\r\n    location,\r\n    manifest,\r\n    newMatchesForData,\r\n    nextMatches,\r\n    page,\r\n    routeModules\r\n  ]);\r\n  let moduleHrefs = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n    () => getModuleLinkHrefs(newMatchesForAssets, manifest),\r\n    [newMatchesForAssets, manifest]\r\n  );\r\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, dataHrefs.map((href2) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", { key: href2, rel: \"prefetch\", as: \"fetch\", href: href2, ...linkProps })), moduleHrefs.map((href2) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", { key: href2, rel: \"modulepreload\", href: href2, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (\r\n    // these don't spread `linkProps` because they are full link descriptors\r\n    // already with their own props\r\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", { key, ...link })\r\n  )));\r\n}\r\nfunction Meta() {\r\n  let { isSpaMode, routeModules } = useFrameworkContext();\r\n  let {\r\n    errors,\r\n    matches: routerMatches,\r\n    loaderData\r\n  } = useDataRouterStateContext();\r\n  let location = useLocation();\r\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\r\n  let error = null;\r\n  if (errors) {\r\n    error = errors[_matches[_matches.length - 1].route.id];\r\n  }\r\n  let meta = [];\r\n  let leafMeta = null;\r\n  let matches = [];\r\n  for (let i = 0; i < _matches.length; i++) {\r\n    let _match = _matches[i];\r\n    let routeId = _match.route.id;\r\n    let data2 = loaderData[routeId];\r\n    let params = _match.params;\r\n    let routeModule = routeModules[routeId];\r\n    let routeMeta = [];\r\n    let match = {\r\n      id: routeId,\r\n      data: data2,\r\n      meta: [],\r\n      params: _match.params,\r\n      pathname: _match.pathname,\r\n      handle: _match.route.handle,\r\n      error\r\n    };\r\n    matches[i] = match;\r\n    if (routeModule?.meta) {\r\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\r\n        data: data2,\r\n        params,\r\n        location,\r\n        matches,\r\n        error\r\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\r\n    } else if (leafMeta) {\r\n      routeMeta = [...leafMeta];\r\n    }\r\n    routeMeta = routeMeta || [];\r\n    if (!Array.isArray(routeMeta)) {\r\n      throw new Error(\r\n        \"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must return an array of meta objects.\\n\\nTo reference the meta function API, see https://remix.run/route/meta\"\r\n      );\r\n    }\r\n    match.meta = routeMeta;\r\n    matches[i] = match;\r\n    meta = [...routeMeta];\r\n    leafMeta = meta;\r\n  }\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, meta.flat().map((metaProps) => {\r\n    if (!metaProps) {\r\n      return null;\r\n    }\r\n    if (\"tagName\" in metaProps) {\r\n      let { tagName, ...rest } = metaProps;\r\n      if (!isValidMetaTag(tagName)) {\r\n        console.warn(\r\n          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`\r\n        );\r\n        return null;\r\n      }\r\n      let Comp = tagName;\r\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Comp, { key: JSON.stringify(rest), ...rest });\r\n    }\r\n    if (\"title\" in metaProps) {\r\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", { key: \"title\" }, String(metaProps.title));\r\n    }\r\n    if (\"charset\" in metaProps) {\r\n      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\r\n      delete metaProps.charset;\r\n    }\r\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\r\n      return typeof metaProps.charSet === \"string\" ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"meta\", { key: \"charSet\", charSet: metaProps.charSet }) : null;\r\n    }\r\n    if (\"script:ld+json\" in metaProps) {\r\n      try {\r\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\r\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n          \"script\",\r\n          {\r\n            key: `script:ld+json:${json}`,\r\n            type: \"application/ld+json\",\r\n            dangerouslySetInnerHTML: { __html: json }\r\n          }\r\n        );\r\n      } catch (err) {\r\n        return null;\r\n      }\r\n    }\r\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"meta\", { key: JSON.stringify(metaProps), ...metaProps });\r\n  }));\r\n}\r\nfunction isValidMetaTag(tagName) {\r\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\r\n}\r\nvar isHydrated = false;\r\nfunction Scripts(props) {\r\n  let {\r\n    manifest,\r\n    serverHandoffString,\r\n    isSpaMode,\r\n    renderMeta,\r\n    routeDiscovery,\r\n    ssr\r\n  } = useFrameworkContext();\r\n  let { router, static: isStatic, staticContext } = useDataRouterContext2();\r\n  let { matches: routerMatches } = useDataRouterStateContext();\r\n  let enableFogOfWar = isFogOfWarEnabled(routeDiscovery, ssr);\r\n  if (renderMeta) {\r\n    renderMeta.didRenderScripts = true;\r\n  }\r\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    isHydrated = true;\r\n  }, []);\r\n  let initialScripts = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\r\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\r\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\r\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\r\n${matches.map((match, routeIndex) => {\r\n      let routeVarName = `route${routeIndex}`;\r\n      let manifestEntry = manifest.routes[match.route.id];\r\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\r\n      let {\r\n        clientActionModule,\r\n        clientLoaderModule,\r\n        clientMiddlewareModule,\r\n        hydrateFallbackModule,\r\n        module\r\n      } = manifestEntry;\r\n      let chunks = [\r\n        ...clientActionModule ? [\r\n          {\r\n            module: clientActionModule,\r\n            varName: `${routeVarName}_clientAction`\r\n          }\r\n        ] : [],\r\n        ...clientLoaderModule ? [\r\n          {\r\n            module: clientLoaderModule,\r\n            varName: `${routeVarName}_clientLoader`\r\n          }\r\n        ] : [],\r\n        ...clientMiddlewareModule ? [\r\n          {\r\n            module: clientMiddlewareModule,\r\n            varName: `${routeVarName}_clientMiddleware`\r\n          }\r\n        ] : [],\r\n        ...hydrateFallbackModule ? [\r\n          {\r\n            module: hydrateFallbackModule,\r\n            varName: `${routeVarName}_HydrateFallback`\r\n          }\r\n        ] : [],\r\n        { module, varName: `${routeVarName}_main` }\r\n      ];\r\n      if (chunks.length === 1) {\r\n        return `import * as ${routeVarName} from ${JSON.stringify(module)};`;\r\n      }\r\n      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\r\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(\",\")}};`;\r\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\r\n    }).join(\"\\n\")}\r\n  ${enableFogOfWar ? (\r\n      // Inline a minimal manifest with the SSR matches\r\n      `window.__reactRouterManifest = ${JSON.stringify(\r\n        getPartialManifest(manifest, router),\r\n        null,\r\n        2\r\n      )};`\r\n    ) : \"\"}\r\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\r\n\r\nimport(${JSON.stringify(manifest.entry.module)});`;\r\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n      \"script\",\r\n      {\r\n        ...props,\r\n        suppressHydrationWarning: true,\r\n        dangerouslySetInnerHTML: createHtml(contextScript),\r\n        type: void 0\r\n      }\r\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n      \"script\",\r\n      {\r\n        ...props,\r\n        suppressHydrationWarning: true,\r\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\r\n        type: \"module\",\r\n        async: true\r\n      }\r\n    ));\r\n  }, []);\r\n  let preloads = isHydrated ? [] : dedupe(\r\n    manifest.entry.imports.concat(\r\n      getModuleLinkHrefs(matches, manifest, {\r\n        includeHydrateFallback: true\r\n      })\r\n    )\r\n  );\r\n  let sri = typeof manifest.sri === \"object\" ? manifest.sri : {};\r\n  return isHydrated ? null : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, typeof manifest.sri === \"object\" ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    \"script\",\r\n    {\r\n      \"rr-importmap\": \"\",\r\n      type: \"importmap\",\r\n      suppressHydrationWarning: true,\r\n      dangerouslySetInnerHTML: {\r\n        __html: JSON.stringify({\r\n          integrity: sri\r\n        })\r\n      }\r\n    }\r\n  ) : null, !enableFogOfWar ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    \"link\",\r\n    {\r\n      rel: \"modulepreload\",\r\n      href: manifest.url,\r\n      crossOrigin: props.crossOrigin,\r\n      integrity: sri[manifest.url],\r\n      suppressHydrationWarning: true\r\n    }\r\n  ) : null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    \"link\",\r\n    {\r\n      rel: \"modulepreload\",\r\n      href: manifest.entry.module,\r\n      crossOrigin: props.crossOrigin,\r\n      integrity: sri[manifest.entry.module],\r\n      suppressHydrationWarning: true\r\n    }\r\n  ), preloads.map((path) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    \"link\",\r\n    {\r\n      key: path,\r\n      rel: \"modulepreload\",\r\n      href: path,\r\n      crossOrigin: props.crossOrigin,\r\n      integrity: sri[path],\r\n      suppressHydrationWarning: true\r\n    }\r\n  )), initialScripts);\r\n}\r\nfunction dedupe(array) {\r\n  return [...new Set(array)];\r\n}\r\nfunction mergeRefs(...refs) {\r\n  return (value) => {\r\n    refs.forEach((ref) => {\r\n      if (typeof ref === \"function\") {\r\n        ref(value);\r\n      } else if (ref != null) {\r\n        ref.current = value;\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\n// lib/dom/lib.tsx\r\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\r\ntry {\r\n  if (isBrowser) {\r\n    window.__reactRouterVersion = \"7.6.2\";\r\n  }\r\n} catch (e) {\r\n}\r\nfunction createBrowserRouter(routes, opts) {\r\n  return createRouter({\r\n    basename: opts?.basename,\r\n    unstable_getContext: opts?.unstable_getContext,\r\n    future: opts?.future,\r\n    history: createBrowserHistory({ window: opts?.window }),\r\n    hydrationData: opts?.hydrationData || parseHydrationData(),\r\n    routes,\r\n    mapRouteProperties,\r\n    hydrationRouteProperties,\r\n    dataStrategy: opts?.dataStrategy,\r\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\r\n    window: opts?.window\r\n  }).initialize();\r\n}\r\nfunction createHashRouter(routes, opts) {\r\n  return createRouter({\r\n    basename: opts?.basename,\r\n    unstable_getContext: opts?.unstable_getContext,\r\n    future: opts?.future,\r\n    history: createHashHistory({ window: opts?.window }),\r\n    hydrationData: opts?.hydrationData || parseHydrationData(),\r\n    routes,\r\n    mapRouteProperties,\r\n    hydrationRouteProperties,\r\n    dataStrategy: opts?.dataStrategy,\r\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\r\n    window: opts?.window\r\n  }).initialize();\r\n}\r\nfunction parseHydrationData() {\r\n  let state = window?.__staticRouterHydrationData;\r\n  if (state && state.errors) {\r\n    state = {\r\n      ...state,\r\n      errors: deserializeErrors(state.errors)\r\n    };\r\n  }\r\n  return state;\r\n}\r\nfunction deserializeErrors(errors) {\r\n  if (!errors) return null;\r\n  let entries = Object.entries(errors);\r\n  let serialized = {};\r\n  for (let [key, val] of entries) {\r\n    if (val && val.__type === \"RouteErrorResponse\") {\r\n      serialized[key] = new ErrorResponseImpl(\r\n        val.status,\r\n        val.statusText,\r\n        val.data,\r\n        val.internal === true\r\n      );\r\n    } else if (val && val.__type === \"Error\") {\r\n      if (val.__subType) {\r\n        let ErrorConstructor = window[val.__subType];\r\n        if (typeof ErrorConstructor === \"function\") {\r\n          try {\r\n            let error = new ErrorConstructor(val.message);\r\n            error.stack = \"\";\r\n            serialized[key] = error;\r\n          } catch (e) {\r\n          }\r\n        }\r\n      }\r\n      if (serialized[key] == null) {\r\n        let error = new Error(val.message);\r\n        error.stack = \"\";\r\n        serialized[key] = error;\r\n      }\r\n    } else {\r\n      serialized[key] = val;\r\n    }\r\n  }\r\n  return serialized;\r\n}\r\nfunction BrowserRouter({\r\n  basename,\r\n  children,\r\n  window: window2\r\n}) {\r\n  let historyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });\r\n  }\r\n  let history = historyRef.current;\r\n  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    (newState) => {\r\n      react__WEBPACK_IMPORTED_MODULE_0__.startTransition(() => setStateImpl(newState));\r\n    },\r\n    [setStateImpl]\r\n  );\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location: state.location,\r\n      navigationType: state.action,\r\n      navigator: history\r\n    }\r\n  );\r\n}\r\nfunction HashRouter({ basename, children, window: window2 }) {\r\n  let historyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createHashHistory({ window: window2, v5Compat: true });\r\n  }\r\n  let history = historyRef.current;\r\n  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    (newState) => {\r\n      react__WEBPACK_IMPORTED_MODULE_0__.startTransition(() => setStateImpl(newState));\r\n    },\r\n    [setStateImpl]\r\n  );\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location: state.location,\r\n      navigationType: state.action,\r\n      navigator: history\r\n    }\r\n  );\r\n}\r\nfunction HistoryRouter({\r\n  basename,\r\n  children,\r\n  history\r\n}) {\r\n  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    (newState) => {\r\n      react__WEBPACK_IMPORTED_MODULE_0__.startTransition(() => setStateImpl(newState));\r\n    },\r\n    [setStateImpl]\r\n  );\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location: state.location,\r\n      navigationType: state.action,\r\n      navigator: history\r\n    }\r\n  );\r\n}\r\nHistoryRouter.displayName = \"unstable_HistoryRouter\";\r\nvar ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\r\nvar Link = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(\r\n  function LinkWithRef({\r\n    onClick,\r\n    discover = \"render\",\r\n    prefetch = \"none\",\r\n    relative,\r\n    reloadDocument,\r\n    replace: replace2,\r\n    state,\r\n    target,\r\n    to,\r\n    preventScrollReset,\r\n    viewTransition,\r\n    ...rest\r\n  }, forwardedRef) {\r\n    let { basename } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\r\n    let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX2.test(to);\r\n    let absoluteHref;\r\n    let isExternal = false;\r\n    if (typeof to === \"string\" && isAbsolute) {\r\n      absoluteHref = to;\r\n      if (isBrowser) {\r\n        try {\r\n          let currentUrl = new URL(window.location.href);\r\n          let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\r\n          let path = stripBasename(targetUrl.pathname, basename);\r\n          if (targetUrl.origin === currentUrl.origin && path != null) {\r\n            to = path + targetUrl.search + targetUrl.hash;\r\n          } else {\r\n            isExternal = true;\r\n          }\r\n        } catch (e) {\r\n          warning(\r\n            false,\r\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`\r\n          );\r\n        }\r\n      }\r\n    }\r\n    let href2 = useHref(to, { relative });\r\n    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(\r\n      prefetch,\r\n      rest\r\n    );\r\n    let internalOnClick = useLinkClickHandler(to, {\r\n      replace: replace2,\r\n      state,\r\n      target,\r\n      preventScrollReset,\r\n      relative,\r\n      viewTransition\r\n    });\r\n    function handleClick(event) {\r\n      if (onClick) onClick(event);\r\n      if (!event.defaultPrevented) {\r\n        internalOnClick(event);\r\n      }\r\n    }\r\n    let link = (\r\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\r\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n        \"a\",\r\n        {\r\n          ...rest,\r\n          ...prefetchHandlers,\r\n          href: absoluteHref || href2,\r\n          onClick: isExternal || reloadDocument ? onClick : handleClick,\r\n          ref: mergeRefs(forwardedRef, prefetchRef),\r\n          target,\r\n          \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\r\n        }\r\n      )\r\n    );\r\n    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, link, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PrefetchPageLinks, { page: href2 })) : link;\r\n  }\r\n);\r\nLink.displayName = \"Link\";\r\nvar NavLink = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(\r\n  function NavLinkWithRef({\r\n    \"aria-current\": ariaCurrentProp = \"page\",\r\n    caseSensitive = false,\r\n    className: classNameProp = \"\",\r\n    end = false,\r\n    style: styleProp,\r\n    to,\r\n    viewTransition,\r\n    children,\r\n    ...rest\r\n  }, ref) {\r\n    let path = useResolvedPath(to, { relative: rest.relative });\r\n    let location = useLocation();\r\n    let routerState = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterStateContext);\r\n    let { navigator, basename } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\r\n    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    useViewTransitionState(path) && viewTransition === true;\r\n    let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\r\n    let locationPathname = location.pathname;\r\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\r\n    if (!caseSensitive) {\r\n      locationPathname = locationPathname.toLowerCase();\r\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\r\n      toPathname = toPathname.toLowerCase();\r\n    }\r\n    if (nextLocationPathname && basename) {\r\n      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\r\n    }\r\n    const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\r\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\r\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\r\n    let renderProps = {\r\n      isActive,\r\n      isPending,\r\n      isTransitioning\r\n    };\r\n    let ariaCurrent = isActive ? ariaCurrentProp : void 0;\r\n    let className;\r\n    if (typeof classNameProp === \"function\") {\r\n      className = classNameProp(renderProps);\r\n    } else {\r\n      className = [\r\n        classNameProp,\r\n        isActive ? \"active\" : null,\r\n        isPending ? \"pending\" : null,\r\n        isTransitioning ? \"transitioning\" : null\r\n      ].filter(Boolean).join(\" \");\r\n    }\r\n    let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\r\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n      Link,\r\n      {\r\n        ...rest,\r\n        \"aria-current\": ariaCurrent,\r\n        className,\r\n        ref,\r\n        style,\r\n        to,\r\n        viewTransition\r\n      },\r\n      typeof children === \"function\" ? children(renderProps) : children\r\n    );\r\n  }\r\n);\r\nNavLink.displayName = \"NavLink\";\r\nvar Form = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(\r\n  ({\r\n    discover = \"render\",\r\n    fetcherKey,\r\n    navigate,\r\n    reloadDocument,\r\n    replace: replace2,\r\n    state,\r\n    method = defaultMethod,\r\n    action,\r\n    onSubmit,\r\n    relative,\r\n    preventScrollReset,\r\n    viewTransition,\r\n    ...props\r\n  }, forwardedRef) => {\r\n    let submit = useSubmit();\r\n    let formAction = useFormAction(action, { relative });\r\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\r\n    let isAbsolute = typeof action === \"string\" && ABSOLUTE_URL_REGEX2.test(action);\r\n    let submitHandler = (event) => {\r\n      onSubmit && onSubmit(event);\r\n      if (event.defaultPrevented) return;\r\n      event.preventDefault();\r\n      let submitter = event.nativeEvent.submitter;\r\n      let submitMethod = submitter?.getAttribute(\"formmethod\") || method;\r\n      submit(submitter || event.currentTarget, {\r\n        fetcherKey,\r\n        method: submitMethod,\r\n        navigate,\r\n        replace: replace2,\r\n        state,\r\n        relative,\r\n        preventScrollReset,\r\n        viewTransition\r\n      });\r\n    };\r\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n      \"form\",\r\n      {\r\n        ref: forwardedRef,\r\n        method: formMethod,\r\n        action: formAction,\r\n        onSubmit: reloadDocument ? onSubmit : submitHandler,\r\n        ...props,\r\n        \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\r\n      }\r\n    );\r\n  }\r\n);\r\nForm.displayName = \"Form\";\r\nfunction ScrollRestoration({\r\n  getKey,\r\n  storageKey,\r\n  ...props\r\n}) {\r\n  let remixContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FrameworkContext);\r\n  let { basename } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\r\n  let location = useLocation();\r\n  let matches = useMatches();\r\n  useScrollRestoration({ getKey, storageKey });\r\n  let ssrKey = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n    () => {\r\n      if (!remixContext || !getKey) return null;\r\n      let userKey = getScrollRestorationKey(\r\n        location,\r\n        matches,\r\n        basename,\r\n        getKey\r\n      );\r\n      return userKey !== location.key ? userKey : null;\r\n    },\r\n    // Nah, we only need this the first time for the SSR render\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n  if (!remixContext || remixContext.isSpaMode) {\r\n    return null;\r\n  }\r\n  let restoreScroll = ((storageKey2, restoreKey) => {\r\n    if (!window.history.state || !window.history.state.key) {\r\n      let key = Math.random().toString(32).slice(2);\r\n      window.history.replaceState({ key }, \"\");\r\n    }\r\n    try {\r\n      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || \"{}\");\r\n      let storedY = positions[restoreKey || window.history.state.key];\r\n      if (typeof storedY === \"number\") {\r\n        window.scrollTo(0, storedY);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      sessionStorage.removeItem(storageKey2);\r\n    }\r\n  }).toString();\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    \"script\",\r\n    {\r\n      ...props,\r\n      suppressHydrationWarning: true,\r\n      dangerouslySetInnerHTML: {\r\n        __html: `(${restoreScroll})(${JSON.stringify(\r\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\r\n        )}, ${JSON.stringify(ssrKey)})`\r\n      }\r\n    }\r\n  );\r\n}\r\nScrollRestoration.displayName = \"ScrollRestoration\";\r\nfunction getDataRouterConsoleError2(hookName) {\r\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\r\n}\r\nfunction useDataRouterContext3(hookName) {\r\n  let ctx = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);\r\n  invariant(ctx, getDataRouterConsoleError2(hookName));\r\n  return ctx;\r\n}\r\nfunction useDataRouterState2(hookName) {\r\n  let state = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterStateContext);\r\n  invariant(state, getDataRouterConsoleError2(hookName));\r\n  return state;\r\n}\r\nfunction useLinkClickHandler(to, {\r\n  target,\r\n  replace: replaceProp,\r\n  state,\r\n  preventScrollReset,\r\n  relative,\r\n  viewTransition\r\n} = {}) {\r\n  let navigate = useNavigate();\r\n  let location = useLocation();\r\n  let path = useResolvedPath(to, { relative });\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    (event) => {\r\n      if (shouldProcessLinkClick(event, target)) {\r\n        event.preventDefault();\r\n        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);\r\n        navigate(to, {\r\n          replace: replace2,\r\n          state,\r\n          preventScrollReset,\r\n          relative,\r\n          viewTransition\r\n        });\r\n      }\r\n    },\r\n    [\r\n      location,\r\n      navigate,\r\n      path,\r\n      replaceProp,\r\n      state,\r\n      target,\r\n      to,\r\n      preventScrollReset,\r\n      relative,\r\n      viewTransition\r\n    ]\r\n  );\r\n}\r\nfunction useSearchParams(defaultInit) {\r\n  warning(\r\n    typeof URLSearchParams !== \"undefined\",\r\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`\r\n  );\r\n  let defaultSearchParamsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(createSearchParams(defaultInit));\r\n  let hasSetSearchParamsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\r\n  let location = useLocation();\r\n  let searchParams = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n    () => (\r\n      // Only merge in the defaults if we haven't yet called setSearchParams.\r\n      // Once we call that we want those to take precedence, otherwise you can't\r\n      // remove a param with setSearchParams({}) if it has an initial value\r\n      getSearchParamsForLocation(\r\n        location.search,\r\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\r\n      )\r\n    ),\r\n    [location.search]\r\n  );\r\n  let navigate = useNavigate();\r\n  let setSearchParams = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    (nextInit, navigateOptions) => {\r\n      const newSearchParams = createSearchParams(\r\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\r\n      );\r\n      hasSetSearchParamsRef.current = true;\r\n      navigate(\"?\" + newSearchParams, navigateOptions);\r\n    },\r\n    [navigate, searchParams]\r\n  );\r\n  return [searchParams, setSearchParams];\r\n}\r\nvar fetcherId = 0;\r\nvar getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\r\nfunction useSubmit() {\r\n  let { router } = useDataRouterContext3(\"useSubmit\" /* UseSubmit */);\r\n  let { basename } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\r\n  let currentRouteId = useRouteId();\r\n  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    async (target, options = {}) => {\r\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\r\n        target,\r\n        basename\r\n      );\r\n      if (options.navigate === false) {\r\n        let key = options.fetcherKey || getUniqueFetcherId();\r\n        await router.fetch(key, currentRouteId, options.action || action, {\r\n          preventScrollReset: options.preventScrollReset,\r\n          formData,\r\n          body,\r\n          formMethod: options.method || method,\r\n          formEncType: options.encType || encType,\r\n          flushSync: options.flushSync\r\n        });\r\n      } else {\r\n        await router.navigate(options.action || action, {\r\n          preventScrollReset: options.preventScrollReset,\r\n          formData,\r\n          body,\r\n          formMethod: options.method || method,\r\n          formEncType: options.encType || encType,\r\n          replace: options.replace,\r\n          state: options.state,\r\n          fromRouteId: currentRouteId,\r\n          flushSync: options.flushSync,\r\n          viewTransition: options.viewTransition\r\n        });\r\n      }\r\n    },\r\n    [router, basename, currentRouteId]\r\n  );\r\n}\r\nfunction useFormAction(action, { relative } = {}) {\r\n  let { basename } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\r\n  let routeContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\r\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\r\n  let [match] = routeContext.matches.slice(-1);\r\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\r\n  let location = useLocation();\r\n  if (action == null) {\r\n    path.search = location.search;\r\n    let params = new URLSearchParams(path.search);\r\n    let indexValues = params.getAll(\"index\");\r\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\r\n    if (hasNakedIndexParam) {\r\n      params.delete(\"index\");\r\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\r\n      let qs = params.toString();\r\n      path.search = qs ? `?${qs}` : \"\";\r\n    }\r\n  }\r\n  if ((!action || action === \".\") && match.route.index) {\r\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\r\n  }\r\n  if (basename !== \"/\") {\r\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\r\n  }\r\n  return createPath(path);\r\n}\r\nfunction useFetcher({\r\n  key\r\n} = {}) {\r\n  let { router } = useDataRouterContext3(\"useFetcher\" /* UseFetcher */);\r\n  let state = useDataRouterState2(\"useFetcher\" /* UseFetcher */);\r\n  let fetcherData = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FetchersContext);\r\n  let route = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\r\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\r\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\r\n  invariant(route, `useFetcher must be used inside a RouteContext`);\r\n  invariant(\r\n    routeId != null,\r\n    `useFetcher can only be used on routes that contain a unique \"id\"`\r\n  );\r\n  let defaultKey = react__WEBPACK_IMPORTED_MODULE_0__.useId();\r\n  let [fetcherKey, setFetcherKey] = react__WEBPACK_IMPORTED_MODULE_0__.useState(key || defaultKey);\r\n  if (key && key !== fetcherKey) {\r\n    setFetcherKey(key);\r\n  }\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    router.getFetcher(fetcherKey);\r\n    return () => router.deleteFetcher(fetcherKey);\r\n  }, [router, fetcherKey]);\r\n  let load = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    async (href2, opts) => {\r\n      invariant(routeId, \"No routeId available for fetcher.load()\");\r\n      await router.fetch(fetcherKey, routeId, href2, opts);\r\n    },\r\n    [fetcherKey, routeId, router]\r\n  );\r\n  let submitImpl = useSubmit();\r\n  let submit = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\r\n    async (target, opts) => {\r\n      await submitImpl(target, {\r\n        ...opts,\r\n        navigate: false,\r\n        fetcherKey\r\n      });\r\n    },\r\n    [fetcherKey, submitImpl]\r\n  );\r\n  let FetcherForm = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\r\n    let FetcherForm2 = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(\r\n      (props, ref) => {\r\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Form, { ...props, navigate: false, fetcherKey, ref });\r\n      }\r\n    );\r\n    FetcherForm2.displayName = \"fetcher.Form\";\r\n    return FetcherForm2;\r\n  }, [fetcherKey]);\r\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\r\n  let data2 = fetcherData.get(fetcherKey);\r\n  let fetcherWithComponents = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\r\n    () => ({\r\n      Form: FetcherForm,\r\n      submit,\r\n      load,\r\n      ...fetcher,\r\n      data: data2\r\n    }),\r\n    [FetcherForm, submit, load, fetcher, data2]\r\n  );\r\n  return fetcherWithComponents;\r\n}\r\nfunction useFetchers() {\r\n  let state = useDataRouterState2(\"useFetchers\" /* UseFetchers */);\r\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\r\n    ...fetcher,\r\n    key\r\n  }));\r\n}\r\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\r\nvar savedScrollPositions = {};\r\nfunction getScrollRestorationKey(location, matches, basename, getKey) {\r\n  let key = null;\r\n  if (getKey) {\r\n    if (basename !== \"/\") {\r\n      key = getKey(\r\n        {\r\n          ...location,\r\n          pathname: stripBasename(location.pathname, basename) || location.pathname\r\n        },\r\n        matches\r\n      );\r\n    } else {\r\n      key = getKey(location, matches);\r\n    }\r\n  }\r\n  if (key == null) {\r\n    key = location.key;\r\n  }\r\n  return key;\r\n}\r\nfunction useScrollRestoration({\r\n  getKey,\r\n  storageKey\r\n} = {}) {\r\n  let { router } = useDataRouterContext3(\"useScrollRestoration\" /* UseScrollRestoration */);\r\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(\r\n    \"useScrollRestoration\" /* UseScrollRestoration */\r\n  );\r\n  let { basename } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\r\n  let location = useLocation();\r\n  let matches = useMatches();\r\n  let navigation = useNavigation();\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    window.history.scrollRestoration = \"manual\";\r\n    return () => {\r\n      window.history.scrollRestoration = \"auto\";\r\n    };\r\n  }, []);\r\n  usePageHide(\r\n    react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\r\n      if (navigation.state === \"idle\") {\r\n        let key = getScrollRestorationKey(location, matches, basename, getKey);\r\n        savedScrollPositions[key] = window.scrollY;\r\n      }\r\n      try {\r\n        sessionStorage.setItem(\r\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\r\n          JSON.stringify(savedScrollPositions)\r\n        );\r\n      } catch (error) {\r\n        warning(\r\n          false,\r\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\r\n        );\r\n      }\r\n      window.history.scrollRestoration = \"auto\";\r\n    }, [navigation.state, getKey, basename, location, matches, storageKey])\r\n  );\r\n  if (typeof document !== \"undefined\") {\r\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\r\n      try {\r\n        let sessionPositions = sessionStorage.getItem(\r\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\r\n        );\r\n        if (sessionPositions) {\r\n          savedScrollPositions = JSON.parse(sessionPositions);\r\n        }\r\n      } catch (e) {\r\n      }\r\n    }, [storageKey]);\r\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\r\n      let disableScrollRestoration = router?.enableScrollRestoration(\r\n        savedScrollPositions,\r\n        () => window.scrollY,\r\n        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0\r\n      );\r\n      return () => disableScrollRestoration && disableScrollRestoration();\r\n    }, [router, basename, getKey]);\r\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\r\n      if (restoreScrollPosition === false) {\r\n        return;\r\n      }\r\n      if (typeof restoreScrollPosition === \"number\") {\r\n        window.scrollTo(0, restoreScrollPosition);\r\n        return;\r\n      }\r\n      if (location.hash) {\r\n        let el = document.getElementById(\r\n          decodeURIComponent(location.hash.slice(1))\r\n        );\r\n        if (el) {\r\n          el.scrollIntoView();\r\n          return;\r\n        }\r\n      }\r\n      if (preventScrollReset === true) {\r\n        return;\r\n      }\r\n      window.scrollTo(0, 0);\r\n    }, [location, restoreScrollPosition, preventScrollReset]);\r\n  }\r\n}\r\nfunction useBeforeUnload(callback, options) {\r\n  let { capture } = options || {};\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    let opts = capture != null ? { capture } : void 0;\r\n    window.addEventListener(\"beforeunload\", callback, opts);\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", callback, opts);\r\n    };\r\n  }, [callback, capture]);\r\n}\r\nfunction usePageHide(callback, options) {\r\n  let { capture } = options || {};\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    let opts = capture != null ? { capture } : void 0;\r\n    window.addEventListener(\"pagehide\", callback, opts);\r\n    return () => {\r\n      window.removeEventListener(\"pagehide\", callback, opts);\r\n    };\r\n  }, [callback, capture]);\r\n}\r\nfunction usePrompt({\r\n  when,\r\n  message\r\n}) {\r\n  let blocker = useBlocker(when);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    if (blocker.state === \"blocked\") {\r\n      let proceed = window.confirm(message);\r\n      if (proceed) {\r\n        setTimeout(blocker.proceed, 0);\r\n      } else {\r\n        blocker.reset();\r\n      }\r\n    }\r\n  }, [blocker, message]);\r\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\r\n    if (blocker.state === \"blocked\" && !when) {\r\n      blocker.reset();\r\n    }\r\n  }, [blocker, when]);\r\n}\r\nfunction useViewTransitionState(to, opts = {}) {\r\n  let vtContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ViewTransitionContext);\r\n  invariant(\r\n    vtContext != null,\r\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\"\r\n  );\r\n  let { basename } = useDataRouterContext3(\r\n    \"useViewTransitionState\" /* useViewTransitionState */\r\n  );\r\n  let path = useResolvedPath(to, { relative: opts.relative });\r\n  if (!vtContext.isTransitioning) {\r\n    return false;\r\n  }\r\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\r\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\r\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\r\n}\r\n\r\n// lib/dom/server.tsx\r\n\r\nfunction StaticRouter({\r\n  basename,\r\n  children,\r\n  location: locationProp = \"/\"\r\n}) {\r\n  if (typeof locationProp === \"string\") {\r\n    locationProp = parsePath(locationProp);\r\n  }\r\n  let action = \"POP\" /* Pop */;\r\n  let location = {\r\n    pathname: locationProp.pathname || \"/\",\r\n    search: locationProp.search || \"\",\r\n    hash: locationProp.hash || \"\",\r\n    state: locationProp.state != null ? locationProp.state : null,\r\n    key: locationProp.key || \"default\"\r\n  };\r\n  let staticNavigator = getStatelessNavigator();\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location,\r\n      navigationType: action,\r\n      navigator: staticNavigator,\r\n      static: true\r\n    }\r\n  );\r\n}\r\nfunction StaticRouterProvider({\r\n  context,\r\n  router,\r\n  hydrate: hydrate2 = true,\r\n  nonce\r\n}) {\r\n  invariant(\r\n    router && context,\r\n    \"You must provide `router` and `context` to <StaticRouterProvider>\"\r\n  );\r\n  let dataRouterContext = {\r\n    router,\r\n    navigator: getStatelessNavigator(),\r\n    static: true,\r\n    staticContext: context,\r\n    basename: context.basename || \"/\"\r\n  };\r\n  let fetchersContext = /* @__PURE__ */ new Map();\r\n  let hydrateScript = \"\";\r\n  if (hydrate2 !== false) {\r\n    let data2 = {\r\n      loaderData: context.loaderData,\r\n      actionData: context.actionData,\r\n      errors: serializeErrors(context.errors)\r\n    };\r\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));\r\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\r\n  }\r\n  let { state } = dataRouterContext.router;\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    Router,\r\n    {\r\n      basename: dataRouterContext.basename,\r\n      location: state.location,\r\n      navigationType: state.historyAction,\r\n      navigator: dataRouterContext.navigator,\r\n      static: dataRouterContext.static\r\n    },\r\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n      DataRoutes2,\r\n      {\r\n        routes: router.routes,\r\n        future: router.future,\r\n        state\r\n      }\r\n    )\r\n  ))))), hydrateScript ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    \"script\",\r\n    {\r\n      suppressHydrationWarning: true,\r\n      nonce,\r\n      dangerouslySetInnerHTML: { __html: hydrateScript }\r\n    }\r\n  ) : null);\r\n}\r\nfunction DataRoutes2({\r\n  routes,\r\n  future,\r\n  state\r\n}) {\r\n  return useRoutesImpl(routes, void 0, state, future);\r\n}\r\nfunction serializeErrors(errors) {\r\n  if (!errors) return null;\r\n  let entries = Object.entries(errors);\r\n  let serialized = {};\r\n  for (let [key, val] of entries) {\r\n    if (isRouteErrorResponse(val)) {\r\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\r\n    } else if (val instanceof Error) {\r\n      serialized[key] = {\r\n        message: val.message,\r\n        __type: \"Error\",\r\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\r\n        // can re-create the same type during hydration.\r\n        ...val.name !== \"Error\" ? {\r\n          __subType: val.name\r\n        } : {}\r\n      };\r\n    } else {\r\n      serialized[key] = val;\r\n    }\r\n  }\r\n  return serialized;\r\n}\r\nfunction getStatelessNavigator() {\r\n  return {\r\n    createHref,\r\n    encodeLocation,\r\n    push(to) {\r\n      throw new Error(\r\n        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`\r\n      );\r\n    },\r\n    replace(to) {\r\n      throw new Error(\r\n        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere in your app.`\r\n      );\r\n    },\r\n    go(delta) {\r\n      throw new Error(\r\n        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${delta})\\` somewhere in your app.`\r\n      );\r\n    },\r\n    back() {\r\n      throw new Error(\r\n        `You cannot use navigator.back() on the server because it is a stateless environment.`\r\n      );\r\n    },\r\n    forward() {\r\n      throw new Error(\r\n        `You cannot use navigator.forward() on the server because it is a stateless environment.`\r\n      );\r\n    }\r\n  };\r\n}\r\nfunction createStaticHandler2(routes, opts) {\r\n  return createStaticHandler(routes, {\r\n    ...opts,\r\n    mapRouteProperties\r\n  });\r\n}\r\nfunction createStaticRouter(routes, context, opts = {}) {\r\n  let manifest = {};\r\n  let dataRoutes = convertRoutesToDataRoutes(\r\n    routes,\r\n    mapRouteProperties,\r\n    void 0,\r\n    manifest\r\n  );\r\n  let matches = context.matches.map((match) => {\r\n    let route = manifest[match.route.id] || match.route;\r\n    return {\r\n      ...match,\r\n      route\r\n    };\r\n  });\r\n  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;\r\n  return {\r\n    get basename() {\r\n      return context.basename;\r\n    },\r\n    get future() {\r\n      return {\r\n        unstable_middleware: false,\r\n        ...opts?.future\r\n      };\r\n    },\r\n    get state() {\r\n      return {\r\n        historyAction: \"POP\" /* Pop */,\r\n        location: context.location,\r\n        matches,\r\n        loaderData: context.loaderData,\r\n        actionData: context.actionData,\r\n        errors: context.errors,\r\n        initialized: true,\r\n        navigation: IDLE_NAVIGATION,\r\n        restoreScrollPosition: null,\r\n        preventScrollReset: false,\r\n        revalidation: \"idle\",\r\n        fetchers: /* @__PURE__ */ new Map(),\r\n        blockers: /* @__PURE__ */ new Map()\r\n      };\r\n    },\r\n    get routes() {\r\n      return dataRoutes;\r\n    },\r\n    get window() {\r\n      return void 0;\r\n    },\r\n    initialize() {\r\n      throw msg(\"initialize\");\r\n    },\r\n    subscribe() {\r\n      throw msg(\"subscribe\");\r\n    },\r\n    enableScrollRestoration() {\r\n      throw msg(\"enableScrollRestoration\");\r\n    },\r\n    navigate() {\r\n      throw msg(\"navigate\");\r\n    },\r\n    fetch() {\r\n      throw msg(\"fetch\");\r\n    },\r\n    revalidate() {\r\n      throw msg(\"revalidate\");\r\n    },\r\n    createHref,\r\n    encodeLocation,\r\n    getFetcher() {\r\n      return IDLE_FETCHER;\r\n    },\r\n    deleteFetcher() {\r\n      throw msg(\"deleteFetcher\");\r\n    },\r\n    dispose() {\r\n      throw msg(\"dispose\");\r\n    },\r\n    getBlocker() {\r\n      return IDLE_BLOCKER;\r\n    },\r\n    deleteBlocker() {\r\n      throw msg(\"deleteBlocker\");\r\n    },\r\n    patchRoutes() {\r\n      throw msg(\"patchRoutes\");\r\n    },\r\n    _internalFetchControllers: /* @__PURE__ */ new Map(),\r\n    _internalSetRoutes() {\r\n      throw msg(\"_internalSetRoutes\");\r\n    }\r\n  };\r\n}\r\nfunction createHref(to) {\r\n  return typeof to === \"string\" ? to : createPath(to);\r\n}\r\nfunction encodeLocation(to) {\r\n  let href2 = typeof to === \"string\" ? to : createPath(to);\r\n  href2 = href2.replace(/ $/, \"%20\");\r\n  let encoded = ABSOLUTE_URL_REGEX3.test(href2) ? new URL(href2) : new URL(href2, \"http://localhost\");\r\n  return {\r\n    pathname: encoded.pathname,\r\n    search: encoded.search,\r\n    hash: encoded.hash\r\n  };\r\n}\r\nvar ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\r\nvar ESCAPE_LOOKUP2 = {\r\n  \"&\": \"\\\\u0026\",\r\n  \">\": \"\\\\u003e\",\r\n  \"<\": \"\\\\u003c\",\r\n  \"\\u2028\": \"\\\\u2028\",\r\n  \"\\u2029\": \"\\\\u2029\"\r\n};\r\nvar ESCAPE_REGEX2 = /[&><\\u2028\\u2029]/g;\r\nfunction htmlEscape(str) {\r\n  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);\r\n}\r\n\r\n// lib/dom/ssr/server.tsx\r\n\r\nfunction ServerRouter({\r\n  context,\r\n  url,\r\n  nonce\r\n}) {\r\n  if (typeof url === \"string\") {\r\n    url = new URL(url);\r\n  }\r\n  let { manifest, routeModules, criticalCss, serverHandoffString } = context;\r\n  let routes = createServerRoutes(\r\n    manifest.routes,\r\n    routeModules,\r\n    context.future,\r\n    context.isSpaMode\r\n  );\r\n  context.staticHandlerContext.loaderData = {\r\n    ...context.staticHandlerContext.loaderData\r\n  };\r\n  for (let match of context.staticHandlerContext.matches) {\r\n    let routeId = match.route.id;\r\n    let route = routeModules[routeId];\r\n    let manifestRoute = context.manifest.routes[routeId];\r\n    if (route && manifestRoute && shouldHydrateRouteLoader(\r\n      routeId,\r\n      route.clientLoader,\r\n      manifestRoute.hasLoader,\r\n      context.isSpaMode\r\n    ) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\r\n      delete context.staticHandlerContext.loaderData[routeId];\r\n    }\r\n  }\r\n  let router = createStaticRouter(routes, context.staticHandlerContext);\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    FrameworkContext.Provider,\r\n    {\r\n      value: {\r\n        manifest,\r\n        routeModules,\r\n        criticalCss,\r\n        serverHandoffString,\r\n        future: context.future,\r\n        ssr: context.ssr,\r\n        isSpaMode: context.isSpaMode,\r\n        routeDiscovery: context.routeDiscovery,\r\n        serializeError: context.serializeError,\r\n        renderMeta: context.renderMeta\r\n      }\r\n    },\r\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RemixErrorBoundary, { location: router.state.location }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n      StaticRouterProvider,\r\n      {\r\n        router,\r\n        context: context.staticHandlerContext,\r\n        hydrate: false\r\n      }\r\n    ))\r\n  ), context.serverHandoffStream ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Suspense, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\r\n    StreamTransfer,\r\n    {\r\n      context,\r\n      identifier: 0,\r\n      reader: context.serverHandoffStream.getReader(),\r\n      textDecoder: new TextDecoder(),\r\n      nonce\r\n    }\r\n  )) : null);\r\n}\r\n\r\n// lib/dom/ssr/routes-test-stub.tsx\r\n\r\nfunction createRoutesStub(routes, unstable_getContext) {\r\n  return function RoutesTestStub({\r\n    initialEntries,\r\n    initialIndex,\r\n    hydrationData,\r\n    future\r\n  }) {\r\n    let routerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\r\n    let remixContextRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\r\n    if (routerRef.current == null) {\r\n      remixContextRef.current = {\r\n        future: {\r\n          unstable_subResourceIntegrity: future?.unstable_subResourceIntegrity === true,\r\n          unstable_middleware: future?.unstable_middleware === true\r\n        },\r\n        manifest: {\r\n          routes: {},\r\n          entry: { imports: [], module: \"\" },\r\n          url: \"\",\r\n          version: \"\"\r\n        },\r\n        routeModules: {},\r\n        ssr: false,\r\n        isSpaMode: false,\r\n        routeDiscovery: { mode: \"lazy\", manifestPath: \"/__manifest\" }\r\n      };\r\n      let patched = processRoutes(\r\n        // @ts-expect-error `StubRouteObject` is stricter about `loader`/`action`\r\n        // types compared to `AgnosticRouteObject`\r\n        convertRoutesToDataRoutes(routes, (r) => r),\r\n        remixContextRef.current.manifest,\r\n        remixContextRef.current.routeModules\r\n      );\r\n      routerRef.current = createMemoryRouter(patched, {\r\n        unstable_getContext,\r\n        initialEntries,\r\n        initialIndex,\r\n        hydrationData\r\n      });\r\n    }\r\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FrameworkContext.Provider, { value: remixContextRef.current }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RouterProvider, { router: routerRef.current }));\r\n  };\r\n}\r\nfunction processRoutes(routes, manifest, routeModules, parentId) {\r\n  return routes.map((route) => {\r\n    if (!route.id) {\r\n      throw new Error(\r\n        \"Expected a route.id in @remix-run/testing processRoutes() function\"\r\n      );\r\n    }\r\n    let newRoute = {\r\n      id: route.id,\r\n      path: route.path,\r\n      index: route.index,\r\n      Component: route.Component ? withComponentProps(route.Component) : void 0,\r\n      HydrateFallback: route.HydrateFallback ? withHydrateFallbackProps(route.HydrateFallback) : void 0,\r\n      ErrorBoundary: route.ErrorBoundary ? withErrorBoundaryProps(route.ErrorBoundary) : void 0,\r\n      action: route.action,\r\n      loader: route.loader,\r\n      handle: route.handle,\r\n      shouldRevalidate: route.shouldRevalidate\r\n    };\r\n    let entryRoute = {\r\n      id: route.id,\r\n      path: route.path,\r\n      index: route.index,\r\n      parentId,\r\n      hasAction: route.action != null,\r\n      hasLoader: route.loader != null,\r\n      // When testing routes, you should be stubbing loader/action/middleware,\r\n      // not trying to re-implement the full loader/clientLoader/SSR/hydration\r\n      // flow. That is better tested via E2E tests.\r\n      hasClientAction: false,\r\n      hasClientLoader: false,\r\n      hasClientMiddleware: false,\r\n      hasErrorBoundary: route.ErrorBoundary != null,\r\n      // any need for these?\r\n      module: \"build/stub-path-to-module.js\",\r\n      clientActionModule: void 0,\r\n      clientLoaderModule: void 0,\r\n      clientMiddlewareModule: void 0,\r\n      hydrateFallbackModule: void 0\r\n    };\r\n    manifest.routes[newRoute.id] = entryRoute;\r\n    routeModules[route.id] = {\r\n      default: newRoute.Component || Outlet,\r\n      ErrorBoundary: newRoute.ErrorBoundary || void 0,\r\n      handle: route.handle,\r\n      links: route.links,\r\n      meta: route.meta,\r\n      shouldRevalidate: route.shouldRevalidate\r\n    };\r\n    if (route.children) {\r\n      newRoute.children = processRoutes(\r\n        route.children,\r\n        manifest,\r\n        routeModules,\r\n        newRoute.id\r\n      );\r\n    }\r\n    return newRoute;\r\n  });\r\n}\r\n\r\n// lib/server-runtime/cookies.ts\r\n\r\n\r\n// lib/server-runtime/crypto.ts\r\nvar encoder = /* @__PURE__ */ new TextEncoder();\r\nvar sign = async (value, secret) => {\r\n  let data2 = encoder.encode(value);\r\n  let key = await createKey2(secret, [\"sign\"]);\r\n  let signature = await crypto.subtle.sign(\"HMAC\", key, data2);\r\n  let hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(\r\n    /=+$/,\r\n    \"\"\r\n  );\r\n  return value + \".\" + hash;\r\n};\r\nvar unsign = async (cookie, secret) => {\r\n  let index = cookie.lastIndexOf(\".\");\r\n  let value = cookie.slice(0, index);\r\n  let hash = cookie.slice(index + 1);\r\n  let data2 = encoder.encode(value);\r\n  let key = await createKey2(secret, [\"verify\"]);\r\n  let signature = byteStringToUint8Array(atob(hash));\r\n  let valid = await crypto.subtle.verify(\"HMAC\", key, signature, data2);\r\n  return valid ? value : false;\r\n};\r\nvar createKey2 = async (secret, usages) => crypto.subtle.importKey(\r\n  \"raw\",\r\n  encoder.encode(secret),\r\n  { name: \"HMAC\", hash: \"SHA-256\" },\r\n  false,\r\n  usages\r\n);\r\nfunction byteStringToUint8Array(byteString) {\r\n  let array = new Uint8Array(byteString.length);\r\n  for (let i = 0; i < byteString.length; i++) {\r\n    array[i] = byteString.charCodeAt(i);\r\n  }\r\n  return array;\r\n}\r\n\r\n// lib/server-runtime/cookies.ts\r\nvar createCookie = (name, cookieOptions = {}) => {\r\n  let { secrets = [], ...options } = {\r\n    path: \"/\",\r\n    sameSite: \"lax\",\r\n    ...cookieOptions\r\n  };\r\n  warnOnceAboutExpiresCookie(name, options.expires);\r\n  return {\r\n    get name() {\r\n      return name;\r\n    },\r\n    get isSigned() {\r\n      return secrets.length > 0;\r\n    },\r\n    get expires() {\r\n      return typeof options.maxAge !== \"undefined\" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;\r\n    },\r\n    async parse(cookieHeader, parseOptions) {\r\n      if (!cookieHeader) return null;\r\n      let cookies = (0,cookie__WEBPACK_IMPORTED_MODULE_1__.parse)(cookieHeader, { ...options, ...parseOptions });\r\n      if (name in cookies) {\r\n        let value = cookies[name];\r\n        if (typeof value === \"string\" && value !== \"\") {\r\n          let decoded = await decodeCookieValue(value, secrets);\r\n          return decoded;\r\n        } else {\r\n          return \"\";\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    async serialize(value, serializeOptions) {\r\n      return (0,cookie__WEBPACK_IMPORTED_MODULE_1__.serialize)(\r\n        name,\r\n        value === \"\" ? \"\" : await encodeCookieValue(value, secrets),\r\n        {\r\n          ...options,\r\n          ...serializeOptions\r\n        }\r\n      );\r\n    }\r\n  };\r\n};\r\nvar isCookie = (object) => {\r\n  return object != null && typeof object.name === \"string\" && typeof object.isSigned === \"boolean\" && typeof object.parse === \"function\" && typeof object.serialize === \"function\";\r\n};\r\nasync function encodeCookieValue(value, secrets) {\r\n  let encoded = encodeData(value);\r\n  if (secrets.length > 0) {\r\n    encoded = await sign(encoded, secrets[0]);\r\n  }\r\n  return encoded;\r\n}\r\nasync function decodeCookieValue(value, secrets) {\r\n  if (secrets.length > 0) {\r\n    for (let secret of secrets) {\r\n      let unsignedValue = await unsign(value, secret);\r\n      if (unsignedValue !== false) {\r\n        return decodeData(unsignedValue);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  return decodeData(value);\r\n}\r\nfunction encodeData(value) {\r\n  return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));\r\n}\r\nfunction decodeData(value) {\r\n  try {\r\n    return JSON.parse(decodeURIComponent(myEscape(atob(value))));\r\n  } catch (error) {\r\n    return {};\r\n  }\r\n}\r\nfunction myEscape(value) {\r\n  let str = value.toString();\r\n  let result = \"\";\r\n  let index = 0;\r\n  let chr, code;\r\n  while (index < str.length) {\r\n    chr = str.charAt(index++);\r\n    if (/[\\w*+\\-./@]/.exec(chr)) {\r\n      result += chr;\r\n    } else {\r\n      code = chr.charCodeAt(0);\r\n      if (code < 256) {\r\n        result += \"%\" + hex(code, 2);\r\n      } else {\r\n        result += \"%u\" + hex(code, 4).toUpperCase();\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction hex(code, length) {\r\n  let result = code.toString(16);\r\n  while (result.length < length) result = \"0\" + result;\r\n  return result;\r\n}\r\nfunction myUnescape(value) {\r\n  let str = value.toString();\r\n  let result = \"\";\r\n  let index = 0;\r\n  let chr, part;\r\n  while (index < str.length) {\r\n    chr = str.charAt(index++);\r\n    if (chr === \"%\") {\r\n      if (str.charAt(index) === \"u\") {\r\n        part = str.slice(index + 1, index + 5);\r\n        if (/^[\\da-f]{4}$/i.exec(part)) {\r\n          result += String.fromCharCode(parseInt(part, 16));\r\n          index += 5;\r\n          continue;\r\n        }\r\n      } else {\r\n        part = str.slice(index, index + 2);\r\n        if (/^[\\da-f]{2}$/i.exec(part)) {\r\n          result += String.fromCharCode(parseInt(part, 16));\r\n          index += 2;\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n    result += chr;\r\n  }\r\n  return result;\r\n}\r\nfunction warnOnceAboutExpiresCookie(name, expires) {\r\n  warnOnce(\r\n    !expires,\r\n    `The \"${name}\" cookie has an \"expires\" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \\`commitSession(session, { expires })\\` if using a session storage object, or \\`cookie.serialize(\"value\", { expires })\\` if you're using the cookie directly.`\r\n  );\r\n}\r\n\r\n// lib/server-runtime/entry.ts\r\nfunction createEntryRouteModules(manifest) {\r\n  return Object.keys(manifest).reduce((memo2, routeId) => {\r\n    let route = manifest[routeId];\r\n    if (route) {\r\n      memo2[routeId] = route.module;\r\n    }\r\n    return memo2;\r\n  }, {});\r\n}\r\n\r\n// lib/server-runtime/mode.ts\r\nvar ServerMode = /* @__PURE__ */ ((ServerMode2) => {\r\n  ServerMode2[\"Development\"] = \"development\";\r\n  ServerMode2[\"Production\"] = \"production\";\r\n  ServerMode2[\"Test\"] = \"test\";\r\n  return ServerMode2;\r\n})(ServerMode || {});\r\nfunction isServerMode(value) {\r\n  return value === \"development\" /* Development */ || value === \"production\" /* Production */ || value === \"test\" /* Test */;\r\n}\r\n\r\n// lib/server-runtime/errors.ts\r\nfunction sanitizeError(error, serverMode) {\r\n  if (error instanceof Error && serverMode !== \"development\" /* Development */) {\r\n    let sanitized = new Error(\"Unexpected Server Error\");\r\n    sanitized.stack = void 0;\r\n    return sanitized;\r\n  }\r\n  return error;\r\n}\r\nfunction sanitizeErrors(errors, serverMode) {\r\n  return Object.entries(errors).reduce((acc, [routeId, error]) => {\r\n    return Object.assign(acc, { [routeId]: sanitizeError(error, serverMode) });\r\n  }, {});\r\n}\r\nfunction serializeError(error, serverMode) {\r\n  let sanitized = sanitizeError(error, serverMode);\r\n  return {\r\n    message: sanitized.message,\r\n    stack: sanitized.stack\r\n  };\r\n}\r\nfunction serializeErrors2(errors, serverMode) {\r\n  if (!errors) return null;\r\n  let entries = Object.entries(errors);\r\n  let serialized = {};\r\n  for (let [key, val] of entries) {\r\n    if (isRouteErrorResponse(val)) {\r\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\r\n    } else if (val instanceof Error) {\r\n      let sanitized = sanitizeError(val, serverMode);\r\n      serialized[key] = {\r\n        message: sanitized.message,\r\n        stack: sanitized.stack,\r\n        __type: \"Error\",\r\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\r\n        // can re-create the same type during hydration.  This will only apply\r\n        // in dev mode since all production errors are sanitized to normal\r\n        // Error instances\r\n        ...sanitized.name !== \"Error\" ? {\r\n          __subType: sanitized.name\r\n        } : {}\r\n      };\r\n    } else {\r\n      serialized[key] = val;\r\n    }\r\n  }\r\n  return serialized;\r\n}\r\n\r\n// lib/server-runtime/routeMatching.ts\r\nfunction matchServerRoutes(routes, pathname, basename) {\r\n  let matches = matchRoutes(\r\n    routes,\r\n    pathname,\r\n    basename\r\n  );\r\n  if (!matches) return null;\r\n  return matches.map((match) => ({\r\n    params: match.params,\r\n    pathname: match.pathname,\r\n    route: match.route\r\n  }));\r\n}\r\n\r\n// lib/server-runtime/data.ts\r\nasync function callRouteHandler(handler, args) {\r\n  let result = await handler({\r\n    request: stripRoutesParam(stripIndexParam2(args.request)),\r\n    params: args.params,\r\n    context: args.context\r\n  });\r\n  if (isDataWithResponseInit(result) && result.init && result.init.status && isRedirectStatusCode(result.init.status)) {\r\n    throw new Response(null, result.init);\r\n  }\r\n  return result;\r\n}\r\nfunction stripIndexParam2(request) {\r\n  let url = new URL(request.url);\r\n  let indexValues = url.searchParams.getAll(\"index\");\r\n  url.searchParams.delete(\"index\");\r\n  let indexValuesToKeep = [];\r\n  for (let indexValue of indexValues) {\r\n    if (indexValue) {\r\n      indexValuesToKeep.push(indexValue);\r\n    }\r\n  }\r\n  for (let toKeep of indexValuesToKeep) {\r\n    url.searchParams.append(\"index\", toKeep);\r\n  }\r\n  let init = {\r\n    method: request.method,\r\n    body: request.body,\r\n    headers: request.headers,\r\n    signal: request.signal\r\n  };\r\n  if (init.body) {\r\n    init.duplex = \"half\";\r\n  }\r\n  return new Request(url.href, init);\r\n}\r\nfunction stripRoutesParam(request) {\r\n  let url = new URL(request.url);\r\n  url.searchParams.delete(\"_routes\");\r\n  let init = {\r\n    method: request.method,\r\n    body: request.body,\r\n    headers: request.headers,\r\n    signal: request.signal\r\n  };\r\n  if (init.body) {\r\n    init.duplex = \"half\";\r\n  }\r\n  return new Request(url.href, init);\r\n}\r\n\r\n// lib/server-runtime/invariant.ts\r\nfunction invariant3(value, message) {\r\n  if (value === false || value === null || typeof value === \"undefined\") {\r\n    console.error(\r\n      \"The following error is a bug in React Router; please open an issue! https://github.com/remix-run/react-router/issues/new/choose\"\r\n    );\r\n    throw new Error(message);\r\n  }\r\n}\r\n\r\n// lib/server-runtime/dev.ts\r\nvar globalDevServerHooksKey = \"__reactRouterDevServerHooks\";\r\nfunction setDevServerHooks(devServerHooks) {\r\n  globalThis[globalDevServerHooksKey] = devServerHooks;\r\n}\r\nfunction getDevServerHooks() {\r\n  return globalThis[globalDevServerHooksKey];\r\n}\r\nfunction getBuildTimeHeader(request, headerName) {\r\n  if (typeof process !== \"undefined\") {\r\n    try {\r\n      if (process.env?.IS_RR_BUILD_REQUEST === \"yes\") {\r\n        return request.headers.get(headerName);\r\n      }\r\n    } catch (e) {\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// lib/server-runtime/routes.ts\r\nfunction groupRoutesByParentId2(manifest) {\r\n  let routes = {};\r\n  Object.values(manifest).forEach((route) => {\r\n    if (route) {\r\n      let parentId = route.parentId || \"\";\r\n      if (!routes[parentId]) {\r\n        routes[parentId] = [];\r\n      }\r\n      routes[parentId].push(route);\r\n    }\r\n  });\r\n  return routes;\r\n}\r\nfunction createRoutes(manifest, parentId = \"\", routesByParentId = groupRoutesByParentId2(manifest)) {\r\n  return (routesByParentId[parentId] || []).map((route) => ({\r\n    ...route,\r\n    children: createRoutes(manifest, route.id, routesByParentId)\r\n  }));\r\n}\r\nfunction createStaticHandlerDataRoutes(manifest, future, parentId = \"\", routesByParentId = groupRoutesByParentId2(manifest)) {\r\n  return (routesByParentId[parentId] || []).map((route) => {\r\n    let commonRoute = {\r\n      // Always include root due to default boundaries\r\n      hasErrorBoundary: route.id === \"root\" || route.module.ErrorBoundary != null,\r\n      id: route.id,\r\n      path: route.path,\r\n      unstable_middleware: route.module.unstable_middleware,\r\n      // Need to use RR's version in the param typed here to permit the optional\r\n      // context even though we know it'll always be provided in remix\r\n      loader: route.module.loader ? async (args) => {\r\n        let preRenderedData = getBuildTimeHeader(\r\n          args.request,\r\n          \"X-React-Router-Prerender-Data\"\r\n        );\r\n        if (preRenderedData != null) {\r\n          let encoded = preRenderedData ? decodeURI(preRenderedData) : preRenderedData;\r\n          invariant3(encoded, \"Missing prerendered data for route\");\r\n          let uint8array = new TextEncoder().encode(encoded);\r\n          let stream = new ReadableStream({\r\n            start(controller) {\r\n              controller.enqueue(uint8array);\r\n              controller.close();\r\n            }\r\n          });\r\n          let decoded = await decodeViaTurboStream(stream, global);\r\n          let data2 = decoded.value;\r\n          if (data2 && SingleFetchRedirectSymbol in data2) {\r\n            let result = data2[SingleFetchRedirectSymbol];\r\n            let init = { status: result.status };\r\n            if (result.reload) {\r\n              throw redirectDocument(result.redirect, init);\r\n            } else if (result.replace) {\r\n              throw replace(result.redirect, init);\r\n            } else {\r\n              throw redirect(result.redirect, init);\r\n            }\r\n          } else {\r\n            invariant3(\r\n              data2 && route.id in data2,\r\n              \"Unable to decode prerendered data\"\r\n            );\r\n            let result = data2[route.id];\r\n            invariant3(\r\n              \"data\" in result,\r\n              \"Unable to process prerendered data\"\r\n            );\r\n            return result.data;\r\n          }\r\n        }\r\n        let val = await callRouteHandler(route.module.loader, args);\r\n        return val;\r\n      } : void 0,\r\n      action: route.module.action ? (args) => callRouteHandler(route.module.action, args) : void 0,\r\n      handle: route.module.handle\r\n    };\r\n    return route.index ? {\r\n      index: true,\r\n      ...commonRoute\r\n    } : {\r\n      caseSensitive: route.caseSensitive,\r\n      children: createStaticHandlerDataRoutes(\r\n        manifest,\r\n        future,\r\n        route.id,\r\n        routesByParentId\r\n      ),\r\n      ...commonRoute\r\n    };\r\n  });\r\n}\r\n\r\n// lib/server-runtime/markup.ts\r\nvar ESCAPE_LOOKUP3 = {\r\n  \"&\": \"\\\\u0026\",\r\n  \">\": \"\\\\u003e\",\r\n  \"<\": \"\\\\u003c\",\r\n  \"\\u2028\": \"\\\\u2028\",\r\n  \"\\u2029\": \"\\\\u2029\"\r\n};\r\nvar ESCAPE_REGEX3 = /[&><\\u2028\\u2029]/g;\r\nfunction escapeHtml2(html) {\r\n  return html.replace(ESCAPE_REGEX3, (match) => ESCAPE_LOOKUP3[match]);\r\n}\r\n\r\n// lib/server-runtime/serverHandoff.ts\r\nfunction createServerHandoffString(serverHandoff) {\r\n  return escapeHtml2(JSON.stringify(serverHandoff));\r\n}\r\n\r\n// lib/server-runtime/headers.ts\r\n\r\nfunction getDocumentHeaders(build, context) {\r\n  return getDocumentHeadersImpl(context, (m) => {\r\n    let route = build.routes[m.route.id];\r\n    invariant3(route, `Route with id \"${m.route.id}\" not found in build`);\r\n    return route.module.headers;\r\n  });\r\n}\r\nfunction getDocumentHeadersImpl(context, getRouteHeadersFn) {\r\n  let boundaryIdx = context.errors ? context.matches.findIndex((m) => context.errors[m.route.id]) : -1;\r\n  let matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches;\r\n  let errorHeaders;\r\n  if (boundaryIdx >= 0) {\r\n    let { actionHeaders, actionData, loaderHeaders, loaderData } = context;\r\n    context.matches.slice(boundaryIdx).some((match) => {\r\n      let id = match.route.id;\r\n      if (actionHeaders[id] && (!actionData || !actionData.hasOwnProperty(id))) {\r\n        errorHeaders = actionHeaders[id];\r\n      } else if (loaderHeaders[id] && !loaderData.hasOwnProperty(id)) {\r\n        errorHeaders = loaderHeaders[id];\r\n      }\r\n      return errorHeaders != null;\r\n    });\r\n  }\r\n  return matches.reduce((parentHeaders, match, idx) => {\r\n    let { id } = match.route;\r\n    let loaderHeaders = context.loaderHeaders[id] || new Headers();\r\n    let actionHeaders = context.actionHeaders[id] || new Headers();\r\n    let includeErrorHeaders = errorHeaders != null && idx === matches.length - 1;\r\n    let includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;\r\n    let headersFn = getRouteHeadersFn(match);\r\n    if (headersFn == null) {\r\n      let headers2 = new Headers(parentHeaders);\r\n      if (includeErrorCookies) {\r\n        prependCookies(errorHeaders, headers2);\r\n      }\r\n      prependCookies(actionHeaders, headers2);\r\n      prependCookies(loaderHeaders, headers2);\r\n      return headers2;\r\n    }\r\n    let headers = new Headers(\r\n      typeof headersFn === \"function\" ? headersFn({\r\n        loaderHeaders,\r\n        parentHeaders,\r\n        actionHeaders,\r\n        errorHeaders: includeErrorHeaders ? errorHeaders : void 0\r\n      }) : headersFn\r\n    );\r\n    if (includeErrorCookies) {\r\n      prependCookies(errorHeaders, headers);\r\n    }\r\n    prependCookies(actionHeaders, headers);\r\n    prependCookies(loaderHeaders, headers);\r\n    prependCookies(parentHeaders, headers);\r\n    return headers;\r\n  }, new Headers());\r\n}\r\nfunction prependCookies(parentHeaders, childHeaders) {\r\n  let parentSetCookieString = parentHeaders.get(\"Set-Cookie\");\r\n  if (parentSetCookieString) {\r\n    let cookies = (0,set_cookie_parser__WEBPACK_IMPORTED_MODULE_2__.splitCookiesString)(parentSetCookieString);\r\n    let childCookies = new Set(childHeaders.getSetCookie());\r\n    cookies.forEach((cookie) => {\r\n      if (!childCookies.has(cookie)) {\r\n        childHeaders.append(\"Set-Cookie\", cookie);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// lib/server-runtime/single-fetch.ts\r\nvar SERVER_NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([\r\n  ...NO_BODY_STATUS_CODES,\r\n  304\r\n]);\r\nasync function singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\r\n  try {\r\n    let respond2 = function(context) {\r\n      let headers = getDocumentHeaders(build, context);\r\n      if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\r\n        return generateSingleFetchResponse(request, build, serverMode, {\r\n          result: getSingleFetchRedirect(\r\n            context.statusCode,\r\n            headers,\r\n            build.basename\r\n          ),\r\n          headers,\r\n          status: SINGLE_FETCH_REDIRECT_STATUS\r\n        });\r\n      }\r\n      if (context.errors) {\r\n        Object.values(context.errors).forEach((err) => {\r\n          if (!isRouteErrorResponse(err) || err.error) {\r\n            handleError(err);\r\n          }\r\n        });\r\n        context.errors = sanitizeErrors(context.errors, serverMode);\r\n      }\r\n      let singleFetchResult;\r\n      if (context.errors) {\r\n        singleFetchResult = { error: Object.values(context.errors)[0] };\r\n      } else {\r\n        singleFetchResult = {\r\n          data: Object.values(context.actionData || {})[0]\r\n        };\r\n      }\r\n      return generateSingleFetchResponse(request, build, serverMode, {\r\n        result: singleFetchResult,\r\n        headers,\r\n        status: context.statusCode\r\n      });\r\n    };\r\n    var respond = respond2;\r\n    let handlerRequest = new Request(handlerUrl, {\r\n      method: request.method,\r\n      body: request.body,\r\n      headers: request.headers,\r\n      signal: request.signal,\r\n      ...request.body ? { duplex: \"half\" } : void 0\r\n    });\r\n    let result = await staticHandler.query(handlerRequest, {\r\n      requestContext: loadContext,\r\n      skipLoaderErrorBubbling: true,\r\n      skipRevalidation: true,\r\n      unstable_respond: respond2\r\n    });\r\n    if (!isResponse(result)) {\r\n      result = respond2(result);\r\n    }\r\n    if (isRedirectResponse(result)) {\r\n      return generateSingleFetchResponse(request, build, serverMode, {\r\n        result: getSingleFetchRedirect(\r\n          result.status,\r\n          result.headers,\r\n          build.basename\r\n        ),\r\n        headers: result.headers,\r\n        status: SINGLE_FETCH_REDIRECT_STATUS\r\n      });\r\n    }\r\n    return result;\r\n  } catch (error) {\r\n    handleError(error);\r\n    return generateSingleFetchResponse(request, build, serverMode, {\r\n      result: { error },\r\n      headers: new Headers(),\r\n      status: 500\r\n    });\r\n  }\r\n}\r\nasync function singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\r\n  try {\r\n    let respond2 = function(context) {\r\n      let headers = getDocumentHeaders(build, context);\r\n      if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\r\n        return generateSingleFetchResponse(request, build, serverMode, {\r\n          result: {\r\n            [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\r\n              context.statusCode,\r\n              headers,\r\n              build.basename\r\n            )\r\n          },\r\n          headers,\r\n          status: SINGLE_FETCH_REDIRECT_STATUS\r\n        });\r\n      }\r\n      if (context.errors) {\r\n        Object.values(context.errors).forEach((err) => {\r\n          if (!isRouteErrorResponse(err) || err.error) {\r\n            handleError(err);\r\n          }\r\n        });\r\n        context.errors = sanitizeErrors(context.errors, serverMode);\r\n      }\r\n      let results = {};\r\n      let loadedMatches = new Set(\r\n        context.matches.filter(\r\n          (m) => loadRouteIds ? loadRouteIds.has(m.route.id) : m.route.loader != null\r\n        ).map((m) => m.route.id)\r\n      );\r\n      if (context.errors) {\r\n        for (let [id, error] of Object.entries(context.errors)) {\r\n          results[id] = { error };\r\n        }\r\n      }\r\n      for (let [id, data2] of Object.entries(context.loaderData)) {\r\n        if (!(id in results) && loadedMatches.has(id)) {\r\n          results[id] = { data: data2 };\r\n        }\r\n      }\r\n      return generateSingleFetchResponse(request, build, serverMode, {\r\n        result: results,\r\n        headers,\r\n        status: context.statusCode\r\n      });\r\n    };\r\n    var respond = respond2;\r\n    let handlerRequest = new Request(handlerUrl, {\r\n      headers: request.headers,\r\n      signal: request.signal\r\n    });\r\n    let routesParam = new URL(request.url).searchParams.get(\"_routes\");\r\n    let loadRouteIds = routesParam ? new Set(routesParam.split(\",\")) : null;\r\n    let result = await staticHandler.query(handlerRequest, {\r\n      requestContext: loadContext,\r\n      filterMatchesToLoad: (m) => !loadRouteIds || loadRouteIds.has(m.route.id),\r\n      skipLoaderErrorBubbling: true,\r\n      unstable_respond: respond2\r\n    });\r\n    if (!isResponse(result)) {\r\n      result = respond2(result);\r\n    }\r\n    if (isRedirectResponse(result)) {\r\n      return generateSingleFetchResponse(request, build, serverMode, {\r\n        result: {\r\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\r\n            result.status,\r\n            result.headers,\r\n            build.basename\r\n          )\r\n        },\r\n        headers: result.headers,\r\n        status: SINGLE_FETCH_REDIRECT_STATUS\r\n      });\r\n    }\r\n    return result;\r\n  } catch (error) {\r\n    handleError(error);\r\n    return generateSingleFetchResponse(request, build, serverMode, {\r\n      result: { root: { error } },\r\n      headers: new Headers(),\r\n      status: 500\r\n    });\r\n  }\r\n}\r\nfunction generateSingleFetchResponse(request, build, serverMode, {\r\n  result,\r\n  headers,\r\n  status\r\n}) {\r\n  let resultHeaders = new Headers(headers);\r\n  resultHeaders.set(\"X-Remix-Response\", \"yes\");\r\n  if (SERVER_NO_BODY_STATUS_CODES.has(status)) {\r\n    return new Response(null, { status, headers: resultHeaders });\r\n  }\r\n  resultHeaders.set(\"Content-Type\", \"text/x-script\");\r\n  return new Response(\r\n    encodeViaTurboStream(\r\n      result,\r\n      request.signal,\r\n      build.entry.module.streamTimeout,\r\n      serverMode\r\n    ),\r\n    {\r\n      status: status || 200,\r\n      headers: resultHeaders\r\n    }\r\n  );\r\n}\r\nfunction getSingleFetchRedirect(status, headers, basename) {\r\n  let redirect2 = headers.get(\"Location\");\r\n  if (basename) {\r\n    redirect2 = stripBasename(redirect2, basename) || redirect2;\r\n  }\r\n  return {\r\n    redirect: redirect2,\r\n    status,\r\n    revalidate: (\r\n      // Technically X-Remix-Revalidate isn't needed here - that was an implementation\r\n      // detail of ?_data requests as our way to tell the front end to revalidate when\r\n      // we didn't have a response body to include that information in.\r\n      // With single fetch, we tell the front end via this revalidate boolean field.\r\n      // However, we're respecting it for now because it may be something folks have\r\n      // used in their own responses\r\n      // TODO(v3): Consider removing or making this official public API\r\n      headers.has(\"X-Remix-Revalidate\") || headers.has(\"Set-Cookie\")\r\n    ),\r\n    reload: headers.has(\"X-Remix-Reload-Document\"),\r\n    replace: headers.has(\"X-Remix-Replace\")\r\n  };\r\n}\r\nfunction encodeViaTurboStream(data2, requestSignal, streamTimeout, serverMode) {\r\n  let controller = new AbortController();\r\n  let timeoutId = setTimeout(\r\n    () => controller.abort(new Error(\"Server Timeout\")),\r\n    typeof streamTimeout === \"number\" ? streamTimeout : 4950\r\n  );\r\n  requestSignal.addEventListener(\"abort\", () => clearTimeout(timeoutId));\r\n  return encode(data2, {\r\n    signal: controller.signal,\r\n    plugins: [\r\n      (value) => {\r\n        if (value instanceof Error) {\r\n          let { name, message, stack } = serverMode === \"production\" /* Production */ ? sanitizeError(value, serverMode) : value;\r\n          return [\"SanitizedError\", name, message, stack];\r\n        }\r\n        if (value instanceof ErrorResponseImpl) {\r\n          let { data: data3, status, statusText } = value;\r\n          return [\"ErrorResponse\", data3, status, statusText];\r\n        }\r\n        if (value && typeof value === \"object\" && SingleFetchRedirectSymbol in value) {\r\n          return [\"SingleFetchRedirect\", value[SingleFetchRedirectSymbol]];\r\n        }\r\n      }\r\n    ],\r\n    postPlugins: [\r\n      (value) => {\r\n        if (!value) return;\r\n        if (typeof value !== \"object\") return;\r\n        return [\r\n          \"SingleFetchClassInstance\",\r\n          Object.fromEntries(Object.entries(value))\r\n        ];\r\n      },\r\n      () => [\"SingleFetchFallback\"]\r\n    ]\r\n  });\r\n}\r\n\r\n// lib/server-runtime/server.ts\r\nfunction derive(build, mode) {\r\n  let routes = createRoutes(build.routes);\r\n  let dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future);\r\n  let serverMode = isServerMode(mode) ? mode : \"production\" /* Production */;\r\n  let staticHandler = createStaticHandler(dataRoutes, {\r\n    basename: build.basename\r\n  });\r\n  let errorHandler = build.entry.module.handleError || ((error, { request }) => {\r\n    if (serverMode !== \"test\" /* Test */ && !request.signal.aborted) {\r\n      console.error(\r\n        // @ts-expect-error This is \"private\" from users but intended for internal use\r\n        isRouteErrorResponse(error) && error.error ? error.error : error\r\n      );\r\n    }\r\n  });\r\n  return {\r\n    routes,\r\n    dataRoutes,\r\n    serverMode,\r\n    staticHandler,\r\n    errorHandler\r\n  };\r\n}\r\nvar createRequestHandler = (build, mode) => {\r\n  let _build;\r\n  let routes;\r\n  let serverMode;\r\n  let staticHandler;\r\n  let errorHandler;\r\n  return async function requestHandler(request, initialContext) {\r\n    _build = typeof build === \"function\" ? await build() : build;\r\n    if (typeof build === \"function\") {\r\n      let derived = derive(_build, mode);\r\n      routes = derived.routes;\r\n      serverMode = derived.serverMode;\r\n      staticHandler = derived.staticHandler;\r\n      errorHandler = derived.errorHandler;\r\n    } else if (!routes || !serverMode || !staticHandler || !errorHandler) {\r\n      let derived = derive(_build, mode);\r\n      routes = derived.routes;\r\n      serverMode = derived.serverMode;\r\n      staticHandler = derived.staticHandler;\r\n      errorHandler = derived.errorHandler;\r\n    }\r\n    let params = {};\r\n    let loadContext;\r\n    let handleError = (error) => {\r\n      if (mode === \"development\" /* Development */) {\r\n        getDevServerHooks()?.processRequestError?.(error);\r\n      }\r\n      errorHandler(error, {\r\n        context: loadContext,\r\n        params,\r\n        request\r\n      });\r\n    };\r\n    if (_build.future.unstable_middleware) {\r\n      if (initialContext == null) {\r\n        loadContext = new unstable_RouterContextProvider();\r\n      } else {\r\n        try {\r\n          loadContext = new unstable_RouterContextProvider(\r\n            initialContext\r\n          );\r\n        } catch (e) {\r\n          let error = new Error(\r\n            `Unable to create initial \\`unstable_RouterContextProvider\\` instance. Please confirm you are returning an instance of \\`Map<unstable_routerContext, unknown>\\` from your \\`getLoadContext\\` function.\r\n\r\nError: ${e instanceof Error ? e.toString() : e}`\r\n          );\r\n          handleError(error);\r\n          return returnLastResortErrorResponse(error, serverMode);\r\n        }\r\n      }\r\n    } else {\r\n      loadContext = initialContext || {};\r\n    }\r\n    let url = new URL(request.url);\r\n    let normalizedBasename = _build.basename || \"/\";\r\n    let normalizedPath = url.pathname;\r\n    if (stripBasename(normalizedPath, normalizedBasename) === \"/_root.data\") {\r\n      normalizedPath = normalizedBasename;\r\n    } else if (normalizedPath.endsWith(\".data\")) {\r\n      normalizedPath = normalizedPath.replace(/\\.data$/, \"\");\r\n    }\r\n    if (stripBasename(normalizedPath, normalizedBasename) !== \"/\" && normalizedPath.endsWith(\"/\")) {\r\n      normalizedPath = normalizedPath.slice(0, -1);\r\n    }\r\n    let isSpaMode = getBuildTimeHeader(request, \"X-React-Router-SPA-Mode\") === \"yes\";\r\n    if (!_build.ssr) {\r\n      if (_build.prerender.length === 0) {\r\n        isSpaMode = true;\r\n      } else if (!_build.prerender.includes(normalizedPath) && !_build.prerender.includes(normalizedPath + \"/\")) {\r\n        if (url.pathname.endsWith(\".data\")) {\r\n          errorHandler(\r\n            new ErrorResponseImpl(\r\n              404,\r\n              \"Not Found\",\r\n              `Refusing to SSR the path \\`${normalizedPath}\\` because \\`ssr:false\\` is set and the path is not included in the \\`prerender\\` config, so in production the path will be a 404.`\r\n            ),\r\n            {\r\n              context: loadContext,\r\n              params,\r\n              request\r\n            }\r\n          );\r\n          return new Response(\"Not Found\", {\r\n            status: 404,\r\n            statusText: \"Not Found\"\r\n          });\r\n        } else {\r\n          isSpaMode = true;\r\n        }\r\n      }\r\n    }\r\n    let manifestUrl = getManifestPath(\r\n      _build.routeDiscovery.manifestPath,\r\n      normalizedBasename\r\n    );\r\n    if (url.pathname === manifestUrl) {\r\n      try {\r\n        let res = await handleManifestRequest(_build, routes, url);\r\n        return res;\r\n      } catch (e) {\r\n        handleError(e);\r\n        return new Response(\"Unknown Server Error\", { status: 500 });\r\n      }\r\n    }\r\n    let matches = matchServerRoutes(routes, normalizedPath, _build.basename);\r\n    if (matches && matches.length > 0) {\r\n      Object.assign(params, matches[0].params);\r\n    }\r\n    let response;\r\n    if (url.pathname.endsWith(\".data\")) {\r\n      let handlerUrl = new URL(request.url);\r\n      handlerUrl.pathname = normalizedPath;\r\n      let singleFetchMatches = matchServerRoutes(\r\n        routes,\r\n        handlerUrl.pathname,\r\n        _build.basename\r\n      );\r\n      response = await handleSingleFetchRequest(\r\n        serverMode,\r\n        _build,\r\n        staticHandler,\r\n        request,\r\n        handlerUrl,\r\n        loadContext,\r\n        handleError\r\n      );\r\n      if (_build.entry.module.handleDataRequest) {\r\n        response = await _build.entry.module.handleDataRequest(response, {\r\n          context: loadContext,\r\n          params: singleFetchMatches ? singleFetchMatches[0].params : {},\r\n          request\r\n        });\r\n        if (isRedirectResponse(response)) {\r\n          let result = getSingleFetchRedirect(\r\n            response.status,\r\n            response.headers,\r\n            _build.basename\r\n          );\r\n          if (request.method === \"GET\") {\r\n            result = {\r\n              [SingleFetchRedirectSymbol]: result\r\n            };\r\n          }\r\n          let headers = new Headers(response.headers);\r\n          headers.set(\"Content-Type\", \"text/x-script\");\r\n          return new Response(\r\n            encodeViaTurboStream(\r\n              result,\r\n              request.signal,\r\n              _build.entry.module.streamTimeout,\r\n              serverMode\r\n            ),\r\n            {\r\n              status: SINGLE_FETCH_REDIRECT_STATUS,\r\n              headers\r\n            }\r\n          );\r\n        }\r\n      }\r\n    } else if (!isSpaMode && matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null) {\r\n      response = await handleResourceRequest(\r\n        serverMode,\r\n        _build,\r\n        staticHandler,\r\n        matches.slice(-1)[0].route.id,\r\n        request,\r\n        loadContext,\r\n        handleError\r\n      );\r\n    } else {\r\n      let { pathname } = url;\r\n      let criticalCss = void 0;\r\n      if (_build.unstable_getCriticalCss) {\r\n        criticalCss = await _build.unstable_getCriticalCss({ pathname });\r\n      } else if (mode === \"development\" /* Development */ && getDevServerHooks()?.getCriticalCss) {\r\n        criticalCss = await getDevServerHooks()?.getCriticalCss?.(pathname);\r\n      }\r\n      response = await handleDocumentRequest(\r\n        serverMode,\r\n        _build,\r\n        staticHandler,\r\n        request,\r\n        loadContext,\r\n        handleError,\r\n        isSpaMode,\r\n        criticalCss\r\n      );\r\n    }\r\n    if (request.method === \"HEAD\") {\r\n      return new Response(null, {\r\n        headers: response.headers,\r\n        status: response.status,\r\n        statusText: response.statusText\r\n      });\r\n    }\r\n    return response;\r\n  };\r\n};\r\nasync function handleManifestRequest(build, routes, url) {\r\n  if (build.assets.version !== url.searchParams.get(\"version\")) {\r\n    return new Response(null, {\r\n      status: 204,\r\n      headers: {\r\n        \"X-Remix-Reload-Document\": \"true\"\r\n      }\r\n    });\r\n  }\r\n  let patches = {};\r\n  if (url.searchParams.has(\"p\")) {\r\n    let paths = /* @__PURE__ */ new Set();\r\n    url.searchParams.getAll(\"p\").forEach((path) => {\r\n      if (!path.startsWith(\"/\")) {\r\n        path = `/${path}`;\r\n      }\r\n      let segments = path.split(\"/\").slice(1);\r\n      segments.forEach((_, i) => {\r\n        let partialPath = segments.slice(0, i + 1).join(\"/\");\r\n        paths.add(`/${partialPath}`);\r\n      });\r\n    });\r\n    for (let path of paths) {\r\n      let matches = matchServerRoutes(routes, path, build.basename);\r\n      if (matches) {\r\n        for (let match of matches) {\r\n          let routeId = match.route.id;\r\n          let route = build.assets.routes[routeId];\r\n          if (route) {\r\n            patches[routeId] = route;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return Response.json(patches, {\r\n      headers: {\r\n        \"Cache-Control\": \"public, max-age=31536000, immutable\"\r\n      }\r\n    });\r\n  }\r\n  return new Response(\"Invalid Request\", { status: 400 });\r\n}\r\nasync function handleSingleFetchRequest(serverMode, build, staticHandler, request, handlerUrl, loadContext, handleError) {\r\n  let response = request.method !== \"GET\" ? await singleFetchAction(\r\n    build,\r\n    serverMode,\r\n    staticHandler,\r\n    request,\r\n    handlerUrl,\r\n    loadContext,\r\n    handleError\r\n  ) : await singleFetchLoaders(\r\n    build,\r\n    serverMode,\r\n    staticHandler,\r\n    request,\r\n    handlerUrl,\r\n    loadContext,\r\n    handleError\r\n  );\r\n  return response;\r\n}\r\nasync function handleDocumentRequest(serverMode, build, staticHandler, request, loadContext, handleError, isSpaMode, criticalCss) {\r\n  try {\r\n    let response = await staticHandler.query(request, {\r\n      requestContext: loadContext,\r\n      unstable_respond: build.future.unstable_middleware ? (ctx) => renderHtml(ctx, isSpaMode) : void 0\r\n    });\r\n    return isResponse(response) ? response : renderHtml(response, isSpaMode);\r\n  } catch (error) {\r\n    handleError(error);\r\n    return new Response(null, { status: 500 });\r\n  }\r\n  async function renderHtml(context, isSpaMode2) {\r\n    if (isResponse(context)) {\r\n      return context;\r\n    }\r\n    let headers = getDocumentHeaders(build, context);\r\n    if (SERVER_NO_BODY_STATUS_CODES.has(context.statusCode)) {\r\n      return new Response(null, { status: context.statusCode, headers });\r\n    }\r\n    if (context.errors) {\r\n      Object.values(context.errors).forEach((err) => {\r\n        if (!isRouteErrorResponse(err) || err.error) {\r\n          handleError(err);\r\n        }\r\n      });\r\n      context.errors = sanitizeErrors(context.errors, serverMode);\r\n    }\r\n    let state = {\r\n      loaderData: context.loaderData,\r\n      actionData: context.actionData,\r\n      errors: serializeErrors2(context.errors, serverMode)\r\n    };\r\n    let baseServerHandoff = {\r\n      basename: build.basename,\r\n      future: build.future,\r\n      routeDiscovery: build.routeDiscovery,\r\n      ssr: build.ssr,\r\n      isSpaMode: isSpaMode2\r\n    };\r\n    let entryContext = {\r\n      manifest: build.assets,\r\n      routeModules: createEntryRouteModules(build.routes),\r\n      staticHandlerContext: context,\r\n      criticalCss,\r\n      serverHandoffString: createServerHandoffString({\r\n        ...baseServerHandoff,\r\n        criticalCss\r\n      }),\r\n      serverHandoffStream: encodeViaTurboStream(\r\n        state,\r\n        request.signal,\r\n        build.entry.module.streamTimeout,\r\n        serverMode\r\n      ),\r\n      renderMeta: {},\r\n      future: build.future,\r\n      ssr: build.ssr,\r\n      routeDiscovery: build.routeDiscovery,\r\n      isSpaMode: isSpaMode2,\r\n      serializeError: (err) => serializeError(err, serverMode)\r\n    };\r\n    let handleDocumentRequestFunction = build.entry.module.default;\r\n    try {\r\n      return await handleDocumentRequestFunction(\r\n        request,\r\n        context.statusCode,\r\n        headers,\r\n        entryContext,\r\n        loadContext\r\n      );\r\n    } catch (error) {\r\n      handleError(error);\r\n      let errorForSecondRender = error;\r\n      if (isResponse(error)) {\r\n        try {\r\n          let data2 = await unwrapResponse(error);\r\n          errorForSecondRender = new ErrorResponseImpl(\r\n            error.status,\r\n            error.statusText,\r\n            data2\r\n          );\r\n        } catch (e) {\r\n        }\r\n      }\r\n      context = getStaticContextFromError(\r\n        staticHandler.dataRoutes,\r\n        context,\r\n        errorForSecondRender\r\n      );\r\n      if (context.errors) {\r\n        context.errors = sanitizeErrors(context.errors, serverMode);\r\n      }\r\n      let state2 = {\r\n        loaderData: context.loaderData,\r\n        actionData: context.actionData,\r\n        errors: serializeErrors2(context.errors, serverMode)\r\n      };\r\n      entryContext = {\r\n        ...entryContext,\r\n        staticHandlerContext: context,\r\n        serverHandoffString: createServerHandoffString(baseServerHandoff),\r\n        serverHandoffStream: encodeViaTurboStream(\r\n          state2,\r\n          request.signal,\r\n          build.entry.module.streamTimeout,\r\n          serverMode\r\n        ),\r\n        renderMeta: {}\r\n      };\r\n      try {\r\n        return await handleDocumentRequestFunction(\r\n          request,\r\n          context.statusCode,\r\n          headers,\r\n          entryContext,\r\n          loadContext\r\n        );\r\n      } catch (error2) {\r\n        handleError(error2);\r\n        return returnLastResortErrorResponse(error2, serverMode);\r\n      }\r\n    }\r\n  }\r\n}\r\nasync function handleResourceRequest(serverMode, build, staticHandler, routeId, request, loadContext, handleError) {\r\n  try {\r\n    let response = await staticHandler.queryRoute(request, {\r\n      routeId,\r\n      requestContext: loadContext,\r\n      unstable_respond: build.future.unstable_middleware ? (ctx) => ctx : void 0\r\n    });\r\n    if (isResponse(response)) {\r\n      return response;\r\n    }\r\n    if (typeof response === \"string\") {\r\n      return new Response(response);\r\n    }\r\n    return Response.json(response);\r\n  } catch (error) {\r\n    if (isResponse(error)) {\r\n      error.headers.set(\"X-Remix-Catch\", \"yes\");\r\n      return error;\r\n    }\r\n    if (isRouteErrorResponse(error)) {\r\n      if (error) {\r\n        handleError(error);\r\n      }\r\n      return errorResponseToJson(error, serverMode);\r\n    }\r\n    if (error instanceof Error && error.message === \"Expected a response from queryRoute\") {\r\n      let newError = new Error(\r\n        \"Expected a Response to be returned from resource route handler\"\r\n      );\r\n      handleError(newError);\r\n      return returnLastResortErrorResponse(newError, serverMode);\r\n    }\r\n    handleError(error);\r\n    return returnLastResortErrorResponse(error, serverMode);\r\n  }\r\n}\r\nfunction errorResponseToJson(errorResponse, serverMode) {\r\n  return Response.json(\r\n    serializeError(\r\n      // @ts-expect-error This is \"private\" from users but intended for internal use\r\n      errorResponse.error || new Error(\"Unexpected Server Error\"),\r\n      serverMode\r\n    ),\r\n    {\r\n      status: errorResponse.status,\r\n      statusText: errorResponse.statusText,\r\n      headers: {\r\n        \"X-Remix-Error\": \"yes\"\r\n      }\r\n    }\r\n  );\r\n}\r\nfunction returnLastResortErrorResponse(error, serverMode) {\r\n  let message = \"Unexpected Server Error\";\r\n  if (serverMode !== \"production\" /* Production */) {\r\n    message += `\r\n\r\n${String(error)}`;\r\n  }\r\n  return new Response(message, {\r\n    status: 500,\r\n    headers: {\r\n      \"Content-Type\": \"text/plain\"\r\n    }\r\n  });\r\n}\r\nfunction unwrapResponse(response) {\r\n  let contentType = response.headers.get(\"Content-Type\");\r\n  return contentType && /\\bapplication\\/json\\b/.test(contentType) ? response.body == null ? null : response.json() : response.text();\r\n}\r\n\r\n// lib/server-runtime/sessions.ts\r\nfunction flash(name) {\r\n  return `__flash_${name}__`;\r\n}\r\nvar createSession = (initialData = {}, id = \"\") => {\r\n  let map = new Map(Object.entries(initialData));\r\n  return {\r\n    get id() {\r\n      return id;\r\n    },\r\n    get data() {\r\n      return Object.fromEntries(map);\r\n    },\r\n    has(name) {\r\n      return map.has(name) || map.has(flash(name));\r\n    },\r\n    get(name) {\r\n      if (map.has(name)) return map.get(name);\r\n      let flashName = flash(name);\r\n      if (map.has(flashName)) {\r\n        let value = map.get(flashName);\r\n        map.delete(flashName);\r\n        return value;\r\n      }\r\n      return void 0;\r\n    },\r\n    set(name, value) {\r\n      map.set(name, value);\r\n    },\r\n    flash(name, value) {\r\n      map.set(flash(name), value);\r\n    },\r\n    unset(name) {\r\n      map.delete(name);\r\n    }\r\n  };\r\n};\r\nvar isSession = (object) => {\r\n  return object != null && typeof object.id === \"string\" && typeof object.data !== \"undefined\" && typeof object.has === \"function\" && typeof object.get === \"function\" && typeof object.set === \"function\" && typeof object.flash === \"function\" && typeof object.unset === \"function\";\r\n};\r\nfunction createSessionStorage({\r\n  cookie: cookieArg,\r\n  createData,\r\n  readData,\r\n  updateData,\r\n  deleteData\r\n}) {\r\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \"__session\", cookieArg);\r\n  warnOnceAboutSigningSessionCookie(cookie);\r\n  return {\r\n    async getSession(cookieHeader, options) {\r\n      let id = cookieHeader && await cookie.parse(cookieHeader, options);\r\n      let data2 = id && await readData(id);\r\n      return createSession(data2 || {}, id || \"\");\r\n    },\r\n    async commitSession(session, options) {\r\n      let { id, data: data2 } = session;\r\n      let expires = options?.maxAge != null ? new Date(Date.now() + options.maxAge * 1e3) : options?.expires != null ? options.expires : cookie.expires;\r\n      if (id) {\r\n        await updateData(id, data2, expires);\r\n      } else {\r\n        id = await createData(data2, expires);\r\n      }\r\n      return cookie.serialize(id, options);\r\n    },\r\n    async destroySession(session, options) {\r\n      await deleteData(session.id);\r\n      return cookie.serialize(\"\", {\r\n        ...options,\r\n        maxAge: void 0,\r\n        expires: /* @__PURE__ */ new Date(0)\r\n      });\r\n    }\r\n  };\r\n}\r\nfunction warnOnceAboutSigningSessionCookie(cookie) {\r\n  warnOnce(\r\n    cookie.isSigned,\r\n    `The \"${cookie.name}\" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://reactrouter.com/explanation/sessions-and-cookies#signing-cookies for more information.`\r\n  );\r\n}\r\n\r\n// lib/server-runtime/sessions/cookieStorage.ts\r\nfunction createCookieSessionStorage({ cookie: cookieArg } = {}) {\r\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \"__session\", cookieArg);\r\n  warnOnceAboutSigningSessionCookie(cookie);\r\n  return {\r\n    async getSession(cookieHeader, options) {\r\n      return createSession(\r\n        cookieHeader && await cookie.parse(cookieHeader, options) || {}\r\n      );\r\n    },\r\n    async commitSession(session, options) {\r\n      let serializedCookie = await cookie.serialize(session.data, options);\r\n      if (serializedCookie.length > 4096) {\r\n        throw new Error(\r\n          \"Cookie length will exceed browser maximum. Length: \" + serializedCookie.length\r\n        );\r\n      }\r\n      return serializedCookie;\r\n    },\r\n    async destroySession(_session, options) {\r\n      return cookie.serialize(\"\", {\r\n        ...options,\r\n        maxAge: void 0,\r\n        expires: /* @__PURE__ */ new Date(0)\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n// lib/server-runtime/sessions/memoryStorage.ts\r\nfunction createMemorySessionStorage({ cookie } = {}) {\r\n  let map = /* @__PURE__ */ new Map();\r\n  return createSessionStorage({\r\n    cookie,\r\n    async createData(data2, expires) {\r\n      let id = Math.random().toString(36).substring(2, 10);\r\n      map.set(id, { data: data2, expires });\r\n      return id;\r\n    },\r\n    async readData(id) {\r\n      if (map.has(id)) {\r\n        let { data: data2, expires } = map.get(id);\r\n        if (!expires || expires > /* @__PURE__ */ new Date()) {\r\n          return data2;\r\n        }\r\n        if (expires) map.delete(id);\r\n      }\r\n      return null;\r\n    },\r\n    async updateData(id, data2, expires) {\r\n      map.set(id, { data: data2, expires });\r\n    },\r\n    async deleteData(id) {\r\n      map.delete(id);\r\n    }\r\n  });\r\n}\r\n\r\n// lib/href.ts\r\nfunction href(path, ...args) {\r\n  let params = args[0];\r\n  return path.split(\"/\").map((segment) => {\r\n    if (segment === \"*\") {\r\n      return params ? params[\"*\"] : void 0;\r\n    }\r\n    const match = segment.match(/^:([\\w-]+)(\\?)?/);\r\n    if (!match) return segment;\r\n    const param = match[1];\r\n    const value = params ? params[param] : void 0;\r\n    const isRequired = match[2] === void 0;\r\n    if (isRequired && value === void 0) {\r\n      throw Error(\r\n        `Path '${path}' requires param '${param}' but it was not provided`\r\n      );\r\n    }\r\n    return value;\r\n  }).filter((segment) => segment !== void 0).join(\"/\");\r\n}\r\n\r\n// lib/dom/ssr/errors.ts\r\nfunction deserializeErrors2(errors) {\r\n  if (!errors) return null;\r\n  let entries = Object.entries(errors);\r\n  let serialized = {};\r\n  for (let [key, val] of entries) {\r\n    if (val && val.__type === \"RouteErrorResponse\") {\r\n      serialized[key] = new ErrorResponseImpl(\r\n        val.status,\r\n        val.statusText,\r\n        val.data,\r\n        val.internal === true\r\n      );\r\n    } else if (val && val.__type === \"Error\") {\r\n      if (val.__subType) {\r\n        let ErrorConstructor = window[val.__subType];\r\n        if (typeof ErrorConstructor === \"function\") {\r\n          try {\r\n            let error = new ErrorConstructor(val.message);\r\n            error.stack = val.stack;\r\n            serialized[key] = error;\r\n          } catch (e) {\r\n          }\r\n        }\r\n      }\r\n      if (serialized[key] == null) {\r\n        let error = new Error(val.message);\r\n        error.stack = val.stack;\r\n        serialized[key] = error;\r\n      }\r\n    } else {\r\n      serialized[key] = val;\r\n    }\r\n  }\r\n  return serialized;\r\n}\r\n\r\n// lib/dom/ssr/hydration.tsx\r\nfunction getHydrationData(state, routes, getRouteInfo, location, basename, isSpaMode) {\r\n  let hydrationData = {\r\n    ...state,\r\n    loaderData: { ...state.loaderData }\r\n  };\r\n  let initialMatches = matchRoutes(routes, location, basename);\r\n  if (initialMatches) {\r\n    for (let match of initialMatches) {\r\n      let routeId = match.route.id;\r\n      let routeInfo = getRouteInfo(routeId);\r\n      if (shouldHydrateRouteLoader(\r\n        routeId,\r\n        routeInfo.clientLoader,\r\n        routeInfo.hasLoader,\r\n        isSpaMode\r\n      ) && (routeInfo.hasHydrateFallback || !routeInfo.hasLoader)) {\r\n        delete hydrationData.loaderData[routeId];\r\n      } else if (!routeInfo.hasLoader) {\r\n        hydrationData.loaderData[routeId] = null;\r\n      }\r\n    }\r\n  }\r\n  return hydrationData;\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/react-router/dist/development/chunk-NL6KNZEE.mjs?");

/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\r\n * @license React\r\n * react.development.js\r\n *\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\r\n true &&\r\n  (function () {\r\n    function defineDeprecationWarning(methodName, info) {\r\n      Object.defineProperty(Component.prototype, methodName, {\r\n        get: function () {\r\n          console.warn(\r\n            \"%s(...) is deprecated in plain JavaScript React classes. %s\",\r\n            info[0],\r\n            info[1]\r\n          );\r\n        }\r\n      });\r\n    }\r\n    function getIteratorFn(maybeIterable) {\r\n      if (null === maybeIterable || \"object\" !== typeof maybeIterable)\r\n        return null;\r\n      maybeIterable =\r\n        (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n        maybeIterable[\"@@iterator\"];\r\n      return \"function\" === typeof maybeIterable ? maybeIterable : null;\r\n    }\r\n    function warnNoop(publicInstance, callerName) {\r\n      publicInstance =\r\n        ((publicInstance = publicInstance.constructor) &&\r\n          (publicInstance.displayName || publicInstance.name)) ||\r\n        \"ReactClass\";\r\n      var warningKey = publicInstance + \".\" + callerName;\r\n      didWarnStateUpdateForUnmountedComponent[warningKey] ||\r\n        (console.error(\r\n          \"Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.\",\r\n          callerName,\r\n          publicInstance\r\n        ),\r\n        (didWarnStateUpdateForUnmountedComponent[warningKey] = !0));\r\n    }\r\n    function Component(props, context, updater) {\r\n      this.props = props;\r\n      this.context = context;\r\n      this.refs = emptyObject;\r\n      this.updater = updater || ReactNoopUpdateQueue;\r\n    }\r\n    function ComponentDummy() {}\r\n    function PureComponent(props, context, updater) {\r\n      this.props = props;\r\n      this.context = context;\r\n      this.refs = emptyObject;\r\n      this.updater = updater || ReactNoopUpdateQueue;\r\n    }\r\n    function testStringCoercion(value) {\r\n      return \"\" + value;\r\n    }\r\n    function checkKeyStringCoercion(value) {\r\n      try {\r\n        testStringCoercion(value);\r\n        var JSCompiler_inline_result = !1;\r\n      } catch (e) {\r\n        JSCompiler_inline_result = !0;\r\n      }\r\n      if (JSCompiler_inline_result) {\r\n        JSCompiler_inline_result = console;\r\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\r\n        var JSCompiler_inline_result$jscomp$0 =\r\n          (\"function\" === typeof Symbol &&\r\n            Symbol.toStringTag &&\r\n            value[Symbol.toStringTag]) ||\r\n          value.constructor.name ||\r\n          \"Object\";\r\n        JSCompiler_temp_const.call(\r\n          JSCompiler_inline_result,\r\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\r\n          JSCompiler_inline_result$jscomp$0\r\n        );\r\n        return testStringCoercion(value);\r\n      }\r\n    }\r\n    function getComponentNameFromType(type) {\r\n      if (null == type) return null;\r\n      if (\"function\" === typeof type)\r\n        return type.$$typeof === REACT_CLIENT_REFERENCE\r\n          ? null\r\n          : type.displayName || type.name || null;\r\n      if (\"string\" === typeof type) return type;\r\n      switch (type) {\r\n        case REACT_FRAGMENT_TYPE:\r\n          return \"Fragment\";\r\n        case REACT_PROFILER_TYPE:\r\n          return \"Profiler\";\r\n        case REACT_STRICT_MODE_TYPE:\r\n          return \"StrictMode\";\r\n        case REACT_SUSPENSE_TYPE:\r\n          return \"Suspense\";\r\n        case REACT_SUSPENSE_LIST_TYPE:\r\n          return \"SuspenseList\";\r\n        case REACT_ACTIVITY_TYPE:\r\n          return \"Activity\";\r\n      }\r\n      if (\"object\" === typeof type)\r\n        switch (\r\n          (\"number\" === typeof type.tag &&\r\n            console.error(\r\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\r\n            ),\r\n          type.$$typeof)\r\n        ) {\r\n          case REACT_PORTAL_TYPE:\r\n            return \"Portal\";\r\n          case REACT_CONTEXT_TYPE:\r\n            return (type.displayName || \"Context\") + \".Provider\";\r\n          case REACT_CONSUMER_TYPE:\r\n            return (type._context.displayName || \"Context\") + \".Consumer\";\r\n          case REACT_FORWARD_REF_TYPE:\r\n            var innerType = type.render;\r\n            type = type.displayName;\r\n            type ||\r\n              ((type = innerType.displayName || innerType.name || \"\"),\r\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\r\n            return type;\r\n          case REACT_MEMO_TYPE:\r\n            return (\r\n              (innerType = type.displayName || null),\r\n              null !== innerType\r\n                ? innerType\r\n                : getComponentNameFromType(type.type) || \"Memo\"\r\n            );\r\n          case REACT_LAZY_TYPE:\r\n            innerType = type._payload;\r\n            type = type._init;\r\n            try {\r\n              return getComponentNameFromType(type(innerType));\r\n            } catch (x) {}\r\n        }\r\n      return null;\r\n    }\r\n    function getTaskName(type) {\r\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\r\n      if (\r\n        \"object\" === typeof type &&\r\n        null !== type &&\r\n        type.$$typeof === REACT_LAZY_TYPE\r\n      )\r\n        return \"<...>\";\r\n      try {\r\n        var name = getComponentNameFromType(type);\r\n        return name ? \"<\" + name + \">\" : \"<...>\";\r\n      } catch (x) {\r\n        return \"<...>\";\r\n      }\r\n    }\r\n    function getOwner() {\r\n      var dispatcher = ReactSharedInternals.A;\r\n      return null === dispatcher ? null : dispatcher.getOwner();\r\n    }\r\n    function UnknownOwner() {\r\n      return Error(\"react-stack-top-frame\");\r\n    }\r\n    function hasValidKey(config) {\r\n      if (hasOwnProperty.call(config, \"key\")) {\r\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\r\n        if (getter && getter.isReactWarning) return !1;\r\n      }\r\n      return void 0 !== config.key;\r\n    }\r\n    function defineKeyPropWarningGetter(props, displayName) {\r\n      function warnAboutAccessingKey() {\r\n        specialPropKeyWarningShown ||\r\n          ((specialPropKeyWarningShown = !0),\r\n          console.error(\r\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\r\n            displayName\r\n          ));\r\n      }\r\n      warnAboutAccessingKey.isReactWarning = !0;\r\n      Object.defineProperty(props, \"key\", {\r\n        get: warnAboutAccessingKey,\r\n        configurable: !0\r\n      });\r\n    }\r\n    function elementRefGetterWithDeprecationWarning() {\r\n      var componentName = getComponentNameFromType(this.type);\r\n      didWarnAboutElementRef[componentName] ||\r\n        ((didWarnAboutElementRef[componentName] = !0),\r\n        console.error(\r\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\r\n        ));\r\n      componentName = this.props.ref;\r\n      return void 0 !== componentName ? componentName : null;\r\n    }\r\n    function ReactElement(\r\n      type,\r\n      key,\r\n      self,\r\n      source,\r\n      owner,\r\n      props,\r\n      debugStack,\r\n      debugTask\r\n    ) {\r\n      self = props.ref;\r\n      type = {\r\n        $$typeof: REACT_ELEMENT_TYPE,\r\n        type: type,\r\n        key: key,\r\n        props: props,\r\n        _owner: owner\r\n      };\r\n      null !== (void 0 !== self ? self : null)\r\n        ? Object.defineProperty(type, \"ref\", {\r\n            enumerable: !1,\r\n            get: elementRefGetterWithDeprecationWarning\r\n          })\r\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\r\n      type._store = {};\r\n      Object.defineProperty(type._store, \"validated\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: 0\r\n      });\r\n      Object.defineProperty(type, \"_debugInfo\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: null\r\n      });\r\n      Object.defineProperty(type, \"_debugStack\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: debugStack\r\n      });\r\n      Object.defineProperty(type, \"_debugTask\", {\r\n        configurable: !1,\r\n        enumerable: !1,\r\n        writable: !0,\r\n        value: debugTask\r\n      });\r\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\r\n      return type;\r\n    }\r\n    function cloneAndReplaceKey(oldElement, newKey) {\r\n      newKey = ReactElement(\r\n        oldElement.type,\r\n        newKey,\r\n        void 0,\r\n        void 0,\r\n        oldElement._owner,\r\n        oldElement.props,\r\n        oldElement._debugStack,\r\n        oldElement._debugTask\r\n      );\r\n      oldElement._store &&\r\n        (newKey._store.validated = oldElement._store.validated);\r\n      return newKey;\r\n    }\r\n    function isValidElement(object) {\r\n      return (\r\n        \"object\" === typeof object &&\r\n        null !== object &&\r\n        object.$$typeof === REACT_ELEMENT_TYPE\r\n      );\r\n    }\r\n    function escape(key) {\r\n      var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\r\n      return (\r\n        \"$\" +\r\n        key.replace(/[=:]/g, function (match) {\r\n          return escaperLookup[match];\r\n        })\r\n      );\r\n    }\r\n    function getElementKey(element, index) {\r\n      return \"object\" === typeof element &&\r\n        null !== element &&\r\n        null != element.key\r\n        ? (checkKeyStringCoercion(element.key), escape(\"\" + element.key))\r\n        : index.toString(36);\r\n    }\r\n    function noop$1() {}\r\n    function resolveThenable(thenable) {\r\n      switch (thenable.status) {\r\n        case \"fulfilled\":\r\n          return thenable.value;\r\n        case \"rejected\":\r\n          throw thenable.reason;\r\n        default:\r\n          switch (\r\n            (\"string\" === typeof thenable.status\r\n              ? thenable.then(noop$1, noop$1)\r\n              : ((thenable.status = \"pending\"),\r\n                thenable.then(\r\n                  function (fulfilledValue) {\r\n                    \"pending\" === thenable.status &&\r\n                      ((thenable.status = \"fulfilled\"),\r\n                      (thenable.value = fulfilledValue));\r\n                  },\r\n                  function (error) {\r\n                    \"pending\" === thenable.status &&\r\n                      ((thenable.status = \"rejected\"),\r\n                      (thenable.reason = error));\r\n                  }\r\n                )),\r\n            thenable.status)\r\n          ) {\r\n            case \"fulfilled\":\r\n              return thenable.value;\r\n            case \"rejected\":\r\n              throw thenable.reason;\r\n          }\r\n      }\r\n      throw thenable;\r\n    }\r\n    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\r\n      var type = typeof children;\r\n      if (\"undefined\" === type || \"boolean\" === type) children = null;\r\n      var invokeCallback = !1;\r\n      if (null === children) invokeCallback = !0;\r\n      else\r\n        switch (type) {\r\n          case \"bigint\":\r\n          case \"string\":\r\n          case \"number\":\r\n            invokeCallback = !0;\r\n            break;\r\n          case \"object\":\r\n            switch (children.$$typeof) {\r\n              case REACT_ELEMENT_TYPE:\r\n              case REACT_PORTAL_TYPE:\r\n                invokeCallback = !0;\r\n                break;\r\n              case REACT_LAZY_TYPE:\r\n                return (\r\n                  (invokeCallback = children._init),\r\n                  mapIntoArray(\r\n                    invokeCallback(children._payload),\r\n                    array,\r\n                    escapedPrefix,\r\n                    nameSoFar,\r\n                    callback\r\n                  )\r\n                );\r\n            }\r\n        }\r\n      if (invokeCallback) {\r\n        invokeCallback = children;\r\n        callback = callback(invokeCallback);\r\n        var childKey =\r\n          \"\" === nameSoFar ? \".\" + getElementKey(invokeCallback, 0) : nameSoFar;\r\n        isArrayImpl(callback)\r\n          ? ((escapedPrefix = \"\"),\r\n            null != childKey &&\r\n              (escapedPrefix =\r\n                childKey.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\r\n            mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\r\n              return c;\r\n            }))\r\n          : null != callback &&\r\n            (isValidElement(callback) &&\r\n              (null != callback.key &&\r\n                ((invokeCallback && invokeCallback.key === callback.key) ||\r\n                  checkKeyStringCoercion(callback.key)),\r\n              (escapedPrefix = cloneAndReplaceKey(\r\n                callback,\r\n                escapedPrefix +\r\n                  (null == callback.key ||\r\n                  (invokeCallback && invokeCallback.key === callback.key)\r\n                    ? \"\"\r\n                    : (\"\" + callback.key).replace(\r\n                        userProvidedKeyEscapeRegex,\r\n                        \"$&/\"\r\n                      ) + \"/\") +\r\n                  childKey\r\n              )),\r\n              \"\" !== nameSoFar &&\r\n                null != invokeCallback &&\r\n                isValidElement(invokeCallback) &&\r\n                null == invokeCallback.key &&\r\n                invokeCallback._store &&\r\n                !invokeCallback._store.validated &&\r\n                (escapedPrefix._store.validated = 2),\r\n              (callback = escapedPrefix)),\r\n            array.push(callback));\r\n        return 1;\r\n      }\r\n      invokeCallback = 0;\r\n      childKey = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\r\n      if (isArrayImpl(children))\r\n        for (var i = 0; i < children.length; i++)\r\n          (nameSoFar = children[i]),\r\n            (type = childKey + getElementKey(nameSoFar, i)),\r\n            (invokeCallback += mapIntoArray(\r\n              nameSoFar,\r\n              array,\r\n              escapedPrefix,\r\n              type,\r\n              callback\r\n            ));\r\n      else if (((i = getIteratorFn(children)), \"function\" === typeof i))\r\n        for (\r\n          i === children.entries &&\r\n            (didWarnAboutMaps ||\r\n              console.warn(\r\n                \"Using Maps as children is not supported. Use an array of keyed ReactElements instead.\"\r\n              ),\r\n            (didWarnAboutMaps = !0)),\r\n            children = i.call(children),\r\n            i = 0;\r\n          !(nameSoFar = children.next()).done;\r\n\r\n        )\r\n          (nameSoFar = nameSoFar.value),\r\n            (type = childKey + getElementKey(nameSoFar, i++)),\r\n            (invokeCallback += mapIntoArray(\r\n              nameSoFar,\r\n              array,\r\n              escapedPrefix,\r\n              type,\r\n              callback\r\n            ));\r\n      else if (\"object\" === type) {\r\n        if (\"function\" === typeof children.then)\r\n          return mapIntoArray(\r\n            resolveThenable(children),\r\n            array,\r\n            escapedPrefix,\r\n            nameSoFar,\r\n            callback\r\n          );\r\n        array = String(children);\r\n        throw Error(\r\n          \"Objects are not valid as a React child (found: \" +\r\n            (\"[object Object]\" === array\r\n              ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\r\n              : array) +\r\n            \"). If you meant to render a collection of children, use an array instead.\"\r\n        );\r\n      }\r\n      return invokeCallback;\r\n    }\r\n    function mapChildren(children, func, context) {\r\n      if (null == children) return children;\r\n      var result = [],\r\n        count = 0;\r\n      mapIntoArray(children, result, \"\", \"\", function (child) {\r\n        return func.call(context, child, count++);\r\n      });\r\n      return result;\r\n    }\r\n    function lazyInitializer(payload) {\r\n      if (-1 === payload._status) {\r\n        var ctor = payload._result;\r\n        ctor = ctor();\r\n        ctor.then(\r\n          function (moduleObject) {\r\n            if (0 === payload._status || -1 === payload._status)\r\n              (payload._status = 1), (payload._result = moduleObject);\r\n          },\r\n          function (error) {\r\n            if (0 === payload._status || -1 === payload._status)\r\n              (payload._status = 2), (payload._result = error);\r\n          }\r\n        );\r\n        -1 === payload._status &&\r\n          ((payload._status = 0), (payload._result = ctor));\r\n      }\r\n      if (1 === payload._status)\r\n        return (\r\n          (ctor = payload._result),\r\n          void 0 === ctor &&\r\n            console.error(\r\n              \"lazy: Expected the result of a dynamic import() call. Instead received: %s\\n\\nYour code should look like: \\n  const MyComponent = lazy(() => import('./MyComponent'))\\n\\nDid you accidentally put curly braces around the import?\",\r\n              ctor\r\n            ),\r\n          \"default\" in ctor ||\r\n            console.error(\r\n              \"lazy: Expected the result of a dynamic import() call. Instead received: %s\\n\\nYour code should look like: \\n  const MyComponent = lazy(() => import('./MyComponent'))\",\r\n              ctor\r\n            ),\r\n          ctor.default\r\n        );\r\n      throw payload._result;\r\n    }\r\n    function resolveDispatcher() {\r\n      var dispatcher = ReactSharedInternals.H;\r\n      null === dispatcher &&\r\n        console.error(\r\n          \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.\"\r\n        );\r\n      return dispatcher;\r\n    }\r\n    function noop() {}\r\n    function enqueueTask(task) {\r\n      if (null === enqueueTaskImpl)\r\n        try {\r\n          var requireString = (\"require\" + Math.random()).slice(0, 7);\r\n          enqueueTaskImpl = (module && module[requireString]).call(\r\n            module,\r\n            \"timers\"\r\n          ).setImmediate;\r\n        } catch (_err) {\r\n          enqueueTaskImpl = function (callback) {\r\n            !1 === didWarnAboutMessageChannel &&\r\n              ((didWarnAboutMessageChannel = !0),\r\n              \"undefined\" === typeof MessageChannel &&\r\n                console.error(\r\n                  \"This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.\"\r\n                ));\r\n            var channel = new MessageChannel();\r\n            channel.port1.onmessage = callback;\r\n            channel.port2.postMessage(void 0);\r\n          };\r\n        }\r\n      return enqueueTaskImpl(task);\r\n    }\r\n    function aggregateErrors(errors) {\r\n      return 1 < errors.length && \"function\" === typeof AggregateError\r\n        ? new AggregateError(errors)\r\n        : errors[0];\r\n    }\r\n    function popActScope(prevActQueue, prevActScopeDepth) {\r\n      prevActScopeDepth !== actScopeDepth - 1 &&\r\n        console.error(\r\n          \"You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. \"\r\n        );\r\n      actScopeDepth = prevActScopeDepth;\r\n    }\r\n    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\r\n      var queue = ReactSharedInternals.actQueue;\r\n      if (null !== queue)\r\n        if (0 !== queue.length)\r\n          try {\r\n            flushActQueue(queue);\r\n            enqueueTask(function () {\r\n              return recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n            });\r\n            return;\r\n          } catch (error) {\r\n            ReactSharedInternals.thrownErrors.push(error);\r\n          }\r\n        else ReactSharedInternals.actQueue = null;\r\n      0 < ReactSharedInternals.thrownErrors.length\r\n        ? ((queue = aggregateErrors(ReactSharedInternals.thrownErrors)),\r\n          (ReactSharedInternals.thrownErrors.length = 0),\r\n          reject(queue))\r\n        : resolve(returnValue);\r\n    }\r\n    function flushActQueue(queue) {\r\n      if (!isFlushing) {\r\n        isFlushing = !0;\r\n        var i = 0;\r\n        try {\r\n          for (; i < queue.length; i++) {\r\n            var callback = queue[i];\r\n            do {\r\n              ReactSharedInternals.didUsePromise = !1;\r\n              var continuation = callback(!1);\r\n              if (null !== continuation) {\r\n                if (ReactSharedInternals.didUsePromise) {\r\n                  queue[i] = callback;\r\n                  queue.splice(0, i);\r\n                  return;\r\n                }\r\n                callback = continuation;\r\n              } else break;\r\n            } while (1);\r\n          }\r\n          queue.length = 0;\r\n        } catch (error) {\r\n          queue.splice(0, i + 1), ReactSharedInternals.thrownErrors.push(error);\r\n        } finally {\r\n          isFlushing = !1;\r\n        }\r\n      }\r\n    }\r\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\r\n      \"function\" ===\r\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\r\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\r\n    var REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\r\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\r\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\r\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\r\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\r\n    Symbol.for(\"react.provider\");\r\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\r\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\r\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\r\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\r\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\r\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\r\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\r\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\r\n      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,\r\n      didWarnStateUpdateForUnmountedComponent = {},\r\n      ReactNoopUpdateQueue = {\r\n        isMounted: function () {\r\n          return !1;\r\n        },\r\n        enqueueForceUpdate: function (publicInstance) {\r\n          warnNoop(publicInstance, \"forceUpdate\");\r\n        },\r\n        enqueueReplaceState: function (publicInstance) {\r\n          warnNoop(publicInstance, \"replaceState\");\r\n        },\r\n        enqueueSetState: function (publicInstance) {\r\n          warnNoop(publicInstance, \"setState\");\r\n        }\r\n      },\r\n      assign = Object.assign,\r\n      emptyObject = {};\r\n    Object.freeze(emptyObject);\r\n    Component.prototype.isReactComponent = {};\r\n    Component.prototype.setState = function (partialState, callback) {\r\n      if (\r\n        \"object\" !== typeof partialState &&\r\n        \"function\" !== typeof partialState &&\r\n        null != partialState\r\n      )\r\n        throw Error(\r\n          \"takes an object of state variables to update or a function which returns an object of state variables.\"\r\n        );\r\n      this.updater.enqueueSetState(this, partialState, callback, \"setState\");\r\n    };\r\n    Component.prototype.forceUpdate = function (callback) {\r\n      this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\r\n    };\r\n    var deprecatedAPIs = {\r\n        isMounted: [\r\n          \"isMounted\",\r\n          \"Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.\"\r\n        ],\r\n        replaceState: [\r\n          \"replaceState\",\r\n          \"Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236).\"\r\n        ]\r\n      },\r\n      fnName;\r\n    for (fnName in deprecatedAPIs)\r\n      deprecatedAPIs.hasOwnProperty(fnName) &&\r\n        defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\r\n    ComponentDummy.prototype = Component.prototype;\r\n    deprecatedAPIs = PureComponent.prototype = new ComponentDummy();\r\n    deprecatedAPIs.constructor = PureComponent;\r\n    assign(deprecatedAPIs, Component.prototype);\r\n    deprecatedAPIs.isPureReactComponent = !0;\r\n    var isArrayImpl = Array.isArray,\r\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\r\n      ReactSharedInternals = {\r\n        H: null,\r\n        A: null,\r\n        T: null,\r\n        S: null,\r\n        V: null,\r\n        actQueue: null,\r\n        isBatchingLegacy: !1,\r\n        didScheduleLegacyUpdate: !1,\r\n        didUsePromise: !1,\r\n        thrownErrors: [],\r\n        getCurrentStack: null,\r\n        recentlyCreatedOwnerStacks: 0\r\n      },\r\n      hasOwnProperty = Object.prototype.hasOwnProperty,\r\n      createTask = console.createTask\r\n        ? console.createTask\r\n        : function () {\r\n            return null;\r\n          };\r\n    deprecatedAPIs = {\r\n      \"react-stack-bottom-frame\": function (callStackForError) {\r\n        return callStackForError();\r\n      }\r\n    };\r\n    var specialPropKeyWarningShown, didWarnAboutOldJSXRuntime;\r\n    var didWarnAboutElementRef = {};\r\n    var unknownOwnerDebugStack = deprecatedAPIs[\r\n      \"react-stack-bottom-frame\"\r\n    ].bind(deprecatedAPIs, UnknownOwner)();\r\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\r\n    var didWarnAboutMaps = !1,\r\n      userProvidedKeyEscapeRegex = /\\/+/g,\r\n      reportGlobalError =\r\n        \"function\" === typeof reportError\r\n          ? reportError\r\n          : function (error) {\r\n              if (\r\n                \"object\" === typeof window &&\r\n                \"function\" === typeof window.ErrorEvent\r\n              ) {\r\n                var event = new window.ErrorEvent(\"error\", {\r\n                  bubbles: !0,\r\n                  cancelable: !0,\r\n                  message:\r\n                    \"object\" === typeof error &&\r\n                    null !== error &&\r\n                    \"string\" === typeof error.message\r\n                      ? String(error.message)\r\n                      : String(error),\r\n                  error: error\r\n                });\r\n                if (!window.dispatchEvent(event)) return;\r\n              } else if (\r\n                \"object\" === typeof process &&\r\n                \"function\" === typeof process.emit\r\n              ) {\r\n                process.emit(\"uncaughtException\", error);\r\n                return;\r\n              }\r\n              console.error(error);\r\n            },\r\n      didWarnAboutMessageChannel = !1,\r\n      enqueueTaskImpl = null,\r\n      actScopeDepth = 0,\r\n      didWarnNoAwaitAct = !1,\r\n      isFlushing = !1,\r\n      queueSeveralMicrotasks =\r\n        \"function\" === typeof queueMicrotask\r\n          ? function (callback) {\r\n              queueMicrotask(function () {\r\n                return queueMicrotask(callback);\r\n              });\r\n            }\r\n          : enqueueTask;\r\n    deprecatedAPIs = Object.freeze({\r\n      __proto__: null,\r\n      c: function (size) {\r\n        return resolveDispatcher().useMemoCache(size);\r\n      }\r\n    });\r\n    exports.Children = {\r\n      map: mapChildren,\r\n      forEach: function (children, forEachFunc, forEachContext) {\r\n        mapChildren(\r\n          children,\r\n          function () {\r\n            forEachFunc.apply(this, arguments);\r\n          },\r\n          forEachContext\r\n        );\r\n      },\r\n      count: function (children) {\r\n        var n = 0;\r\n        mapChildren(children, function () {\r\n          n++;\r\n        });\r\n        return n;\r\n      },\r\n      toArray: function (children) {\r\n        return (\r\n          mapChildren(children, function (child) {\r\n            return child;\r\n          }) || []\r\n        );\r\n      },\r\n      only: function (children) {\r\n        if (!isValidElement(children))\r\n          throw Error(\r\n            \"React.Children.only expected to receive a single React element child.\"\r\n          );\r\n        return children;\r\n      }\r\n    };\r\n    exports.Component = Component;\r\n    exports.Fragment = REACT_FRAGMENT_TYPE;\r\n    exports.Profiler = REACT_PROFILER_TYPE;\r\n    exports.PureComponent = PureComponent;\r\n    exports.StrictMode = REACT_STRICT_MODE_TYPE;\r\n    exports.Suspense = REACT_SUSPENSE_TYPE;\r\n    exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\r\n      ReactSharedInternals;\r\n    exports.__COMPILER_RUNTIME = deprecatedAPIs;\r\n    exports.act = function (callback) {\r\n      var prevActQueue = ReactSharedInternals.actQueue,\r\n        prevActScopeDepth = actScopeDepth;\r\n      actScopeDepth++;\r\n      var queue = (ReactSharedInternals.actQueue =\r\n          null !== prevActQueue ? prevActQueue : []),\r\n        didAwaitActCall = !1;\r\n      try {\r\n        var result = callback();\r\n      } catch (error) {\r\n        ReactSharedInternals.thrownErrors.push(error);\r\n      }\r\n      if (0 < ReactSharedInternals.thrownErrors.length)\r\n        throw (\r\n          (popActScope(prevActQueue, prevActScopeDepth),\r\n          (callback = aggregateErrors(ReactSharedInternals.thrownErrors)),\r\n          (ReactSharedInternals.thrownErrors.length = 0),\r\n          callback)\r\n        );\r\n      if (\r\n        null !== result &&\r\n        \"object\" === typeof result &&\r\n        \"function\" === typeof result.then\r\n      ) {\r\n        var thenable = result;\r\n        queueSeveralMicrotasks(function () {\r\n          didAwaitActCall ||\r\n            didWarnNoAwaitAct ||\r\n            ((didWarnNoAwaitAct = !0),\r\n            console.error(\r\n              \"You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);\"\r\n            ));\r\n        });\r\n        return {\r\n          then: function (resolve, reject) {\r\n            didAwaitActCall = !0;\r\n            thenable.then(\r\n              function (returnValue) {\r\n                popActScope(prevActQueue, prevActScopeDepth);\r\n                if (0 === prevActScopeDepth) {\r\n                  try {\r\n                    flushActQueue(queue),\r\n                      enqueueTask(function () {\r\n                        return recursivelyFlushAsyncActWork(\r\n                          returnValue,\r\n                          resolve,\r\n                          reject\r\n                        );\r\n                      });\r\n                  } catch (error$0) {\r\n                    ReactSharedInternals.thrownErrors.push(error$0);\r\n                  }\r\n                  if (0 < ReactSharedInternals.thrownErrors.length) {\r\n                    var _thrownError = aggregateErrors(\r\n                      ReactSharedInternals.thrownErrors\r\n                    );\r\n                    ReactSharedInternals.thrownErrors.length = 0;\r\n                    reject(_thrownError);\r\n                  }\r\n                } else resolve(returnValue);\r\n              },\r\n              function (error) {\r\n                popActScope(prevActQueue, prevActScopeDepth);\r\n                0 < ReactSharedInternals.thrownErrors.length\r\n                  ? ((error = aggregateErrors(\r\n                      ReactSharedInternals.thrownErrors\r\n                    )),\r\n                    (ReactSharedInternals.thrownErrors.length = 0),\r\n                    reject(error))\r\n                  : reject(error);\r\n              }\r\n            );\r\n          }\r\n        };\r\n      }\r\n      var returnValue$jscomp$0 = result;\r\n      popActScope(prevActQueue, prevActScopeDepth);\r\n      0 === prevActScopeDepth &&\r\n        (flushActQueue(queue),\r\n        0 !== queue.length &&\r\n          queueSeveralMicrotasks(function () {\r\n            didAwaitActCall ||\r\n              didWarnNoAwaitAct ||\r\n              ((didWarnNoAwaitAct = !0),\r\n              console.error(\r\n                \"A component suspended inside an `act` scope, but the `act` call was not awaited. When testing React components that depend on asynchronous data, you must await the result:\\n\\nawait act(() => ...)\"\r\n              ));\r\n          }),\r\n        (ReactSharedInternals.actQueue = null));\r\n      if (0 < ReactSharedInternals.thrownErrors.length)\r\n        throw (\r\n          ((callback = aggregateErrors(ReactSharedInternals.thrownErrors)),\r\n          (ReactSharedInternals.thrownErrors.length = 0),\r\n          callback)\r\n        );\r\n      return {\r\n        then: function (resolve, reject) {\r\n          didAwaitActCall = !0;\r\n          0 === prevActScopeDepth\r\n            ? ((ReactSharedInternals.actQueue = queue),\r\n              enqueueTask(function () {\r\n                return recursivelyFlushAsyncActWork(\r\n                  returnValue$jscomp$0,\r\n                  resolve,\r\n                  reject\r\n                );\r\n              }))\r\n            : resolve(returnValue$jscomp$0);\r\n        }\r\n      };\r\n    };\r\n    exports.cache = function (fn) {\r\n      return function () {\r\n        return fn.apply(null, arguments);\r\n      };\r\n    };\r\n    exports.captureOwnerStack = function () {\r\n      var getCurrentStack = ReactSharedInternals.getCurrentStack;\r\n      return null === getCurrentStack ? null : getCurrentStack();\r\n    };\r\n    exports.cloneElement = function (element, config, children) {\r\n      if (null === element || void 0 === element)\r\n        throw Error(\r\n          \"The argument must be a React element, but you passed \" +\r\n            element +\r\n            \".\"\r\n        );\r\n      var props = assign({}, element.props),\r\n        key = element.key,\r\n        owner = element._owner;\r\n      if (null != config) {\r\n        var JSCompiler_inline_result;\r\n        a: {\r\n          if (\r\n            hasOwnProperty.call(config, \"ref\") &&\r\n            (JSCompiler_inline_result = Object.getOwnPropertyDescriptor(\r\n              config,\r\n              \"ref\"\r\n            ).get) &&\r\n            JSCompiler_inline_result.isReactWarning\r\n          ) {\r\n            JSCompiler_inline_result = !1;\r\n            break a;\r\n          }\r\n          JSCompiler_inline_result = void 0 !== config.ref;\r\n        }\r\n        JSCompiler_inline_result && (owner = getOwner());\r\n        hasValidKey(config) &&\r\n          (checkKeyStringCoercion(config.key), (key = \"\" + config.key));\r\n        for (propName in config)\r\n          !hasOwnProperty.call(config, propName) ||\r\n            \"key\" === propName ||\r\n            \"__self\" === propName ||\r\n            \"__source\" === propName ||\r\n            (\"ref\" === propName && void 0 === config.ref) ||\r\n            (props[propName] = config[propName]);\r\n      }\r\n      var propName = arguments.length - 2;\r\n      if (1 === propName) props.children = children;\r\n      else if (1 < propName) {\r\n        JSCompiler_inline_result = Array(propName);\r\n        for (var i = 0; i < propName; i++)\r\n          JSCompiler_inline_result[i] = arguments[i + 2];\r\n        props.children = JSCompiler_inline_result;\r\n      }\r\n      props = ReactElement(\r\n        element.type,\r\n        key,\r\n        void 0,\r\n        void 0,\r\n        owner,\r\n        props,\r\n        element._debugStack,\r\n        element._debugTask\r\n      );\r\n      for (key = 2; key < arguments.length; key++)\r\n        (owner = arguments[key]),\r\n          isValidElement(owner) && owner._store && (owner._store.validated = 1);\r\n      return props;\r\n    };\r\n    exports.createContext = function (defaultValue) {\r\n      defaultValue = {\r\n        $$typeof: REACT_CONTEXT_TYPE,\r\n        _currentValue: defaultValue,\r\n        _currentValue2: defaultValue,\r\n        _threadCount: 0,\r\n        Provider: null,\r\n        Consumer: null\r\n      };\r\n      defaultValue.Provider = defaultValue;\r\n      defaultValue.Consumer = {\r\n        $$typeof: REACT_CONSUMER_TYPE,\r\n        _context: defaultValue\r\n      };\r\n      defaultValue._currentRenderer = null;\r\n      defaultValue._currentRenderer2 = null;\r\n      return defaultValue;\r\n    };\r\n    exports.createElement = function (type, config, children) {\r\n      for (var i = 2; i < arguments.length; i++) {\r\n        var node = arguments[i];\r\n        isValidElement(node) && node._store && (node._store.validated = 1);\r\n      }\r\n      i = {};\r\n      node = null;\r\n      if (null != config)\r\n        for (propName in (didWarnAboutOldJSXRuntime ||\r\n          !(\"__self\" in config) ||\r\n          \"key\" in config ||\r\n          ((didWarnAboutOldJSXRuntime = !0),\r\n          console.warn(\r\n            \"Your app (or one of its dependencies) is using an outdated JSX transform. Update to the modern JSX transform for faster performance: https://react.dev/link/new-jsx-transform\"\r\n          )),\r\n        hasValidKey(config) &&\r\n          (checkKeyStringCoercion(config.key), (node = \"\" + config.key)),\r\n        config))\r\n          hasOwnProperty.call(config, propName) &&\r\n            \"key\" !== propName &&\r\n            \"__self\" !== propName &&\r\n            \"__source\" !== propName &&\r\n            (i[propName] = config[propName]);\r\n      var childrenLength = arguments.length - 2;\r\n      if (1 === childrenLength) i.children = children;\r\n      else if (1 < childrenLength) {\r\n        for (\r\n          var childArray = Array(childrenLength), _i = 0;\r\n          _i < childrenLength;\r\n          _i++\r\n        )\r\n          childArray[_i] = arguments[_i + 2];\r\n        Object.freeze && Object.freeze(childArray);\r\n        i.children = childArray;\r\n      }\r\n      if (type && type.defaultProps)\r\n        for (propName in ((childrenLength = type.defaultProps), childrenLength))\r\n          void 0 === i[propName] && (i[propName] = childrenLength[propName]);\r\n      node &&\r\n        defineKeyPropWarningGetter(\r\n          i,\r\n          \"function\" === typeof type\r\n            ? type.displayName || type.name || \"Unknown\"\r\n            : type\r\n        );\r\n      var propName = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\r\n      return ReactElement(\r\n        type,\r\n        node,\r\n        void 0,\r\n        void 0,\r\n        getOwner(),\r\n        i,\r\n        propName ? Error(\"react-stack-top-frame\") : unknownOwnerDebugStack,\r\n        propName ? createTask(getTaskName(type)) : unknownOwnerDebugTask\r\n      );\r\n    };\r\n    exports.createRef = function () {\r\n      var refObject = { current: null };\r\n      Object.seal(refObject);\r\n      return refObject;\r\n    };\r\n    exports.forwardRef = function (render) {\r\n      null != render && render.$$typeof === REACT_MEMO_TYPE\r\n        ? console.error(\r\n            \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).\"\r\n          )\r\n        : \"function\" !== typeof render\r\n          ? console.error(\r\n              \"forwardRef requires a render function but was given %s.\",\r\n              null === render ? \"null\" : typeof render\r\n            )\r\n          : 0 !== render.length &&\r\n            2 !== render.length &&\r\n            console.error(\r\n              \"forwardRef render functions accept exactly two parameters: props and ref. %s\",\r\n              1 === render.length\r\n                ? \"Did you forget to use the ref parameter?\"\r\n                : \"Any additional parameter will be undefined.\"\r\n            );\r\n      null != render &&\r\n        null != render.defaultProps &&\r\n        console.error(\r\n          \"forwardRef render functions do not support defaultProps. Did you accidentally pass a React component?\"\r\n        );\r\n      var elementType = { $$typeof: REACT_FORWARD_REF_TYPE, render: render },\r\n        ownName;\r\n      Object.defineProperty(elementType, \"displayName\", {\r\n        enumerable: !1,\r\n        configurable: !0,\r\n        get: function () {\r\n          return ownName;\r\n        },\r\n        set: function (name) {\r\n          ownName = name;\r\n          render.name ||\r\n            render.displayName ||\r\n            (Object.defineProperty(render, \"name\", { value: name }),\r\n            (render.displayName = name));\r\n        }\r\n      });\r\n      return elementType;\r\n    };\r\n    exports.isValidElement = isValidElement;\r\n    exports.lazy = function (ctor) {\r\n      return {\r\n        $$typeof: REACT_LAZY_TYPE,\r\n        _payload: { _status: -1, _result: ctor },\r\n        _init: lazyInitializer\r\n      };\r\n    };\r\n    exports.memo = function (type, compare) {\r\n      null == type &&\r\n        console.error(\r\n          \"memo: The first argument must be a component. Instead received: %s\",\r\n          null === type ? \"null\" : typeof type\r\n        );\r\n      compare = {\r\n        $$typeof: REACT_MEMO_TYPE,\r\n        type: type,\r\n        compare: void 0 === compare ? null : compare\r\n      };\r\n      var ownName;\r\n      Object.defineProperty(compare, \"displayName\", {\r\n        enumerable: !1,\r\n        configurable: !0,\r\n        get: function () {\r\n          return ownName;\r\n        },\r\n        set: function (name) {\r\n          ownName = name;\r\n          type.name ||\r\n            type.displayName ||\r\n            (Object.defineProperty(type, \"name\", { value: name }),\r\n            (type.displayName = name));\r\n        }\r\n      });\r\n      return compare;\r\n    };\r\n    exports.startTransition = function (scope) {\r\n      var prevTransition = ReactSharedInternals.T,\r\n        currentTransition = {};\r\n      ReactSharedInternals.T = currentTransition;\r\n      currentTransition._updatedFibers = new Set();\r\n      try {\r\n        var returnValue = scope(),\r\n          onStartTransitionFinish = ReactSharedInternals.S;\r\n        null !== onStartTransitionFinish &&\r\n          onStartTransitionFinish(currentTransition, returnValue);\r\n        \"object\" === typeof returnValue &&\r\n          null !== returnValue &&\r\n          \"function\" === typeof returnValue.then &&\r\n          returnValue.then(noop, reportGlobalError);\r\n      } catch (error) {\r\n        reportGlobalError(error);\r\n      } finally {\r\n        null === prevTransition &&\r\n          currentTransition._updatedFibers &&\r\n          ((scope = currentTransition._updatedFibers.size),\r\n          currentTransition._updatedFibers.clear(),\r\n          10 < scope &&\r\n            console.warn(\r\n              \"Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.\"\r\n            )),\r\n          (ReactSharedInternals.T = prevTransition);\r\n      }\r\n    };\r\n    exports.unstable_useCacheRefresh = function () {\r\n      return resolveDispatcher().useCacheRefresh();\r\n    };\r\n    exports.use = function (usable) {\r\n      return resolveDispatcher().use(usable);\r\n    };\r\n    exports.useActionState = function (action, initialState, permalink) {\r\n      return resolveDispatcher().useActionState(\r\n        action,\r\n        initialState,\r\n        permalink\r\n      );\r\n    };\r\n    exports.useCallback = function (callback, deps) {\r\n      return resolveDispatcher().useCallback(callback, deps);\r\n    };\r\n    exports.useContext = function (Context) {\r\n      var dispatcher = resolveDispatcher();\r\n      Context.$$typeof === REACT_CONSUMER_TYPE &&\r\n        console.error(\r\n          \"Calling useContext(Context.Consumer) is not supported and will cause bugs. Did you mean to call useContext(Context) instead?\"\r\n        );\r\n      return dispatcher.useContext(Context);\r\n    };\r\n    exports.useDebugValue = function (value, formatterFn) {\r\n      return resolveDispatcher().useDebugValue(value, formatterFn);\r\n    };\r\n    exports.useDeferredValue = function (value, initialValue) {\r\n      return resolveDispatcher().useDeferredValue(value, initialValue);\r\n    };\r\n    exports.useEffect = function (create, createDeps, update) {\r\n      null == create &&\r\n        console.warn(\r\n          \"React Hook useEffect requires an effect callback. Did you forget to pass a callback to the hook?\"\r\n        );\r\n      var dispatcher = resolveDispatcher();\r\n      if (\"function\" === typeof update)\r\n        throw Error(\r\n          \"useEffect CRUD overload is not enabled in this build of React.\"\r\n        );\r\n      return dispatcher.useEffect(create, createDeps);\r\n    };\r\n    exports.useId = function () {\r\n      return resolveDispatcher().useId();\r\n    };\r\n    exports.useImperativeHandle = function (ref, create, deps) {\r\n      return resolveDispatcher().useImperativeHandle(ref, create, deps);\r\n    };\r\n    exports.useInsertionEffect = function (create, deps) {\r\n      null == create &&\r\n        console.warn(\r\n          \"React Hook useInsertionEffect requires an effect callback. Did you forget to pass a callback to the hook?\"\r\n        );\r\n      return resolveDispatcher().useInsertionEffect(create, deps);\r\n    };\r\n    exports.useLayoutEffect = function (create, deps) {\r\n      null == create &&\r\n        console.warn(\r\n          \"React Hook useLayoutEffect requires an effect callback. Did you forget to pass a callback to the hook?\"\r\n        );\r\n      return resolveDispatcher().useLayoutEffect(create, deps);\r\n    };\r\n    exports.useMemo = function (create, deps) {\r\n      return resolveDispatcher().useMemo(create, deps);\r\n    };\r\n    exports.useOptimistic = function (passthrough, reducer) {\r\n      return resolveDispatcher().useOptimistic(passthrough, reducer);\r\n    };\r\n    exports.useReducer = function (reducer, initialArg, init) {\r\n      return resolveDispatcher().useReducer(reducer, initialArg, init);\r\n    };\r\n    exports.useRef = function (initialValue) {\r\n      return resolveDispatcher().useRef(initialValue);\r\n    };\r\n    exports.useState = function (initialState) {\r\n      return resolveDispatcher().useState(initialState);\r\n    };\r\n    exports.useSyncExternalStore = function (\r\n      subscribe,\r\n      getSnapshot,\r\n      getServerSnapshot\r\n    ) {\r\n      return resolveDispatcher().useSyncExternalStore(\r\n        subscribe,\r\n        getSnapshot,\r\n        getServerSnapshot\r\n      );\r\n    };\r\n    exports.useTransition = function () {\r\n      return resolveDispatcher().useTransition();\r\n    };\r\n    exports.version = \"19.1.0\";\r\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\r\n      \"function\" ===\r\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\r\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\r\n  })();\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/react/cjs/react.development.js?");

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\r\n\r\nif (false) // removed by dead control flow\n{} else {\r\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"./node_modules/react/cjs/react.development.js\");\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/react/index.js?");

/***/ }),

/***/ "./node_modules/scheduler/cjs/scheduler.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler.development.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/**\r\n * @license React\r\n * scheduler.development.js\r\n *\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\r\n true &&\r\n  (function () {\r\n    function performWorkUntilDeadline() {\r\n      needsPaint = !1;\r\n      if (isMessageLoopRunning) {\r\n        var currentTime = exports.unstable_now();\r\n        startTime = currentTime;\r\n        var hasMoreWork = !0;\r\n        try {\r\n          a: {\r\n            isHostCallbackScheduled = !1;\r\n            isHostTimeoutScheduled &&\r\n              ((isHostTimeoutScheduled = !1),\r\n              localClearTimeout(taskTimeoutID),\r\n              (taskTimeoutID = -1));\r\n            isPerformingWork = !0;\r\n            var previousPriorityLevel = currentPriorityLevel;\r\n            try {\r\n              b: {\r\n                advanceTimers(currentTime);\r\n                for (\r\n                  currentTask = peek(taskQueue);\r\n                  null !== currentTask &&\r\n                  !(\r\n                    currentTask.expirationTime > currentTime &&\r\n                    shouldYieldToHost()\r\n                  );\r\n\r\n                ) {\r\n                  var callback = currentTask.callback;\r\n                  if (\"function\" === typeof callback) {\r\n                    currentTask.callback = null;\r\n                    currentPriorityLevel = currentTask.priorityLevel;\r\n                    var continuationCallback = callback(\r\n                      currentTask.expirationTime <= currentTime\r\n                    );\r\n                    currentTime = exports.unstable_now();\r\n                    if (\"function\" === typeof continuationCallback) {\r\n                      currentTask.callback = continuationCallback;\r\n                      advanceTimers(currentTime);\r\n                      hasMoreWork = !0;\r\n                      break b;\r\n                    }\r\n                    currentTask === peek(taskQueue) && pop(taskQueue);\r\n                    advanceTimers(currentTime);\r\n                  } else pop(taskQueue);\r\n                  currentTask = peek(taskQueue);\r\n                }\r\n                if (null !== currentTask) hasMoreWork = !0;\r\n                else {\r\n                  var firstTimer = peek(timerQueue);\r\n                  null !== firstTimer &&\r\n                    requestHostTimeout(\r\n                      handleTimeout,\r\n                      firstTimer.startTime - currentTime\r\n                    );\r\n                  hasMoreWork = !1;\r\n                }\r\n              }\r\n              break a;\r\n            } finally {\r\n              (currentTask = null),\r\n                (currentPriorityLevel = previousPriorityLevel),\r\n                (isPerformingWork = !1);\r\n            }\r\n            hasMoreWork = void 0;\r\n          }\r\n        } finally {\r\n          hasMoreWork\r\n            ? schedulePerformWorkUntilDeadline()\r\n            : (isMessageLoopRunning = !1);\r\n        }\r\n      }\r\n    }\r\n    function push(heap, node) {\r\n      var index = heap.length;\r\n      heap.push(node);\r\n      a: for (; 0 < index; ) {\r\n        var parentIndex = (index - 1) >>> 1,\r\n          parent = heap[parentIndex];\r\n        if (0 < compare(parent, node))\r\n          (heap[parentIndex] = node),\r\n            (heap[index] = parent),\r\n            (index = parentIndex);\r\n        else break a;\r\n      }\r\n    }\r\n    function peek(heap) {\r\n      return 0 === heap.length ? null : heap[0];\r\n    }\r\n    function pop(heap) {\r\n      if (0 === heap.length) return null;\r\n      var first = heap[0],\r\n        last = heap.pop();\r\n      if (last !== first) {\r\n        heap[0] = last;\r\n        a: for (\r\n          var index = 0, length = heap.length, halfLength = length >>> 1;\r\n          index < halfLength;\r\n\r\n        ) {\r\n          var leftIndex = 2 * (index + 1) - 1,\r\n            left = heap[leftIndex],\r\n            rightIndex = leftIndex + 1,\r\n            right = heap[rightIndex];\r\n          if (0 > compare(left, last))\r\n            rightIndex < length && 0 > compare(right, left)\r\n              ? ((heap[index] = right),\r\n                (heap[rightIndex] = last),\r\n                (index = rightIndex))\r\n              : ((heap[index] = left),\r\n                (heap[leftIndex] = last),\r\n                (index = leftIndex));\r\n          else if (rightIndex < length && 0 > compare(right, last))\r\n            (heap[index] = right),\r\n              (heap[rightIndex] = last),\r\n              (index = rightIndex);\r\n          else break a;\r\n        }\r\n      }\r\n      return first;\r\n    }\r\n    function compare(a, b) {\r\n      var diff = a.sortIndex - b.sortIndex;\r\n      return 0 !== diff ? diff : a.id - b.id;\r\n    }\r\n    function advanceTimers(currentTime) {\r\n      for (var timer = peek(timerQueue); null !== timer; ) {\r\n        if (null === timer.callback) pop(timerQueue);\r\n        else if (timer.startTime <= currentTime)\r\n          pop(timerQueue),\r\n            (timer.sortIndex = timer.expirationTime),\r\n            push(taskQueue, timer);\r\n        else break;\r\n        timer = peek(timerQueue);\r\n      }\r\n    }\r\n    function handleTimeout(currentTime) {\r\n      isHostTimeoutScheduled = !1;\r\n      advanceTimers(currentTime);\r\n      if (!isHostCallbackScheduled)\r\n        if (null !== peek(taskQueue))\r\n          (isHostCallbackScheduled = !0),\r\n            isMessageLoopRunning ||\r\n              ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());\r\n        else {\r\n          var firstTimer = peek(timerQueue);\r\n          null !== firstTimer &&\r\n            requestHostTimeout(\r\n              handleTimeout,\r\n              firstTimer.startTime - currentTime\r\n            );\r\n        }\r\n    }\r\n    function shouldYieldToHost() {\r\n      return needsPaint\r\n        ? !0\r\n        : exports.unstable_now() - startTime < frameInterval\r\n          ? !1\r\n          : !0;\r\n    }\r\n    function requestHostTimeout(callback, ms) {\r\n      taskTimeoutID = localSetTimeout(function () {\r\n        callback(exports.unstable_now());\r\n      }, ms);\r\n    }\r\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\r\n      \"function\" ===\r\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\r\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\r\n    exports.unstable_now = void 0;\r\n    if (\r\n      \"object\" === typeof performance &&\r\n      \"function\" === typeof performance.now\r\n    ) {\r\n      var localPerformance = performance;\r\n      exports.unstable_now = function () {\r\n        return localPerformance.now();\r\n      };\r\n    } else {\r\n      var localDate = Date,\r\n        initialTime = localDate.now();\r\n      exports.unstable_now = function () {\r\n        return localDate.now() - initialTime;\r\n      };\r\n    }\r\n    var taskQueue = [],\r\n      timerQueue = [],\r\n      taskIdCounter = 1,\r\n      currentTask = null,\r\n      currentPriorityLevel = 3,\r\n      isPerformingWork = !1,\r\n      isHostCallbackScheduled = !1,\r\n      isHostTimeoutScheduled = !1,\r\n      needsPaint = !1,\r\n      localSetTimeout = \"function\" === typeof setTimeout ? setTimeout : null,\r\n      localClearTimeout =\r\n        \"function\" === typeof clearTimeout ? clearTimeout : null,\r\n      localSetImmediate =\r\n        \"undefined\" !== typeof setImmediate ? setImmediate : null,\r\n      isMessageLoopRunning = !1,\r\n      taskTimeoutID = -1,\r\n      frameInterval = 5,\r\n      startTime = -1;\r\n    if (\"function\" === typeof localSetImmediate)\r\n      var schedulePerformWorkUntilDeadline = function () {\r\n        localSetImmediate(performWorkUntilDeadline);\r\n      };\r\n    else if (\"undefined\" !== typeof MessageChannel) {\r\n      var channel = new MessageChannel(),\r\n        port = channel.port2;\r\n      channel.port1.onmessage = performWorkUntilDeadline;\r\n      schedulePerformWorkUntilDeadline = function () {\r\n        port.postMessage(null);\r\n      };\r\n    } else\r\n      schedulePerformWorkUntilDeadline = function () {\r\n        localSetTimeout(performWorkUntilDeadline, 0);\r\n      };\r\n    exports.unstable_IdlePriority = 5;\r\n    exports.unstable_ImmediatePriority = 1;\r\n    exports.unstable_LowPriority = 4;\r\n    exports.unstable_NormalPriority = 3;\r\n    exports.unstable_Profiling = null;\r\n    exports.unstable_UserBlockingPriority = 2;\r\n    exports.unstable_cancelCallback = function (task) {\r\n      task.callback = null;\r\n    };\r\n    exports.unstable_forceFrameRate = function (fps) {\r\n      0 > fps || 125 < fps\r\n        ? console.error(\r\n            \"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"\r\n          )\r\n        : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);\r\n    };\r\n    exports.unstable_getCurrentPriorityLevel = function () {\r\n      return currentPriorityLevel;\r\n    };\r\n    exports.unstable_next = function (eventHandler) {\r\n      switch (currentPriorityLevel) {\r\n        case 1:\r\n        case 2:\r\n        case 3:\r\n          var priorityLevel = 3;\r\n          break;\r\n        default:\r\n          priorityLevel = currentPriorityLevel;\r\n      }\r\n      var previousPriorityLevel = currentPriorityLevel;\r\n      currentPriorityLevel = priorityLevel;\r\n      try {\r\n        return eventHandler();\r\n      } finally {\r\n        currentPriorityLevel = previousPriorityLevel;\r\n      }\r\n    };\r\n    exports.unstable_requestPaint = function () {\r\n      needsPaint = !0;\r\n    };\r\n    exports.unstable_runWithPriority = function (priorityLevel, eventHandler) {\r\n      switch (priorityLevel) {\r\n        case 1:\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n        case 5:\r\n          break;\r\n        default:\r\n          priorityLevel = 3;\r\n      }\r\n      var previousPriorityLevel = currentPriorityLevel;\r\n      currentPriorityLevel = priorityLevel;\r\n      try {\r\n        return eventHandler();\r\n      } finally {\r\n        currentPriorityLevel = previousPriorityLevel;\r\n      }\r\n    };\r\n    exports.unstable_scheduleCallback = function (\r\n      priorityLevel,\r\n      callback,\r\n      options\r\n    ) {\r\n      var currentTime = exports.unstable_now();\r\n      \"object\" === typeof options && null !== options\r\n        ? ((options = options.delay),\r\n          (options =\r\n            \"number\" === typeof options && 0 < options\r\n              ? currentTime + options\r\n              : currentTime))\r\n        : (options = currentTime);\r\n      switch (priorityLevel) {\r\n        case 1:\r\n          var timeout = -1;\r\n          break;\r\n        case 2:\r\n          timeout = 250;\r\n          break;\r\n        case 5:\r\n          timeout = 1073741823;\r\n          break;\r\n        case 4:\r\n          timeout = 1e4;\r\n          break;\r\n        default:\r\n          timeout = 5e3;\r\n      }\r\n      timeout = options + timeout;\r\n      priorityLevel = {\r\n        id: taskIdCounter++,\r\n        callback: callback,\r\n        priorityLevel: priorityLevel,\r\n        startTime: options,\r\n        expirationTime: timeout,\r\n        sortIndex: -1\r\n      };\r\n      options > currentTime\r\n        ? ((priorityLevel.sortIndex = options),\r\n          push(timerQueue, priorityLevel),\r\n          null === peek(taskQueue) &&\r\n            priorityLevel === peek(timerQueue) &&\r\n            (isHostTimeoutScheduled\r\n              ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))\r\n              : (isHostTimeoutScheduled = !0),\r\n            requestHostTimeout(handleTimeout, options - currentTime)))\r\n        : ((priorityLevel.sortIndex = timeout),\r\n          push(taskQueue, priorityLevel),\r\n          isHostCallbackScheduled ||\r\n            isPerformingWork ||\r\n            ((isHostCallbackScheduled = !0),\r\n            isMessageLoopRunning ||\r\n              ((isMessageLoopRunning = !0),\r\n              schedulePerformWorkUntilDeadline())));\r\n      return priorityLevel;\r\n    };\r\n    exports.unstable_shouldYield = shouldYieldToHost;\r\n    exports.unstable_wrapCallback = function (callback) {\r\n      var parentPriorityLevel = currentPriorityLevel;\r\n      return function () {\r\n        var previousPriorityLevel = currentPriorityLevel;\r\n        currentPriorityLevel = parentPriorityLevel;\r\n        try {\r\n          return callback.apply(this, arguments);\r\n        } finally {\r\n          currentPriorityLevel = previousPriorityLevel;\r\n        }\r\n      };\r\n    };\r\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\r\n      \"function\" ===\r\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\r\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\r\n  })();\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/scheduler/cjs/scheduler.development.js?");

/***/ }),

/***/ "./node_modules/scheduler/index.js":
/*!*****************************************!*\
  !*** ./node_modules/scheduler/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\r\n\r\nif (false) // removed by dead control flow\n{} else {\r\n  module.exports = __webpack_require__(/*! ./cjs/scheduler.development.js */ \"./node_modules/scheduler/cjs/scheduler.development.js\");\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/scheduler/index.js?");

/***/ }),

/***/ "./node_modules/set-cookie-parser/lib/set-cookie.js":
/*!**********************************************************!*\
  !*** ./node_modules/set-cookie-parser/lib/set-cookie.js ***!
  \**********************************************************/
/***/ ((module) => {

eval("\r\n\r\nvar defaultParseOptions = {\r\n  decodeValues: true,\r\n  map: false,\r\n  silent: false,\r\n};\r\n\r\nfunction isNonEmptyString(str) {\r\n  return typeof str === \"string\" && !!str.trim();\r\n}\r\n\r\nfunction parseString(setCookieValue, options) {\r\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\r\n\r\n  var nameValuePairStr = parts.shift();\r\n  var parsed = parseNameValuePair(nameValuePairStr);\r\n  var name = parsed.name;\r\n  var value = parsed.value;\r\n\r\n  options = options\r\n    ? Object.assign({}, defaultParseOptions, options)\r\n    : defaultParseOptions;\r\n\r\n  try {\r\n    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\r\n  } catch (e) {\r\n    console.error(\r\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" +\r\n        value +\r\n        \"'. Set options.decodeValues to false to disable this feature.\",\r\n      e\r\n    );\r\n  }\r\n\r\n  var cookie = {\r\n    name: name,\r\n    value: value,\r\n  };\r\n\r\n  parts.forEach(function (part) {\r\n    var sides = part.split(\"=\");\r\n    var key = sides.shift().trimLeft().toLowerCase();\r\n    var value = sides.join(\"=\");\r\n    if (key === \"expires\") {\r\n      cookie.expires = new Date(value);\r\n    } else if (key === \"max-age\") {\r\n      cookie.maxAge = parseInt(value, 10);\r\n    } else if (key === \"secure\") {\r\n      cookie.secure = true;\r\n    } else if (key === \"httponly\") {\r\n      cookie.httpOnly = true;\r\n    } else if (key === \"samesite\") {\r\n      cookie.sameSite = value;\r\n    } else if (key === \"partitioned\") {\r\n      cookie.partitioned = true;\r\n    } else {\r\n      cookie[key] = value;\r\n    }\r\n  });\r\n\r\n  return cookie;\r\n}\r\n\r\nfunction parseNameValuePair(nameValuePairStr) {\r\n  // Parses name-value-pair according to rfc6265bis draft\r\n\r\n  var name = \"\";\r\n  var value = \"\";\r\n  var nameValueArr = nameValuePairStr.split(\"=\");\r\n  if (nameValueArr.length > 1) {\r\n    name = nameValueArr.shift();\r\n    value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\r\n  } else {\r\n    value = nameValuePairStr;\r\n  }\r\n\r\n  return { name: name, value: value };\r\n}\r\n\r\nfunction parse(input, options) {\r\n  options = options\r\n    ? Object.assign({}, defaultParseOptions, options)\r\n    : defaultParseOptions;\r\n\r\n  if (!input) {\r\n    if (!options.map) {\r\n      return [];\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  if (input.headers) {\r\n    if (typeof input.headers.getSetCookie === \"function\") {\r\n      // for fetch responses - they combine headers of the same type in the headers array,\r\n      // but getSetCookie returns an uncombined array\r\n      input = input.headers.getSetCookie();\r\n    } else if (input.headers[\"set-cookie\"]) {\r\n      // fast-path for node.js (which automatically normalizes header names to lower-case\r\n      input = input.headers[\"set-cookie\"];\r\n    } else {\r\n      // slow-path for other environments - see #25\r\n      var sch =\r\n        input.headers[\r\n          Object.keys(input.headers).find(function (key) {\r\n            return key.toLowerCase() === \"set-cookie\";\r\n          })\r\n        ];\r\n      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\r\n      if (!sch && input.headers.cookie && !options.silent) {\r\n        console.warn(\r\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\r\n        );\r\n      }\r\n      input = sch;\r\n    }\r\n  }\r\n  if (!Array.isArray(input)) {\r\n    input = [input];\r\n  }\r\n\r\n  if (!options.map) {\r\n    return input.filter(isNonEmptyString).map(function (str) {\r\n      return parseString(str, options);\r\n    });\r\n  } else {\r\n    var cookies = {};\r\n    return input.filter(isNonEmptyString).reduce(function (cookies, str) {\r\n      var cookie = parseString(str, options);\r\n      cookies[cookie.name] = cookie;\r\n      return cookies;\r\n    }, cookies);\r\n  }\r\n}\r\n\r\n/*\r\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\r\n  that are within a single set-cookie field-value, such as in the Expires portion.\r\n\r\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\r\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\r\n  React Native's fetch does this for *every* header, including set-cookie.\r\n\r\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\r\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\r\n*/\r\nfunction splitCookiesString(cookiesString) {\r\n  if (Array.isArray(cookiesString)) {\r\n    return cookiesString;\r\n  }\r\n  if (typeof cookiesString !== \"string\") {\r\n    return [];\r\n  }\r\n\r\n  var cookiesStrings = [];\r\n  var pos = 0;\r\n  var start;\r\n  var ch;\r\n  var lastComma;\r\n  var nextStart;\r\n  var cookiesSeparatorFound;\r\n\r\n  function skipWhitespace() {\r\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\r\n      pos += 1;\r\n    }\r\n    return pos < cookiesString.length;\r\n  }\r\n\r\n  function notSpecialChar() {\r\n    ch = cookiesString.charAt(pos);\r\n\r\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\r\n  }\r\n\r\n  while (pos < cookiesString.length) {\r\n    start = pos;\r\n    cookiesSeparatorFound = false;\r\n\r\n    while (skipWhitespace()) {\r\n      ch = cookiesString.charAt(pos);\r\n      if (ch === \",\") {\r\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\r\n        lastComma = pos;\r\n        pos += 1;\r\n\r\n        skipWhitespace();\r\n        nextStart = pos;\r\n\r\n        while (pos < cookiesString.length && notSpecialChar()) {\r\n          pos += 1;\r\n        }\r\n\r\n        // currently special character\r\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\r\n          // we found cookies separator\r\n          cookiesSeparatorFound = true;\r\n          // pos is inside the next cookie, so back up and return it.\r\n          pos = nextStart;\r\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\r\n          start = pos;\r\n        } else {\r\n          // in param ',' or param separator ';',\r\n          // we continue from that comma\r\n          pos = lastComma + 1;\r\n        }\r\n      } else {\r\n        pos += 1;\r\n      }\r\n    }\r\n\r\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\r\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\r\n    }\r\n  }\r\n\r\n  return cookiesStrings;\r\n}\r\n\r\nmodule.exports = parse;\r\nmodule.exports.parse = parse;\r\nmodule.exports.parseString = parseString;\r\nmodule.exports.splitCookiesString = splitCookiesString;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/set-cookie-parser/lib/set-cookie.js?");

/***/ }),

/***/ "./src/components/App.js":
/*!*******************************!*\
  !*** ./src/components/App.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router/dist/development/chunk-NL6KNZEE.mjs\");\n/* harmony import */ var _Home__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Home */ \"./src/components/Home.js\");\n/* harmony import */ var _auth_Login__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth/Login */ \"./src/components/auth/Login.js\");\n/* harmony import */ var _auth_Register__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./auth/Register */ \"./src/components/auth/Register.js\");\n/* harmony import */ var _utils_UserContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/UserContext */ \"./src/components/utils/UserContext.js\");\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\n\n\n\n\n\nfunction App() {\n  var getToken = function getToken() {\n    var token = localStorage.getItem('token');\n    return !!token; // true если токен есть, false если нет\n  };\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getToken()),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAuth = _useState2[0],\n    setIsAuth = _useState2[1];\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_utils_UserContext__WEBPACK_IMPORTED_MODULE_4__.UserContext.Provider, {\n    value: {\n      isAuth: isAuth,\n      setIsAuth: setIsAuth\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_5__.BrowserRouter, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_5__.Routes, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_5__.Route, {\n    path: \"/\",\n    element: isAuth ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Home__WEBPACK_IMPORTED_MODULE_1__[\"default\"], null) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_5__.Navigate, {\n      to: \"/login\",\n      replace: true\n    })\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_5__.Route, {\n    path: \"/login\",\n    element: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_auth_Login__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null)\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_5__.Route, {\n    path: \"/register\",\n    element: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_auth_Register__WEBPACK_IMPORTED_MODULE_3__[\"default\"], null)\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_5__.Route, {\n    path: \"*\",\n    element: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_5__.Navigate, {\n      to: \"/\",\n      replace: true\n    })\n  }))));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);\n\n//# sourceURL=webpack://frontend/./src/components/App.js?");

/***/ }),

/***/ "./src/components/Home.js":
/*!********************************!*\
  !*** ./src/components/Home.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router/dist/development/chunk-NL6KNZEE.mjs\");\n/* harmony import */ var _utils_UserContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/UserContext */ \"./src/components/utils/UserContext.js\");\n/* harmony import */ var _services_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/auth */ \"./src/components/services/auth.js\");\n\n\n\n\nfunction Home() {\n  var _useContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_utils_UserContext__WEBPACK_IMPORTED_MODULE_1__.UserContext),\n    isAuth = _useContext.isAuth,\n    setIsAuth = _useContext.setIsAuth;\n  var navigate = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_3__.useNavigate)();\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, \"Hello Im Home!\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    onClick: function onClick() {\n      (0,_services_auth__WEBPACK_IMPORTED_MODULE_2__.logout)();\n      setIsAuth(false);\n      navigate('/');\n    }\n  }, \"\\u0412\\u044B\\u0439\\u0442\\u0438\"));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Home);\n\n//# sourceURL=webpack://frontend/./src/components/Home.js?");

/***/ }),

/***/ "./src/components/auth/Login.js":
/*!**************************************!*\
  !*** ./src/components/auth/Login.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router/dist/development/chunk-NL6KNZEE.mjs\");\n/* harmony import */ var _utils_UserContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/UserContext */ \"./src/components/utils/UserContext.js\");\n/* harmony import */ var _services_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/auth */ \"./src/components/services/auth.js\");\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\n\n\n\nfunction Login() {\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_utils_UserContext__WEBPACK_IMPORTED_MODULE_1__.UserContext),\n    isAuth = _useContext.isAuth,\n    setIsAuth = _useContext.setIsAuth;\n  var navigate = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_3__.useNavigate)();\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    (0,_services_auth__WEBPACK_IMPORTED_MODULE_2__.loginUser)(userName, password).then(function (response) {\n      var auth_token = response;\n      (0,_services_auth__WEBPACK_IMPORTED_MODULE_2__.setAxiosAuthToken)(auth_token);\n      (0,_services_auth__WEBPACK_IMPORTED_MODULE_2__.setToken)(auth_token);\n      (0,_services_auth__WEBPACK_IMPORTED_MODULE_2__.getCurrentUser)();\n      setIsAuth(true);\n      navigate(\"/\");\n    })[\"catch\"](function (error) {\n      (0,_services_auth__WEBPACK_IMPORTED_MODULE_2__.unsetCurrentUser)();\n      window.alert(\"Ошибка при входе \" + error);\n    });\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"container pt-5\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"card\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"card-content\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h3\", {\n    className: \"title is-3\"\n  }, \"\\u0412\\u0445\\u043E\\u0434 \\u0432 \\u0447\\u0430\\u0442\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"control has-icons-left\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    placeholder: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n    id: \"userName\",\n    name: \"userName\",\n    onChange: function onChange(e) {\n      return setUserName(e.target.value);\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"icon is-small is-left\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"i\", {\n    className: \"material-icons\"\n  }, \"person\")))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"control has-icons-left\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n    className: \"input\",\n    type: \"password\",\n    placeholder: \"Password\",\n    id: \"password\",\n    name: \"password\",\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"icon is-small is-left\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"i\", {\n    className: \"material-icons right\"\n  }, \"lock\")))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"control\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    type: \"submit\",\n    className: \"button is-success\"\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"i\", {\n    className: \"material-icons right\"\n  }, \"send\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, \"\\u0423 \\u0432\\u0430\\u0441 \\u043D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430?\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.Link, {\n    to: \"/register\"\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C!\")))))));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Login);\n\n//# sourceURL=webpack://frontend/./src/components/auth/Login.js?");

/***/ }),

/***/ "./src/components/auth/Register.js":
/*!*****************************************!*\
  !*** ./src/components/auth/Register.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router/dist/development/chunk-NL6KNZEE.mjs\");\n/* harmony import */ var _utils_UserContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/UserContext */ \"./src/components/utils/UserContext.js\");\n/* harmony import */ var _services_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/auth */ \"./src/components/services/auth.js\");\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\n\n\n\nfunction Register() {\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userEmail = _useState4[0],\n    setUserEmail = _useState4[1];\n  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    passwordSecond = _useState8[0],\n    setPasswordSecond = _useState8[1];\n  var _useContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_utils_UserContext__WEBPACK_IMPORTED_MODULE_1__.UserContext),\n    isAuth = _useContext.isAuth,\n    setIsAuth = _useContext.setIsAuth;\n  var navigate = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_3__.useNavigate)();\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    if (password !== passwordSecond) {\n      window.alert(\"Пароли не совпадают\");\n    } else {\n      var registered = (0,_services_auth__WEBPACK_IMPORTED_MODULE_2__.registerUser)(userName, userEmail, password);\n      if (registered === true) {\n        setIsAuth(true);\n        navigate(\"/\");\n      } else {\n        navigate(\"/register\");\n      }\n    }\n    console.log(userName);\n    console.log(userEmail);\n    console.log(password);\n    console.log(passwordSecond);\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"container pt-5\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"card\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"card-content\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h3\", {\n    className: \"title is-3\"\n  }, \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"control has-icons-left\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    placeholder: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n    id: \"userName\",\n    name: \"userName\",\n    onChange: function onChange(e) {\n      return setUserName(e.target.value);\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"icon is-small is-left\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"i\", {\n    className: \"material-icons\"\n  }, \"person\")))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"control has-icons-left has-icons-right\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n    className: \"input\",\n    type: \"email\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0430\\u0434\\u0440\\u0435\\u0441 \\u044D\\u043B. \\u043F\\u043E\\u0447\\u0442\\u044B\",\n    id: \"userEmail\",\n    name: \"userEmail\",\n    onChange: function onChange(e) {\n      return setUserEmail(e.target.value);\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"icon is-small is-left\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"i\", {\n    className: \"material-icons\"\n  }, \"email\")))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"control has-icons-left\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n    className: \"input\",\n    type: \"password\",\n    placeholder: \"\\u041F\\u0440\\u0438\\u0434\\u0443\\u043C\\u0430\\u0439\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    id: \"password\",\n    name: \"password\",\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"icon is-small is-left\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"i\", {\n    className: \"material-icons right\"\n  }, \"lock\")))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"control has-icons-left\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n    className: \"input\",\n    type: \"password\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u043F\\u043E\\u0432\\u0442\\u043E\\u0440\\u043D\\u043E\",\n    id: \"passwordSecond\",\n    name: \"passwordSecond\",\n    onChange: function onChange(e) {\n      return setPasswordSecond(e.target.value);\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"icon is-small is-left\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"i\", {\n    className: \"material-icons right\"\n  }, \"lock\")))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"field\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"control\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    type: \"submit\",\n    className: \"button is-success\"\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"i\", {\n    className: \"material-icons right\"\n  }, \"send\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"br\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, \"\\u041C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0432\\u043E\\u0439\\u0442\\u0438 \\u0432 \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435! \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.Link, {\n    to: \"/login\"\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438!\")))))));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Register);\n\n//# sourceURL=webpack://frontend/./src/components/auth/Register.js?");

/***/ }),

/***/ "./src/components/services/auth.js":
/*!*****************************************!*\
  !*** ./src/components/services/auth.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCurrentUser: () => (/* binding */ getCurrentUser),\n/* harmony export */   loginUser: () => (/* binding */ loginUser),\n/* harmony export */   logout: () => (/* binding */ logout),\n/* harmony export */   logoutAll: () => (/* binding */ logoutAll),\n/* harmony export */   registerUser: () => (/* binding */ registerUser),\n/* harmony export */   setAxiosAuthToken: () => (/* binding */ setAxiosAuthToken),\n/* harmony export */   setCurrentUser: () => (/* binding */ setCurrentUser),\n/* harmony export */   setToken: () => (/* binding */ setToken),\n/* harmony export */   unsetCurrentUser: () => (/* binding */ unsetCurrentUser)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"../node_modules/axios/lib/axios.js\");\n\nvar setAxiosAuthToken = function setAxiosAuthToken(token) {\n  if (typeof token !== \"undefined\" && token) {\n    axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n  } else {\n    delete axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaults.headers.common[\"Authorization\"];\n  }\n};\nvar setToken = function setToken(token) {\n  localStorage.setItem(\"token\", token);\n};\nvar setCurrentUser = function setCurrentUser(user) {\n  localStorage.setItem(\"user\", JSON.stringify(user));\n};\nvar unsetCurrentUser = function unsetCurrentUser() {\n  setAxiosAuthToken(null);\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"user\");\n};\nvar getCurrentUser = function getCurrentUser() {\n  axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"api/authy/whoami\").then(function (response) {\n    var user = {\n      id: response.data.id,\n      username: response.data.username,\n      email: response.data.email,\n      picture: response.data.profile.picture,\n      banner: response.data.profile.banner\n    };\n    setCurrentUser(user);\n  });\n};\nvar logout = function logout() {\n  axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post('api/authy/logout').then(function (response) {\n    unsetCurrentUser();\n    console.log(\"Logout successfully\");\n  });\n};\nvar logoutAll = function logoutAll() {\n  axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post('api/authy/logoutall').then(function (response) {\n    unsetCurrentUser();\n    console.log(\"Logout successfully all tokens deleted\");\n  });\n};\nvar loginUser = function loginUser(username, password) {\n  var config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n  var body = JSON.stringify({\n    username: username,\n    password: password\n  });\n  var promise = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post('api/authy/login', body, config);\n  var dataPromise = promise.then(function (response) {\n    return response.data.token;\n  });\n  return dataPromise;\n};\nvar registerUser = function registerUser(username, email, password) {\n  var config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n  var body = JSON.stringify({\n    username: username,\n    email: email,\n    password: password\n  });\n  axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post('api/authy/signup', body, config).then(function (response) {\n    var auth_token = response.data.token;\n    setAxiosAuthToken(auth_token);\n    setToken(auth_token);\n    getCurrentUser();\n  })[\"catch\"](function (error) {\n    unsetCurrentUser();\n    console.log(error);\n    window.alert(\"Ошибка: имя пользователя/адрес электронной почты могут дублироваться.\" + error);\n  });\n  return true;\n};\n\n//# sourceURL=webpack://frontend/./src/components/services/auth.js?");

/***/ }),

/***/ "./src/components/utils/UserContext.js":
/*!*********************************************!*\
  !*** ./src/components/utils/UserContext.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserContext: () => (/* binding */ UserContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nvar UserContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\n\n//# sourceURL=webpack://frontend/./src/components/utils/UserContext.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\n/* harmony import */ var _components_App__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/App */ \"./src/components/App.js\");\n\n\n\nvar rootElement = document.getElementById('app');\nvar root = (0,react_dom_client__WEBPACK_IMPORTED_MODULE_1__.createRoot)(rootElement);\nroot.render(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().StrictMode), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_App__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null)));\n\n//# sourceURL=webpack://frontend/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;